# --------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# --------------------------------------------------------------------------------------------
from collections import OrderedDict
from azdev.operations.translator.utilities import AZDevTransNode


class AZDevTransCommandExamples(AZDevTransNode):

    def __init__(self, examples):

        self.examples = {}
        for example in examples:
            name = example['name'].strip()
            text = example['text'].strip()
            autogenerated = "(autogenerated)" in name
            if name in self.examples:
                print('Duplicated example name: "{}"'.format(name))
                continue
            self.examples[name] = {
                'name': name,
                'text': text,
                'autogenerated': autogenerated
            }

    def to_config(self, ctx):
        key = 'examples'
        values = []
        example_keys = []
        autogenerated_example_keys = []
        for k, v in self.examples.items():
            if not v['autogenerated']:
                example_keys.append(k)
            else:
                autogenerated_example_keys.append(k)
        for k in sorted(example_keys):
            v = self.examples[k]
            value = OrderedDict()
            value['name'] = v['name']
            value['text'] = v['text']
            values.append(value)
        for k in sorted(autogenerated_example_keys):
            v = self.examples[k]
            value = OrderedDict()
            value['autogenerated'] = True
            value['name'] = v['name']
            value['text'] = v['text']
            values.append(value)
        return key, values


def build_command_examples(examples):
    if not examples:
        return None
    return AZDevTransCommandExamples(examples)
