acr create -n {registry_name} -g {rg} -l {rg_loc} --sku {sku}
acr create -n {registry_name} -g {rg} -l {rg_loc} --sku {sku}
acr replication create -n {replication_name} -r {registry_name} -l {replication_loc}
acr replication list -r {registry_name}
acr replication show -n {replication_name} -r {registry_name}
acr replication update -n {replication_name} -r {registry_name} --tags {tags} --region-endpoint-enabled false
acr replication delete -n {replication_name} -r {registry_name}
acr replication create -n {replication_name} -r {registry_name} -l {replication_loc} --region-endpoint-enabled false
acr replication delete -n {replication_name} -r {registry_name}
acr delete -n {registry_name} -g {rg} -y
acr create -n {registry_name} -g {rg} -l {rg_loc} --sku {sku}
acr webhook create -n {webhook_name} -r {registry_name} --uri {uri} --actions {actions}
acr webhook list -r {registry_name}
acr webhook show -n {webhook_name} -r {registry_name}
acr webhook update -n {webhook_name} -r {registry_name} --headers {headers} --scope {webhook_scope}
acr webhook get-config -n {webhook_name} -r {registry_name}
acr webhook ping -n {webhook_name} -r {registry_name}
acr webhook list-events -n {webhook_name} -r {registry_name}
acr show-usage -n {registry_name} -g {rg}
acr webhook delete -n {webhook_name} -r {registry_name}
acr delete -n {registry_name} -g {rg} -y
monitor log-analytics workspace create -g {rg} -n {workspace}
acr create -n {registry_name} -g {rg} --sku {sku} --workspace {workspace}
monitor diagnostic-settings show -g {rg} --resource {registry_id} -n {diagnostic-settings}
acr create -n {registry_name} -g {rg} -l {rg_loc} --sku {sku}
acr check-name -n clireg000002
acr list -g clitest.rg000001
acr show -n clireg000002 -g clitest.rg000001
acr show-usage -n clireg000002 -g clitest.rg000001
acr update -n clireg000002 -g clitest.rg000001 --tags foo=bar cat --admin-enabled true
acr config retention update -r clireg000002 --status enabled --days 30 --type UntaggedManifests
acr config retention show -r clireg000002
acr config content-trust update -n clireg000002 --status enabled
acr config content-trust show -n clireg000002
acr credential show -n clireg000002 -g clitest.rg000001
acr credential renew -n clireg000002 -g clitest.rg000001 --password-name password
acr credential renew -n clireg000002 -g clitest.rg000001 --password-name password2
acr delete -n clireg000002 -g clitest.rg000001 -y
keyvault update --name {key_vault} --enable-soft-delete --enable-purge-protection
keyvault key create --name {key_name} --vault-name {key_vault}
identity create --name {identity_name} -g {rg}
keyvault set-policy --object-id {principal_id} --name {key_vault} --key-permissions {identity_permissions}
acr create --name {registry_name} --resource-group {rg} --sku premium --identity {identity_id} --key-encryption-key {key_id}
keyvault key create --name {rotate_key_name} --vault-name {key_vault}
acr encryption rotate-key --name {registry_name} --identity {identity_id} --key-encryption-key {rotate_key_id} -g {rg}
acr encryption show --name {registry_name} -g {rg}
acr create -n {registry_1} -g {rg} --sku {sku} --public-network-enabled false --allow-exports
acr create -n {registry_1} -g {rg} --sku {sku} --public-network-enabled false --allow-exports true
acr create -n {registry_1} -g {rg} --sku {sku} --public-network-enabled false --allow-exports false
acr create -n {registry_1} -g {rg} --sku {sku} --public-network-enabled false
acr update -n {registry_1} -g {rg} --sku {sku} --allow-exports true
acr update -n {registry_1} -g {rg} --sku {sku} --allow-exports false
acr update -n {registry_1} -g {rg} --sku {sku}
acr create --name {registry_name} --resource-group {rg} --sku premium
identity create --name {identity_name} -g {rg}
identity create --name {second_identity_name} -g {rg}
acr identity assign --name {registry_name} --identities "{system_identity}" "{identity_id}"
acr identity show --name {registry_name}
acr identity remove --name {registry_name} --identities "{system_identity}" "{identity_id}"
acr identity assign --name {registry_name} --identities {system_identity}
acr identity remove --name {registry_name} --identities {system_identity}
acr identity assign --name {registry_name} --identities {identity_id}
acr identity remove --name {registry_name} --identities {identity_id}
acr identity assign --name {registry_name} --identities "{system_identity}" "{identity_id}"
acr identity assign --name {registry_name} --identities {second_identity_id}
acr identity remove --name {registry_name} --identities {second_identity_id}
acr identity remove --name {registry_name} --identities {identity_id}
acr identity remove --name {registry_name} --identities {system_identity}
account get-access-token
keyvault secret show --id https://cliimportkv73021.vault.azure.net/secrets/SPusername
keyvault secret show --id https://cliimportkv73021.vault.azure.net/secrets/SPpassword
group create -n {source_registry_rg} -l {source_loc}
acr create -n {source_registry_name} -g {source_registry_rg} -l {source_loc} --sku {sku}
acr import -n {source_registry_name} -r {resource_id} --source {source_image}
acr create -n {registry_name} -g {rg} -l {rg_loc} --sku {sku}
acr import -n {registry_name} --source {source_image} -r {source_registry_name} -t {tag_same_sub}
acr import -n {registry_name} --source {source_image} -r {source_registry_name}
acr import -n {registry_name} --source {source_image} -r {source_registry_name} -t {tag_multitag1} -t {tag_multitag2}
acr import -n {registry_name} --source {source_image_same_registry} -t {tag_same_registry}
acr import -n {registry_name} --source {source_image_by_digest} -t {tag_by_digest}
acr import -n {registry_name} --source {source_image_public_registry_dockerhub}
acr import -n {registry_name} --source {resource_imageV1} -u {application_ID} -p {service_principal_password}
acr import -n {registry_name} --source {resource_imageV2} -p {token}
group create -n {source_registry_rg} -l {source_loc}
acr create -n {source_registry_name} -g {source_registry_rg} -l {source_loc} --sku {sku}
acr import -n {source_registry_name} -r {resource_id} --source {source_image} --no-wait
acr create --name {registry_name} --resource-group {rg} --sku premium -l eastus
acr update --name {registry_name} --resource-group {rg} --anonymous-pull-enabled true
acr update --name {registry_name} --resource-group {rg} --anonymous-pull-enabled false
acr create --name {registry_name} --resource-group {rg} --sku premium
acr show-endpoints --name {registry_name} --resource-group {rg}
acr update --name {registry_name} --resource-group {rg} --data-endpoint-enabled
acr show-endpoints --name {registry_name} --resource-group {rg}
acr replication create -r {registry_name} -l {replication_loc}
acr show-endpoints --name {registry_name} --resource-group {rg}
acr update --name {registry_name} --resource-group {rg} --data-endpoint-enabled false
acr show-endpoints --name {registry_name} --resource-group {rg}
network vnet create -g {rg} -n {vnet_name} --subnet-name {subnet_name}
network vnet subnet update -g {rg} --vnet-name {vnet_name} --name {subnet_name} --disable-private-endpoint-network-policies true
acr create --name {registry_name} --resource-group {rg} --sku premium
network private-endpoint create -n {endpoint_name} -g {rg} --subnet {subnet_name} --vnet-name {vnet_name}  --private-connection-resource-id {registry_id} --group-ids registry --connection-name {endpoint_conn_name} --manual-request
acr private-endpoint-connection list -g {rg} --registry-name {registry_name}
acr private-endpoint-connection approve -g {rg} --registry-name {registry_name} -n {endpoint_request} --description {description_msg}
network private-endpoint create -n {second_endpoint_name} -g {rg} --subnet {subnet_name} --vnet-name {vnet_name} --private-connection-resource-id {registry_id} --group-ids registry --connection-name {second_endpoint_conn_name} --manual-request
acr private-endpoint-connection list -g {rg} -r {registry_name}
acr private-endpoint-connection reject -g {rg} -r {registry_name} -n {second_endpoint_request} --description {description_msg}
acr private-endpoint-connection list -g {rg} -r {registry_name}
acr private-endpoint-connection delete -g {rg} --registry-name {registry_name} -n {second_endpoint_request}
acr private-endpoint-connection show -g {rg} -r {registry_name} -n {endpoint_request}
acr private-endpoint-connection delete -g {rg} --registry-name {registry_name} -n {endpoint_request}
acr private-endpoint-connection list -g {rg} -r {registry_name}
acr create --name {registry_name} --resource-group {rg} --sku premium
acr update --name {registry_name} --resource-group {rg} --public-network-enabled false --allow-trusted-services false
acr update --name {registry_name} --resource-group {rg} --allow-trusted-services true
acr create --name {registry_2_name} --resource-group {rg} --sku premium --public-network-enabled false --allow-trusted-services false
acr create --name {registry_1} --resource-group {rg} --sku premium
acr create --name {registry_2} --resource-group {rg} --sku premium --zone-redundancy Enabled
acr replication show --name {home_location} --registry {registry_2} --resource-group {rg}
acr replication create --registry {registry_1}  -g {rg} --location {location_2} --zone-redundancy Enabled
acr replication create --registry {registry_2}  -g {rg} --location {location_2}
acr replication create --registry {registry_2}  -g {rg} --location {location_3} --zone-redundancy Disabled
acr check-name -n {name}
acr create -n {registry_name} -g {rg} -l {rg_loc} --sku {sku}
acr update -n {registry_name} --data-endpoint-enabled true
acr connected-registry create -n {cr_name} -r {registry_name} --repository {repo_1} {repo_2} {repo_3}
acr token create -r {registry_name} -n {syncToken} --repository {repo_1} content/read metadata/read --gateway {root_name} config/read config/write message/read message/write --no-passwords
acr token create -r {registry_name} -n {clientToken} --repository {repo_1} content/read --no-passwords
acr connected-registry create -n {root_name} -r {registry_name} --sync-token {syncToken} -m ReadOnly --log-level Warning -s "{syncSchedule}" -w PT4H --client-tokens {clientToken}
acr connected-registry create -n {child_name} -p {root_name} -r {registry_name} --repository {repo_2} -m ReadOnly
acr connected-registry create -n {grandchild_name} -p {child_name} -r {registry_name} --repository {repo_2} -m ReadOnly
acr connected-registry list -r {registry_name}
acr connected-registry list-client-tokens -n {root_name} -r {registry_name}
acr token create -r {registry_name} -n {clientToken2} --repository {repo_2} metadata/read --no-passwords
acr connected-registry update -n {root_name} -r {registry_name} --log-level Information -s "{defaultSyncSchedule}" --remove-client-tokens {clientToken} --add-client-tokens {clientToken2}
acr connected-registry list-client-tokens -n {root_name} -r {registry_name}
acr connected-registry show -n {cr_name} -r {registry_name}
acr connected-registry get-settings -n {root_name} -r {registry_name} --parent-protocol https --generate-password 2 -y
acr token show -n {syncToken} -r {registry_name}
acr connected-registry delete -n {grandchild_name} -r {registry_name} --cleanup -y
acr connected-registry delete -n {child_name} -r {registry_name} -y
acr delete -n {registry_name} -g {rg} -y
network vnet create -g {rg} -n {vnet_name} --subnet-name {subnet}
network vnet subnet update -g {rg} --vnet-name {vnet_name} -n {subnet} --service-endpoints {acr_provider}
acr create -n {registry_name} -g {rg} -l {rg_loc} --sku {sku} --default-action {deny_action}
acr network-rule add -g {rg} -n {registry_name} --vnet-name {vnet_name} --subnet {subnet}
acr network-rule add -g {rg} -n {registry_name} --ip-address {ip_address}
acr network-rule list -g {rg} -n {registry_name}
acr update -n {registry_name} -g {rg} --default-action {allow_action}
acr network-rule remove -g {rg} -n {registry_name} --vnet-name {vnet_name} --subnet {subnet}
acr network-rule remove -g {rg} -n {registry_name} --ip-address {ip_address}
acr network-rule list -g {rg} -n {registry_name}
acr delete -g {rg} -n {registry_name} -y
network vnet delete -g {rg} -n {vnet_name}
acr create -n {registry_name} -g {rg} -l {rg_loc} --sku {sku}
acr task create -n {task_name} -r {registry_name} --context {context} --image {image} -f {file} --commit-trigger-enabled {trigger_enabled} --pull-request-trigger-enabled {trigger_enabled} --assign-identity {identity}
acr task create -n {task_no_context} -r {registry_name} --cmd {existing_image} -c {no_context}
acr task list -r {registry_name}
acr task run -n {task_no_context} -r {registry_name} --no-logs
acr task run -n {task_name} -r {registry_name} --no-logs
acr task list-runs -n {task_name} -r {registry_name}
acr task show -n {task_name} -r {registry_name}
acr task update -n {task_name} -r {registry_name} --platform linux/arm
acr task update-run -r {registry_name} --run-id {run_id} --no-archive false
acr task credential add -n {task_name} -r {registry_name} --login-server {loginServer} -u testuser -p random --use-identity {identity}
acr task credential update -n {task_name} -r {registry_name} --login-server {loginServer} -u testuser -p random
acr task delete -n {task_name} -r {registry_name} -y
acr delete -n {registry_name} -g {rg} -y
acr create -n {registry_name} -g {rg} -l {rg_loc} --sku {sku}
group deployment create --resource-group {rg} --template-file "{tf}" --parameters registryName={registry_name} --parameters taskRunName={taskrun_name} --parameters sourceLocation={sourceLocation} --parameters dockerFilePath={dockerFilePath} --parameters image={image} 
acr taskrun list -r {registry_name} -g {rg}
acr taskrun show -r {registry_name} -n {taskrun_name} -g {rg}
acr taskrun delete -r {registry_name} -n {taskrun_name} -g {rg} -y
acr create -g {rg} -n {registry} --sku premium
acr token create -r {registry} -n {token} --repository foo content/read
acr scope-map show -r {registry} -n {token}-scope-map
acr scope-map create -r {registry} -n {scope_map} --repository foo content/read metadata/read
acr token create -r {registry} --scope-map {scope_map} -n {token2} --no-passwords
acr token credential generate -r {registry} -n {token2} --password1 --password2
acr token create -r {registry} -n {token_short_lived} --repository foo content/read --expiration-in-days 1
acr token create -r {registry} -n {token_long_lived} --repository foo content/read --expiration 2100-12-31T12:59:59Z
aks create --resource-group={resource_group} --name={name} --location={location} --dns-name-prefix={dns_name_prefix} --node-count=3 --ssh-key-value={ssh_key_value} --service-principal={service_principal} --client-secret={client_secret} --zones {zones}
aks show -g {resource_group} -n {name}
aks get-credentials -g {resource_group} -n {name} --file "{file}"
aks nodepool add --resource-group={resource_group} --cluster-name={name} --name={nodepool2_name} --node-count=3 --zones {zones}
aks delete -g {resource_group} -n {name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --location={location} --dns-name-prefix={dns_name_prefix} --node-count=3 --ssh-key-value={ssh_key_value} --zones {zones}
aks show -g {resource_group} -n {name}
aks get-credentials -g {resource_group} -n {name} --file "{file}"
aks nodepool add --resource-group={resource_group} --cluster-name={name} --name={nodepool2_name} --node-count=3 --zones {zones}
aks delete -g {resource_group} -n {name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --ssh-key-value={ssh_key_value}
aks browse --resource-group={resource_group} --name={name} --listen-address=127.0.0.1 --listen-port=8080 --disable-browser
aks delete -g {resource_group} -n {name} --yes --no-wait
identity create -g clitest000001 -n cli000003
network vnet create -n clivnet000004 -g clitest000001 --address-prefix 192.168.0.0/16 --subnet-name clisubnet000005 --subnet-prefix 192.168.0.0/24
aks create --resource-group={resource_group} --name={name} --location={location} --dns-name-prefix={dns_name_prefix} --node-count=1 --ssh-key-value={ssh_key_value} --enable-managed-identity --assign-identity={identity_resource_id} --vnet-subnet-id={vnet_subnet_id}
aks list -g {resource_group}
aks list -g {resource_group} -o table
aks show -g {resource_group} -n {name}
aks get-credentials -g {resource_group} -n {name} --file "{file}"
aks get-credentials -g {resource_group} -n {name} -f -
aks get-credentials -g {resource_group} -n {name} -f "{file}"
aks scale -g {resource_group} -n {name} --node-count 3
aks show -g {resource_group} -n {name}
aks delete -g {resource_group} -n {name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --vm-set-type VirtualMachineScaleSets --node-count=1 --ssh-key-value={ssh_key_value} --aad-server-app-id 00000000-0000-0000-0000-000000000001 --aad-server-app-secret fake-secret --aad-client-app-id 00000000-0000-0000-0000-000000000002 --aad-tenant-id d5b55040-0c14-48cc-a028-91457fc190d9 -o json
aks update --resource-group={resource_group} --name={name} --enable-aad --aad-admin-group-object-ids 00000000-0000-0000-0000-000000000003 --aad-tenant-id 00000000-0000-0000-0000-000000000004 -o json
aks create --resource-group={resource_group} --name={name} --vm-set-type VirtualMachineScaleSets --node-count=1 --ssh-key-value={ssh_key_value} --aad-server-app-id 00000000-0000-0000-0000-000000000001 --aad-server-app-secret fake-secret --aad-client-app-id 00000000-0000-0000-0000-000000000002 --aad-tenant-id d5b55040-0c14-48cc-a028-91457fc190d9 -o json
aks update --resource-group={resource_group} --name={name} --enable-aad --aad-admin-group-object-ids 00000000-0000-0000-0000-000000000003 --aad-tenant-id 00000000-0000-0000-0000-000000000004 -o json
aks create --resource-group={resource_group} --name={name} -a azure-keyvault-secrets-provider --enable-secret-rotation --rotation-poll-interval 30m --ssh-key-value={ssh_key_value} -o json
aks delete --resource-group={resource_group} --name={name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --tags {tags} --ssh-key-value={ssh_key_value} --enable-cluster-autoscaler --min-count 1 --max-count 3 --cluster-autoscaler-profile scan-interval=30s expander=least-waste
aks update --resource-group={resource_group} --name={name} --tags {tags} --disable-cluster-autoscaler
aks update --resource-group={resource_group} --name={name} --tags {tags} --enable-cluster-autoscaler --min-count 2 --max-count 5
aks update --resource-group={resource_group} --name={name} --cluster-autoscaler-profile=""
aks update --resource-group={resource_group} --name={name} --update-cluster-autoscaler --min-count 3 --max-count 3
aks delete -g {resource_group} -n {name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --location={location} --dns-name-prefix={dns_name_prefix} --node-count=1 --ssh-key-value={ssh_key_value} --service-principal={service_principal} --client-secret={client_secret} --load-balancer-sku=basic --vm-set-type=availabilityset --no-wait
aks wait -g {resource_group} -n {name} --created
aks list -g {resource_group}
aks list -g {resource_group} -o table
aks show -g {resource_group} -n {name}
aks get-credentials -g {resource_group} -n {name} --file "{file}"
aks delete -g {resource_group} -n {name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --location={location} --dns-name-prefix={dns_name_prefix} --node-count=1 --ssh-key-value={ssh_key_value} --load-balancer-sku=basic --vm-set-type=availabilityset --no-wait
aks wait -g {resource_group} -n {name} --created
aks list -g {resource_group}
aks list -g {resource_group} -o table
aks show -g {resource_group} -n {name}
aks get-credentials -g {resource_group} -n {name} --file "{file}"
aks delete -g {resource_group} -n {name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --location={location} --dns-name-prefix={dns_name_prefix} --node-count=1 --ssh-key-value={ssh_key_value} --service-principal={service_principal} --client-secret={client_secret} --load-balancer-sku=standard --vm-set-type=virtualmachinescalesets --api-server-authorized-ip-ranges=1.2.3.4/32 --no-wait
aks wait -g {resource_group} -n {name} --created
aks list -g {resource_group}
aks list -g {resource_group} -o table
aks show -g {resource_group} -n {name}
aks get-credentials -g {resource_group} -n {name} --file "{file}"
aks update -g {resource_group} -n {name} --api-server-authorized-ip-ranges=""
aks scale -g {resource_group} -n {name} --node-count 3
aks show -g {resource_group} -n {name}
aks delete -g {resource_group} -n {name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --location={location} --dns-name-prefix={dns_name_prefix} --node-count=1 --ssh-key-value={ssh_key_value} --load-balancer-sku=standard --vm-set-type=virtualmachinescalesets --api-server-authorized-ip-ranges=1.2.3.4/32 --no-wait
aks wait -g {resource_group} -n {name} --created
aks list -g {resource_group}
aks list -g {resource_group} -o table
aks show -g {resource_group} -n {name}
aks get-credentials -g {resource_group} -n {name} --file "{file}"
aks update -g {resource_group} -n {name} --api-server-authorized-ip-ranges=""
aks scale -g {resource_group} -n {name} --node-count 3
aks show -g {resource_group} -n {name}
aks delete -g {resource_group} -n {name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --location={location} --dns-name-prefix={dns_name_prefix} --node-count=1 --ssh-key-value={ssh_key_value} --service-principal={service_principal} --client-secret={client_secret} --tags {tags} --nodepool-labels {nodepool_labels} --nodepool-tags {nodepool_tags} --max-pods=100 --enable-rbac --admin-username=adminuser
aks list -g {resource_group}
aks list -g {resource_group} -o table
aks show -g {resource_group} -n {name}
aks get-credentials -g {resource_group} -n {name} --file "{file}"
aks get-credentials -g {resource_group} -n {name} -f -
aks scale -g {resource_group} -n {name} --node-count 3
aks show -g {resource_group} -n {name}
aks delete -g {resource_group} -n {name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --location={location} --dns-name-prefix={dns_name_prefix} --node-count=1 --ssh-key-value={ssh_key_value} --tags {tags} --nodepool-labels {nodepool_labels}
aks list -g {resource_group}
aks list -g {resource_group} -o table
aks show -g {resource_group} -n {name}
aks get-credentials -g {resource_group} -n {name} --file "{file}"
aks get-credentials -g {resource_group} -n {name} -f -
aks scale -g {resource_group} -n {name} --node-count 3
aks show -g {resource_group} -n {name}
aks delete -g {resource_group} -n {name} --yes --no-wait
network vnet create -n clivnet000004 -g clitest000001 --address-prefix 192.168.0.0/16 --subnet-name clisubnet000005 --subnet-prefix 192.168.0.0/24
aks create --resource-group={resource_group} --name={name} --location={location} --node-count=1 --service-principal={service_principal} --client-secret={client_secret} --vnet-subnet-id={vnet_subnet_id} --skip-subnet-role-assignment --no-ssh-key
role assignment list --scope={vnet_subnet_id}
network vnet create -n clivnet000003 -g clitest000001 --address-prefix 192.168.0.0/16 --subnet-name clisubnet000004 --subnet-prefix 192.168.0.0/24
aks create --resource-group={resource_group} --name={name} --location={location} --node-count=1 --vnet-subnet-id={vnet_subnet_id} --skip-subnet-role-assignment --no-ssh-key
role assignment list --scope={vnet_subnet_id}
network vnet subnet show --resource-group {rg} --vnet-name {vnet} --name default
aks create --resource-group={resource_group} --name={name} --location={location} --dns-name-prefix={dns_name_prefix} --node-count=1 --ssh-key-value={ssh_key_value} --service-principal={service_principal} --client-secret={client_secret} --enable-addons virtual-node --aci-subnet-name default --vnet-subnet-id "{subnet_id}" --network-plugin azure
aks show -g {resource_group} -n {name}
aks disable-addons -a virtual-node -g {resource_group} -n {name}
aks show -g {resource_group} -n {name}
aks enable-addons -a virtual-node -g {resource_group} -n {name} --subnet-name default
aks show -g {resource_group} -n {name}
aks delete -g {resource_group} -n {name} --yes --no-wait
network vnet create -n clivnet000004 -g clitest000001 --address-prefix 192.168.0.0/16 --subnet-name clisubnet000005 --subnet-prefix 192.168.0.0/24
aks create --resource-group={resource_group} --name={name} --location={location} --node-count=1 --service-principal={service_principal} --client-secret={client_secret} --vnet-subnet-id={vnet_subnet_id} --no-ssh-key
role assignment list --scope={vnet_subnet_id}
aks create --resource-group={resource_group} --name={name} --location={location} --node-count=1 --service-principal={service_principal} --client-secret={client_secret} --vnet-subnet-id={vnet_subnet_id} --no-ssh-key
aks create --resource-group={resource_group} --name={name} --location={location} --dns-name-prefix={dns_name_prefix} --node-count=1 --ssh-key-value={ssh_key_value} --service-principal={service_principal} --client-secret={client_secret} --no-wait
aks wait -g {resource_group} -n {name} --created
aks list -g {resource_group}
aks list -g {resource_group} -o table
aks show -g {resource_group} -n {name}
aks get-credentials -g {resource_group} -n {name} --file "{file}"
aks get-credentials -g {resource_group} -n {name} -f -
aks get-credentials -g {resource_group} -n {name} -f "{file}"
aks delete -g {resource_group} -n {name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --location={location} --dns-name-prefix={dns_name_prefix} --node-count=1 --ssh-key-value={ssh_key_value} --no-wait
aks wait -g {resource_group} -n {name} --created
aks list -g {resource_group}
aks list -g {resource_group} -o table
aks show -g {resource_group} -n {name}
aks get-credentials -g {resource_group} -n {name} --file "{file}"
aks get-credentials -g {resource_group} -n {name} -f -
aks get-credentials -g {resource_group} -n {name} -f "{file}"
aks delete -g {resource_group} -n {name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --ssh-key-value={ssh_key_value} --disable-rbac
aks delete -g {resource_group} -n {name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --location={location} --dns-name-prefix={dns_name_prefix} --node-count=1 --ssh-key-value={ssh_key_value} --kubernetes-version {kubernetes_version} --edge-zone {edge_zone}
aks show -g {resource_group} -n {name}
aks delete -g {resource_group} -n {name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --ssh-key-value={ssh_key_value} --enable-aad --enable-azure-rbac
aks delete -g {resource_group} -n {name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --ssh-key-value={ssh_key_value} --enable-encryption-at-host
aks delete -g {resource_group} -n {name} --yes --no-wait
network private-dns zone create --resource-group={resource_group} --name="privatelink.{location}.azmk8s.io"
identity create --resource-group={resource_group} --name={identity_name}
role assignment create --assignee-object-id={identity_id} --role "Private DNS Zone Contributor" --scope={zone_id} --assignee-principal-type ServicePrincipal
aks create --resource-group={resource_group} --name={name} --node-count=1 --fqdn-subdomain={subdomain_name} --load-balancer-sku=standard --enable-private-cluster --private-dns-zone={zone_id} --enable-managed-identity --assign-identity {identity_resource_id} --ssh-key-value={ssh_key_value}
aks create --resource-group={resource_group} --name={name} --ssh-key-value={ssh_key_value} --load-balancer-sku=standard --load-balancer-managed-outbound-ip-count 2 --load-balancer-outbound-ports 2048 --load-balancer-idle-timeout 5
aks update --resource-group={resource_group} --name={name} --load-balancer-outbound-ports 1024 --load-balancer-idle-timeout 10
aks delete -g {resource_group} -n {name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --ssh-key-value={ssh_key_value} --pod-cidr 10.244.0.0/16 --service-cidr 10.0.0.0/16 --docker-bridge-address 172.17.0.1/16 --dns-service-ip 10.0.2.10 --network-plugin kubenet --network-policy calico
aks delete -g {resource_group} -n {name} --yes --no-wait
network public-ip prefix create -g {rg} -n {ipprefix_name} --location {location} --length 29
aks create --resource-group={resource_group} --name={name} --ssh-key-value={ssh_key_value} --enable-node-public-ip --node-public-ip-prefix-id {ipprefix_id}
aks delete -g {resource_group} -n {name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --vm-set-type VirtualMachineScaleSets --node-count=1 --ssh-key-value={ssh_key_value} -o json
aks update --resource-group={resource_group} --name={name} --enable-aad --aad-admin-group-object-ids 00000000-0000-0000-0000-000000000001 --aad-tenant-id 00000000-0000-0000-0000-000000000002 -o json
aks create --resource-group={resource_group} --name={name} --vm-set-type VirtualMachineScaleSets --node-count=1 --ssh-key-value={ssh_key_value} -o json
aks update --resource-group={resource_group} --name={name} --enable-aad --aad-admin-group-object-ids 00000000-0000-0000-0000-000000000001 --aad-tenant-id 00000000-0000-0000-0000-000000000002 -o json
aks create --resource-group={resource_group} --name={name} --enable-private-cluster --disable-public-fqdn --node-count=1 --ssh-key-value={ssh_key_value}
aks update --resource-group={resource_group} --name={name} --enable-public-fqdn
aks delete -g {resource_group} -n {name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --enable-private-cluster --node-count=1 --ssh-key-value={ssh_key_value}
aks update --resource-group={resource_group} --name={name} --disable-public-fqdn
aks delete -g {resource_group} -n {name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --location={location} --dns-name-prefix={dns_name_prefix} --node-count=1 --ssh-key-value={ssh_key_value} --service-principal={service_principal} --client-secret={client_secret} --load-balancer-sku=standard --vm-set-type=virtualmachinescalesets --enable-private-cluster --no-wait
aks wait -g {resource_group} -n {name} --created
aks list -g {resource_group}
aks list -g {resource_group} -o table
aks show -g {resource_group} -n {name}
aks get-credentials -g {resource_group} -n {name} --file "{file}"
aks update -g {resource_group} -n {name} --api-server-authorized-ip-ranges=1.2.3.4/32
aks scale -g {resource_group} -n {name} --node-count 3
aks show -g {resource_group} -n {name}
aks delete -g {resource_group} -n {name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --location={location} --dns-name-prefix={dns_name_prefix} --node-count=1 --ssh-key-value={ssh_key_value} --load-balancer-sku=standard --vm-set-type=virtualmachinescalesets --enable-private-cluster --no-wait
aks wait -g {resource_group} -n {name} --created
aks list -g {resource_group}
aks list -g {resource_group} -o table
aks show -g {resource_group} -n {name}
aks get-credentials -g {resource_group} -n {name} --file "{file}"
aks update -g {resource_group} -n {name} --api-server-authorized-ip-ranges=1.2.3.4/32
aks scale -g {resource_group} -n {name} --node-count 3
aks show -g {resource_group} -n {name}
aks delete -g {resource_group} -n {name} --yes --no-wait
aks get-versions -l westus2 --query 'orchestrators[].orchestratorVersion'
aks create -g {resource_group} -n {name} -p {dns_name_prefix} --nodepool-name {nodepool_name} -l {location} --service-principal {service_principal} --client-secret {client_secret} -k {k8s_version} --ssh-key-value {ssh_key_value} --tags scenario_test -c 1
aks list -g {resource_group}
aks show -g {resource_group} -n {name}
aks scale -g {resource_group} -n {name} --nodepool-name {nodepool_name} --node-count 3
aks show -g {resource_group} -n {name}
aks delete -g {resource_group} -n {name} --yes
aks show -g {resource_group} -n {name}
aks get-versions -l westus2 --query 'orchestrators[].orchestratorVersion'
aks create -g {resource_group} -n {name} -p {dns_name_prefix} --nodepool-name {nodepool_name} -l {location} -k {k8s_version} --ssh-key-value {ssh_key_value} --tags scenario_test -c 1
aks list -g {resource_group}
aks show -g {resource_group} -n {name}
aks scale -g {resource_group} -n {name} --nodepool-name {nodepool_name} --node-count 3
aks show -g {resource_group} -n {name}
aks delete -g {resource_group} -n {name} --yes
aks show -g {resource_group} -n {name}
aks get-versions -l westus2 --query 'orchestrators[].orchestratorVersion'
aks create -g {resource_group} -n {name} -p {dns_name_prefix} --ssh-key-value {ssh_key_value} -l {location} --service-principal {service_principal} --client-secret {client_secret} -k {k8s_version} --node-vm-size {vm_size} --tags scenario_test -c 1 --no-wait
aks wait -g {resource_group} -n {name} --created
aks show -g {resource_group} -n {name}
aks get-versions -l {location}
aks get-versions -l {location} -o table
aks get-upgrades -g {resource_group} -n {name}
aks get-upgrades -g {resource_group} -n {name} --output table
aks enable-addons -g {resource_group} -n {name} --addons http_application_routing
aks delete -g {resource_group} -n {name} --yes
aks show -g {resource_group} -n {name}
aks get-versions -l westus2 --query 'orchestrators[].orchestratorVersion'
aks create -g {resource_group} -n {name} -p {dns_name_prefix} --ssh-key-value {ssh_key_value} -l {location} -k {k8s_version} --node-vm-size {vm_size} --tags scenario_test -c 1 --no-wait
aks wait -g {resource_group} -n {name} --created
aks show -g {resource_group} -n {name}
aks get-versions -l {location}
aks get-versions -l {location} -o table
aks get-upgrades -g {resource_group} -n {name}
aks get-upgrades -g {resource_group} -n {name} --output table
aks enable-addons -g {resource_group} -n {name} --addons http_application_routing
aks delete -g {resource_group} -n {name} --yes
aks show -g {resource_group} -n {name}
aks create --resource-group={resource_group} --name={name} --location={location} --dns-name-prefix={dns_name_prefix} --node-count=1 --ssh-key-value={ssh_key_value} --service-principal={service_principal} --client-secret={client_secret} --load-balancer-sku=standard --vm-set-type=virtualmachinescalesets --no-wait
aks wait -g {resource_group} -n {name} --created
aks list -g {resource_group}
aks list -g {resource_group} -o table
aks show -g {resource_group} -n {name}
aks get-credentials -g {resource_group} -n {name} --file "{file}"
aks update -g {resource_group} -n {name} --load-balancer-managed-outbound-ip-count 2
aks show -g {resource_group} -n {name}
aks scale -g {resource_group} -n {name} --node-count 3
aks show -g {resource_group} -n {name}
aks delete -g {resource_group} -n {name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --location={location} --dns-name-prefix={dns_name_prefix} --node-count=1 --ssh-key-value={ssh_key_value} --load-balancer-sku=standard --vm-set-type=virtualmachinescalesets --no-wait
aks wait -g {resource_group} -n {name} --created
aks list -g {resource_group}
aks list -g {resource_group} -o table
aks show -g {resource_group} -n {name}
aks get-credentials -g {resource_group} -n {name} --file "{file}"
aks update -g {resource_group} -n {name} --load-balancer-managed-outbound-ip-count 2
aks show -g {resource_group} -n {name}
aks scale -g {resource_group} -n {name} --node-count 3
aks show -g {resource_group} -n {name}
aks delete -g {resource_group} -n {name} --yes --no-wait
network public-ip prefix create -g {rg} -n {ipprefix1_name} --location {location} --length 29
network public-ip prefix create -g {rg} -n {ipprefix2_name} --location {location} --length 29
aks create --resource-group={resource_group} --name={name} --location={location} --dns-name-prefix={dns_name_prefix} --node-count=1 --ssh-key-value={ssh_key_value} --service-principal={service_principal} --client-secret={client_secret} --load-balancer-sku=standard --vm-set-type=virtualmachinescalesets --load-balancer-outbound-ip-prefixes {ipprefix1_id}
aks list -g {resource_group}
aks list -g {resource_group} -o table
aks show -g {resource_group} -n {name}
aks get-credentials -g {resource_group} -n {name} --file "{file}"
aks update -g {resource_group} -n {name} --load-balancer-outbound-ip-prefixes {ipprefix1_id},{ipprefix2_id}
aks show -g {resource_group} -n {name}
aks delete -g {resource_group} -n {name} --yes --no-wait
network public-ip prefix create -g {rg} -n {ipprefix1_name} --location {location} --length 29
network public-ip prefix create -g {rg} -n {ipprefix2_name} --location {location} --length 29
aks create --resource-group={resource_group} --name={name} --location={location} --dns-name-prefix={dns_name_prefix} --node-count=1 --ssh-key-value={ssh_key_value} --load-balancer-sku=standard --vm-set-type=virtualmachinescalesets --load-balancer-outbound-ip-prefixes {ipprefix1_id}
aks list -g {resource_group}
aks list -g {resource_group} -o table
aks show -g {resource_group} -n {name}
aks get-credentials -g {resource_group} -n {name} --file "{file}"
aks update -g {resource_group} -n {name} --load-balancer-outbound-ip-prefixes {ipprefix1_id},{ipprefix2_id}
aks show -g {resource_group} -n {name}
aks delete -g {resource_group} -n {name} --yes --no-wait
network public-ip create -g {rg} -n {ip1_name} --location {location} --sku Standard 
network public-ip create -g {rg} -n {ip2_name} --location {location} --sku Standard 
aks create --resource-group={resource_group} --name={name} --location={location} --dns-name-prefix={dns_name_prefix} --node-count=1 --ssh-key-value={ssh_key_value} --service-principal={service_principal} --client-secret={client_secret} --load-balancer-sku=standard --vm-set-type=virtualmachinescalesets --load-balancer-outbound-ips {ip1_id}
aks list -g {resource_group}
aks list -g {resource_group} -o table
aks show -g {resource_group} -n {name}
aks get-credentials -g {resource_group} -n {name} --file "{file}"
aks update -g {resource_group} -n {name} --load-balancer-outbound-ips {ip1_id},{ip2_id}
aks show -g {resource_group} -n {name}
aks delete -g {resource_group} -n {name} --yes --no-wait
network public-ip create -g {rg} -n {ip1_name} --location {location} --sku Standard 
network public-ip create -g {rg} -n {ip2_name} --location {location} --sku Standard 
aks create --resource-group={resource_group} --name={name} --location={location} --dns-name-prefix={dns_name_prefix} --node-count=1 --ssh-key-value={ssh_key_value} --load-balancer-sku=standard --vm-set-type=virtualmachinescalesets --load-balancer-outbound-ips {ip1_id}
aks list -g {resource_group}
aks list -g {resource_group} -o table
aks show -g {resource_group} -n {name}
aks get-credentials -g {resource_group} -n {name} --file "{file}"
aks update -g {resource_group} -n {name} --load-balancer-outbound-ips {ip1_id},{ip2_id}
aks show -g {resource_group} -n {name}
aks delete -g {resource_group} -n {name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --vm-set-type VirtualMachineScaleSets --node-count=1 --ssh-key-value={ssh_key_value} -o json
aks nodepool add --resource-group={resource_group} --cluster-name={name} -n {spot_node_pool_name} --priority Spot --spot-max-price {spot_max_price} -c 1
aks create --resource-group={resource_group} --name={name} --vm-set-type VirtualMachineScaleSets --node-count=1 --ssh-key-value={ssh_key_value} -o json
aks nodepool add --resource-group={resource_group} --cluster-name={name} -n {spot_node_pool_name} --priority Spot --spot-max-price {spot_max_price} -c 1
aks create --resource-group={resource_group} --name={name} --service-principal={service_principal} --client-secret={client_secret} --ssh-key-value={ssh_key_value}
identity create -g clitest000001 -n cli000004
aks update --resource-group={resource_group} --name={name} --enable-managed-identity --assign-identity={identity_resource_id} --yes
aks delete -g {resource_group} -n {name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --location={location} --dns-name-prefix={dns_name_prefix} --node-count=1 --ssh-key-value={ssh_key_value} --service-principal={service_principal} --client-secret={client_secret} --windows-admin-username={windows_admin_username} --windows-admin-password={windows_admin_password} --load-balancer-sku=standard --vm-set-type=virtualmachinescalesets --network-plugin=azure --enable-ahub
aks nodepool add --resource-group={resource_group} --cluster-name={name} --name={nodepool2_name} --os-type Windows --node-count=1
aks update --resource-group={resource_group} --name={name} --disable-ahub
aks nodepool delete --resource-group={resource_group} --cluster-name={name} --name={nodepool2_name} --no-wait
aks delete -g {resource_group} -n {name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --location={location} --enable-managed-identity --auto-upgrade-channel rapid --ssh-key-value={ssh_key_value}
aks update --resource-group={resource_group} --name={name} --auto-upgrade-channel stable
aks delete -g {resource_group} -n {name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} -a azure-keyvault-secrets-provider --ssh-key-value={ssh_key_value} -o json
aks delete --resource-group={resource_group} --name={name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --enable-managed-identity -a confcom --ssh-key-value={ssh_key_value} -o json
aks create --resource-group={resource_group} --name={name} --enable-managed-identity -a confcom --enable-sgxquotehelper --ssh-key-value={ssh_key_value} -o json
monitor log-analytics workspace create -g {resource_group} -n {workspace_name}
aks create --resource-group={resource_group} --name={name} --ssh-key-value={ssh_key_value} -a monitoring --workspace-resource-id {workspace_id}
aks delete -g {resource_group} -n {name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --vm-set-type VirtualMachineScaleSets -c 1 --node-osdisk-type=Ephemeral --node-osdisk-size 60 --ssh-key-value={ssh_key_value}
aks create --resource-group={resource_group} --name={name} --enable-managed-identity -a ingress-appgw --appgw-subnet-cidr 10.2.0.0/16 --ssh-key-value={ssh_key_value} -o json
aks create --resource-group={resource_group} --name={name} --vm-set-type VirtualMachineScaleSets -c 1 --node-osdisk-type=Managed --ssh-key-value={ssh_key_value}
aks create --resource-group={resource_group} --name={name} --enable-managed-identity -a open-service-mesh --ssh-key-value={ssh_key_value} -o json
aks create --resource-group={resource_group} --name={name} --vm-set-type VirtualMachineScaleSets -c 1 --os-sku Ubuntu --ssh-key-value={ssh_key_value}
aks delete -g {resource_group} -n {name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --location={location} --dns-name-prefix={dns_name_prefix} --node-count=1 --ssh-key-value={ssh_key_value} --service-principal={service_principal} --client-secret={client_secret} --uptime-sla 
aks delete -g {resource_group} -n {name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --location={location} --dns-name-prefix={dns_name_prefix} --node-count=1 --ssh-key-value={ssh_key_value} --uptime-sla
aks update --resource-group={resource_group} --name={name} --no-uptime-sla
aks update --resource-group={resource_group} --name={name} --uptime-sla --no-wait
aks delete -g {resource_group} -n {name} --yes --no-wait
ppg create -n clippg000004 -g clitest000001 --location westus2
aks create --resource-group={resource_group} --name={name} --location={location} --dns-name-prefix={dns_name_prefix} --node-count=1 --ssh-key-value={ssh_key_value} --service-principal={service_principal} --client-secret={client_secret} --ppg={ppg} 
aks nodepool add --resource-group={resource_group} --cluster-name={name} -n {node_pool_name} --ppg={ppg} 
ppg create -n clippg000004 -g clitest000001 --location westus2
aks create --resource-group={resource_group} --name={name} --location={location} --dns-name-prefix={dns_name_prefix} --node-count=1 --ssh-key-value={ssh_key_value} --ppg={ppg} 
aks nodepool add --resource-group={resource_group} --cluster-name={name} -n {node_pool_name} --ppg={ppg} 
aks create --resource-group={resource_group} --name={name} --location={location} --dns-name-prefix={dns_name_prefix} --node-count=1 --ssh-key-value={ssh_key_value} --service-principal={service_principal} --client-secret={client_secret} --windows-admin-username={windows_admin_username} --windows-admin-password={windows_admin_password} --load-balancer-sku=standard --vm-set-type=virtualmachinescalesets --network-plugin=azure
aks nodepool add --resource-group={resource_group} --cluster-name={name} --name={nodepool2_name} --os-type Windows --node-count=1
aks update --resource-group={resource_group} --name={name} --enable-ahub
aks nodepool delete --resource-group={resource_group} --cluster-name={name} --name={nodepool2_name} --no-wait
aks delete -g {resource_group} -n {name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --location={location} --dns-name-prefix={dns_name_prefix} --node-count=1 --ssh-key-value={ssh_key_value} --windows-admin-username={windows_admin_username} --windows-admin-password={windows_admin_password} --load-balancer-sku=standard --vm-set-type=virtualmachinescalesets --network-plugin=azure
aks nodepool add --resource-group={resource_group} --cluster-name={name} --name={nodepool2_name} --os-type Windows --node-count=1
aks update --resource-group={resource_group} --name={name} --enable-ahub
aks nodepool delete --resource-group={resource_group} --cluster-name={name} --name={nodepool2_name} --no-wait
aks delete -g {resource_group} -n {name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --location={location} --ssh-key-value={ssh_key_value} --auto-upgrade-channel rapid --aks-custom-headers AKSHTTPCustomFeatures=Microsoft.ContainerService/AutoUpgradePreview
aks update --resource-group={resource_group} --name={name} --auto-upgrade-channel stable --aks-custom-headers AKSHTTPCustomFeatures=Microsoft.ContainerService/AutoUpgradePreview
aks delete -g {resource_group} -n {name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --enable-managed-identity -a confcom --ssh-key-value={ssh_key_value} -o json
aks disable-addons --addons confcom --resource-group={resource_group} --name={name} -o json
aks create --resource-group={resource_group} --name={name} --ssh-key-value={ssh_key_value} --enable-managed-identity --disable-local-accounts
aks update --resource-group={resource_group} --name={name} --enable-local-accounts
aks update --resource-group={resource_group} --name={name} --disable-local-accounts
aks delete -g {resource_group} -n {name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --enable-managed-identity -a open-service-mesh --ssh-key-value={ssh_key_value} -o json
aks disable-addons --addons open-service-mesh --resource-group={resource_group} --name={name} -o json
aks create --resource-group={resource_group} --name={name} --ssh-key-value={ssh_key_value}
aks enable-addons --addons azure-keyvault-secrets-provider --resource-group={resource_group} --name={name} -o json
aks update --resource-group={resource_group} --name={name} --enable-secret-rotation --rotation-poll-interval 120s -o json
aks update --resource-group={resource_group} --name={name} --disable-secret-rotation -o json
aks disable-addons --addons azure-keyvault-secrets-provider --resource-group={resource_group} --name={name} -o json
aks enable-addons --addons azure-keyvault-secrets-provider --enable-secret-rotation --rotation-poll-interval 1h --resource-group={resource_group} --name={name} -o json
aks delete --resource-group={resource_group} --name={name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --enable-managed-identity --ssh-key-value={ssh_key_value} -o json
aks enable-addons --addons confcom --resource-group={resource_group} --name={name} -o json
aks create --resource-group={resource_group} --name={name} --enable-managed-identity --ssh-key-value={ssh_key_value} -o json
aks enable-addons --addons open-service-mesh --resource-group={resource_group} --name={name} -o json
aks create --resource-group={resource_group} --name={name} --node-vm-size Standard_D2s_v3 --zones 1 2 3 --enable-ultra-ssd --ssh-key-value={ssh_key_value}
aks delete -g {resource_group} -n {name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --vm-set-type VirtualMachineScaleSets --node-count=1 --ssh-key-value={ssh_key_value} --enable-aad --aad-admin-group-object-ids 00000000-0000-0000-0000-000000000001 -o json
aks update --resource-group={resource_group} --name={name} --aad-admin-group-object-ids 00000000-0000-0000-0000-000000000002 --aad-tenant-id 00000000-0000-0000-0000-000000000003 -o json
aks create --resource-group={resource_group} --name={name} --vm-set-type VirtualMachineScaleSets --node-count=1 --ssh-key-value={ssh_key_value} --enable-aad --aad-admin-group-object-ids 00000000-0000-0000-0000-000000000001 -o json
aks update --resource-group={resource_group} --name={name} --aad-admin-group-object-ids 00000000-0000-0000-0000-000000000002 --aad-tenant-id 00000000-0000-0000-0000-000000000003 -o json
aks create --resource-group={resource_group} --name={name} --location={location} --dns-name-prefix={dns_name_prefix} --node-count=1 --ssh-key-value={ssh_key_value} --service-principal={service_principal} --client-secret={client_secret} --enable-managed-identity
aks list -g {resource_group}
aks list -g {resource_group} -o table
aks show -g {resource_group} -n {name}
aks get-credentials -g {resource_group} -n {name} --file "{file}"
aks scale -g {resource_group} -n {name} --node-count 3
aks show -g {resource_group} -n {name}
aks delete -g {resource_group} -n {name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --location={location} --dns-name-prefix={dns_name_prefix} --node-count=1 --ssh-key-value={ssh_key_value} --enable-managed-identity
aks list -g {resource_group}
aks list -g {resource_group} -o table
aks show -g {resource_group} -n {name}
aks get-credentials -g {resource_group} -n {name} --file "{file}"
aks get-credentials -g {resource_group} -n {name} -f -
aks get-credentials -g {resource_group} -n {name} -f "{file}"
aks scale -g {resource_group} -n {name} --node-count 3
aks show -g {resource_group} -n {name}
aks delete -g {resource_group} -n {name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --nodepool-name {node_pool_name} -c 1 --ssh-key-value={ssh_key_value}
aks nodepool add --resource-group={resource_group} --cluster-name={name} --name={node_pool_name_second} --os-sku CBLMariner
aks delete -g {resource_group} -n {name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --location={location} --dns-name-prefix={dns_name_prefix} --node-count=1 --ssh-key-value={ssh_key_value} --service-principal={service_principal} --client-secret={client_secret}
aks show -g {resource_group} -n {name}
aks get-credentials -g {resource_group} -n {name} --file "{file}"
aks nodepool add --resource-group={resource_group} --cluster-name={name} --name={nodepool2_name} --labels {labels} --node-count=1 --tags {tags}
aks nodepool list --resource-group={resource_group} --cluster-name={name}
aks nodepool list --resource-group={resource_group} --cluster-name={name} -o table
aks nodepool scale --resource-group={resource_group} --cluster-name={name} --name={nodepool2_name} --node-count=3
aks nodepool show --resource-group={resource_group} --cluster-name={name} --name={nodepool2_name}
aks nodepool get-upgrades --resource-group={resource_group} --cluster-name={name} --nodepool-name={nodepool1_name}
aks nodepool get-upgrades --resource-group={resource_group} --cluster-name={name} --nodepool-name={nodepool2_name}
aks nodepool update --resource-group={resource_group} --cluster-name={name} --name={nodepool2_name} --tags {new_tags}
aks nodepool delete --resource-group={resource_group} --cluster-name={name} --name={nodepool2_name} --no-wait
aks delete -g {resource_group} -n {name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --location={location} --dns-name-prefix={dns_name_prefix} --node-count=1 --ssh-key-value={ssh_key_value} 
aks show -g {resource_group} -n {name}
aks get-credentials -g {resource_group} -n {name} --file "{file}"
aks nodepool add --resource-group={resource_group} --cluster-name={name} --name={nodepool2_name} --labels {labels} --node-count=1 --tags {tags}
aks nodepool list --resource-group={resource_group} --cluster-name={name}
aks nodepool list --resource-group={resource_group} --cluster-name={name} -o table
aks nodepool scale --resource-group={resource_group} --cluster-name={name} --name={nodepool2_name} --node-count=3
aks nodepool show --resource-group={resource_group} --cluster-name={name} --name={nodepool2_name}
aks nodepool get-upgrades --resource-group={resource_group} --cluster-name={name} --nodepool-name={nodepool1_name}
aks nodepool get-upgrades --resource-group={resource_group} --cluster-name={name} --nodepool-name={nodepool2_name}
aks nodepool update --resource-group={resource_group} --cluster-name={name} --name={nodepool2_name} --tags {new_tags}
aks nodepool delete --resource-group={resource_group} --cluster-name={name} --name={nodepool2_name} --no-wait
aks delete -g {resource_group} -n {name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --location={location} --dns-name-prefix={dns_name_prefix} --node-count=1 --ssh-key-value={ssh_key_value} --service-principal={service_principal} --client-secret={client_secret}
aks show -g {resource_group} -n {name}
aks get-credentials -g {resource_group} -n {name} --file "{file}"
aks nodepool add --resource-group={resource_group} --cluster-name={name} --name={nodepool2_name} --labels {labels} --node-count=1 --tags {tags}
aks nodepool list --resource-group={resource_group} --cluster-name={name}
aks nodepool list --resource-group={resource_group} --cluster-name={name} -o table
aks nodepool add --resource-group={resource_group} --cluster-name={name} --name={nodepool3_name} --labels {labels} --node-count=1 --tags {tags} --mode system
aks nodepool show --resource-group={resource_group} --cluster-name={name} --name={nodepool3_name}
aks nodepool delete --resource-group={resource_group} --cluster-name={name} --name={nodepool1_name} --no-wait
aks nodepool update --resource-group={resource_group} --cluster-name={name} --name={nodepool2_name} --mode System
aks nodepool show --resource-group={resource_group} --cluster-name={name} --name={nodepool2_name}
aks delete -g {resource_group} -n {name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --location={location} --dns-name-prefix={dns_name_prefix} --node-count=1 --ssh-key-value={ssh_key_value} 
aks show -g {resource_group} -n {name}
aks get-credentials -g {resource_group} -n {name} --file "{file}"
aks nodepool add --resource-group={resource_group} --cluster-name={name} --name={nodepool2_name} --labels {labels} --node-count=1 --tags {tags}
aks nodepool list --resource-group={resource_group} --cluster-name={name}
aks nodepool list --resource-group={resource_group} --cluster-name={name} -o table
aks nodepool add --resource-group={resource_group} --cluster-name={name} --name={nodepool3_name} --labels {labels} --node-count=1 --tags {tags} --mode system
aks nodepool show --resource-group={resource_group} --cluster-name={name} --name={nodepool3_name}
aks nodepool delete --resource-group={resource_group} --cluster-name={name} --name={nodepool1_name} --no-wait
aks nodepool update --resource-group={resource_group} --cluster-name={name} --name={nodepool2_name} --mode System
aks nodepool show --resource-group={resource_group} --cluster-name={name} --name={nodepool2_name}
aks delete -g {resource_group} -n {name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --location={location} --dns-name-prefix={dns_name_prefix} --node-count=1 --ssh-key-value={ssh_key_value} 
aks show -g {resource_group} -n {name}
aks get-credentials -g {resource_group} -n {name} --file "{file}"
aks nodepool update --resource-group={resource_group} --cluster-name={name} --name={nodepool1_name} --labels {labels}
aks nodepool list --resource-group={resource_group} --cluster-name={name}
aks nodepool update --resource-group={resource_group} --cluster-name={name} --name={nodepool1_name} --labels label1=value2
aks nodepool show --resource-group={resource_group} --cluster-name={name} --name={nodepool1_name}
aks delete -g {resource_group} -n {name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --generate-ssh-keys
aks stop --resource-group={resource_group} --name={name}
aks start --resource-group={resource_group} --name={name}
aks create --resource-group={resource_group} --name={name} --service-principal={service_principal} --client-secret={client_secret} --ssh-key-value={ssh_key_value}
aks update --resource-group={resource_group} --name={name} --nodepool-labels {nodepool_labels}
aks update --resource-group={resource_group} --name={name} --nodepool-labels label1=value11
aks create --resource-group={resource_group} --name={name} --service-principal={service_principal} --client-secret={client_secret} --ssh-key-value={ssh_key_value}
aks update --resource-group={resource_group} --name={name} --enable-managed-identity --yes
aks delete -g {resource_group} -n {name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --location={location} --dns-name-prefix={dns_name_prefix} --node-count=1 --windows-admin-username={windows_admin_username} --windows-admin-password={windows_admin_password} --load-balancer-sku=standard --vm-set-type=virtualmachinescalesets --network-plugin=azure --ssh-key-value={ssh_key_value}
aks nodepool add --resource-group={resource_group} --cluster-name={name} --name={nodepool2_name} --os-type Windows --node-count=1
aks update --resource-group={resource_group} --name={name} --windows-admin-password {new_windows_admin_password}
aks nodepool delete --resource-group={resource_group} --cluster-name={name} --name={nodepool2_name} --no-wait
aks delete -g {resource_group} -n {name} --yes --no-wait
aks create --resource-group={resource_group} --name={name} --nodepool-name {node_pool_name} --vm-set-type VirtualMachineScaleSets --node-count=1 --ssh-key-value={ssh_key_value} -o json
aks upgrade -g {resource_group} -n {name} --node-image-only --yes
aks create --resource-group={resource_group} --name={name} --nodepool-name {node_pool_name} --vm-set-type VirtualMachineScaleSets --node-count=1 --ssh-key-value={ssh_key_value} -o json
aks upgrade -g {resource_group} -n {name} --node-image-only --yes
aks create --resource-group={resource_group} --name={name} --nodepool-name {node_pool_name} --vm-set-type VirtualMachineScaleSets --node-count=1 --ssh-key-value={ssh_key_value} -o json
aks nodepool upgrade --resource-group={resource_group} --cluster-name={name} -n {node_pool_name} --node-image-only --no-wait
aks nodepool show --resource-group={resource_group} --cluster-name={name} -n {node_pool_name} 
aks create --resource-group={resource_group} --name={name} --nodepool-name {node_pool_name} --vm-set-type VirtualMachineScaleSets --node-count=1 --ssh-key-value={ssh_key_value} -o json
aks nodepool upgrade --resource-group={resource_group} --cluster-name={name} -n {node_pool_name} --node-image-only --no-wait
aks nodepool show --resource-group={resource_group} --cluster-name={name} -n {node_pool_name} 
aks create --resource-group={resource_group} --name={name} --vm-set-type VirtualMachineScaleSets --node-count=1 --ssh-key-value={ssh_key_value} --enable-aad --aad-admin-group-object-ids 00000000-0000-0000-0000-000000000001 -o json
aks update --resource-group={resource_group} --name={name} --enable-azure-rbac -o json
aks update --resource-group={resource_group} --name={name} --disable-azure-rbac -o json
aks create --resource-group={resource_group} --name={name} --nodepool-name {node_pool_name} --generate-ssh-keys --vm-set-type VirtualMachineScaleSets --node-count=1 -o json
aks command invoke -g {resource_group} -n {name} -o json -c "kubectl get pods -A"
advisor configuration show -g {rg}
advisor configuration update --exclude -g {rg}
advisor configuration show -g {rg}
advisor configuration update --include -g {rg}
advisor configuration show -g {rg}
advisor configuration show
advisor configuration update --low-cpu-threshold 15 --exclude
advisor configuration show
advisor configuration update --low-cpu-threshold 5 --include
advisor configuration show
advisor configuration list
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location} --mi-system-assigned
keyvault key create --name {keyName} --vault-name {keyVault}
keyvault set-policy --object-id {principalId} --name {keyVault} --key-permissions {identityPermissions}
ams account encryption set -a {amsname} -g {rg} --key-type {keySource} --key-identifier {keyVaultId}
ams account encryption show -a {amsname} -g {rg}
ams account delete -n {amsname} -g {rg}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams account-filter create -a {amsname} -g {rg} -n {filterName} --first-quality {firstQuality} --end-timestamp {endTimestamp} --live-backoff-duration {liveBackoffDuration} --presentation-window-duration {presentationWindowDuration} --start-timestamp {startTimestamp} --timescale {timescale} --tracks "{tracks}"
ams account-filter show -a {amsname} -g {rg} -n {filterName}
ams account-filter show -a {amsname} -g {rg} -n {nonexits_filter_name}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams account-filter list -a {amsname} -g {rg}
ams account-filter create -a {amsname} -g {rg} -n {filterName1} --bitrate {bitrate1} --end-timestamp {endTimestamp} --live-backoff-duration {liveBackoffDuration} --presentation-window-duration {presentationWindowDuration} --start-timestamp {startTimestamp} --timescale {timescale} --tracks "{tracks}"
ams account-filter list -a {amsname} -g {rg}
ams account-filter create -a {amsname} -g {rg} -n {filterName2} --first-quality {bitrate2} --end-timestamp {endTimestamp} --live-backoff-duration {liveBackoffDuration} --presentation-window-duration {presentationWindowDuration} --start-timestamp {startTimestamp} --timescale {timescale} --tracks "{tracks}"
ams account-filter list -a {amsname} -g {rg}
ams account-filter delete -a {amsname} -g {rg} -n {filterName2}
ams account-filter list -a {amsname} -g {rg}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams account-filter create -a {amsname} -g {rg} -n {filterName} --first-quality {firstQuality} --end-timestamp {endTimestamp} --live-backoff-duration {liveBackoffDuration} --presentation-window-duration {presentationWindowDuration} --start-timestamp {startTimestamp} --timescale {timescale} --tracks "{tracks}"
ams account-filter update -a {amsname} -g {rg} -n {filterName} --bitrate {newBitrate} --start-timestamp {newStartTimestamp} --end-timestamp {newEndTimestamp} --set tracks[1].trackSelections[0].operation={newTrackOperation} tracks[1].trackSelections[0].property={newTrackProperty} tracks[1].trackSelections[0].value={newTrackValue}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams account check-name --location {location} -n {amsname}
ams account check-name --location {location} -n {amsname2}
ams account check-name --location {location} -n {amsname3}
ams account delete -n {amsname} -g {rg}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location} --mi-system-assigned
ams account update -n {amsname} -g {rg} --tags key=value
ams account list -g clitest.rg000001
ams account show -n {amsname} -g {rg}
ams account delete -n {amsname} -g {rg}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams account storage add -a {amsname} -g {rg} -n {storageAccount}
ams account storage remove -a {amsname} -g {rg} -n {storageAccount}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams account storage sync-storage-keys -g {rg} -a {amsname} --storage-account-id "{storageId}"
ams account delete -n {amsname} -g {rg}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams account storage add -a {amsname} -g {rg} -n {storageAccount}
ams asset create -a {amsname} -n {asset_name} -g {rg} --description {description} --alternate-id {alternate_id} --storage-account {storageAccount} --container {container}
ams asset-filter create -a {amsname} --asset-name {asset_name} -g {rg} -n {filter_name} --first-quality {firstQuality} --end-timestamp {endTimestamp} --live-backoff-duration {liveBackoffDuration} --presentation-window-duration {presentationWindowDuration} --start-timestamp {startTimestamp} --timescale {timescale} --tracks "{tracks}"
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams account storage add -a {amsname} -g {rg} -n {storageAccount}
ams asset create -a {amsname} -n {asset_name} -g {rg} --description {description} --alternate-id {alternate_id} --storage-account {storageAccount} --container {container}
ams asset-filter list -a {amsname} --asset-name {asset_name} -g {rg}
ams asset-filter create -a {amsname} --asset-name {asset_name} -g {rg} -n {filter_name1} --first-quality {bitrate1}
ams asset-filter list -a {amsname} --asset-name {asset_name} -g {rg}
ams asset-filter create -a {amsname} --asset-name {asset_name} -g {rg} -n {filter_name2} --bitrate {bitrate2}
ams asset-filter list -a {amsname} --asset-name {asset_name} -g {rg}
ams asset-filter delete -a {amsname} --asset-name {asset_name} -g {rg} -n {filter_name2}
ams asset-filter list -a {amsname} --asset-name {asset_name} -g {rg}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams account storage add -a {amsname} -g {rg} -n {storageAccount}
ams asset create -a {amsname} -n {asset_name} -g {rg} --description {description} --alternate-id {alternate_id} --storage-account {storageAccount} --container {container}
ams asset-filter create -a {amsname} --asset-name {asset_name} -g {rg} -n {filter_name} --first-quality {bitrate} --end-timestamp {endTimestamp} --live-backoff-duration {liveBackoffDuration} --presentation-window-duration {presentationWindowDuration} --start-timestamp {startTimestamp} --timescale {timescale} --tracks "{tracks}"
ams asset-filter show -a {amsname} --asset-name {asset_name} -g {rg} -n {filter_name}
ams asset-filter show -a {amsname} --asset-name {asset_name} -g {rg} -n {nonexits_asset_filter_name}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams account storage add -a {amsname} -g {rg} -n {storageAccount}
ams asset create -a {amsname} -n {asset_name} -g {rg} --description {description} --alternate-id {alternate_id} --storage-account {storageAccount} --container {container}
ams asset-filter create -a {amsname} --asset-name {asset_name} -g {rg} -n {filter_name} --first-quality {bitrate} --end-timestamp {endTimestamp} --live-backoff-duration {liveBackoffDuration} --presentation-window-duration {presentationWindowDuration} --start-timestamp {startTimestamp} --timescale {timescale} --tracks "{tracks}"
ams asset-filter update -a {amsname} --asset-name {asset_name} -g {rg} -n {filter_name} --bitrate {newBitrate} --start-timestamp {newStartTimestamp} --end-timestamp {newEndTimestamp} --set tracks[1].trackSelections[0].operation={newTrackOperation} tracks[1].trackSelections[0].property={newTrackProperty} tracks[1].trackSelections[0].value={newTrackValue}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams account storage add -a {amsname} -g {rg} -n {storageAccountForAsset}
ams asset create -a {amsname} -n {assetName} -g {rg} --description {description} --alternate-id {alternateId} --storage-account {storageAccountForAsset} --container {container}
ams asset update -a {amsname} -n {assetName} -g {rg} --set description=mydesc alternateId=myaid
ams asset show -a {amsname} -n {assetName} -g {rg}
ams asset show -a {amsname} -g {rg} -n {nonexits_asset_name}
ams asset list -a {amsname} -g {rg}
ams asset delete -n {assetName} -a {amsname} -g {rg}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams asset create -a {amsname} -n {assetName} -g {rg} --description {description} --alternate-id {alternateId}
ams asset get-encryption-key -a {amsname} -n {assetName} -g {rg}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams asset create -a {amsname} -n {assetName} -g {rg} --description {description} --alternate-id {alternateId}
ams asset get-sas-urls -a {amsname} -n {assetName} -g {rg}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams asset create -a {amsname} -n {assetName} -g {rg}
ams streaming-locator create -n {streamingLocatorName} -a {amsname} -g {rg} --streaming-policy-name {streamingPolicyName} --asset-name {assetName}
ams asset list-streaming-locators -a {amsname} -n {assetName} -g {rg}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams content-key-policy create -a {amsname} -n {contentKeyPolicyName} -g {rg} --description {description} --clear-key-configuration --open-restriction --policy-option-name {policyOptionName}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams content-key-policy create -a {amsname} -n {contentKeyPolicyName} -g {rg} --open-restriction --description {description} --ask {ask} --fair-play-pfx "{fairPlayPfx}" --fair-play-pfx-password {fairPlayPfxPassword} --rental-and-lease-key-type {rentalAndLeaseKeyType} --rental-duration {rentalDuration} --policy-option-name {policyOptionName}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams content-key-policy create -a {amsname} -n {contentKeyPolicyName} -g {rg} --open-restriction --description {description} --ask {ask} --fair-play-pfx "{fairPlayPfx}" --fair-play-pfx-password {fairPlayPfxPassword} --rental-and-lease-key-type {rentalAndLeaseKeyType} --fp-playback-duration-seconds {fairPlayPlaybackDurationSeconds} --fp-storage-duration-seconds {fairPlayStorageDurationSeconds} --rental-duration {rentalDuration} --policy-option-name {policyOptionName}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams content-key-policy create -a {amsname} -n {contentKeyPolicyName} -g {rg}  --open-restriction --play-ready-template "{playReadyPath}" --description {description} --policy-option-name {policyOptionName}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams content-key-policy create -a {amsname} -n {contentKeyPolicyName} -g {rg}  --open-restriction --play-ready-template "{playReadyPath}" --description {description} --policy-option-name {policyOptionName}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams content-key-policy create -a {amsname} -n {contentKeyPolicyName} -g {rg} --description {description} --issuer {issuer} --audience {audience} --token-key "{tokenKey}" --token-key-type {tokenType} --token-type {restrictionTokenType} --widevine-template "{jsonFile}" --token-claims {tokenClaims} --open-id-connect-discovery-document {openIDConnectDiscoveryDocument} --policy-option-name {policyOptionName}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams content-key-policy create -a {amsname} -n {contentKeyPolicyName} -g {rg} --description {description} --widevine-template "{jsonFile}" --open-restriction --policy-option-name {policyOptionName}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams content-key-policy create -a {amsname} -n {contentKeyPolicyName} -g {rg} --description {description} --clear-key-configuration --open-restriction --policy-option-name {policyOptionName}
ams content-key-policy list -a {amsname} -g {rg}
ams content-key-policy delete -a {amsname} -g {rg} -n {contentKeyPolicyName}
ams content-key-policy list -a {amsname} -g {rg}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams content-key-policy create -a {amsname} -n {contentKeyPolicyName} -g {rg} --description {description} --clear-key-configuration --open-restriction --policy-option-name {policyOptionName}
ams content-key-policy show -a {amsname} -n {contentKeyPolicyName} -g {rg}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams content-key-policy create -a {amsname} -g {rg} -n {contentKeyPolicyName} --clear-key-configuration --policy-option-name {policyOptionName} --token-key "{tokenKey}" --token-key-type {tokenType} --issuer {issuer} --audience {audience} --token-type {restrictionTokenType}
ams content-key-policy show -a {amsname} -n {contentKeyPolicyName} -g {rg}
ams content-key-policy show -a {amsname} -n {contentKeyPolicyName} -g {rg} --with-secrets
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams content-key-policy create -a {amsname} -n {contentKeyPolicyName} -g {rg} --description {description} --clear-key-configuration --issuer {issuer} --audience {audience} --token-key "{tokenKey}" --token-key-type {tokenType} --token-type {restrictionTokenType} --token-claims {tokenClaims} --open-id-connect-discovery-document {openIDConnectDiscoveryDocument} --policy-option-name {policyOptionName}
ams content-key-policy update -a {amsname} -n {contentKeyPolicyName} -g {rg} --description {description} --set options[0].restriction.issuer={issuer}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams asset create -a {amsname} -n {inputAssetName} -g {rg}
ams asset create -a {amsname} -n {outputAssetName} -g {rg}
ams transform create -a {amsname} -n {transformName} -g {rg} --preset {presetName}
ams job start -t {transformName} -a {amsname} -g {rg} -n {jobName} --input-asset-name {inputAssetName} --output-assets {outputAssetName}={outputLabel} --priority {priority} --label {label} --correlation-data {correlationData}
ams job show -a {amsname} -n {jobName} -g {rg} -t {transformName}
ams job show -a {amsname} -n{nonexits_job_name} -g {rg} -t {transformName}
ams job list -a {amsname} -g {rg} -t {transformName}
ams job update -a {amsname} -n {jobName} -g {rg} -t {transformName} --description {description} --priority {priority}
ams job cancel -n {jobName} -a {amsname} -g {rg} -t {transformName}
ams job show -a {amsname} -n {jobName} -g {rg} -t {transformName}
ams job delete -n {jobName} -a {amsname} -g {rg} -t {transformName}
ams job delete -n {jobName} -a {amsname} -g {rg} -t {transformName}
ams job delete -n {jobName} -a {amsname} -g {rg} -t {transformName}
ams job delete -n {jobName} -a {amsname} -g {rg} -t {transformName}
ams job delete -n {jobName} -a {amsname} -g {rg} -t {transformName}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams live-event create -a {amsname} -n {liveEventName} -g {rg} --auto-start --transcription-lang {liveTranscriptionLanguage} --streaming-protocol {streamingProtocol} --encoding-type {encodingType} --key-frame-interval {keyFrameInterval} --tags {tags} --stream-options Default LowLatency --preview-locator {previewLocator} --ips 1.2.3.4 5.6.7.8 192.168.0.0/28 --preview-ips 192.168.0.0/28 0.0.0.0 --access-token {accessToken} --description {description} --client-access-policy "{clientAccessPolicy}" --cross-domain-policy "{crossDomainPolicy}" --use-static-hostname --hostname-prefix {customHostnamePrefix} --stretch-mode {stretchMode}
ams live-event stop -a {amsname} -n {liveEventName} -g {rg}
ams live-event delete -a {amsname} -n {liveEventName} -g {rg}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams live-event create -a {amsname} -n {liveEventName} -g {rg} --streaming-protocol {streamingProtocol} --encoding-type {encodingType} --ips AllowAll --tags key=value
ams live-event list -a {amsname} -g {rg}
ams live-event create -a {amsname} -n {liveEventName2} -g {rg} --streaming-protocol {streamingProtocol} --encoding-type {encodingType} --ips AllowAll --tags key=value
ams live-event list -a {amsname} -g {rg}
ams live-event delete -a {amsname} -g {rg} -n {liveEventName2}
ams live-event list -a {amsname} -g {rg}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams live-event create -a {amsname} -n {liveEventName} -g {rg} --streaming-protocol {streamingProtocol} --encoding-type {encodingType} --ips AllowAll --tags key=value
ams live-event list -a {amsname} -g {rg}
ams live-event create -a {amsname} -n {liveEventName2} -g {rg} --streaming-protocol {streamingProtocol} --encoding-type {encodingType} --ips AllowAll --tags key=value
ams live-event list -a {amsname} -g {rg}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams live-event create -a {amsname} -n {liveEventName} -g {rg} --streaming-protocol {streamingProtocol} --encoding-type {encodingType} --ips AllowAll --auto-start
ams live-event reset -a {amsname} -n {liveEventName} -g {rg}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams live-event create -a {amsname} -n {liveEventName} -g {rg} --streaming-protocol {streamingProtocol} --encoding-type {encodingType} --tags {tags} --stream-options Default LowLatency --preview-locator {previewLocator} --ips 1.2.3.4 5.6.7.8 9.10.11.12 --preview-ips 1.1.1.1 0.0.0.0 --access-token {accessToken} --description {description} --client-access-policy "{clientAccessPolicy}" --cross-domain-policy "{crossDomainPolicy}"
ams live-event show -a {amsname} -n {liveEventName} -g {rg}
ams live-event show -a {amsname} -n {nonexits_live_event_name} -g {rg}
ams live-event delete -a {amsname} -n {liveEventName} -g {rg}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams live-event create -a {amsname} -n {liveEventName} -g {rg} --streaming-protocol {streamingProtocol} --encoding-type {encodingType} --access-token {accessToken} --tags key=value --ips AllowAll
ams live-event standby -a {amsname} --name {liveEventName} -g {rg}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams live-event create -a {amsname} -n {liveEventName} -g {rg} --streaming-protocol {streamingProtocol} --encoding-type {encodingType} --tags key=value --ips AllowAll
ams live-event start -a {amsname} --name {liveEventName} -g {rg}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams live-event create -a {amsname} -n {liveEventName} -g {rg} --streaming-protocol {streamingProtocol} --encoding-type {encodingType} --tags key=value --ips AllowAll --auto-start
ams live-event stop -a {amsname} -n {liveEventName} -g {rg}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams live-event create -a {amsname} -n {liveEventName} -g {rg} --streaming-protocol {streamingProtocol} --encoding-type {encodingType} --tags key=value --ips AllowAll --auto-start
ams asset create -a {amsname} -n {assetName} -g {rg}
ams live-output create -a {amsname} -n {liveOutputName1} -g {rg} --asset-name {assetName} --live-event-name {liveEventName} --archive-window-length {archiveWindowLength} --manifest-name {manifestName1}
ams live-output create -a {amsname} -n {liveOutputName2} -g {rg} --asset-name {assetName} --live-event-name {liveEventName} --archive-window-length {archiveWindowLength} --manifest-name {manifestName2}
ams live-output list -a {amsname} -g {rg} --live-event-name {liveEventName}
ams live-event stop -a {amsname} -n {liveEventName} -g {rg} --remove-outputs-on-stop
ams live-output list -a {amsname} -g {rg} --live-event-name {liveEventName}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams live-event create -a {amsname} -n {liveEventName} -g {rg} --ips AllowAll --streaming-protocol {streamingProtocol}
ams live-event update -a {amsname} -n {liveEventName} -g {rg} --ips 1.2.3.4 5.6.7.8 9.10.11.12 --preview-ips 1.1.1.1 0.0.0.0 --key-frame-interval-duration {keyFrameIntervalDuration} --description {description} --client-access-policy "{clientAccessPolicy}" --cross-domain-policy "{crossDomainPolicy}" --tags {tags}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams live-event create -a {amsname} -n {liveEventName} -g {rg} --ips AllowAll --streaming-protocol {streaming_protocol}
ams asset create -a {amsname} -n {assetName} -g {rg}
ams live-output create -a {amsname} -n {liveOutputName} -g {rg} --asset-name {assetName} --live-event-name {liveEventName} --archive-window-length {archiveWindowLength} --manifest-name {manifestName} --description {description} --fragments-per-ts-segment {fragments} --output-snap-time {outputSnapTime}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams live-event create -a {amsname} -n {liveEventName} -g {rg} --ips AllowAll --streaming-protocol {streaming_protocol}
ams asset create -a {amsname} -n {assetName} -g {rg}
ams live-output create -a {amsname} -n {liveOutputName1} -g {rg} --asset-name {assetName} --live-event-name {liveEventName} --archive-window-length {archiveWindowLength} --manifest-name {manifestName1}
ams live-output create -a {amsname} -n {liveOutputName2} -g {rg} --asset-name {assetName} --live-event-name {liveEventName} --archive-window-length {archiveWindowLength} --manifest-name {manifestName2}
ams live-output list -a {amsname} -g {rg} --live-event-name {liveEventName}
ams live-output delete -a {amsname} -g {rg} -n {liveOutputName2} --live-event-name {liveEventName}
ams live-output list -a {amsname} -g {rg} --live-event-name {liveEventName}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams live-event create -a {amsname} -n {liveEventName} -g {rg} --ips AllowAll --streaming-protocol {streaming_protocol}
ams asset create -a {amsname} -n {assetName} -g {rg}
ams live-output create -a {amsname} -n {liveOutputName} -g {rg} --asset-name {assetName} --live-event-name {liveEventName} --archive-window-length {archiveWindowLength} --manifest-name {manifestName}
ams live-output list -a {amsname} -g {rg} --live-event-name {liveEventName}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams live-event create -a {amsname} -n {liveEventName} -g {rg} --ips AllowAll --streaming-protocol {streamingProtocol}
ams asset create -a {amsname} -n {assetName} -g {rg}
ams live-output create -a {amsname} -n {liveOutputName} -g {rg} --asset-name {assetName} --live-event-name {liveEventName} --archive-window-length {archiveWindowLength} --manifest-name {manifestName}
ams live-output show -a {amsname} -n {liveOutputName} -g {rg} --live-event-name {liveEventName}
ams live-output show -a {amsname} -n {liveOutputName} -g {rg} --live-event-name {nonexits_live_output_name}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams account sp create -a {amsname} -n {spName} -g {rg} -p {spPassword} --role {role}
ams account sp reset-credentials -a {amsname} -g {rg} -n {appId} -p {spNewPassword}
ad app delete --id {appId}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams streaming-endpoint create -g {rg} -a {amsname} -n {streamingEndpointName} --cdn-provider {cdnProvider} --cdn-profile {cdnProfile} --description "{description}" --max-cache-age {maxCacheAge} --scale-units {scaleUnits} --tags "{tags}" --client-access-policy @"{clientAccessPolicy}" --cross-domain-policy @"{crossDomainPolicy}"
ams streaming-endpoint delete -g {rg} -a {amsname} -n {streamingEndpointName}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams streaming-endpoint create -g {rg} -a {amsname} -n {streamingEndpointName} --ips {ips} --description "{description}" --max-cache-age {maxCacheAge} --scale-units {scaleUnits} --tags "{tags}" --client-access-policy @"{clientAccessPolicy}" --cross-domain-policy @"{crossDomainPolicy}"
ams streaming-endpoint akamai add -g {rg} -a {amsname} -n {streamingEndpointName} --identifier {identifier} --expiration {expiration} --base64-key {base64Key}
ams streaming-endpoint akamai remove -g {rg} -a {amsname} -n {streamingEndpointName} --identifier {identifier}
ams streaming-endpoint delete -g {rg} -a {amsname} -n {streamingEndpointName}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams streaming-endpoint create -g {rg} -a {amsname} -n {streamingEndpointName} --scale-units {scaleUnits}
ams streaming-endpoint akamai add -g {rg} -a {amsname} -n {streamingEndpointName} --identifier {identifier} --expiration {expiration} --base64-key {base64Key}
ams streaming-endpoint akamai remove -g {rg} -a {amsname} -n {streamingEndpointName} --identifier {identifier}
ams streaming-endpoint delete -g {rg} -a {amsname} -n {streamingEndpointName}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams streaming-endpoint create -g {rg} -a {amsname} -n {streamingEndpointName1} --cdn-provider {cdnProvider} --cdn-profile {cdnProfile} --description "{description}" --max-cache-age {maxCacheAge} --scale-units {scaleUnits} --tags "{tags}" --client-access-policy @"{clientAccessPolicy}" --cross-domain-policy @"{crossDomainPolicy}"
ams streaming-endpoint list -g {rg} -a {amsname}
ams streaming-endpoint delete -g {rg} -a {amsname} -n {streamingEndpointName1}
ams streaming-endpoint list -g {rg} -a {amsname}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams streaming-endpoint create -g {rg} -a {amsname} -n {streamingEndpointName} --scale-units {scaleUnits}
ams streaming-endpoint list -g {rg} -a {amsname}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams streaming-endpoint create -g {rg} -a {amsname} -n {streamingEndpointName} --cdn-provider {cdnProvider} --cdn-profile {cdnProfile} --description "{description}" --max-cache-age {maxCacheAge} --scale-units {scaleUnits} --tags "{tags}" --client-access-policy @"{clientAccessPolicy}" --cross-domain-policy @"{crossDomainPolicy}"
ams streaming-endpoint scale -g {rg} -a {amsname} -n {streamingEndpointName} --scale-unit {scaleUnits2}
ams streaming-endpoint show -g {rg} -a {amsname} -n {streamingEndpointName}
ams streaming-endpoint delete -g {rg} -a {amsname} -n {streamingEndpointName}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams streaming-endpoint create -g {rg} -a {amsname} -n {streamingEndpointName} --cdn-provider {cdnProvider} --cdn-profile {cdnProfile} --description "{description}" --max-cache-age {maxCacheAge} --scale-units {scaleUnits} --tags "{tags}" --client-access-policy @"{clientAccessPolicy}" --cross-domain-policy @"{crossDomainPolicy}"
ams streaming-endpoint show -g {rg} -a {amsname} -n {streamingEndpointName}
ams streaming-endpoint show -g {rg} -a {amsname} -n {nonexits_streaming_endpoint_name}
ams streaming-endpoint delete -g {rg} -a {amsname} -n {streamingEndpointName}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams streaming-endpoint create -g {rg} -a {amsname} -n {streamingEndpointName} --scale-units {scaleUnits}
ams streaming-endpoint start -g {rg} -a {amsname} -n {streamingEndpointName}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams streaming-endpoint create -g {rg} -a {amsname} -n {streamingEndpointName} --scale-units {scaleUnits}
ams streaming-endpoint start -g {rg} -a {amsname} -n {streamingEndpointName} --no-wait
ams streaming-endpoint show -g {rg} -a {amsname} -n {streamingEndpointName}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams streaming-endpoint create -g {rg} -a {amsname} -n {streamingEndpointName} --scale-units {scaleUnits} --auto-start
ams streaming-endpoint stop -g {rg} -a {amsname} -n {streamingEndpointName}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams streaming-endpoint create -g {rg} -a {amsname} -n {streamingEndpointName} --scale-units {scaleUnits} --auto-start
ams streaming-endpoint stop -g {rg} -a {amsname} -n {streamingEndpointName} --no-wait
ams streaming-endpoint show -g {rg} -a {amsname} -n {streamingEndpointName}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams streaming-endpoint create -g {rg} -a {amsname} -n {streamingEndpointName} --cdn-provider {cdnProvider} --cdn-profile {cdnProfile} --description "{description}" --max-cache-age {maxCacheAge} --scale-units {scaleUnits} --tags "{tags}" --client-access-policy @"{clientAccessPolicy}" --cross-domain-policy @"{crossDomainPolicy}"
ams streaming-endpoint update -g {rg} -a {amsname} -n {streamingEndpointName} --add access_control.ip.allow {ip}
ams streaming-endpoint update -g {rg} -a {amsname} -n {streamingEndpointName} --cdn-provider {cdnProvider} --cdn-profile {cdnProfile} --description "{description}" --max-cache-age {maxCacheAge} --tags {tags} --client-access-policy @"{clientAccessPolicy}" --cross-domain-policy @"{crossDomainPolicy}"
ams streaming-endpoint update -g {rg} -a {amsname} -n {streamingEndpointName} --ips {ips} --disable-cdn
ams streaming-endpoint show -g {rg} -a {amsname} -n {streamingEndpointName}
ams streaming-endpoint delete -g {rg} -a {amsname} -n {streamingEndpointName}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams asset create -a {amsname} -n {assetName} -g {rg}
ams streaming-policy create -a {amsname} -n {streamingPolicyName} -g {rg} --no-encryption-protocols Download
ams streaming-locator create -n {streamingLocatorName} -a {amsname} -g {rg} --streaming-policy-name {streamingPolicyName} --asset-name {assetName} --start-time {startTime} --end-time {endTime} --streaming-locator-id {streamingLocatorId} --alternative-media-id {alternativeMediaId}
ams streaming-locator show -a {amsname} -n {streamingLocatorName} -g {rg}
ams streaming-locator show -a {amsname} -n {nonexits_streaming_locator_name} -g {rg}
ams streaming-locator list -a {amsname} -g {rg}
ams streaming-locator get-paths -a {amsname} -n {streamingLocatorName} -g {rg}
ams streaming-locator delete -n {streamingLocatorName} -a {amsname} -g {rg}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams asset create -a {amsname} -n {assetName} -g {rg}
ams content-key-policy create -a {amsname} -n {contentKeyPolicyName} -g {rg} --clear-key-configuration --open-restriction --policy-option-name testOption
ams streaming-locator create -n {streamingLocatorName} -a {amsname} -g {rg} --content-key-policy-name {contentKeyPolicyName} --streaming-policy-name {streamingPolicyName} --asset-name {assetName}
ams streaming-locator list-content-keys -a {amsname} -n {streamingLocatorName} -g {rg}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams asset create -a {amsname} -n {assetName} -g {rg}
ams streaming-policy create -a {amsname} -n {streamingPolicyName} -g {rg} --cbcs-default-key-label {CBCSDefaultKeyLabel} --cenc-default-key-label {CENCDefaultKeyLabel} --cbcs-protocols {protocol} --cenc-protocols {protocol} --cbcs-fair-play-template {urlTemplate} --cenc-play-ready-template {urlTemplate} --cenc-widevine-template {urlTemplate}
ams streaming-locator create -n {streamingLocatorName} -a {amsname} -g {rg} --streaming-policy-name {streamingPolicyName} --asset-name {assetName} --start-time {startTime} --end-time {endTime} --streaming-locator-id {streamingLocatorId} --alternative-media-id {alternativeMediaId} --content-keys "{contentKeys}"
ams streaming-locator show -a {amsname} -n {streamingLocatorName} -g {rg}
ams streaming-locator list -a {amsname} -g {rg}
ams streaming-locator get-paths -a {amsname} -n {streamingLocatorName} -g {rg}
ams streaming-locator delete -n {streamingLocatorName} -a {amsname} -g {rg}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams asset create -a {amsname} -n {assetName} -g {rg}
ams asset-filter create -a {amsname} --asset-name {assetName} -g {rg} -n {filter_name} --first-quality {bitrate} 
ams streaming-policy create -a {amsname} -n {streamingPolicyName} -g {rg} --no-encryption-protocols Download
ams streaming-locator create -n {streamingLocatorName} -a {amsname} -g {rg} --streaming-policy-name {streamingPolicyName} --asset-name {assetName} --start-time {startTime} --end-time {endTime} --streaming-locator-id {streamingLocatorId} --alternative-media-id {alternativeMediaId} --filters {filters}
ams streaming-locator show -a {amsname} -n {streamingLocatorName} -g {rg}
ams streaming-locator list -a {amsname} -g {rg}
ams streaming-locator get-paths -a {amsname} -n {streamingLocatorName} -g {rg}
ams streaming-locator delete -n {streamingLocatorName} -a {amsname} -g {rg}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams streaming-policy create -a {amsname} -n {streamingPolicyName} -g {rg} --no-encryption-protocols {protocols}
ams streaming-policy show -a {amsname} -n {streamingPolicyName} -g {rg}
ams streaming-policy list -a {amsname} -g {rg}
ams streaming-policy delete -n {streamingPolicyName} -a {amsname} -g {rg}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams streaming-policy create -a {amsname} -n {streamingPolicyName} -g {rg} --cbcs-protocols {protocols} --cbcs-fair-play-template {urlTemplate} --cbcs-default-key-label {label} --cbcs-fair-play-allow-persistent-license
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams streaming-policy create -a {amsname} -n {streamingPolicyName} -g {rg} --cbcs-protocols {protocols} --cbcs-default-key-label {label} 
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams content-key-policy create -a {amsname} -n {policyNameFromKeyToTrackMappings1} -g {rg} --description {description} --open-restriction --play-ready-template "{playReadyPath}"  --policy-option-name {policyOptionName1}
ams content-key-policy create -a {amsname} -n {policyNameFromKeyToTrackMappings2} -g {rg} --description {description} --open-restriction --clear-key-configuration --policy-option-name {policyOptionName2}
ams streaming-policy create -a {amsname} -n {streamingPolicyName} -g {rg} --cenc-protocols {protocols} --cenc-clear-tracks "{clearTracks}" --cenc-key-to-track-mappings "{keyToTrackMappings}" --cenc-default-key-label {label} --cenc-default-key-policy-name {policyNameFromKeyToTrackMappings1} --cenc-play-ready-template {playReadyUrlTemplate} --cenc-play-ready-attributes {playReadyAttributes} --cenc-widevine-template {widevineUrlTemplate}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams content-key-policy create -a {amsname} -n {policyNameFromKeyToTrackMappings1} -g {rg} --description {description} --open-restriction --play-ready-template "{playReadyPath}"  --policy-option-name {policyOptionName1}
ams content-key-policy create -a {amsname} -n {policyNameFromKeyToTrackMappings2} -g {rg} --description {description} --open-restriction --clear-key-configuration --policy-option-name {policyOptionName2}
ams streaming-policy create -a {amsname} -n {streamingPolicyName} -g {rg} --cenc-protocols {protocols} --cenc-clear-tracks "{clearTracks}" --cenc-key-to-track-mappings "{keyToTrackMappings}" --cenc-default-key-label {label}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams content-key-policy create -a {amsname} -n {policyNameFromKeyToTrackMappings1} -g {rg} --description {description} --open-restriction --play-ready-template "{playReadyPath}"  --policy-option-name {policyOptionName1}
ams content-key-policy create -a {amsname} -n {policyNameFromKeyToTrackMappings2} -g {rg} --description {description} --open-restriction --clear-key-configuration --policy-option-name {policyOptionName2}
ams streaming-policy create -a {amsname} -n {streamingPolicyName} -g {rg} --cenc-protocols {protocols} --cenc-clear-tracks "{clearTracks}" --cenc-key-to-track-mappings "{keyToTrackMappings}" --cenc-default-key-label {label} --cenc-disable-widevine
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams streaming-policy create -a {amsname} -n {streamingPolicyName} -g {rg} --envelope-protocols {protocols} --envelope-template {urlTemplate} --envelope-default-key-label {label}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams transform create -a {amsname} -n {transformName} -g {rg} --preset {presetName}
ams transform show -a {amsname} -n {transformName} -g {rg}
ams transform show -a {amsname} -n {nonexits_transform_name} -g {rg}
ams transform update --description mydesc -a {amsname} -n {transformName} -g {rg}
ams transform output add --preset "{presetPath}" -a {amsname} -n {transformName} -g {rg}
ams transform output remove --output-index 0 -a {amsname} -n {transformName} -g {rg}
ams transform list -a {amsname} -g {rg}
ams transform delete -n {transformName} -a {amsname} -g {rg}
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams transform create -a {amsname} -n {transformName} -g {rg} --preset "{presetPath}"
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams transform create -a {amsname} -n {transformName} -g {rg} --preset "{invalidPresetPath}"
ams account create -n {amsname} -g {rg} --storage-account {storageAccount} -l {location}
ams transform create -a {amsname} -n {transformName} -g {rg} --preset {presetName}
ams transform output add -a {amsname} -n {transformName} -g {rg} --preset "{presetPath}" --on-error {onError} --relative-priority {relativePriority}
ams transform output add -a {amsname} -n {transformName} -g {rg} --preset {presetName} --audio-language {audioLanguage} --audio-analysis-mode {audioAnalysisMode}
ams transform output add -a {amsname} -n {transformName} -g {rg} --preset {presetName2} --audio-language {audioLanguage2} --insights-to-extract {insightsToExtract} --video-analysis-mode {videoAnalysisMode}
ams transform output add -a {amsname} -n {transformName} -g {rg} --preset {presetName3} --resolution {resolution}
apim check-name -n {service_name} -o json
apim create --name {service_name} -g {rg} -l {rg_loc} --sku-name {sku_name} --publisher-email {publisher_email} --publisher-name {publisher_name} --enable-client-certificate {enable_cert} --enable-managed-identity {enable_managed_identity}
apim wait -g {rg} -n {service_name} --created
apim check-name -n {service_name}
apim update -n {service_name} -g {rg} --publisher-name {publisher_name} --set publisherEmail={publisher_email}
apim show -g {rg} -n {service_name}
storage account keys list -n clitest000002 -g cli_test_apim-000001 --query "[0].value" -o tsv
storage container create -n backups --account-name clitest000002 --account-key veryFakedStorageAccountKey==
apim backup -g {rg} -n {service_name} --backup-name {backup_name} --storage-account-name {storage_account_name} --storage-account-container {storage_account_container} --storage-account-key {storage_account_key}
apim api versionset list -g "{rg}" -n "{service_name}"
apim api versionset create -g "{rg}" -n "{service_name}" --display-name "{versionset_name}" --version-set-id "{vs_id}" --versioning-scheme "{version_schema}" --description "{vs_description}" --version-query-name "{version_query_name}"
apim api versionset show -g "{rg}" -n "{service_name}" --version-set-id "{vs_id}"
apim api versionset update -g "{rg}" -n "{service_name}" --version-set-id "{vs_id}" --display-name "{new_vs_name}"
apim api create -g "{rg}" --service-name "{service_name}" --display-name "{display_name}" --path "{path}" --api-id "{api_id}" --protocols "{protocol}" --service-url "{service_url}" --subscription-key-header-name "{subscription_key_header_name}" --subscription-key-query-param-name "{subscription_key_query_param_name}"
apim api wait -g "{rg}" -n "{service_name}" --api-id "{api_id}" --created
apim api import -g "{rg}" --service-name "{service_name}" --path "{path2}" --api-id "{api_id2}" --specification-url "{specification_url}" --specification-format "{specification_format}" --api-version-set-id {vs_id} --api-version {api_version}
apim api show -g {rg} --service-name {service_name} --api-id {api_id}
apim api update -g "{rg}" --service-name "{service_name}" --api-id "{api_id}" --description "{description}" --protocols {protocol}
apim api list -g "{rg}" -n "{service_name}"
apim product list -g "{rg}" -n "{service_name}"
apim product create -g "{rg}" -n "{service_name}" --product-id "{product_id1}" --product-name "{product_name1}" --description "{product_description}" --legal-terms "{legal_terms}" --subscription-required true --approval-required true --subscriptions-limit {subscription_limit} --state {state}
apim product list -g {rg} -n {service_name}
apim product show -g {rg} -n {service_name} --product-id {product_id1}
apim product update -g {rg} -n {service_name} --product-id {product_id1} --product-name {product_name2} --description "{new_product_description}" --legal-terms "{new_legal_terms}" --state {new_state} --subscriptions-limit {new_subscription_limit}
apim api operation list -g "{rg}" -n "{service_name}" --api-id "{api_id}"
apim api operation create -g "{rg}" -n "{service_name}" --api-id "{api_id}" --operation-id "{operation_id}" --url-template "{url_template}" --method "{method}" --display-name {operation_name} --template-parameters {template_parameter1} --template-parameters {template_parameter2} --description "{operation_description}"
apim api operation list -g "{rg}" -n "{service_name}" --api-id "{api_id}"
apim api operation show -g "{rg}" -n "{service_name}" --api-id "{api_id}" --operation-id "{operation_id}"
apim api operation update -g "{rg}" -n "{service_name}" --api-id "{api_id}" --operation-id "{operation_id}" --description "{new_operation_description}" --method "{new_method}" --display-name {new_operation_name}
apim api operation delete -g "{rg}" -n "{service_name}" --api-id "{api_id}" --operation-id "{operation_id}"
apim api operation list -g "{rg}" -n "{service_name}" --api-id "{api_id}"
apim api revision list -g "{rg}" -n "{service_name}" --api-id "{api_id}"
apim api revision create -g "{rg}" -n "{service_name}" --api-id "{api_id}"  --api-revision "{api_revision}" --api-revision-description "{api_revision_description}"
apim api release list -g "{rg}" -n "{service_name}" --api-id "{api_id}"
apim api release create -g "{rg}" -n "{service_name}" --api-id "{api_id}" --release-id "{release_id}" --api-revision "{api_revision}" --notes "{release_notes}"
apim api release show -g "{rg}" -n "{service_name}" --api-id "{api_id}" --release-id "{release_id}"
apim api release update -g "{rg}" -n "{service_name}" --api-id "{api_id}" --release-id "{release_id}" --notes "{new_release_notes}"
apim api release delete -g "{rg}" -n "{service_name}" --api-id "{api_id}" --release-id "{release_id}"
apim api release list -g "{rg}" -n "{service_name}" --api-id "{api_id}"
apim product api list -g {rg} -n {service_name} --product-id {product_id1}
apim product api add -g {rg} -n {service_name} --product-id {product_id1} --api-id {api_id}
apim product api list -g {rg} -n {service_name} --product-id {product_id1}
apim product api check -g {rg} -n {service_name} --product-id {product_id1} --api-id {api_id}
apim product api delete -g {rg} -n {service_name} --product-id {product_id1} --api-id {api_id}
apim product api list -g {rg} -n {service_name} --product-id {product_id1}
apim product delete -g {rg} -n {service_name} --product-id {product_id1} --delete-subscriptions true -y
apim product list -g {rg} -n {service_name}
apim api delete -g {rg} --service-name {service_name} --api-id {api_id} --delete-revisions true -y
apim api list -g {rg} -n {service_name}
apim api delete -g {rg} --service-name {service_name} --api-id {api_id2} --delete-revisions true -y
apim api list -g {rg} -n {service_name}
apim list
apim nv create -g "{rg}" --service-name "{service_name}" --display-name "{display_name}" --value "{value}" --named-value-id "{nv_id}" --secret "{secret}" --tags "{tag}"
apim nv show-secret -g "{rg}" --service-name "{service_name}" --named-value-id "{nv_id}"
apim nv show -g {rg} --service-name {service_name} --named-value-id {nv_id}
apim nv update -g "{rg}" --service-name "{service_name}" --named-value-id "{nv_id}" --value "{updatedtestvalue}"
apim nv show-secret -g "{rg}" --service-name "{service_name}" --named-value-id "{nv_id}"
apim nv list -g {rg} --service-name {service_name}
apim nv delete -g {rg} --service-name {service_name} --named-value-id {nv_id} -y
apim nv list -g {rg} --service-name {service_name}
apim api versionset delete -g "{rg}" -n "{service_name}" --version-set-id "{vs_id}"
apim api versionset list -g "{rg}" -n "{service_name}"
apim delete -g {rg} -n {service_name} -y
apim list
appconfig create -n {config_store_name} -g {rg} -l {rg_loc} --sku {sku} --disable-local-auth {disable_local_auth}
appconfig kv set --key {key} -n {config_store_name} -y
appconfig update -n {config_store_name} -g {rg} --disable-local-auth {disable_local_auth}
appconfig kv set --key {key} -n {config_store_name} -y
appconfig create -n {config_store_name} -g {rg} -l {rg_loc} --sku {sku} --tags {tags} --assign-identity {identity}
appconfig list -g {rg}
appconfig show -n {config_store_name} -g {rg}
appconfig update -n {config_store_name} -g {rg} --tags {updated_tag} --sku {update_sku}
keyvault create -n {keyvault_name} -g {rg} -l {rg_loc} --enable-purge-protection --enable-soft-delete
keyvault key create --vault-name {keyvault_name} -n {encryption_key}
keyvault set-policy -n {keyvault_name} --key-permissions get wrapKey unwrapKey --object-id {identity_id}
appconfig update -n {config_store_name} -g {rg} --encryption-key-name {encryption_key} --encryption-key-vault {keyvault_uri}
appconfig update -n {config_store_name} -g {rg} --tags {updated_tag}
appconfig delete -n {config_store_name} -g {rg} -y
appconfig create -n {config_store_name} -g {rg} -l {rg_loc} --sku {sku} --enable-public-network {enable_public_network}
appconfig create -n {config_store_name} -g {rg} -l {rg_loc} --sku {sku}
appconfig update -n {config_store_name} -g {rg} --enable-public-network
appconfig create -n {config_store_name} -g {rg} -l {rg_loc} --sku {sku}
appconfig credential list -n {config_store_name} -g {rg}
appconfig credential regenerate -n {config_store_name} -g {rg} --id {id}
appconfig create -n {config_store_name} -g {rg} -l {rg_loc} --sku {sku}
identity create -n {identity_name} -g {rg}
appconfig identity assign -n {config_store_name} -g {rg}
appconfig identity assign -n {config_store_name} -g {rg} --identities {identity_id}
appconfig identity remove -n {config_store_name} -g {rg} --identities {identity_id}
appconfig identity show -n {config_store_name} -g {rg}
appconfig create -n {config_store_name} -g {rg} -l {rg_loc} --sku {sku}
appconfig kv set -n {config_store_name} --key {key} --label {label} -y
appconfig kv set -n {config_store_name} --key {key} --value {value} --content-type {content_type} --label {label} -y
appconfig kv set -n {config_store_name} --key {key} --value {value} --content-type {content_type} --label {label} -y
appconfig kv show -n {config_store_name} --key {key} --label {label}
appconfig kv list -n {config_store_name}
appconfig revision list -n {config_store_name} --key {key} --label *
appconfig kv delete -n {config_store_name} --key {key} --label {label} -y
appconfig credential list -n {config_store_name} -g {rg}
appconfig kv set --connection-string {connection_string} --key {key} --value {value} --content-type {content_type} --label {label} -y
appconfig kv restore -n {config_store_name} --key {key} --label {label} --datetime {timestamp} -y
appconfig kv list -n {config_store_name} --key {key} --label {label}
appconfig kv set-keyvault --connection-string {connection_string} --key {key} --secret-identifier {secret_identifier} -y
appconfig kv set-keyvault --connection-string {connection_string} --key {key} --label {label} --secret-identifier {secret_identifier} -y
appconfig kv delete --connection-string {connection_string} --key {key} --label {label} -y
appconfig kv set --connection-string {connection_string} --key {key} -y
appconfig kv list --connection-string {connection_string} --label "{null_label}"
appconfig kv list --connection-string {connection_string} --label "{multi_labels}"
appconfig create -n {config_store_name} -g {rg} -l {rg_loc} --sku {sku}
appconfig kv import -n {config_store_name} -s {import_source} --path "{imported_file_path}" --format {imported_format} --separator {separator} -y
appconfig kv export -n {config_store_name} -d {import_source} --path "{exported_file_path}" --format {imported_format} --separator {separator} -y
appconfig kv set-keyvault -n {config_store_name} --key {key} --secret-identifier {secret_identifier} -y
appconfig kv export -n {config_store_name} -d {import_source} --path "{exported_file_path}" --format {imported_format} --separator {separator} --skip-keyvault -y
appconfig kv import -n {config_store_name} -s {import_source} --path "{imported_file_path}" --format {imported_format} --label {label} -y
appconfig kv export -n {config_store_name} -d {import_source} --path "{exported_file_path}" --format {imported_format} --label {label} -y
appconfig kv export -n {config_store_name} -d {import_source} --path "{exported_file_path}" --format {imported_format} --label {label} --skip-features -y
appconfig kv import -n {config_store_name} -s {import_source} --path "{imported_file_path}" --format {imported_format} --label {label} --skip-features -y
appconfig kv export -n {config_store_name} -d {import_source} --path "{exported_file_path}" --format {imported_format} --label {label} -y
appconfig kv import -n {config_store_name} -s {import_source} --path "{imported_file_path}" --format {imported_format} --label {label} --prefix {prefix} -y
appconfig kv export -n {config_store_name} -d {import_source} --path "{exported_file_path}" --format {imported_format} --label {label} -y
appconfig kv export -n {config_store_name} -d {import_source} --path "{exported_file_path}" --format {imported_format} --label {label} --prefix {prefix} -y
appconfig kv export -n {config_store_name} -d {import_source} --path "{exported_file_path}" --format {imported_format} --label {label} --key {key} -y
appconfig kv import -n {config_store_name} -s {import_source} --path "{imported_file_path}" --format {imported_format} --label {label} --separator {separator} -y
appconfig kv export -n {config_store_name} -d {import_source} --path "{exported_file_path}" --format {imported_format} --label {label} --separator {separator} -y
appconfig kv import -n {config_store_name} -s {import_source} --path "{imported_file_path}" --format {imported_format} --label {label} --separator {separator} -y
appconfig kv export -n {config_store_name} -d {import_source} --path "{exported_file_path}" --format {imported_format} --label {label} --separator {separator} -y
appconfig create -n {config_store_name} -g {rg} -l {rg_loc} --sku {sku}
appconfig kv import -n {config_store_name} -s {import_source} --path "{imported_file_path}" --format {imported_format} --profile {profile} -y
appconfig kv export -n {config_store_name} -d {import_source} --label * --key * --path "{exported_file_path}" --format {imported_format} --profile {profile} -y
appconfig kv import -n {config_store_name} -s {import_source} --path "{imported_file_path}" --format {imported_format} --profile {profile} -y
appconfig kv export -n {config_store_name} -d {import_source} --label * --key * --path "{exported_file_path}" --format {imported_format} --profile {profile} --skip-features -y
appconfig create -n {config_store_name} -g {rg} -l {rg_loc} --sku {sku}
appconfig kv import -n {config_store_name} -s {import_source} --path "{imported_file_path}" --format {imported_format} --label {label} -y
appconfig kv export -n {config_store_name} -d {import_source} --path "{exported_file_path}" --format {imported_format} --label {label} --naming-convention {naming_convention} -y
appconfig kv import -n {config_store_name} -s {import_source} --path "{imported_file_path}" --format {imported_format} --label {label} -y
appconfig kv import -n {config_store_name} -s {import_source} --path "{imported_file_path}" --format {imported_format} --label {label} -y
appconfig kv import -n {config_store_name} -s {import_source} --path "{imported_file_path}" --format {imported_format} --label {label} -y
appconfig kv export -n {config_store_name} -d {import_source} --path "{exported_file_path}" --format {imported_format} --label {label} --naming-convention {naming_convention} -y
appconfig kv import -n {config_store_name} -s {import_source} --path "{imported_file_path}" --format {imported_format} --label {label} -y
appconfig kv export -n {config_store_name} -d {import_source} --path "{exported_file_path}" --format {imported_format} --label {label} -y
appconfig create -n {config_store_name} -g {rg} -l {rg_loc} --sku {sku}
appconfig credential list -n {config_store_name} -g {rg}
appconfig create -n {config_store_name} -g {rg} -l {rg_loc} --sku {sku}
appconfig credential list -n {config_store_name} -g {rg}
appconfig kv set --connection-string {src_connection_string} --key {key} --value {value} --label {label} -y
appconfig kv set --connection-string {src_connection_string} --key {key} --value {value} --label {label} -y
appconfig feature set --connection-string {src_connection_string} --feature {feature} --label {label} -y
appconfig feature set --connection-string {src_connection_string} --feature {feature} --label {label} -y
appconfig kv import --connection-string {dest_connection_string} -s {import_source} --src-connection-string {src_connection_string} --src-label {src_label} --label {label} -y
appconfig kv delete --connection-string {dest_connection_string} --key {key} --label {label} -y
appconfig kv import --connection-string {dest_connection_string} -s {import_source} --src-connection-string {src_connection_string} --src-label {src_label} -y
appconfig kv delete --connection-string {dest_connection_string} --key {key} --label {label} -y
appconfig kv import --connection-string {dest_connection_string} -s {import_source} --src-connection-string {src_connection_string} --src-label {src_label} --preserve-labels -y
appconfig kv delete --connection-string {dest_connection_string} --key {key} --label {label} -y
appconfig kv import --connection-string {dest_connection_string} -s {import_source} --src-connection-string {src_connection_string} --src-label {src_label} --label {label} --preserve-labels -y
appconfig kv export --connection-string {src_connection_string} -d {import_source} --dest-connection-string {dest_connection_string} --label {src_label} --dest-label {label} -y
appconfig kv delete --connection-string {dest_connection_string} --key {key} --label {label} -y
appconfig kv export --connection-string {src_connection_string} -d {import_source} --dest-connection-string {dest_connection_string} --label {src_label} -y
appconfig kv delete --connection-string {dest_connection_string} --key {key} --label {label} -y
appconfig kv export --connection-string {src_connection_string} -d {import_source} --dest-connection-string {dest_connection_string} --label {src_label} --preserve-labels -y
appconfig kv delete --connection-string {dest_connection_string} --key {key} --label {label} -y
appconfig kv export --connection-string {src_connection_string} -d {import_source} --dest-connection-string {dest_connection_string} --label {src_label} --dest-label {label} --preserve-labels -y
appconfig create -n {config_store_name} -g {rg} -l {rg_loc} --sku {sku}
appconfig credential list -n {config_store_name} -g {rg}
appconfig create -n {config_store_name} -g {rg} -l {rg_loc} --sku {sku}
appconfig credential list -n {config_store_name} -g {rg}
appconfig kv set --connection-string {src_connection_string} --key {key} --value {value} --content-type {content_type} -y
appconfig kv set --connection-string {src_connection_string} --key {key} --value {value} --content-type {content_type} -y
appconfig kv set --connection-string {src_connection_string} --key {key} --value {value} --content-type {content_type} -y
appconfig kv set --connection-string {src_connection_string} --key {key} --value {value} --content-type {content_type} -y
appconfig kv set --connection-string {src_connection_string} --key {key} --value {value} --content-type {content_type} -y
appconfig kv set --connection-string {src_connection_string} --key {key} --value {value} --content-type {content_type} -y
appconfig kv set --connection-string {src_connection_string} --key {key} --value {value} --content-type {content_type} -y
appconfig kv set --connection-string {src_connection_string} --key {key} --value {value} --content-type {content_type} -y
appconfig kv set --connection-string {src_connection_string} --key {key} --value {value} --content-type {content_type} -y
appconfig kv set --connection-string {src_connection_string} --key {key} --value {value} --content-type {content_type} -y
appconfig kv set --connection-string {src_connection_string} --key {key} --value {value} --content-type {content_type} -y
appconfig kv set --connection-string {src_connection_string} --key {key} --value {value} --content-type {content_type} -y
appconfig kv set --connection-string {src_connection_string} --key {key} --content-type {content_type} -y
appconfig kv set --connection-string {src_connection_string} --key {key} --value {value} --content-type {content_type} -y
appconfig kv set --connection-string {src_connection_string} --key {key} --value {value} --content-type {content_type} -y
appconfig kv set --connection-string {src_connection_string} --key {key} --value {value} --content-type {content_type} -y
appconfig kv set --connection-string {src_connection_string} --key {key} --value {value} -y
appconfig kv set --connection-string {src_connection_string} --key {key} --content-type {content_type} -y
appconfig feature set --connection-string {src_connection_string} --feature {feature} -y
appconfig kv set-keyvault --connection-string {src_connection_string} --key {key} --secret-identifier {secret_identifier} -y
appconfig kv import --connection-string {dest_connection_string} -s {import_source} --src-connection-string {src_connection_string} --content-type {content_type} -y
appconfig kv export --connection-string {src_connection_string} -d {export_dest} --path "{exported_file_path}" --format {export_format} --separator {separator} -y
appconfig kv export --connection-string {dest_connection_string} -d {export_dest} --path "{exported_file_path}" --format {export_format} --separator {separator} -y
appconfig kv delete --connection-string {dest_connection_string} --key {key} --label {label} -y
appconfig kv export --connection-string {src_connection_string} -d {import_source} --dest-connection-string {dest_connection_string} -y
appconfig kv export --connection-string {src_connection_string} -d {export_dest} --path "{exported_file_path}" --format {export_format} --separator {separator} -y
appconfig kv export --connection-string {dest_connection_string} -d {export_dest} --path "{exported_file_path}" --format {export_format} --separator {separator} -y
appconfig kv delete --connection-string {src_connection_string} --key {key} --label {label} -y
appconfig kv delete --connection-string {dest_connection_string} --key {key} --label {label} -y
appconfig kv import --connection-string {src_connection_string} -s {import_source} --path "{imported_file_path}" --format {imported_format} --separator {separator} --content-type {content_type} -y
appconfig kv export --connection-string {src_connection_string} -d {import_source} --path "{exported_file_path}" --format {imported_format} --separator {separator} -y
appconfig kv import --connection-string {src_connection_string} -s {import_source} --path "{imported_file_path}" --format {imported_format} --separator {separator} --content-type {content_type} -y
appconfig kv export --connection-string {src_connection_string} -d {import_source} --path "{exported_file_path}" --format {imported_format} --separator {separator} -y
appconfig create -n {config_store_name} -g {rg} -l {rg_loc} --sku {sku}
appconfig feature set -n {config_store_name} --feature {feature} --label {label} -y
appconfig feature set -n {config_store_name} --feature {feature} --label {label} --description "{description}" -y
appconfig feature set -n {config_store_name} --feature {feature} --label {label} -y
appconfig credential list -n {config_store_name} -g {rg}
appconfig feature set --connection-string {connection_string} --feature {feature} --label {label} --description "{description}" -y
appconfig feature show -n {config_store_name} --feature {feature} --label {label}
appconfig feature show -n {config_store_name} --feature {feature} --label {label} --fields key label state locked
appconfig feature list -n {config_store_name} --label "{label}"
appconfig feature list -n {config_store_name} --label {label} --fields key name label state locked
appconfig feature list -n {config_store_name}
appconfig feature set -n {config_store_name} --feature {feature} -y
appconfig feature set -n {config_store_name} --feature {feature} -y
appconfig feature set -n {config_store_name} --feature {feature} -y
appconfig feature list -n {config_store_name} --feature {feature} --label {label}
appconfig feature list -n {config_store_name} --feature {feature} --label {label}
appconfig feature list -n {config_store_name} --feature {feature} --label "{label}"
appconfig feature list -n {config_store_name} --feature {feature}
appconfig feature list -n {config_store_name} --feature {feature}
appconfig feature list -n {config_store_name} --feature {feature}
appconfig feature list -n {config_store_name} --feature {feature}
appconfig feature delete --connection-string {connection_string}  --feature {feature} --label {label} -y
appconfig feature lock -n {config_store_name} --feature {feature} -y
appconfig feature unlock -n {config_store_name} --feature {feature} -y
appconfig feature enable -n {config_store_name} --feature {feature} -y
appconfig feature disable -n {config_store_name} --feature {feature} -y
appconfig feature list -n {config_store_name} --feature {feature} --label {label}
appconfig create -n {config_store_name} -g {rg} -l {rg_loc} --sku {sku}
appconfig feature set -n {config_store_name} --feature {feature} --key {key}  --label {label} -y
appconfig feature enable -n {config_store_name} --key {key} --label {label} -y
appconfig feature set -n {config_store_name} --key {key}  --label {label} -y
appconfig feature list -n {config_store_name} --key {key} --label {label}
appconfig feature set -n {config_store_name} --key {key}
appconfig feature delete -n {config_store_name}
appconfig create -n {config_store_name} -g {rg} -l {rg_loc} --sku {sku}
appconfig feature set -n {config_store_name} --feature {feature} --label {label} -y
appconfig feature filter add -n {config_store_name} --feature {feature} --label {label} --filter-name {filter_name} --filter-parameters {filter_parameters} -y
appconfig feature filter add -n {config_store_name} --feature {feature} --label {label} --filter-name {filter_name} --filter-parameters {filter_parameters} -y
appconfig feature filter add -n {config_store_name} --feature {feature} --label {label} --filter-name {filter_name} --filter-parameters {filter_parameters} -y
appconfig feature filter show -n {config_store_name} --feature {feature} --label {label} --filter-name {filter_name}
appconfig feature filter show -n {config_store_name} --feature {feature} --label {label} --filter-name {filter_name} --index 2
appconfig feature filter list -n {config_store_name} --feature {feature} --label {label}
appconfig feature show -n {config_store_name} --feature {feature} --label {label}
appconfig feature enable -n {config_store_name} --feature {feature} --label {label} -y
appconfig feature filter delete -n {config_store_name} --feature {feature} --label {label} --filter-name {filter_name} -y
appconfig feature filter delete -n {config_store_name} --feature {feature} --label {label} --filter-name {filter_name} --index 2 -y
appconfig feature filter delete -n {config_store_name} --feature {feature} --label {label} --all -y
appconfig feature filter delete -n {config_store_name} --feature {feature} --label {label} --all -y
appconfig feature filter list -n {config_store_name} --feature {feature} --label {label}
appconfig feature filter add -n {config_store_name} --feature {feature} --label {label} --filter-name {filter_name} --filter-parameters {filter_parameters} -y
appconfig feature filter add -n {config_store_name} --feature {feature} --label {label} --filter-name {filter_name} --filter-parameters {filter_parameters} -y
appconfig feature filter add -n {config_store_name} --feature {feature} --label {label} --filter-name {filter_name} --filter-parameters {filter_parameters} -y
appconfig feature filter add -n {config_store_name} --feature {feature} --label {label} --filter-name {filter_name} --filter-parameters {filter_parameters} -y
appconfig feature filter add -n {config_store_name} --feature {feature} --label {label} --filter-name {filter_name} --filter-parameters {filter_parameters} -y
appconfig create -n {config_store_name} -g {rg} -l {rg_loc} --sku {sku}
appconfig credential list -n {config_store_name} -g {rg}
appconfig kv set --connection-string {connection_string} --key {key} --value {value} -y
appconfig kv set --connection-string {connection_string} --key "{key}" --value {value} -y
appconfig kv set --connection-string {connection_string} --key {key} --value {value} -y
appconfig kv set-keyvault --connection-string {connection_string} --key {key} --secret-identifier {secret_identifier} -y
appconfig feature set --connection-string {connection_string} --feature {feature} -y
appconfig feature set --connection-string {connection_string} --feature "{feature}" -y
appconfig kv import -n {config_store_name} -s {import_source} --path "{imported_file_path}" --format {imported_format} -y
appconfig kv export -n {config_store_name} -d {import_source} --path "{exported_file_path}" --format {imported_format} -y
functionapp create -g {rg} -n {app_name} --consumption-plan-location {loc} -s {sa}
functionapp config access-restriction add -g {rg} -n {app_name} --rule-name developers --action Allow --ip-address 130.220.0.0/27 --priority 200
functionapp create -g {rg} -n {app_name} --consumption-plan-location {loc} -s {sa}
functionapp config access-restriction add -g {rg} -n {app_name} --rule-name ipv4 --action Allow --ip-address 130.220.0.0 --priority 200
functionapp config access-restriction add -g {rg} -n {app_name} --rule-name ipv6 --action Allow --ip-address 2004::1000 --priority 200
functionapp create -g {rg} -n {app_name} --consumption-plan-location {loc} -s {sa}
functionapp config access-restriction add -g {rg} -n {app_name} --rule-name developers --action Allow --ip-address 130.220.0.0/27 --priority 200 --scm-site
appservice plan create -g {rg} -n {plan_name}
functionapp create -g {rg} -n {app_name} --plan {plan_name} -s {sa}
network vnet create -g {rg} -n {vnet_name} --address-prefixes 10.0.0.0/16 --subnet-name endpoint-subnet --subnet-prefixes 10.0.0.0/24
functionapp config access-restriction add -g {rg} -n {app_name} --rule-name vnet-integration --action Allow --vnet-name {vnet_name} --subnet endpoint-subnet --priority 150
functionapp create -g {rg} -n {app_name} --consumption-plan-location {loc} -s {sa}
functionapp config access-restriction add -g {rg} -n {app_name} --rule-name developers --action Allow --ip-address 130.220.0.0/27 --priority 200
functionapp config access-restriction remove -g {rg} -n {app_name} --rule-name developers
functionapp create -g {rg} -n {app_name} --consumption-plan-location {loc} -s {sa}
functionapp config access-restriction add -g {rg} -n {app_name} --rule-name developers --action Allow --ip-address 130.220.0.0/27 --priority 200 --scm-site
functionapp config access-restriction remove -g {rg} -n {app_name} --rule-name developers --scm-site
functionapp create -g {rg} -n {app_name} --consumption-plan-location {loc} -s {sa}
functionapp config access-restriction set -g {rg} -n {app_name} --use-same-restrictions-for-scm-site
functionapp config access-restriction set -g {rg} -n {app_name} --use-same-restrictions-for-scm-site false
functionapp create -g {rg} -n {app_name} --consumption-plan-location {loc} -s {sa}
functionapp config access-restriction set -g {rg} -n {app_name} --use-same-restrictions-for-scm-site true
functionapp create -g {rg} -n {app_name} --consumption-plan-location {loc} -s {sa}
functionapp config access-restriction show -g {rg} -n {app_name}
acr create --admin-enabled -g clitest.rg000001 -n functionappacrtest000004 --sku Basic
appservice plan create -g clitest.rg000001 -n acrtestplanfunction000003 --sku S1 --is-linux
functionapp create -g clitest.rg000001 -n functionappacrtest000004 -s clitest000002 --plan acrtestplanfunction000003 --functions-version 3 --runtime node
acr credential show -n functionappacrtest000004 -g clitest.rg000001
functionapp config container set -g clitest.rg000001 -n functionappacrtest000004 --docker-custom-image-name functionappacrtest000004.azurecr.io/image-name:latest --docker-registry-server-url https://functionappacrtest000004.azurecr.io
functionapp config container show -g clitest.rg000001 -n functionappacrtest000004 
functionapp config appsettings list -g clitest.rg000001 -n functionappacrtest000004
functionapp config container delete -g clitest.rg000001 -n functionappacrtest000004 
functionapp config appsettings list -g clitest.rg000001 -n functionappacrtest000004
functionapp delete -g clitest.rg000001 -n functionappacrtest000004
acr create --admin-enabled -g clitest.rg000001 -n functionappacrtest000004 --sku Basic
acr credential show -n functionappacrtest000004 -g clitest.rg000001
functionapp plan create -g clitest.rg000001 -n acrtestplanfunction000003 --sku S1 --is-linux
functionapp create -g clitest.rg000001 -n functionappacrtest000004 -s clitestacr000002 --plan acrtestplanfunction000003 --functions-version 3 --runtime node --deployment-container-image-name functionappacrtest000004.azurecr.io/image-name:latest --docker-registry-server-user functionappacrtest000004 --docker-registry-server-password gKw9/36p+CaHm9hAj6C3AIK06fm=WIKt
functionapp config container show -g clitest.rg000001 -n functionappacrtest000004 
functionapp config appsettings list -g clitest.rg000001 -n functionappacrtest000004
functionapp config show -g clitest.rg000001 -n functionappacrtest000004
functionapp config container delete -g clitest.rg000001 -n functionappacrtest000004 
functionapp config appsettings list -g clitest.rg000001 -n functionappacrtest000004
acr create --admin-enabled -g clitest.rg000001 -n functionappacrtest000004 --sku Basic
appservice plan create -g clitest.rg000001 -n acrtestplanfunction000003 --sku S1 --is-linux
functionapp create -g clitest.rg000001 -n functionappacrtest000004 -s clitestacrdeploy000002 --plan acrtestplanfunction000003 --functions-version 3 --runtime node
acr credential show -g clitest.rg000001 -n functionappacrtest000004
functionapp config container set -g clitest.rg000001 -n functionappacrtest000004 --docker-custom-image-name functionappacrtest000004.azurecr.io/image-name:latest --docker-registry-server-url https://functionappacrtest000004.azurecr.io
functionapp deployment container config -g clitest.rg000001 -n functionappacrtest000004 --enable-cd true
functionapp deployment container show-cd-url -g clitest.rg000001 -n functionappacrtest000004
functionapp delete -g clitest.rg000001 -n functionappacrtest000004
functionapp create -g clitest.rg000001 -n functionappwithreservedinstance000003 -c francecentral -s clitest000002 --os-type Windows
functionapp config set -g clitest.rg000001 -n functionappwithreservedinstance000003 --prewarmed-instance-count 4
functionapp delete -g clitest.rg000001 -n functionappwithreservedinstance000003
appservice plan create -g clitest.rg000001 -n func-e2e-plan000005
appservice plan list -g clitest.rg000001
storage account create --name functionappplanstorage -g clitest.rg000001 -l francecentral --sku Standard_LRS
storage account create --name functionappplanstorage2 -g clitest.rg000002 -l francecentral --sku Standard_LRS
functionapp create -g clitest.rg000001 -n func-e2e000003 -p func-e2e-plan000005 -s functionappplanstorage
functionapp create -g clitest.rg000002 -n func-e2e000004 -p /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Web/serverfarms/func-e2e-plan000005 -s /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000002/providers/Microsoft.Storage/storageAccounts/functionappplanstorage2
functionapp delete -g clitest.rg000001 -n func-e2e000003
functionapp plan create -g clitest.rg000001 -n funcapplinplan000003 --sku S1 --is-linux
functionapp create -g clitest.rg000001 -n functionapp-linux000004 --plan funcapplinplan000003 -s clitest000002 --runtime dotnet-isolated --functions-version 3
functionapp list -g clitest.rg000001
functionapp config appsettings list -g clitest.rg000001 -n functionapp-linux000004
functionapp config show -g clitest.rg000001 -n functionapp-linux000004
functionapp plan create -g clitest.rg000001 -n funcapplinplan000003 --sku S1 --is-linux
functionapp create -g clitest.rg000001 -n functionapp-linux000004 --plan funcapplinplan000003 -s clitest000002 --runtime java --functions-version 3
functionapp list -g clitest.rg000001
functionapp config show -g clitest.rg000001 -n functionapp-linux000004
functionapp plan create -g clitest.rg000001 -n funcapplinplan000003 --sku S1 --is-linux
functionapp create -g clitest.rg000001 -n functionapp-linux000004 --plan funcapplinplan000003 -s clitest000002 --runtime java --runtime-version 11 --functions-version 3
functionapp list -g clitest.rg000001
functionapp config show -g clitest.rg000001 -n functionapp-linux000004
functionapp plan create -g clitest.rg000001 -n funcapplinplan000003 --sku S1 --is-linux
functionapp create -g clitest.rg000001 -n functionapp-linux000004 --plan funcapplinplan000003 -s clitest000002 --runtime powershell --functions-version 4
functionapp list -g clitest.rg000001
functionapp config show -g clitest.rg000001 -n functionapp-linux000004
functionapp plan create -g clitest.rg000001 -n funcapplinplan000003 --sku S1 --is-linux
functionapp create -g clitest.rg000001 -n functionapp-linux000004 --plan funcapplinplan000003 -s clitest000002 --runtime powershell --runtime-version 7.0 --functions-version 4
functionapp list -g clitest.rg000001
functionapp config show -g clitest.rg000001 -n functionapp-linux000004
functionapp plan create -g clitest.rg000001 -n somerandomplan000004 --sku EP1
functionapp plan create -g clitest.rg000001 -n secondplan000005 --sku EP1
functionapp plan create -g clitest.rg000001 -n ab1planname000006 --sku S1
functionapp create -g clitest.rg000001 -n functionappelastic000003 --plan secondplan000005 -s clitest000002
functionapp update -g clitest.rg000001 -n functionappelastic000003 --plan somerandomplan000004
functionapp update -g clitest.rg000001 -n functionappelastic000003 --plan ab1planname000006
functionapp create -g azurecli-functionapp-c-e2e000001 -n functionappconsumption000003 -c francecentral -s clitest000002
functionapp list -g azurecli-functionapp-c-e2e000001
functionapp show -g azurecli-functionapp-c-e2e000001 -n functionappconsumption000003
functionapp update -g azurecli-functionapp-c-e2e000001 -n functionappconsumption000003 --set clientCertMode=Optional
functionapp delete -g azurecli-functionapp-c-e2e000001 -n functionappconsumption000003
functionapp create -g azurecli-functionapp-c-e2e-ragrs000001 -n functionappconsumption000003 -c francecentral -s clitest000002
functionapp show -g azurecli-functionapp-c-e2e-ragrs000001 -n functionappconsumption000003
functionapp create -g azurecli-functionapp-linux000001 -n functionapplinuxconsumption000003 -c ukwest -s clitest000002 --os-type Linux --functions-version 3 --runtime node
functionapp config appsettings list -g azurecli-functionapp-linux000001 -n functionapplinuxconsumption000003
functionapp create -g azurecli-functionapp-linux000001 -n functionapplinuxconsumption000003 -c ukwest -s clitest000002 --os-type Linux --runtime dotnet-isolated --functions-version 3
functionapp config appsettings list -g azurecli-functionapp-linux000001 -n functionapplinuxconsumption000003
functionapp config show -g azurecli-functionapp-linux000001 -n functionapplinuxconsumption000003
functionapp create -g azurecli-functionapp-linux000001 -n functionapplinuxconsumption000003 -c ukwest -s clitest000002 --os-type Linux --runtime java --functions-version 3
functionapp config appsettings list -g azurecli-functionapp-linux000001 -n functionapplinuxconsumption000003
functionapp create -g azurecli-functionapp-linux000001 -n functionapplinuxconsumption000003 -c ukwest -s clitest000002 --os-type Linux --runtime powershell --functions-version 4
functionapp config appsettings list -g azurecli-functionapp-linux000001 -n functionapplinuxconsumption000003
functionapp config show -g azurecli-functionapp-linux000001 -n functionapplinuxconsumption000003
functionapp create -g clitest.rg000001 -n functionappwindowsruntime000003 -c francecentral -s clitest000002 --os-type Windows --functions-version 3 --runtime node
functionapp config appsettings list -g clitest.rg000001 -n functionappwindowsruntime000003
functionapp create -g clitest.rg000001 -n functionappwindowsruntime000003 -c francecentral -s clitest000002 --functions-version 3 --os-type Windows --runtime custom
functionapp config appsettings list -g clitest.rg000001 -n functionappwindowsruntime000003
functionapp create -g clitest.rg000001 -n functionappwindowsruntime000003 -c francecentral -s clitest000002 --os-type Windows --runtime dotnet-isolated --functions-version 3
functionapp config appsettings list -g clitest.rg000001 -n functionappwindowsruntime000003
functionapp config show -g clitest.rg000001 -n functionappwindowsruntime000003
functionapp create -g clitest.rg000001 -n functionappwindowsruntime000003 -c francecentral -s clitest000002 --functions-version 3 --os-type Windows --runtime node
functionapp config appsettings list -g clitest.rg000001 -n functionappwindowsruntime000003
functionapp create -g clitest.rg000001 -n functionappwindowsruntime000003 -c francecentral -s clitest000002 --os-type Windows --runtime java
functionapp config appsettings list -g clitest.rg000001 -n functionappwindowsruntime000003
functionapp config show -g clitest.rg000001 -n functionappwindowsruntime000003
functionapp create -g clitest.rg000001 -n functionappwindowsruntime000003 -c francecentral -s clitest000002 --os-type Windows --runtime powershell
functionapp config appsettings list -g clitest.rg000001 -n functionappwindowsruntime000003
functionapp config show -g clitest.rg000001 -n functionappwindowsruntime000003
functionapp create -g clitest.rg000001 -n functionappwindowsruntime000003 -c francecentral -s clitest000002 --os-type Windows --functions-version 3 --runtime node --runtime-version 14
functionapp config appsettings list -g clitest.rg000001 -n functionappwindowsruntime000003
functionapp delete -g clitest.rg000001 -n functionappwindowsruntime000003
functionapp create -g clitest.rg000001 -n functionappwindowsruntime000003 -c francecentral -s clitest000002 --os-type Windows --runtime node --runtime-version 8.2
functionapp create -g clitest.rg000001 -n functionappwindowswithoutruntime000003 -c francecentral -s clitest000002 --os-type Windows
functionapp delete -g clitest.rg000001 -n functionappwindowswithoutruntime000003
functionapp create -g clitest.rg000001 -n functionappwithappinsights000003 -c francecentral -s clitest000002 --os-type Windows --app-insights-key 00000000-0000-0000-0000-123456789123
functionapp config appsettings list -g clitest.rg000001 -n functionappwithappinsights000003
functionapp delete -g clitest.rg000001 -n functionappwithappinsights000003
functionapp plan create -g clitest.rg000001 -n plan000002 -l eastus2 -z --sku P1V2
appservice plan show -g clitest.rg000001 -n plan000002
functionapp plan create -g clitest.rg000001 -n plan000003 -l eastus2 -z --sku FREE
functionapp plan create -g clitest.rg000001 -n plan000003 -l japanwest -z --sku P1V3
functionapp plan create -g clitest.rg000001 -n plan000004 -l eastus2 --sku FREE
appservice plan show -g clitest.rg000001 -n plan000004
functionapp create -g clitest.rg000001 -n functionappwithappinsights000003 -c francecentral -s clitest000002 --os-type Windows
functionapp config appsettings list -g clitest.rg000001 -n functionappwithappinsights000003
functionapp create -g clitest.rg000001 -n functionappwithappinsights000003 -c francecentral -s clitest000002 --os-type Windows --disable-app-insights
functionapp config appsettings list -g clitest.rg000001 -n functionappwithappinsights000003
appservice plan create -g clitest.rg000001 -n funcapplinplan000003 --sku S1 --is-linux
functionapp create -g clitest.rg000001 -n functionapp-linux000004 --plan funcapplinplan000003 -s clitest000002 --functions-version 3 --runtime node
functionapp list -g clitest.rg000001
functionapp config show -g clitest.rg000001 -n functionapp-linux000004
functionapp delete -g clitest.rg000001 -n functionapp-linux000004
functionapp create -g clitest.rg000001 -n functionapp-linux000003 -c ukwest -s clitest000002 --os-type linux --runtime python --functions-version 3 --runtime-version 3.9
functionapp config show -g clitest.rg000001 -n functionapp-linux000003
appservice plan create -g clitest.rg000001 -n funcapplinplan000003 --sku S1 --is-linux
functionapp create -g clitest.rg000001 -n functionapp-linux000004 --plan funcapplinplan000003 -s clitest000002 --functions-version 3 --runtime custom
functionapp config appsettings list -g clitest.rg000001 -n functionapp-linux000004
functionapp create -g clitest.rg000001 -n functionapp-linux000003 -c ukwest -s clitest000002 --functions-version 3 --runtime dotnet --os-type linux
functionapp config show -g clitest.rg000001 -n functionapp-linux000003
functionapp config appsettings list -g clitest.rg000001 -n functionapp-linux000003
appservice plan create -g clitest.rg000001 -n funcapplinplan000003 --sku S1 --is-linux
functionapp create -g clitest.rg000001 -n functionapp-linux000004 --plan funcapplinplan000003 -s clitest000002 --functions-version 3 --runtime node
functionapp config show -g clitest.rg000001 -n functionapp-linux000004
functionapp config appsettings list -g clitest.rg000001 -n functionapp-linux000004
functionapp create -g clitest.rg000001 -n functionapp-linux000003 -c ukwest -s clitest000002 --functions-version 3 --runtime node --os-type linux
functionapp config show -g clitest.rg000001 -n functionapp-linux000003
functionapp config appsettings list -g clitest.rg000001 -n functionapp-linux000003
functionapp plan create -g clitest.rg000001 -n funcapplinplan000003 --sku S1 --is-linux
functionapp create -g clitest.rg000001 -n functionapp-linux000004 --plan funcapplinplan000003 -s clitest000002 --functions-version 3 --runtime node --runtime-version 14
functionapp list -g clitest.rg000001
functionapp config show -g clitest.rg000001 -n functionapp-linux000004
functionapp create -g clitest.rg000001 -n functionapp-linux000003 -c ukwest -s clitest000002 --os-type linux --runtime python --runtime-version 3.7
functionapp config show -g clitest.rg000001 -n functionapp-linux000003
functionapp plan create -g clitest.rg000001 -n funcapplinplan000003 --sku S1 --is-linux
functionapp create -g clitest.rg000001 -n functionapp-linux000004 --plan funcapplinplan000003 -s clitest000002 --runtime python --runtime-version 4.8
functionapp plan create -g clitest.rg000001 -n funcappplan000002 --sku S1
functionapp plan create -g clitest.rg000001 -n funcappplan000002 --sku EP1 --min-instances 4 --max-burst 12
functionapp plan update -g clitest.rg000001 -n funcappplan000002 --min-instances 5 --max-burst 11
functionapp plan show -g clitest.rg000001 -n funcappplan000002 
functionapp delete -g clitest.rg000001 -n funcappplan000002
functionapp plan create -g clitest.rg000001 -n funcappplan000002 --sku S1 --is-linux
functionapp plan create -g clitest.rg000001 -n funcappplan000003 --sku S1
functionapp create -g clitest.rg000001 -n functionapp-slot000004 --plan funcappplan000003 -s clitest000002 --functions-version 3 --runtime node
functionapp deployment slot create -g clitest.rg000001 -n functionapp-slot000004 --slot slotname000005
functionapp config appsettings set -g clitest.rg000001 -n functionapp-slot000004 --slot slotname000005 --slot-settings FOO=BAR
functionapp config appsettings list -g clitest.rg000001 -n functionapp-slot000004 --slot slotname000005
functionapp delete -g clitest.rg000001 -n functionapp-slot000004
functionapp plan create -g clitest.rg000001 -n funcappplan000003 --sku S1
functionapp create -g clitest.rg000001 -n functionapp-slot000004 --plan funcappplan000003 -s clitest000002 --functions-version 3 --runtime node
functionapp deployment slot create -g clitest.rg000001 -n functionapp-slot000004 --slot slotname000005
functionapp config appsettings set -g clitest.rg000001 -n functionapp-slot000004 --slot slotname000005 --settings FOO=BAR
functionapp deployment slot swap -g clitest.rg000001 -n functionapp-slot000004 --slot slotname000005 --action swap
functionapp config appsettings list -g clitest.rg000001 -n functionapp-slot000004
functionapp delete -g clitest.rg000001 -n functionapp-slot000004
functionapp create -g clitest.rg000001 -n functionappkeys000003 -c francecentral -s clitest000002
functionapp keys set -g clitest.rg000001 -n functionappkeys000003 --key-name keyname1 --key-value keyvalue1 --key-type functionKeys
functionapp keys delete -g clitest.rg000001 -n functionappkeys000003 --key-name keyname1 --key-type functionKeys
functionapp keys list -g clitest.rg000001 -n functionappkeys000003
functionapp create -g clitest.rg000001 -n functionappkeys000003 -c francecentral -s clitest000002
functionapp keys set -g clitest.rg000001 -n functionappkeys000003 --key-name keyname1 --key-value keyvalue1 --key-type functionKeys
functionapp keys list -g clitest.rg000001 -n functionappkeys000003
functionapp create -g clitest.rg000001 -n functionappkeys000003 -c francecentral -s clitest000002 --functions-version 3
functionapp keys set -g clitest.rg000001 -n functionappkeys000003 --key-name keyname1 --key-value keyvalue1 --key-type functionKeys
functionapp keys set -g clitest.rg000001 -n functionappkeys000003 --key-name keyname1 --key-value keyvalue1_changed --key-type functionKeys
functionapp create -g clitest.rg000001 -n functionappkeys000003 -c francecentral -s clitest000002
functionapp deployment slot create -g clitest.rg000001 -n functionappkeys000003 --slot slotname000004
functionapp keys set -g clitest.rg000001 -n functionappkeys000003 -s slotname000004 --key-name keyname1 --key-value keyvalue1 --key-type functionKeys
functionapp keys set -g clitest.rg000001 -n functionappkeys000003 -s slotname000004 --key-name keyname1 --key-value keyvalue1_changed --key-type functionKeys
local-context on
functionapp plan create -g {rg} -n {plan_name} --sku B2
functionapp plan show
functionapp plan delete
functionapp create -n {functionapp_name} --storage-account {storage_account}
functionapp show
functionapp delete
functionapp delete -n {functionapp_name}
functionapp plan delete -n {plan_name} -y
local-context off
local-context delete --all --purge -y
functionapp plan create -g clitest.rg000001 -n func-msi-plan000003 --sku S1
functionapp create -g clitest.rg000001 -n func-msi000004 --plan func-msi-plan000003 -s clitest000002
functionapp identity assign -g clitest.rg000001 -n func-msi000004 --role Reader --scope /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/clitest.rg000001
functionapp identity show -g clitest.rg000001 -n func-msi000004
role assignment list -g clitest.rg000001 --assignee 8cbfcf60-8676-45ca-87cf-8e4dc904c68b
functionapp identity show -g clitest.rg000001 -n func-msi000004
functionapp identity remove -g clitest.rg000001 -n func-msi000004
functionapp identity show -g clitest.rg000001 -n func-msi000004
identity create -g clitest.rg000001 -n id1000005
functionapp plan create -g clitest.rg000001 -n func-msi-plan000003 --sku S1
functionapp create -g clitest.rg000001 -n func-msi000004 --plan func-msi-plan000003 -s clitest000002
functionapp identity assign -g clitest.rg000001 -n func-msi000004
functionapp identity assign -g clitest.rg000001 -n func-msi000004 --identities /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/clitest.rg000001/providers/Microsoft.ManagedIdentity/userAssignedIdentities/id1000005
functionapp identity show -g clitest.rg000001 -n func-msi000004
functionapp identity remove -g clitest.rg000001 -n func-msi000004 --identities /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/clitest.rg000001/providers/Microsoft.ManagedIdentity/userAssignedIdentities/id1000005
functionapp identity show -g clitest.rg000001 -n func-msi000004
identity create -g clitest.rg000001 -n id1000005
identity create -g clitest.rg000001 -n id1000006
functionapp plan create -g clitest.rg000001 -n func-msi-plan000003 --sku S1
functionapp create -g clitest.rg000001 -n func-msi000004 --plan func-msi-plan000003 -s clitest000002
functionapp identity assign -g clitest.rg000001 -n func-msi000004 --identities [system] /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/clitest.rg000001/providers/Microsoft.ManagedIdentity/userAssignedIdentities/id1000005 /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/clitest.rg000001/providers/Microsoft.ManagedIdentity/userAssignedIdentities/id1000006
functionapp identity remove -g clitest.rg000001 -n func-msi000004 --identities /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/clitest.rg000001/providers/Microsoft.ManagedIdentity/userAssignedIdentities/id1000006
functionapp identity show -g clitest.rg000001 -n func-msi000004
functionapp identity remove -g clitest.rg000001 -n func-msi000004
functionapp identity show -g clitest.rg000001 -n func-msi000004
functionapp identity remove -g clitest.rg000001 -n func-msi000004 --identities [system] /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/clitest.rg000001/providers/Microsoft.ManagedIdentity/userAssignedIdentities/id1000005
functionapp identity show -g clitest.rg000001 -n func-msi000004
network vnet create -g clitest.rg000001 -n vnet000006 --address-prefix 10.0.0.0/16 --subnet-name subnet000005 --subnet-prefix 10.0.0.0/24
appservice plan create -g clitest.rg000001 -n vnetplan000004 --sku P1V2
functionapp create -g clitest.rg000001 -n vnetfunctionapp000003 --plan vnetplan000004 --vnet vnet000006 --subnet subnet000005 -s clitest000002
functionapp vnet-integration list -g clitest.rg000001 -n vnetfunctionapp000003
functionapp vnet-integration remove -g clitest.rg000001 -n vnetfunctionapp000003
functionapp vnet-integration list -g clitest.rg000001 -n vnetfunctionapp000003
network vnet create -g clitest.rg000002 -n vnet000007 --address-prefix 10.0.0.0/16 --subnet-name subnet000006 --subnet-prefix 10.0.0.0/24
appservice plan create -g clitest.rg000001 -n vnetplan000005 --sku P1V2
functionapp create -g clitest.rg000001 -n vnetfunctionapp000004 --plan vnetplan000005 --subnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000002/providers/Microsoft.Network/virtualNetworks/vnet000007/subnets/subnet000006 -s clitest000003
functionapp vnet-integration list -g clitest.rg000001 -n vnetfunctionapp000004
functionapp vnet-integration remove -g clitest.rg000001 -n vnetfunctionapp000004
functionapp vnet-integration list -g clitest.rg000001 -n vnetfunctionapp000004
network vnet create -g clitest.rg000002 -n vnet000007 --address-prefix 10.0.0.0/16 --subnet-name subnet000006 --subnet-prefix 10.0.0.0/24
appservice plan create -g clitest.rg000001 -n vnetplan000005 --sku P1V2
functionapp create -g clitest.rg000001 -n vnetfunctionapp000004 --plan vnetplan000005 --vnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000002/providers/Microsoft.Network/virtualNetworks/vnet000007 --subnet subnet000006 -s clitest000003
functionapp vnet-integration list -g clitest.rg000001 -n vnetfunctionapp000004
functionapp vnet-integration remove -g clitest.rg000001 -n vnetfunctionapp000004
functionapp vnet-integration list -g clitest.rg000001 -n vnetfunctionapp000004
network vnet create -g clitest.rg000001 -n vnet000006 --address-prefix 10.0.0.0/16 --subnet-name subnet000005 --subnet-prefix 10.0.0.0/24
appservice plan create -g clitest.rg000001 -n vnetplan000004 --sku P1V2
functionapp create -g clitest.rg000001 -n vnetfunctionapp000003 --plan vnetplan000004 --vnet vnet000006 -s subnet000005
appservice plan create -g clitest.rg000001 -n vnetplan000004 --sku P1V2
functionapp create -g clitest.rg000001 -n vnetfunctionapp000003 --plan vnetplan000004 --vnet vnet000006 --subnet subnet000005 -s clitest000002
network vnet create -g clitest.rg000002 -n vnet000007 --address-prefix 10.0.0.0/16 --subnet-name subnet000006 --subnet-prefix 10.0.0.0/24
appservice plan create -g clitest.rg000001 -n vnetplan000005 --sku P1V2
functionapp create -g clitest.rg000001 -n vnetfunctionapp000004 --plan vnetplan000005 --vnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000002/providers/Microsoft.Network/virtualNetworks/vnet000007 --subnet subnet000006 -s clitest000003
network vnet create -g clitest.rg000002 -n vnet000007 --address-prefix 10.0.0.0/16 --subnet-name subnet000006 --subnet-prefix 10.0.0.0/24
appservice plan create -g clitest.rg000001 -n vnetplan000005 --sku P1V2
functionapp create -g clitest.rg000001 -n vnetfunctionapp000004 --plan vnetplan000005 --vnet vnet000007 --subnet subnet000006 -s clitest000003
network vnet create -g clitest.rg000001 -n vnet000006 --address-prefix 10.0.0.0/16 --subnet-name subnet000005 --subnet-prefix 10.0.0.0/24
appservice plan create -g clitest.rg000001 -n vnetplan000004 --sku FREE
functionapp create -g clitest.rg000001 -n vnetfunctionapp000003 --plan vnetplan000004 --vnet vnet000006 --subnet subnet000005 -s clitest000002
network vnet create -g clitest.rg000001 -n swiftname000006 --address-prefix 10.0.0.0/16 --subnet-name swiftsubnet000005 --subnet-prefix 10.0.0.0/24
appservice plan create -g clitest.rg000001 -n swiftplan000004 --sku P1V2
functionapp create -g clitest.rg000001 -n swiftfunctionapp000003 --plan swiftplan000004 -s clitest000002
functionapp vnet-integration add -g clitest.rg000001 -n swiftfunctionapp000003 --vnet swiftname000006 --subnet swiftsubnet000005
functionapp vnet-integration list -g clitest.rg000001 -n swiftfunctionapp000003
functionapp deployment slot create -g clitest.rg000001 -n swiftfunctionapp000003 --slot swiftfunctionapp000003-stage
functionapp vnet-integration add -g clitest.rg000001 -n swiftfunctionapp000003 --vnet swiftname000006 --subnet swiftsubnet000005 --slot swiftfunctionapp000003-stage
functionapp vnet-integration list -g clitest.rg000001 -n swiftfunctionapp000003 --slot swiftfunctionapp000003-stage
functionapp vnet-integration remove -g clitest.rg000001 -n swiftfunctionapp000003
functionapp vnet-integration list -g clitest.rg000001 -n swiftfunctionapp000003
functionapp vnet-integration remove -g clitest.rg000001 -n swiftfunctionapp000003 --slot swiftfunctionapp000003-stage
functionapp vnet-integration list -g clitest.rg000001 -n swiftfunctionapp000003 --slot swiftfunctionapp000003-stage
appservice plan create -g clitest.rg000001 -n logic-e2e-plan000003
appservice plan list -g clitest.rg000001
storage account create --name logicpplanstorage1 -g clitest.rg000001 -l westus --sku Standard_LRS
logicapp create -g clitest.rg000001 -n logic-e2e000002 -p logic-e2e-plan000003 -s logicpplanstorage1
logicapp show -g clitest.rg000001 -n logic-e2e000002
logicapp list -g clitest.rg000001
logicapp restart -g clitest.rg000001 -n logic-e2e000002
logicapp show -g clitest.rg000001 -n logic-e2e000002
logicapp stop -g clitest.rg000001 -n logic-e2e000002
logicapp show -g clitest.rg000001 -n logic-e2e000002
logicapp stop -g clitest.rg000001 -n logic-e2e000002
logicapp show -g clitest.rg000001 -n logic-e2e000002
logicapp restart -g clitest.rg000001 -n logic-e2e000002
logicapp show -g clitest.rg000001 -n logic-e2e000002
logicapp start -g clitest.rg000001 -n logic-e2e000002
logicapp show -g clitest.rg000001 -n logic-e2e000002
logicapp start -g clitest.rg000001 -n logic-e2e000002
logicapp show -g clitest.rg000001 -n logic-e2e000002
logicapp delete -g clitest.rg000001 -n logic-e2e000002 -y
logicapp list -g clitest.rg000001
logicapp create -g clitest.rg000001 -n logicappwindowsruntime000003 -c francecentral -s clitest000002 --os-type Windows
logicapp delete -g clitest.rg000001 -n logicappwindowsruntime000003 -y
appservice plan create -g clitest.rg000001 -n funcapplinplan000003 --sku S1 --is-linux
logicapp create -g clitest.rg000001 -n logicapp-linux000004 --plan funcapplinplan000003 -s clitest000002
logicapp list -g clitest.rg000001
logicapp delete -g clitest.rg000001 -n logicapp-linux000004 -y
appservice plan create -g {rg} -n {plan_name}
webapp create -g {rg} -n {app_name} --plan {plan_name}
webapp config access-restriction add -g {rg} -n {app_name} --rule-name developers --action Allow --ip-address 130.220.0.0/27 --priority 200
appservice plan create -g {rg} -n {plan_name} --is-linux
webapp create -g {rg} -n {app_name} --plan {plan_name} --runtime "DOTNETCORE|3.1"
webapp config access-restriction add -g {rg} -n {app_name} --rule-name afd --action Allow --service-tag AzureFrontDoor.Backend --priority 200 --http-header x-azure-fdid=12345678-abcd-1234-abcd-12345678910a
webapp config access-restriction remove -g {rg} -n {app_name} --service-tag AzureFrontDoor.Backend
webapp config access-restriction add -g {rg} -n {app_name} --rule-name afd-extended --action Allow --service-tag AzureFrontDoor.Backend --priority 200 --http-header x-azure-fdid=12345678-abcd-1234-abcd-12345678910a x-azure-FDID=next-id x-forwarded-host=contoso.com
appservice plan create -g {rg} -n {plan_name}
webapp create -g {rg} -n {app_name} --plan {plan_name}
webapp config access-restriction add -g {rg} -n {app_name} --rule-name ipv4 --action Allow --ip-address 130.220.0.0 --priority 200
webapp config access-restriction add -g {rg} -n {app_name} --rule-name ipv6 --action Allow --ip-address 2004::1000 --priority 200
webapp config access-restriction add -g {rg} -n {app_name} --rule-name multi-source --action Allow --ip-address "2004::1000/120,192.168.0.0/24" --priority 200
appservice plan create -g {rg} -n {plan_name}
webapp create -g {rg} -n {app_name} --plan {plan_name}
webapp config access-restriction add -g {rg} -n {app_name} --rule-name developers --action Allow --ip-address 130.220.0.0/27 --priority 200 --scm-site
appservice plan create -g {rg} -n {plan_name}
webapp create -g {rg} -n {app_name} --plan {plan_name}
network vnet create -g {rg} -n {vnet_name} --address-prefixes 10.0.0.0/16 --subnet-name endpoint-subnet --subnet-prefixes 10.0.0.0/24
webapp config access-restriction add -g {rg} -n {app_name} --rule-name vnet-integration --action Allow --vnet-name {vnet_name} --subnet endpoint-subnet --priority 150
appservice plan create -g {rg} -n {plan_name}
webapp create -g {rg} -n {app_name} --plan {plan_name}
webapp config access-restriction add -g {rg} -n {app_name} --rule-name afd --action Allow --service-tag AzureFrontDoor.Backend --priority 200
webapp config access-restriction add -g {rg} -n {app_name} --rule-name europe --action Allow --service-tag "AzureCloud.WestEurope,AzureCloud.NorthEurope" --priority 300
appservice plan create -g {rg} -n {plan_name}
webapp create -g {rg} -n {app_name} --plan {plan_name}
network vnet create -g {rg} -n {vnet_name} --address-prefixes 10.0.0.0/16 --subnet-name endpoint-subnet --subnet-prefixes 10.0.0.0/24
webapp config access-restriction add -g {rg} -n {app_name} --rule-name developers --action Allow --ip-address {ip_address} --priority 100
webapp config access-restriction add -g {rg} -n {app_name} --rule-name vnet-integration --action Allow --vnet-name {vnet_name} --subnet endpoint-subnet --priority 150
webapp config access-restriction add -g {rg} -n {app_name} --rule-name afd --action Allow --service-tag {service_tag} --priority 200 --http-header x-azure-fdid=12345678-abcd-1234-abcd-12345678910a
webapp config access-restriction remove -g {rg} -n {app_name} --vnet-name {vnet_name} --subnet endpoint-subnet
webapp config access-restriction remove -g {rg} -n {app_name} --ip-address {ip_address}
webapp config access-restriction remove -g {rg} -n {app_name} --service-tag {service_tag}
appservice plan create -g {rg} -n {plan_name}
webapp create -g {rg} -n {app_name} --plan {plan_name}
webapp config access-restriction add -g {rg} -n {app_name} --rule-name developers --action Allow --ip-address 130.220.0.0/27 --priority 200
webapp config access-restriction remove -g {rg} -n {app_name} --rule-name developers
appservice plan create -g {rg} -n {plan_name}
webapp create -g {rg} -n {app_name} --plan {plan_name}
webapp config access-restriction add -g {rg} -n {app_name} --rule-name developers --action Allow --ip-address 130.220.0.0/27 --priority 200 --scm-site
webapp config access-restriction remove -g {rg} -n {app_name} --rule-name developers --scm-site
appservice plan create -g {rg} -n {plan_name}
webapp create -g {rg} -n {app_name} --plan {plan_name}
webapp config access-restriction set -g {rg} -n {app_name} --use-same-restrictions-for-scm-site
webapp config access-restriction set -g {rg} -n {app_name} --use-same-restrictions-for-scm-site false
appservice plan create -g {rg} -n {plan_name}
webapp create -g {rg} -n {app_name} --plan {plan_name}
webapp config access-restriction set -g {rg} -n {app_name} --use-same-restrictions-for-scm-site true
appservice plan create -g {rg} -n {plan_name}
webapp create -g {rg} -n {app_name} --plan {plan_name}
webapp config access-restriction show -g {rg} -n {app_name}
appservice plan create -g {rg} -n {plan_name} --sku S1
webapp create -g {rg} -n {app_name} --plan {plan_name}
webapp deployment slot create -g {rg} -n {app_name} --slot {slot_name}
webapp config access-restriction show -g {rg} -n {app_name} --slot {slot_name}
webapp config access-restriction add -g {rg} -n {app_name} --rule-name developers --action Allow --ip-address 130.220.0.0/27 --priority 200 --slot {slot_name}
appservice plan create -g clitest.rg000001 -n webapp-e2e-plan000003
appservice plan list -g clitest.rg000001
appservice plan create -g clitest.rg000001 -n webapp-e2e-plan000003 --per-site-scaling
appservice plan list -g clitest.rg000001
appservice plan list -g clitest.rg000001
appservice plan show -g clitest.rg000001 -n webapp-e2e-plan000003
webapp create -g clitest.rg000001 -n webapp-e2e000002 --plan webapp-e2e-plan000003
webapp create -g clitest.rg000001 -n webapp-e2e000002 --plan webapp-e2e-plan000003
webapp list -g clitest.rg000001
webapp show -g clitest.rg000001 -n webapp-e2e000002
webapp deployment source config-local-git -g clitest.rg000001 -n webapp-e2e000002
webapp deployment source show -g clitest.rg000001 -n webapp-e2e000002
webapp log config -g clitest.rg000001 -n webapp-e2e000002 --level verbose --application-logging filesystem --detailed-error-messages true --failed-request-tracing true --web-server-logging filesystem
webapp log show -g clitest.rg000001 -n webapp-e2e000002
webapp config show -g clitest.rg000001 -n webapp-e2e000002
webapp deployment list-publishing-profiles -g clitest.rg000001 -n webapp-e2e000002
webapp stop -g clitest.rg000001 -n webapp-e2e000002
webapp show -g clitest.rg000001 -n webapp-e2e000002
webapp start -g clitest.rg000001 -n webapp-e2e000002
webapp show -g clitest.rg000001 -n webapp-e2e000002
webapp deployment list-publishing-credentials -g clitest.rg000001 -n webapp-e2e000002
webapp show -g clitest.rg000001 -n webapp-e2e000002
webapp create -g clitest.rg000001 -n webapp-e2e000002 --plan webapp-e2e-plan000003 -r "php|7.3"
webapp config show -g clitest.rg000001 -n webapp-e2e000002
webapp list-runtimes
group create -n clitest.rg000002 -l japanwest
appservice plan create -g clitest.rg000001 -n planInOneRG000003
webapp create -g clitest.rg000002 -n webInOtherRG000004 --plan /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Web/serverfarms/planInOneRG000003
appservice plan create -g clitest.rg000001 -n plan-linux-multi000003 --is-linux
webapp create -g clitest.rg000001 -n webapp-linux-multi000002 --plan plan-linux-multi000003 --multicontainer-config-file "c:\code\azure-cli\src\azure-cli\azure\cli\command_modules\appservice\tests\latest\sample-compose.yml" --multicontainer-config-type COMPOSE
webapp show -g clitest.rg000001 -n webapp-linux-multi000002
appservice plan create -g clitest.rg000001 -n plan-quick-linux000003 --is-linux
webapp create -g clitest.rg000001 -n webapp-quick-linux000002 --plan plan-quick-linux000003 -i patle/ruby-hello
webapp config appsettings list -g clitest.rg000001 -n webapp-quick-linux000002
appservice plan create -g clitest.rg000001 -n plan-quick-linux-cd --is-linux
webapp create -g clitest.rg000001 -n webapp-linux-cd000002 --plan plan-quick-linux-cd -u https://github.com/yugangw-msft/azure-site-test.git -r "NODE|14-lts"
appservice plan create -g clitest.rg000001 -n plan-quick000003
webapp create -g clitest.rg000001 -n webapp-quick000002 --plan plan-quick000003 --deployment-local-git
webapp config appsettings list -g clitest.rg000001 -n webapp-quick000002
appservice plan create -g clitest.rg000001 -n plan-quick000003
webapp create -g clitest.rg000001 -n webapp-quick-cd000002 --plan plan-quick000003 --deployment-source-url https://github.com/yugangw-msft/azure-site-test.git -r "node|10.14"
appservice plan create -g clitest000001 -n plan-quick000004
webapp create -g clitest000001 -n webapp-quick000002 --plan plan-quick000004 --deployment-local-git -r "node|10.14"
webapp config appsettings list -g clitest000001 -n webapp-quick000002
webapp create -g clitest000001 -n webapp-quick000003 --plan plan-quick000004 --deployment-local-git -r "DOTNETCORE|3.1"
appservice plan create -g clitest.rg000001 -n plan-backup000002 --sku S1
webapp create -g clitest.rg000001 -n backup-webapp000003 --plan plan-backup000002
storage account create -n backup000004 -g clitest.rg000001 --location japanwest
storage container create --account-name backup000004 --name backupcontainer000005
storage container generate-sas --account-name backup000004 --name backupcontainer000005 --expiry "2021-12-05T12:09Z" --permissions rwdl
webapp config backup create -g clitest.rg000001 --webapp-name backup-webapp000003 --backup-name backup-name000006 --container-url "https://backup000004.blob.core.windows.net/backupcontainer000005?<azure.cli.testsdk.base.ExecutionResult object at 0x000001EA7AA9AFA0>"
webapp config backup list -g clitest.rg000001 --webapp-name backup-webapp000003
appservice plan create -g clitest.rg000001 -n win-log000003
webapp create -g clitest.rg000001 -n webapp-win-log000002 --plan win-log000003 --deployment-source-url https://github.com/yugangw-msft/azure-site-test.git -r "node|10.14"
webapp log download -g clitest.rg000001 -n webapp-win-log000002 --log-file "C:\Users\ZELINW~1\AppData\Local\Temp\tmpua2nopfy"
appservice plan create -g clitest.rg000001 -n web-del-plan000003 -l japanwest
appservice plan update -g clitest.rg000001 -n web-del-plan000003 --sku S1
webapp create -g clitest.rg000001 -n web-del-test000002 --plan web-del-plan000003
webapp delete -g clitest.rg000001 -n web-del-test000002
appservice plan list -g clitest.rg000001
appservice plan create -g clitest.rg000001 -n web-plan000003
webapp create -g clitest.rg000001 -n web000002 --plan web-plan000003
webapp delete -g clitest.rg000001 -n web000002 --keep-dns-registration --keep-empty-plan --keep-metrics
appservice plan list -g clitest.rg000001
appservice plan create -g clitest.rg000001 -n plan000002 -l eastus2 -z --sku P1V3
appservice plan show -g clitest.rg000001 -n plan000002
appservice plan create -g clitest.rg000001 -n plan000003 -l eastus2 -z --sku FREE
appservice plan create -g clitest.rg000001 -n plan000003 -l japanwest -z --sku P1V3
functionapp plan create -g clitest.rg000001 -n plan000004 -l eastus2 --sku FREE
appservice plan show -g clitest.rg000001 -n plan000004
appservice plan create -g cli_test_webapp_json000001 -n webapp-config-plan000003 --sku S1
webapp create -g cli_test_webapp_json000001 -n webapp-config-test000002 --plan webapp-config-plan000003
webapp deployment slot create -g cli_test_webapp_json000001 -n webapp-config-test000002 --slot staging
webapp config appsettings set -g cli_test_webapp_json000001 -n webapp-config-test000002 --settings s=value "@C:\Users\ZELINW~1\AppData\Local\Temp\tmph3aek9ay"
webapp config appsettings set -g cli_test_webapp_json000001 -n webapp-config-test000002 --settings "@C:\Users\ZELINW~1\AppData\Local\Temp\tmph3aek9ay"
webapp config appsettings set -g cli_test_webapp_json000001 -n webapp-config-test000002 --slot staging --settings "@C:\Users\ZELINW~1\AppData\Local\Temp\tmph3aek9ay"
webapp config set -g cli_test_webapp_json000001 -n webapp-config-test000002 --generic-configurations "@C:\Users\ZELINW~1\AppData\Local\Temp\tmph3aek9ay"
appservice plan create -g cli_test_webapp_config000001 -n webapp-config-plan000003 --sku S1
webapp create -g cli_test_webapp_config000001 -n webapp-config-test000002 --plan webapp-config-plan000003
webapp config show -g cli_test_webapp_config000001 -n webapp-config-test000002
webapp config set -g cli_test_webapp_config000001 -n webapp-config-test000002 --always-on true --auto-heal-enabled true --php-version 7.2 --net-framework-version v3.5 --python-version 3.4 --use-32bit-worker-process=false --web-sockets-enabled=true --http20-enabled true --min-tls-version 1.0 --ftps-state Disabled
webapp config show -g cli_test_webapp_config000001 -n webapp-config-test000002
webapp config appsettings set -g cli_test_webapp_config000001 -n webapp-config-test000002 --settings s1=foo s2=bar s3=bar2
webapp config appsettings list -g cli_test_webapp_config000001 -n webapp-config-test000002
webapp config appsettings delete -g cli_test_webapp_config000001 -n webapp-config-test000002 --setting-names s1 s2
webapp config hostname list -g cli_test_webapp_config000001 --webapp-name webapp-config-test000002
appservice plan create -g cli_test_webapp_config000001 -n webapp-linux-plan000004 -l eastus2 --sku S1 --is-linux
webapp create -g cli_test_webapp_config000001 -n webapp-linux000005 --plan webapp-linux-plan000004 --runtime NODE|14-lts
webapp config storage-account add -g cli_test_webapp_config000001 -n webapp-linux000005 --custom-id Id --storage-type AzureFiles --account-name name --share-name sharename --access-key key --mount-path /path/to/mount
webapp config storage-account list -g cli_test_webapp_config000001 -n webapp-linux000005
webapp config storage-account update -g cli_test_webapp_config000001 -n webapp-linux000005 --custom-id Id --mount-path /different/path
webapp config storage-account list -g cli_test_webapp_config000001 -n webapp-linux000005
webapp config storage-account list -g cli_test_webapp_config000001 -n webapp-linux000005
webapp config storage-account delete -g cli_test_webapp_config000001 -n webapp-linux000005 --custom-id Id
webapp config connection-string set -t mysql -g cli_test_webapp_config000001 -n webapp-linux000005 --settings c1="conn1" c2=conn2 --slot-settings c3=conn3
webapp config connection-string list -g cli_test_webapp_config000001 -n webapp-linux000005
webapp config connection-string delete -g cli_test_webapp_config000001 -n webapp-linux000005 --setting-names c1 c3
webapp config connection-string list -g cli_test_webapp_config000001 -n webapp-linux000005
webapp deployment user show
appservice plan create -g cli_test_webapp_config_appsettings000001 -n webapp-config-appsettings-plan000003 --sku S1
webapp create -g cli_test_webapp_config_appsettings000001 -n webapp-config-appsettings-test000002 --plan webapp-config-appsettings-plan000003
webapp config appsettings set -g cli_test_webapp_config_appsettings000001 -n webapp-config-appsettings-test000002 --settings s1=foo s2=bar s3=bar2
webapp config appsettings list -g cli_test_webapp_config_appsettings000001 -n webapp-config-appsettings-test000002
webapp create -g cli_test_webapp_config_appsettings000001 -n webapp-config-appsettings-test000002 --plan webapp-config-appsettings-plan000003
webapp config appsettings list -g cli_test_webapp_config_appsettings000001 -n webapp-config-appsettings-test000002
network vnet create -g cli_test_webapp_update_site_configs_persists_ip_restrictions000001 -n testvnet000005 --address-prefix 10.0.0.0/16 --subnet-name testsubnet000004 --subnet-prefix 10.0.0.0/24
appservice plan create -g cli_test_webapp_update_site_configs_persists_ip_restrictions000001 -n webapp-config-appsettings-persist000003 --sku S1
webapp create -g cli_test_webapp_update_site_configs_persists_ip_restrictions000001 -n webapp-config-appsettings-persist000002 --plan webapp-config-appsettings-persist000003
webapp config set -g cli_test_webapp_update_site_configs_persists_ip_restrictions000001 -n webapp-config-appsettings-persist000002 --always-on true
webapp config access-restriction add -g cli_test_webapp_update_site_configs_persists_ip_restrictions000001 -n webapp-config-appsettings-persist000002 --rule-name testclirule --priority 300 --subnet testsubnet000004 --vnet-name testvnet000005
webapp config set -g cli_test_webapp_update_site_configs_persists_ip_restrictions000001 -n webapp-config-appsettings-persist000002 --always-on true
appservice plan create -g clitest.rg000001 -n scale-plan000002 --sku SHARED
appservice plan update -g clitest.rg000001 -n scale-plan000002 --sku S2
appservice plan show -g clitest.rg000001 -n scale-plan000002
appservice plan update -g clitest.rg000001 -n scale-plan000002 --sku B1
appservice plan show -g clitest.rg000001 -n scale-plan000002
appservice plan update -g clitest.rg000001 -n scale-plan000002 --number-of-workers 2
appservice plan show -g clitest.rg000001 -n scale-plan000002
appservice plan create -g clitest.rg000001 -n webapp-linux-plan000002 --sku S1 --is-linux
webapp create -g clitest.rg000001 -n webapp-linux000003 --plan webapp-linux-plan000002 --runtime NODE|14-lts
webapp config show -g clitest.rg000001 -n webapp-linux000003
webapp list -g clitest.rg000001
webapp show -g clitest.rg000001 -n webapp-linux000003
webapp config set -g clitest.rg000001 -n webapp-linux000003 --startup-file process.json
webapp deployment container config -g clitest.rg000001 -n webapp-linux000003 --enable-cd true
webapp config container set -g clitest.rg000001 -n webapp-linux000003 --docker-custom-image-name foo-image --docker-registry-server-password foo-password --docker-registry-server-user foo-user --docker-registry-server-url foo-url --enable-app-service-storage false
webapp config container show -g clitest.rg000001 -n webapp-linux000003 
webapp config container delete -g clitest.rg000001 -n webapp-linux000003
webapp config container show -g clitest.rg000001 -n webapp-linux000003 
appservice plan create -g clitest.rg000001 -n webapp-remote-ssh-plan000002 --sku S1 --is-linux
webapp create -g clitest.rg000001 -n webapp-remote-ssh000003 --plan webapp-remote-ssh-plan000002 --runtime node|12-lts
appservice plan create -g clitest.rg000001 -n plan-linux-multi000003 --is-linux --sku S1
webapp create -g clitest.rg000001 -n webapp-linux-multi000002 --plan plan-linux-multi000003 --multicontainer-config-file "c:\code\azure-cli\src\azure-cli\azure\cli\command_modules\appservice\tests\latest\sample-compose.yml" --multicontainer-config-type COMPOSE
webapp deployment slot create -g clitest.rg000001 -n webapp-linux-multi000002 --slot stage
webapp config container set -g clitest.rg000001 -n webapp-linux-multi000002 --slot stage --multicontainer-config-file "c:\code\azure-cli\src\azure-cli\azure\cli\command_modules\appservice\tests\latest\sample-compose-slot.yml" --multicontainer-config-type COMPOSE
acr create --admin-enabled -g clitest.rg000001 -n webappacrtest000003 --sku Basic
appservice plan create -g clitest.rg000001 -n acrtestplan000002 --sku S1 --is-linux
webapp create -g clitest.rg000001 -n webappacrtest000003 --plan acrtestplan000002 --runtime NODE|14-lts
acr credential show -n webappacrtest000003 -g clitest.rg000001
webapp config container set -g clitest.rg000001 -n webappacrtest000003 --docker-custom-image-name webappacrtest000003.azurecr.io/image-name:latest --docker-registry-server-url https://webappacrtest000003.azurecr.io
appservice plan create -g clitest.rg000001 -n webapp-git-plan5000002 --sku S1
webapp create -g clitest.rg000001 -n web-git-test2000003 --plan webapp-git-plan5000002
webapp deployment source config -g clitest.rg000001 -n web-git-test2000003 --repo-url https://github.com/yugangw-msft/azure-site-test --branch master --manual-integration
webapp deployment source show -g clitest.rg000001 -n web-git-test2000003
webapp deployment source delete -g clitest.rg000001 -n web-git-test2000003
webapp deployment source show -g clitest.rg000001 -n web-git-test2000003
appservice plan create -g clitest.rg000001 -n slot-test-plan000002 --sku S1
webapp create -g clitest.rg000001 -n slot-test-web000003 --plan slot-test-plan000002
webapp config appsettings set -g clitest.rg000001 -n slot-test-web000003 --settings s1=v1 --slot-settings s2=v2
webapp deployment slot create -g clitest.rg000001 -n slot-test-web000003 --slot staging
webapp deployment source config -g clitest.rg000001 -n slot-test-web000003 --repo-url https://github.com/yugangw-msft/azure-site-test --branch staging -s staging --manual-integration
webapp deployment slot swap -g clitest.rg000001 -n slot-test-web000003 -s staging
webapp config appsettings list -g clitest.rg000001 -n slot-test-web000003 -s staging
webapp config set -g clitest.rg000001 -n slot-test-web000003 --php-version 7.4
webapp deployment slot create -g clitest.rg000001 -n slot-test-web000003 --slot dev --configuration-source slot-test-web000003
webapp config show -g clitest.rg000001 -n slot-test-web000003 --slot dev
webapp config appsettings set -g clitest.rg000001 -n slot-test-web000003 --slot dev --settings s3=v3 --slot-settings s4=v4
webapp config connection-string set -g clitest.rg000001 -n slot-test-web000003 -t mysql --slot dev --settings c1=connection1 --slot-settings c2=connection2
webapp deployment slot swap -g clitest.rg000001 -n slot-test-web000003 --slot staging --target-slot dev
webapp config appsettings list -g clitest.rg000001 -n slot-test-web000003 --slot dev
webapp config connection-string list -g clitest.rg000001 -n slot-test-web000003 --slot dev
webapp config appsettings list -g clitest.rg000001 -n slot-test-web000003 --slot staging
webapp config connection-string list -g clitest.rg000001 -n slot-test-web000003 --slot staging
webapp deployment slot list -g clitest.rg000001 -n slot-test-web000003
webapp deployment slot auto-swap -g clitest.rg000001 -n slot-test-web000003 -s staging
webapp deployment slot auto-swap -g clitest.rg000001 -n slot-test-web000003 -s staging --disable
webapp deployment slot delete -g clitest.rg000001 -n slot-test-web000003 --slot staging
webapp delete -g clitest.rg000001 -n slot-test-web000003 --slot dev --keep-dns-registration --keep-empty-plan --keep-metrics
appservice plan create -g clitest.rg000001 -n slot-traffic-plan000002 --sku S1
webapp create -g clitest.rg000001 -n slot-traffic-web000003 --plan slot-traffic-plan000002
webapp deployment slot create -g clitest.rg000001 -n slot-traffic-web000003 --slot staging
webapp traffic-routing set -g clitest.rg000001 -n slot-traffic-web000003 -d staging=15
webapp traffic-routing show -g clitest.rg000001 -n slot-traffic-web000003
webapp traffic-routing clear -g clitest.rg000001 -n slot-traffic-web000003
appservice plan create -g {rg} -n {plan} --sku S1
storage account create --name {storage} -g {rg} --sku Standard_LRS
functionapp create -g {rg} -n {function} --plan {plan} -s {storage}
functionapp cors add -g {rg} -n {function} --allowed-origins https://msdn.com https://msn.com
functionapp cors show -g {rg} -n {function}
appservice plan create -g {rg} -n {plan} --sku S1
webapp create -g {rg} -n {web} --plan {plan}
webapp cors add -g {rg} -n {web} --allowed-origins https://msdn.com https://msn.com
webapp cors show -g {rg} -n {web}
webapp cors remove -g {rg} -n {web} --allowed-origins https://msn.com
webapp cors show -g {rg} -n {web}
webapp deployment slot create -g {rg} -n {web} --slot {slot}
webapp cors add -g {rg} -n {web} --slot {slot} --allowed-origins https://foo.com
webapp cors show -g {rg} -n {web} --slot {slot}
webapp cors remove -g {rg} -n {web} --slot {slot} --allowed-origins https://foo.com
webapp cors show -g {rg} -n {web} --slot {slot}
appservice plan create -g clitest.rg000001 -n slot-swap-plan000002 --sku S1
webapp create -g clitest.rg000001 -n slot-swap-web000003 --plan slot-swap-plan000002
webapp config appsettings set -g clitest.rg000001 -n slot-swap-web000003 --slot-settings s1=prod
webapp deployment slot create -g clitest.rg000001 -n slot-swap-web000003 --slot staging
webapp config appsettings set -g clitest.rg000001 -n slot-swap-web000003 --slot-settings s1=slot --slot staging
webapp deployment slot swap -g clitest.rg000001 -n slot-swap-web000003 -s staging --action preview
webapp config appsettings list -g clitest.rg000001 -n slot-swap-web000003 --slot staging
webapp deployment slot swap -g clitest.rg000001 -n slot-swap-web000003 -s staging
webapp config appsettings list -g clitest.rg000001 -n slot-swap-web000003 --slot staging
webapp deployment slot swap -g clitest.rg000001 -n slot-swap-web000003 -s staging --action reset
webapp config appsettings list -g clitest.rg000001 -n slot-swap-web000003 --slot staging
appservice plan create -g clitest.rg000001 -n ssl-test-plan000002 --sku S1 --tags plan=plan1
appservice plan show -g clitest.rg000001 -n ssl-test-plan000002
webapp create -g clitest.rg000001 -n web-ssl-test000003 --plan ssl-test-plan000002 --tags web=web1
webapp config ssl upload -g clitest.rg000001 -n web-ssl-test000003 --certificate-file "c:\code\azure-cli\src\azure-cli\azure\cli\command_modules\appservice\tests\latest\server.pfx" --certificate-password test
webapp show -g clitest.rg000001 -n web-ssl-test000003
webapp config ssl bind -g clitest.rg000001 -n web-ssl-test000003 --certificate-thumbprint 9E9735C45C792B03B3FFCCA614852B32EE71AD6B --ssl-type SNI
webapp show -g clitest.rg000001 -n web-ssl-test000003
webapp config ssl unbind -g clitest.rg000001 -n web-ssl-test000003 --certificate-thumbprint 9E9735C45C792B03B3FFCCA614852B32EE71AD6B
webapp show -g clitest.rg000001 -n web-ssl-test000003
webapp config ssl delete -g clitest.rg000001 --certificate-thumbprint 9E9735C45C792B03B3FFCCA614852B32EE71AD6B
webapp show -g clitest.rg000001 -n web-ssl-test000003
webapp deployment slot create -g clitest.rg000001 -n web-ssl-test000003 --slot slot-ssl-test000004
webapp config ssl upload -g clitest.rg000001 -n web-ssl-test000003 --certificate-file "c:\code\azure-cli\src\azure-cli\azure\cli\command_modules\appservice\tests\latest\server.pfx" --certificate-password test -s slot-ssl-test000004
webapp show -g clitest.rg000001 -n web-ssl-test000003 -s slot-ssl-test000004
webapp config ssl bind -g clitest.rg000001 -n web-ssl-test000003 --certificate-thumbprint 9E9735C45C792B03B3FFCCA614852B32EE71AD6B --ssl-type SNI -s slot-ssl-test000004
webapp show -g clitest.rg000001 -n web-ssl-test000003 -s slot-ssl-test000004
webapp config ssl unbind -g clitest.rg000001 -n web-ssl-test000003 --certificate-thumbprint 9E9735C45C792B03B3FFCCA614852B32EE71AD6B -s slot-ssl-test000004
webapp show -g clitest.rg000001 -n web-ssl-test000003 -s slot-ssl-test000004
webapp config ssl delete -g clitest.rg000001 --certificate-thumbprint 9E9735C45C792B03B3FFCCA614852B32EE71AD6B
webapp show -g clitest.rg000001 -n web-ssl-test000003 -s slot-ssl-test000004
webapp delete -g clitest.rg000001 -n web-ssl-test000003
appservice plan create -g clitest.rg000001 -n ssl-test-plan000003 --sku B1
webapp create -g clitest.rg000001 -n web-ssl-test000004 --plan ssl-test-plan000003
keyvault set-policy -g clitest.rg000001 --name kv-ssl-test000002 --spn Microsoft.Azure.WebSites --secret-permissions get
keyvault certificate import --name test-cert --vault-name kv-ssl-test000002 --file "c:\code\azure-cli\src\azure-cli\azure\cli\command_modules\appservice\tests\latest\server.pfx" --password test
webapp config ssl import --resource-group clitest.rg000001 --name web-ssl-test000004  --key-vault kv-ssl-test000002 --key-vault-certificate-name test-cert
webapp config ssl bind -g clitest.rg000001 -n web-ssl-test000004 --certificate-thumbprint 9E9735C45C792B03B3FFCCA614852B32EE71AD6B --ssl-type SNI
appservice plan create -g clitest.rg000002 -n ssl-test-plan000003 --sku B1
webapp create -g clitest.rg000002 -n web-ssl-test000004 --plan ssl-test-plan000003
keyvault create -g clitest.rg000001 -n kv-ssl-test000005
keyvault set-policy -g clitest.rg000001 --name kv-ssl-test000005 --spn Microsoft.Azure.WebSites --secret-permissions get
keyvault certificate import --name test-cert --vault-name kv-ssl-test000005 --file "c:\code\azure-cli\src\azure-cli\azure\cli\command_modules\appservice\tests\latest\server.pfx" --password test
webapp config ssl import --resource-group clitest.rg000002 --name web-ssl-test000004  --key-vault /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.KeyVault/vaults/kv-ssl-test000005 --key-vault-certificate-name test-cert
webapp config ssl bind -g clitest.rg000002 -n web-ssl-test000004 --certificate-thumbprint 9E9735C45C792B03B3FFCCA614852B32EE71AD6B --ssl-type SNI
appservice plan create -g clitest.rg000001 -n delete-me-plan000002 --sku B1 --tags plan=plan1
webapp create -g clitest.rg000001 -n delete-me-web000003 --plan delete-me-plan000002
webapp delete -g clitest.rg000001 -n delete-me-web000003
webapp deleted list -g clitest.rg000001
appservice plan create -g cli_test_webapp_authentication000001 -n webapp-authentication-plan000003 --sku S1
webapp create -g cli_test_webapp_authentication000001 -n webapp-authentication-test000002 --plan webapp-authentication-plan000003
webapp auth show -g cli_test_webapp_authentication000001 -n webapp-authentication-test000002
webapp auth update -g cli_test_webapp_authentication000001 -n webapp-authentication-test000002 --enabled true --action LoginWithFacebook --token-store false --token-refresh-extension-hours 7.2 --runtime-version 1.2.8 --aad-client-id aad_client_id --aad-client-secret aad_secret --aad-client-secret-certificate-thumbprint aad_thumbprint --aad-allowed-token-audiences https://audience1 --aad-token-issuer-url https://issuer_url --facebook-app-id facebook_id --facebook-app-secret facebook_secret --facebook-oauth-scopes public_profile email
appservice plan create -g clitest.rg000001 -n webapp-update-plan000003 --sku S1
webapp create -g clitest.rg000001 -n webapp-update-test000002 --plan webapp-update-plan000003
webapp update -g clitest.rg000001 -n webapp-update-test000002 --client-affinity-enabled false --set tags.foo=bar
webapp deployment slot create -g clitest.rg000001 -n webapp-update-test000002 -s s1
webapp update -g clitest.rg000001 -n webapp-update-test000002 -s s1 --client-affinity-enabled true
appservice plan create -g cli_test_webapp_zipDeploy000001 -n webapp-zipDeploy-plan000003 --sku S1
webapp create -g cli_test_webapp_zipDeploy000001 -n webapp-zipDeploy-test000002 --plan webapp-zipDeploy-plan000003
webapp deployment source config-zip -g cli_test_webapp_zipDeploy000001 -n webapp-zipDeploy-test000002 --src "c:\code\azure-cli\src\azure-cli\azure\cli\command_modules\appservice\tests\latest\test.zip"
appservice plan create -g clitest.rg000001 -n web-msi-plan000002
webapp create -g clitest.rg000001 -n web-msi000003 --plan web-msi-plan000002
webapp identity assign -g clitest.rg000001 -n web-msi000003 --role Reader --scope /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/clitest.rg000001
webapp identity show -g clitest.rg000001 -n web-msi000003
role assignment list -g clitest.rg000001 --assignee dd93ea65-525b-4cbf-ac7c-81b6ef473b10
webapp identity show -g clitest.rg000001 -n web-msi000003
webapp identity remove -g clitest.rg000001 -n web-msi000003
webapp identity show -g clitest.rg000001 -n web-msi000003
appservice list-locations --sku F1
appservice list-locations --sku Free
appservice plan create --is-linux -n webapp-plan000003 -g cli_test000001 -l westus2
webapp create -n webapp-container000002 -g cli_test000001 -p webapp-plan000003 -i nginx
appservice plan create --hyper-v -n webapp-hyperv-plan000003 -g cli_test000001 --sku p1v3 -l westus2
webapp create -n webapp-container-e2e000002 -g cli_test000001 -p webapp-hyperv-plan000003 -i mcr.microsoft.com/azure-app-service/windows/parkingpage:latest
network vnet create -g clitest.rg000001 -n vnet000005 --address-prefix 10.0.0.0/16 --subnet-name subnet000004 --subnet-prefix 10.0.0.0/24
appservice plan create -g clitest.rg000001 -n vnetplan000003 --sku P1V2
webapp create -g clitest.rg000001 -n vnetwebapp000002 --plan vnetplan000003 --vnet vnet000005 --subnet subnet000004
webapp vnet-integration list -g clitest.rg000001 -n vnetwebapp000002
webapp vnet-integration remove -g clitest.rg000001 -n vnetwebapp000002
webapp vnet-integration list -g clitest.rg000001 -n vnetwebapp000002
network vnet create -g clitest.rg000002 -n vnet000006 --address-prefix 10.0.0.0/16 --subnet-name subnet000005 --subnet-prefix 10.0.0.0/24
appservice plan create -g clitest.rg000001 -n vnetplan000004 --sku P1V2
webapp create -g clitest.rg000001 -n vnetwebapp000003 --plan vnetplan000004 --subnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000002/providers/Microsoft.Network/virtualNetworks/vnet000006/subnets/subnet000005
webapp vnet-integration list -g clitest.rg000001 -n vnetwebapp000003
webapp vnet-integration remove -g clitest.rg000001 -n vnetwebapp000003
webapp vnet-integration list -g clitest.rg000001 -n vnetwebapp000003
network vnet create -g clitest.rg000002 -n vnet000006 --address-prefix 10.0.0.0/16 --subnet-name subnet000005 --subnet-prefix 10.0.0.0/24
appservice plan create -g clitest.rg000001 -n vnetplan000004 --sku P1V2
webapp create -g clitest.rg000001 -n vnetwebapp000003 --plan vnetplan000004 --vnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000002/providers/Microsoft.Network/virtualNetworks/vnet000006 --subnet subnet000005
webapp vnet-integration list -g clitest.rg000001 -n vnetwebapp000003
webapp vnet-integration remove -g clitest.rg000001 -n vnetwebapp000003
webapp vnet-integration list -g clitest.rg000001 -n vnetwebapp000003
network vnet create -g clitest.rg000001 -n vnet000005 --address-prefix 10.0.0.0/16 --subnet-name subnet000004 --subnet-prefix 10.0.0.0/24
appservice plan create -g clitest.rg000001 -n vnetplan000003 --sku P1V2
webapp create -g clitest.rg000001 -n vnetwebapp000002 --plan vnetplan000003 --vnet vnet000005
appservice plan create -g clitest.rg000001 -n vnetplan000003 --sku P1V2
webapp create -g clitest.rg000001 -n vnetwebapp000002 --plan vnetplan000003 --vnet vnet000005 --subnet subnet000004
network vnet create -g clitest.rg000002 -n vnet000006 --address-prefix 10.0.0.0/16 --subnet-name subnet000005 --subnet-prefix 10.0.0.0/24
appservice plan create -g clitest.rg000001 -n vnetplan000004 --sku P1V2
webapp create -g clitest.rg000001 -n vnetwebapp000003 --plan vnetplan000004 --vnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000002/providers/Microsoft.Network/virtualNetworks/vnet000006 --subnet subnet000005
network vnet create -g clitest.rg000002 -n vnet000006 --address-prefix 10.0.0.0/16 --subnet-name subnet000005 --subnet-prefix 10.0.0.0/24
appservice plan create -g clitest.rg000001 -n vnetplan000004 --sku P1V2
webapp create -g clitest.rg000001 -n vnetwebapp000003 --plan vnetplan000004 --vnet vnet000006 --subnet subnet000005
network vnet create -g clitest.rg000001 -n vnet000005 --address-prefix 10.0.0.0/16 --subnet-name subnet000004 --subnet-prefix 10.0.0.0/24
appservice plan create -g clitest.rg000001 -n vnetplan000003 --sku FREE
webapp create -g clitest.rg000001 -n vnetwebapp000002 --plan vnetplan000003 --vnet vnet000005 --subnet subnet000004
appservice plan create -g clitest.rg000001 -n hcplan000003 --sku S1
webapp create -g clitest.rg000001 -n hcwebapp000002 --plan hcplan000003
relay namespace create -g clitest.rg000001 --name hcnamespace000004
relay hyco create -g clitest.rg000001 --namespace-name hcnamespace000004 --name hcname000005 --user-metadata [{{\"key\":\"endpoint\",\"value\":\"vmsq1:80\"}}]
webapp hybrid-connection add -g clitest.rg000001 -n hcwebapp000002 --namespace hcnamespace000004 --hybrid-connection hcname000005
webapp hybrid-connection list -g clitest.rg000001 -n hcwebapp000002
webapp deployment slot create -g clitest.rg000001 -n hcwebapp000002 --slot hcwebapp000002-stage
webapp hybrid-connection add -g clitest.rg000001 -n hcwebapp000002 --namespace hcnamespace000004 --hybrid-connection hcname000005 --slot hcwebapp000002-stage
webapp hybrid-connection list -g clitest.rg000001 -n hcwebapp000002 --slot hcwebapp000002-stage
webapp hybrid-connection remove -g clitest.rg000001 -n hcwebapp000002 --namespace hcnamespace000004 --hybrid-connection hcname000005
webapp hybrid-connection list -g clitest.rg000001 -n hcwebapp000002
webapp hybrid-connection remove -g clitest.rg000001 -n hcwebapp000002 --namespace hcnamespace000004 --hybrid-connection hcname000005 --slot hcwebapp000002-stage
webapp hybrid-connection list -g clitest.rg000001 -n hcwebapp000002 --slot hcwebapp000002-stage
network vnet create -g clitest.rg000001 -n swiftname000005 --address-prefix 10.0.0.0/16 --subnet-name swiftsubnet000004 --subnet-prefix 10.0.0.0/24
network vnet subnet update -g clitest.rg000001 --vnet swiftname000005 --name swiftsubnet000004 --delegations Microsoft.Web/serverfarms --service-endpoints Microsoft.Storage
appservice plan create -g clitest.rg000001 -n swiftplan000003 --sku P1V2
webapp create -g clitest.rg000001 -n swiftwebapp000002 --plan swiftplan000003
webapp vnet-integration add -g clitest.rg000001 -n swiftwebapp000002 --vnet swiftname000005 --subnet swiftsubnet000004
webapp vnet-integration list -g clitest.rg000001 -n swiftwebapp000002
 network vnet subnet show -g clitest.rg000001 -n swiftsubnet000004 --vnet-name swiftname000005
webapp vnet-integration remove -g clitest.rg000001 -n swiftwebapp000002
webapp vnet-integration list -g clitest.rg000001 -n swiftwebapp000002
network vnet create -g clitest.rg000001 -n swiftname000005 --address-prefix 10.0.0.0/16 --subnet-name swiftsubnet000004 --subnet-prefix 10.0.0.0/24
appservice plan create -g clitest.rg000001 -n swiftplan000003 --sku P1V2
webapp create -g clitest.rg000001 -n swiftwebapp000002 --plan swiftplan000003
webapp vnet-integration add -g clitest.rg000001 -n swiftwebapp000002 --vnet swiftname000005 --subnet swiftsubnet000004
webapp vnet-integration list -g clitest.rg000001 -n swiftwebapp000002
webapp deployment slot create -g clitest.rg000001 -n swiftwebapp000002 --slot swiftwebapp000002-stage
webapp vnet-integration add -g clitest.rg000001 -n swiftwebapp000002 --vnet swiftname000005 --subnet swiftsubnet000004 --slot swiftwebapp000002-stage
webapp vnet-integration list -g clitest.rg000001 -n swiftwebapp000002 --slot swiftwebapp000002-stage
webapp vnet-integration remove -g clitest.rg000001 -n swiftwebapp000002
webapp vnet-integration list -g clitest.rg000001 -n swiftwebapp000002
webapp vnet-integration remove -g clitest.rg000001 -n swiftwebapp000002 --slot swiftwebapp000002-stage
webapp vnet-integration list -g clitest.rg000001 -n swiftwebapp000002 --slot swiftwebapp000002-stage
network vnet create -g clitest.rg000001 -n swiftname000005 --address-prefix 10.0.0.0/16 --subnet-name swiftsubnet000004 --subnet-prefix 10.0.0.0/24
network vnet subnet update -g clitest.rg000001 --vnet swiftname000005 --name swiftsubnet000004 --delegations Microsoft.Web/serverfarms
appservice plan create -g clitest.rg000001 -n swiftplan000003 --sku P1V2
webapp create -g clitest.rg000001 -n swiftwebapp000002 --plan swiftplan000003
webapp vnet-integration add -g clitest.rg000001 -n swiftwebapp000002 --vnet swiftname000005 --subnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/swiftname000005/subnets/swiftsubnet000004
webapp vnet-integration list -g clitest.rg000001 -n swiftwebapp000002
webapp vnet-integration remove -g clitest.rg000001 -n swiftwebapp000002
webapp vnet-integration list -g clitest.rg000001 -n swiftwebapp000002
network vnet create -g clitest.rg000001 -n swiftname000007 --address-prefix 10.0.0.0/16 --subnet-name swiftsubnet000005 --subnet-prefix 10.0.0.0/24
group create -n swiftwebapp000002 -l japanwest
network vnet create -g swiftwebapp000002 -n swiftname000007 --address-prefix 10.0.0.0/16 --subnet-name swiftsubnet000006 --subnet-prefix 10.0.0.0/24
appservice plan create -g clitest.rg000001 -n swiftplan000004 --sku P1V2
webapp create -g clitest.rg000001 -n swiftwebapp000003 --plan swiftplan000004
webapp vnet-integration add -g clitest.rg000001 -n swiftwebapp000003 --vnet swiftname000007 --subnet swiftsubnet000005
webapp vnet-integration list -g clitest.rg000001 -n swiftwebapp000003
webapp vnet-integration remove -g clitest.rg000001 -n swiftwebapp000003
webapp vnet-integration list -g clitest.rg000001 -n swiftwebapp000003
webapp vnet-integration add -g clitest.rg000001 -n swiftwebapp000003 --vnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/swiftwebapp000002/providers/Microsoft.Network/virtualNetworks/swiftname000007 --subnet swiftsubnet000006
webapp vnet-integration list -g clitest.rg000001 -n swiftwebapp000003
network vnet create -g clitest.rg000001 -n swiftname000005 --address-prefix 10.0.0.0/16 --subnet-name swiftsubnet000004 --subnet-prefix 10.0.0.0/24
network vnet subnet update -g clitest.rg000001 --vnet swiftname000005 --name swiftsubnet000004 --delegations Microsoft.Web/serverfarms
appservice plan create -g clitest.rg000001 -n swiftplan000003 --sku P1V2
webapp create -g clitest.rg000001 -n swiftwebapp000002 --plan swiftplan000003
webapp vnet-integration add -g clitest.rg000001 -n swiftwebapp000002 --vnet swiftname000005 --subnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/swiftname000005/subnets/swiftsubnet000004
webapp vnet-integration list -g clitest.rg000001 -n swiftwebapp000002
webapp vnet-integration remove -g clitest.rg000001 -n swiftwebapp000002
webapp vnet-integration list -g clitest.rg000001 -n swiftwebapp000002
appservice plan create -g clitest.rg000001 -n list-deployment-plan000003 --sku S1
webapp create -g clitest.rg000001 -n list-deployment-webapp000002 --plan list-deployment-plan000003
webapp log deployment list -g clitest.rg000001 -n list-deployment-webapp000002
webapp deployment source config-zip -g clitest.rg000001 -n list-deployment-webapp000002 --src "c:\code\azure-cli\src\azure-cli\azure\cli\command_modules\appservice\tests\latest\test.zip"
webapp log deployment list -g clitest.rg000001 -n list-deployment-webapp000002
webapp deployment source config-zip -g clitest.rg000001 -n list-deployment-webapp000002 --src "c:\code\azure-cli\src\azure-cli\azure\cli\command_modules\appservice\tests\latest\test.zip"
webapp log deployment list -g clitest.rg000001 -n list-deployment-webapp000002
appservice plan create -g clitest.rg000001 -n show-deployment-plan000003 --sku S1
webapp create -g clitest.rg000001 -n show-deployment-webapp000002 --plan show-deployment-plan000003
webapp log deployment show -g clitest.rg000001 -n show-deployment-webapp000002
webapp deployment source config-zip -g clitest.rg000001 -n show-deployment-webapp000002 --src "c:\code\azure-cli\src\azure-cli\azure\cli\command_modules\appservice\tests\latest\test.zip"
webapp log deployment show -g clitest.rg000001 -n show-deployment-webapp000002
webapp log deployment show -g clitest.rg000001 -n show-deployment-webapp000002 --deployment-id=25980327bbd1479ea08484054a898361
local-context on
appservice plan create -g {rg} -n {plan_name}
appservice plan show
appservice plan delete
webapp create -n {webapp_name}
webapp show
webapp delete
webapp delete -n {webapp_name}
appservice plan delete -n {plan_name} -y
local-context off
local-context delete --all --purge -y
appservice domain create -g clitest.rg000001 --hostname testuniquedomainname1.com --contact-info=@'c:\code\azure-cli\src\azure-cli\azure\cli\command_modules\appservice\tests\latest\domain-contact.json' --dryrun
network vnet create -g {rg} -n dev-vnet --address-prefixes 10.0.0.0/9
network vnet subnet create -g {rg} --vnet-name dev-vnet -n {master_subnet} --address-prefixes {master_ip_range} --service-endpoints Microsoft.ContainerRegistry
network vnet subnet create -g {rg} --vnet-name dev-vnet -n {worker_subnet} --address-prefixes {worker_ip_range} --service-endpoints Microsoft.ContainerRegistry
network vnet subnet update -g {rg} --vnet-name dev-vnet -n {master_subnet} --disable-private-link-service-network-policies true
aro create -g {rg} -n {name} --master-subnet {master_subnet_resource} --worker-subnet {worker_subnet_resource} --subscription {subscription} --tags test=create
network vnet create -g {rg} -n dev-vnet --address-prefixes 10.0.0.0/9
network vnet subnet create -g {rg} --vnet-name dev-vnet -n {master_subnet} --address-prefixes {master_ip_range} --service-endpoints Microsoft.ContainerRegistry
network vnet subnet create -g {rg} --vnet-name dev-vnet -n {worker_subnet} --address-prefixes {worker_ip_range} --service-endpoints Microsoft.ContainerRegistry
network vnet subnet update -g {rg} --vnet-name dev-vnet -n {master_subnet} --disable-private-link-service-network-policies true
aro create -g {rg} -n {name} --master-subnet {master_subnet_resource} --worker-subnet {worker_subnet_resource} --subscription {subscription} --tags test=delete
aro delete -y -g {rg} -n {name} --subscription {subscription}
network vnet create -g {rg} -n dev-vnet --address-prefixes 10.0.0.0/9
network vnet subnet create -g {rg} --vnet-name dev-vnet -n {master_subnet} --address-prefixes {master_ip_range} --service-endpoints Microsoft.ContainerRegistry
network vnet subnet create -g {rg} --vnet-name dev-vnet -n {worker_subnet} --address-prefixes {worker_ip_range} --service-endpoints Microsoft.ContainerRegistry
network vnet subnet update -g {rg} --vnet-name dev-vnet -n {master_subnet} --disable-private-link-service-network-policies true
aro create -g {rg} -n {name} --master-subnet {master_subnet_resource} --worker-subnet {worker_subnet_resource} --subscription {subscription} --tags test=list
aro list -g {rg} --subscription {subscription}
network vnet create -g {rg} -n dev-vnet --address-prefixes 10.0.0.0/9
network vnet subnet create -g {rg} --vnet-name dev-vnet -n {master_subnet} --address-prefixes {master_ip_range} --service-endpoints Microsoft.ContainerRegistry
network vnet subnet create -g {rg} --vnet-name dev-vnet -n {worker_subnet} --address-prefixes {worker_ip_range} --service-endpoints Microsoft.ContainerRegistry
network vnet subnet update -g {rg} --vnet-name dev-vnet -n {master_subnet} --disable-private-link-service-network-policies true
aro create -g {rg} -n {name} --master-subnet {master_subnet_resource} --worker-subnet {worker_subnet_resource} --subscription {subscription} --tags test=list-cred
aro list-credentials -g {rg} -n {name} --subscription {subscription}
network vnet create -g {rg} -n dev-vnet --address-prefixes 10.0.0.0/9
network vnet subnet create -g {rg} --vnet-name dev-vnet -n {master_subnet} --address-prefixes {master_ip_range} --service-endpoints Microsoft.ContainerRegistry
network vnet subnet create -g {rg} --vnet-name dev-vnet -n {worker_subnet} --address-prefixes {worker_ip_range} --service-endpoints Microsoft.ContainerRegistry
network vnet subnet update -g {rg} --vnet-name dev-vnet -n {master_subnet} --disable-private-link-service-network-policies true
aro create -g {rg} -n {name} --master-subnet {master_subnet_resource} --worker-subnet {worker_subnet_resource} --subscription {subscription} --tags test=show
aro show -g {rg} -n {name} --subscription {subscription} --output table
network vnet create -g {rg} -n dev-vnet --address-prefixes 10.0.0.0/9
network vnet subnet create -g {rg} --vnet-name dev-vnet -n {master_subnet} --address-prefixes {master_ip_range} --service-endpoints Microsoft.ContainerRegistry
network vnet subnet create -g {rg} --vnet-name dev-vnet -n {worker_subnet} --address-prefixes {worker_ip_range} --service-endpoints Microsoft.ContainerRegistry
network vnet subnet update -g {rg} --vnet-name dev-vnet -n {master_subnet} --disable-private-link-service-network-policies true
aro create -g {rg} -n {name} --master-subnet {master_subnet_resource} --worker-subnet {worker_subnet_resource} --subscription {subscription} --tags test=update
aro update -g {rg} -n {name} --subscription {subscription}
backup container show -n {sa2} -v {vault} -g {rg} --backup-management-type {type}
backup container show -n {container_name} -v {vault} -g {rg}
backup container list -v {vault} -g {rg} --backup-management-type {type}
backup protection disable -g {rg} -v {vault} -c {sa1} -i {item1} --backup-management-type AzureStorage --delete-backup-data true --yes
backup protection disable -g {rg} -v {vault} -c {sa2} -i {item2} --backup-management-type AzureStorage --delete-backup-data true --yes
backup container unregister -g {rg} -v {vault} -c {sa1} --yes --backup-management-type AzureStorage
backup container unregister -g {rg} -v {vault} -c {sa2} --yes --backup-management-type AzureStorage
backup container show -g {rg} -v {vault} -n {container} --backup-management-type {type} --query name
backup item show -g {rg} -v {vault} -c {container1} -n {item1}
backup item show -g {rg} -v {vault} -c {container1} -n {item1_fullname}
backup item list -g {rg} -v {vault} -c {container}
backup item list -g {rg} -v {vault} -c {container}
backup item list -g {rg} -v {vault} -c {container1}
backup item set-policy -g {rg} -v {vault} -c {container1} -n {item1} -p {newpolicy}
backup item show -g {rg} -v {vault} -c {container1} -n {item1}
backup protection disable -g {rg} -v {vault} -c {container} -i {item1} --backup-management-type AzureStorage --delete-backup-data true --yes
backup protection disable -g {rg} -v {vault} -c {container} -i {item2} --backup-management-type AzureStorage --delete-backup-data true --yes
backup container unregister -g {rg} -v {vault} -c {container} --yes --backup-management-type AzureStorage
backup policy list -g {rg} -v {vault} --backup-management-type {type}
backup policy show -g {rg} -v {vault} -n {policy}
backup policy create -g {rg} -v {vault} --policy '{policy1_json}' --name {policy2} --backup-management-type {type}
backup policy show -g {rg} -v {vault} --n {policy2}
backup policy list -g {rg} -v {vault} --backup-management-type {type}
backup policy set -g {rg} -v {vault} --policy '{policy2_json}' -n {policy2}
backup policy show -g {rg} -v {vault} -n {policy2}
backup item list -g {rg} -v {vault} -c {container} --backup-management-type AzureStorage --query [0].name
backup protection disable -g {rg} -v {vault} -c {container} -i {afsitem} --backup-management-type AzureStorage --delete-backup-data true --yes
backup container unregister -g {rg} -v {vault} -c {container} --yes --backup-management-type AzureStorage
backup protection enable-for-azurefileshare -g {rg} -v {vault} --storage-account {container} --azure-file-share {item} -p {policy}
backup item list -g {rg} -v {vault} -c {container} --backup-management-type {type}
backup protection disable -g {rg} -v {vault} -c {container} -i {item} --backup-management-type {type} --yes
backup item show -g {rg} -v {vault} -c {container} -n {item} --backup-management-type {type}
backup protection disable -g {rg} -v {vault} -c {container} -i {item} --backup-management-type {type} --delete-backup-data true --yes
backup item list -g {rg} -v {vault} -c {container} --backup-management-type {type}
backup container unregister -g {rg} -v {vault} -c {container} --yes --backup-management-type AzureStorage
backup recoverypoint list -g {rg} -v {vault} -c {container} -i {item1} --backup-management-type {type} --query [].name
backup restore restore-azurefileshare -g {rg} -v {vault} -c {container} -i {item1} -r {rp1} --resolve-conflict Overwrite --restore-mode OriginalLocation
backup job wait -g {rg} -v {vault} -n {job1}
backup job show -g {rg} -v {vault} -n {job1}
backup restore restore-azurefileshare -g {rg} -v {vault} -c {container} -i {item1} -r {rp1} --resolve-conflict Overwrite --restore-mode AlternateLocation --target-storage-account {container} --target-file-share {item2} --target-folder folder1
backup job wait -g {rg} -v {vault} -n {job2}
backup job show -g {rg} -v {vault} -n {job2}
backup restore restore-azurefiles -g {rg} -v {vault} -c {container} -i {item1} -r {rp1} --resolve-conflict Overwrite --restore-mode AlternateLocation --source-file-type File --source-file-path {file} --target-storage-account {container} --target-file-share {item2} --target-folder folder1
backup job wait -g {rg} -v {vault} -n {job3}
backup job show -g {rg} -v {vault} -n {job3}
backup restore restore-azurefiles -g {rg} -v {vault} -c {container} -i {item1} -r {rp1} --resolve-conflict Overwrite --restore-mode OriginalLocation --source-file-type File --source-file-path {file}
backup job wait -g {rg} -v {vault} -n {job4}
backup job show -g {rg} -v {vault} -n {job4}
backup restore restore-azurefiles -g {rg} -v {vault} -c {container} -i {item1} -r {rp1} --resolve-conflict Overwrite --restore-mode AlternateLocation --source-file-type File --source-file-path {file} {file2} --target-storage-account {container} --target-file-share {item2} --target-folder folder1
backup job wait -g {rg} -v {vault} -n {job5}
backup job show -g {rg} -v {vault} -n {job5}
backup protection disable -g {rg} -v {vault} -c {container} -i {item1} --backup-management-type AzureStorage --delete-backup-data true --yes
backup container unregister -g {rg} -v {vault} -c {container} --yes --backup-management-type AzureStorage
backup recoverypoint list -g {rg} -v {vault} -c {container} -i {item1} --backup-management-type {type} --query [].name
backup recoverypoint show -g {rg} -v {vault} -c {container} -i {item1} -n {rp1} --backup-management-type {type}
backup recoverypoint list -g {rg} -v {vault} -c {container} -i {item1} --backup-management-type {type}
backup protection backup-now -g {rg} -v {vault} -c {container} -i {item1} --retain-until {retain_date} --backup-management-type AzureStorage --query name
backup job wait -g {rg} -v {vault} -n {job}
backup recoverypoint list -g {rg} -v {vault} -c {container} -i {item1} --backup-management-type {type}
backup protection disable -g {rg} -v {vault} -c {container} -i {item1} --backup-management-type AzureStorage --delete-backup-data true --yes
backup container unregister -g {rg} -v {vault} -c {container} --yes --backup-management-type AzureStorage
backup protection enable-for-azurefileshare -g {rg} -v {vault} --storage-account {container} --azure-file-share {item} -p {policy}
backup protection backup-now -g {rg} -v {vault} -c {container} -i {item} --retain-until {retain_date} --backup-management-type AzureStorage --query name
backup job wait -g {rg} -v {vault} -n {job}
backup recoverypoint list -g {rg} -v {vault} -c {container} -i {item} --backup-management-type AzureStorage --query [0].name
backup restore restore-azurefileshare -g {rg} -v {vault} -c {container} -i {item} -r {rp} --resolve-conflict Overwrite --restore-mode OriginalLocation --query name
backup job wait -g {rg} -v {vault} -n {job}
backup protection disable -g {rg} -v {vault} -c {container} -i {item} --backup-management-type AzureStorage --delete-backup-data true --yes
backup container unregister -g {rg} -v {vault} -c {container} --yes --backup-management-type AzureStorage
backup container show -n {container} -v {vault} -g {rg} --backup-management-type {type}
backup item list -g {rg} -v {vault} -c {container} --query [0].name
backup protection disable -g {rg} -v {vault} -c {container_name} -i {item} --backup-management-type AzureStorage --delete-backup-data true --yes
backup container unregister -g {rg} -v {vault} -c {container_name} --yes
backup container list -v {vault} -g {rg} --backup-management-type {type}
backup container show -n {vm} -v {vault} -g {rg} --backup-management-type AzureIaasVM --query properties.friendlyName
backup item list -g {rg} -v {vault} -c {container} --backup-management-type AzureIaasVM --workload-type VM --query [0].properties.friendlyName
backup recoverypoint list --backup-management-type AzureIaasVM --workload-type VM -g {rg} -v {vault} -c {container} -i {item}
backup recoverypoint list -g {rg} -v {vault} -i {item} -c {container} --backup-management-type AzureIaasVM --is-ready-for-move {rp1_is_ready_for_move} --target-tier VaultArchive --query [0]
backup recoverypoint list -g {rg} -v {vault} -i {item} -c {container} --backup-management-type AzureIaasVM --tier {rp1_tier} --query [0]
backup recoverypoint list -g {rg} -v {vault} -i {item} -c {container} --backup-management-type AzureIaasVM --recommended-for-archive
backup container show --backup-management-type AzureIaasVM -n {vm1} -v {vault} -g {rg}
vm show -n {vm1} -g {rg}
backup container list --backup-management-type AzureIaasVM -v {vault} -g {rg}
backup vault backup-properties set -g {rg} -n {vault} --soft-delete-feature-state Disable
vm disk attach -g {rg} --vm-name {vm} --name mydisk1 --new --size-gb 10
vm disk attach -g {rg} --vm-name {vm} --name mydisk2 --new --size-gb 10
vm disk attach -g {rg} --vm-name {vm} --name mydisk3 --new --size-gb 10
backup protection enable-for-vm -g {rg} -v {vault} --vm {vm} -p DefaultPolicy --disk-list-setting include --diskslist 0 1
backup item show --backup-management-type AzureIaasVM --workload-type VM -g {rg} -v {vault} -c {vm} -n {vm}
backup protection update-for-vm -g {rg} -v {vault} -c {vm} -i {vm} --exclude-all-data-disks
backup protection update-for-vm -g {rg} -v {vault} -c {vm} -i {vm} --disk-list-setting exclude --diskslist 1
backup item show --backup-management-type AzureIaasVM --workload-type VM -g {rg} -v {vault} -c {vm} -n {vm}
backup protection backup-now -g {rg} -v {vault} -c {vm} -i {vm} --backup-management-type AzureIaasVM --workload-type VM --retain-until {retain_date} --query name
backup job wait -g {rg} -v {vault} -n {job}
backup recoverypoint list --backup-management-type AzureIaasVM --workload-type VM -g {rg} -v {vault} -c {vm} -i {vm} --query [0].name
backup restore restore-disks -g {rg} -v {vault} -c {vm} -i {vm} -r {rp} -t {rg} --storage-account {sa} --restore-to-staging-storage-account --restore-only-osdisk
backup job wait -g {rg} -v {vault} -n {job}
backup job show -g {rg} -v {vault} -n {job}
backup restore restore-disks -g {rg} -v {vault} -c {vm} -i {vm} -r {rp} -t {rg} --storage-account {sa} --restore-to-staging-storage-account --diskslist 0
backup job wait -g {rg} -v {vault} -n {job2}
backup job show -g {rg} -v {vault} -n {job2}
identity create -n {identity1} -g {rg} --query id
identity show -n {identity1} -g {rg} --query principalId
identity create -n {identity2} -g {rg} --query id
identity show -n {identity2} -g {rg} --query principalId
backup vault identity assign --user-assigned {identity1_id} {identity2_id} -g {rg} -n {vault1}
backup vault identity assign --system-assigned -g {rg} -n {vault1}
backup vault identity assign --user-assigned {identity1_id} -g {rg} -n {vault2}
backup vault identity assign --system-assigned -g {rg} -n {vault2}
keyvault update --name {key_vault} --enable-soft-delete --enable-purge-protection
keyvault key create --vault-name {key_vault} -n {key1} --kty RSA --disabled false --ops decrypt encrypt sign unwrapKey verify wrapKey --size 2048
keyvault key create --vault-name {key_vault} -n {key2} --kty RSA --disabled false --ops decrypt encrypt sign unwrapKey verify wrapKey --size 2048
keyvault set-policy --name {key_vault} --object-id {identity1_principalid} --key-permissions {identity_permissions}
keyvault set-policy --name {key_vault} --object-id {identity2_principalid} --key-permissions {identity_permissions}
keyvault set-policy --name {key_vault} --object-id {system1_principalid} --key-permissions {identity_permissions}
keyvault set-policy --name {key_vault} --object-id {system2_principalid} --key-permissions {identity_permissions}
backup vault encryption update --encryption-key-id {key1_id} --mi-user-assigned {identity1_id} -g {rg} -n {vault1}
backup vault encryption show -n {vault1} -g {rg}
backup vault encryption update --encryption-key-id {key1_id} --mi-user-assigned {identity2_id} -g {rg} -n {vault1}
backup vault encryption show -n {vault1} -g {rg}
backup vault encryption update --encryption-key-id {key2_id} --mi-system-assigned -g {rg} -n {vault1}
backup vault encryption show -n {vault1} -g {rg}
backup vault encryption update --encryption-key-id {key1_id} -g {rg} -n {vault1}
backup vault encryption show -n {vault1} -g {rg}
backup vault encryption update --encryption-key-id {key2_id} --mi-system-assigned --infrastructure-encryption Enabled -g {rg} -n {vault2}
backup vault encryption show -n {vault2} -g {rg}
backup vault encryption update --encryption-key-id {key1_id} --mi-user-assigned {identity1_id} -g {rg} -n {vault2}
backup vault encryption show -n {vault2} -g {rg}
identity create -n {identity1} -g {rg} --query id
identity create -n {identity2} -g {rg} --query id
identity create -n {identity3} -g {rg} --query id
backup vault identity assign --user-assigned {identity1_id} {identity2_id} -g {rg} -n {vault}
backup vault identity assign --system-assigned -g {rg} -n {vault}
backup vault identity assign --user-assigned {identity3_id} -g {rg} -n {vault}
backup vault identity remove --system-assigned --user-assigned {identity1_id} -g {rg} -n {vault}
backup vault identity assign --system-assigned --user-assigned {identity1_id} -g {rg} -n {vault}
backup vault identity remove --system-assigned --user-assigned -g {rg} -n {vault}
backup vault identity assign --system-assigned -g {rg} -n {vault}
backup vault identity assign --user-assigned {identity1_id} {identity2_id} -g {rg} -n {vault}
backup vault identity remove --system-assigned -g {rg} -n {vault}
backup vault identity remove --user-assigned -g {rg} -n {vault}
backup container show --backup-management-type AzureIaasVM -n {vm1} -v {vault} -g {rg} --query properties.friendlyName
backup container show --backup-management-type AzureIaasVM -n {vm2} -v {vault} -g {rg} --query properties.friendlyName
backup item show --backup-management-type AzureIaasVM --workload-type VM -g {rg} -v {vault} -c {container1} -n {vm1}
backup container show --backup-management-type AzureIaasVM -n {vm1} -v {vault} -g {rg} --query name
backup item show --workload-type VM -g {rg} -v {vault} -c {container1_fullname} -n {vm1}
backup item show --backup-management-type AzureIaasVM --workload-type VM -g {rg} -v {vault} -c {container1_fullname} -n {item1_fullname}
backup item list --backup-management-type AzureIaasVM --workload-type VM -g {rg} -v {vault} -c {container1}
backup item list --backup-management-type AzureIaasVM --workload-type VM -g {rg} -v {vault} -c {container1_fullname}
backup item list --backup-management-type AzureIaasVM --workload-type VM -g {rg} -v {vault} -c {container2}
backup item list --backup-management-type AzureIaasVM --workload-type VM -g {rg} -v {vault}
backup item set-policy --backup-management-type AzureIaasVM --workload-type VM -g {rg} -v {vault} -c {container1} -n {vm1} -p {policy}
backup item show --backup-management-type AzureIaasVM --workload-type VM -g {rg} -v {vault} -c {container1} -n {vm1}
backup recoverypoint list --backup-management-type AzureIaasVM --workload-type VM -g {rg} -v {vault} -c {vm} -i {vm} --query [0].name
backup restore restore-disks -g {rg} -v {vault} -c {vm} -i {vm} -r {rp} --storage-account {sa} --query name --restore-to-staging-storage-account
backup job show -g {rg} -v {vault} -n {job}
backup job list -g {rg} -v {vault}
backup job list -g {rg} -v {vault} --status InProgress
backup job list -g {rg} -v {vault} --operation Restore
backup job list -g {rg} -v {vault} --operation Restore --status InProgress
backup job stop -g {rg} -v {vault} -n {job}
backup policy show -g {rg} -v {vault} -n {policy1}
backup policy list -g {rg} -v {vault}
backup policy list-associated-items -g {rg} -v {vault} -n {default}
backup policy create --backup-management-type {backup-management-type} -g {rg} -v {vault} -n {policy5} --policy '{policy5_json}'
backup policy delete -g {rg} -v {vault} -n {policy5}
backup policy set -g {rg} -v {vault} --policy '{policy1_json}'
backup policy list -g {rg} -v {vault}
backup policy delete -g {rg} -v {vault} -n {policy3}
backup policy list -g {rg} -v {vault}
backup policy show -g {rg} -v {vault} -n {policy2}
vm show -g {rg} -n {vm} --query id
backup protection check-vm --vm-id {vm_id}
backup protection enable-for-vm -g {rg} -v {vault} --vm {vm} -p DefaultPolicy
backup vault show -g {rg} -n {vault} --query id
backup protection check-vm --vm-id {vm_id}
backup protection disable --backup-management-type AzureIaasVM --workload-type VM -g {rg} -v {vault} -c {vm} -i {vm} --yes
backup item show --backup-management-type AzureIaasVM --workload-type VM -g {rg} -v {vault} -c {vm} -n {vm}
backup protection disable --backup-management-type AzureIaasVM --workload-type VM -g {rg} -v {vault} -c {vm} -i {vm} --delete-backup-data true --yes
backup container list --backup-management-type AzureIaasVM -v {vault} -g {rg}
backup protection check-vm --vm-id {vm_id}
backup recoverypoint list --backup-management-type AzureIaasVM --workload-type VM -g {rg} -v {vault} -c {vm} -i {vm} --query [0].name
backup restore restore-disks -g {rg} -v {vault} -c {vm} -i {vm} -r {rp} --storage-account {sa} --restore-to-staging-storage-account false
backup restore restore-disks -g {rg} -v {vault} -c {vm} -i {vm} -r {rp} -t {target_rg} --storage-account {sa} --restore-to-staging-storage-account
backup job wait -g {rg} -v {vault} -n {job}
backup job show -g {rg} -v {vault} -n {job}
storage blob exists --account-name {sa} -c {container} -n {blob}
backup restore restore-disks -g {rg} -v {vault} -c {vm} -i {vm} -r {rp} --restore-as-unmanaged-disks --storage-account {sa}
backup job wait -g {rg} -v {vault} -n {job2}
backup job show -g {rg} -v {vault} -n {job2}
backup recoverypoint list --backup-management-type AzureIaasVM --workload-type VM -g {rg} -v {vault} -c {vm} -i {vm} --query [].name
backup recoverypoint show --backup-management-type AzureIaasVM --workload-type VM -g {rg} -v {vault} -c {vm} -i {vm} -n {rp1}
backup recoverypoint show --backup-management-type AzureIaasVM --workload-type VM -g {rg} -v {vault} -c {vm} -i {vm} -n {rp2}
backup protection enable-for-vm -g {rg} -v {vault} --vm {vm} -p DefaultPolicy
backup container show -n {vm} -v {vault} -g {rg} --backup-management-type AzureIaasVM --query properties.friendlyName
backup item list -g {rg} -v {vault} -c {container} --backup-management-type AzureIaasVM --workload-type VM --query [0].properties.friendlyName
backup protection backup-now -g {rg} -v {vault} -c {container} -i {item} --backup-management-type AzureIaasVM --workload-type VM --retain-until {retain_date} --query name
backup job wait -g {rg} -v {vault} -n {job}
backup recoverypoint list -g {rg} -v {vault} -c {container} -i {item} --backup-management-type AzureIaasVM --workload-type VM --query [0].name
backup restore restore-disks -g {rg} -v {vault} -c {container} -i {item} -r {recovery_point} --storage-account {sa} --query name --restore-to-staging-storage-account
backup job wait -g {rg} -v {vault} -n {job}
backup protection disable -g {rg} -v {vault} -c {container} -i {item} --backup-management-type AzureIaasVM --workload-type VM --yes
backup protection resume -g {rg} -v {vault} -c {container} -i {item} --policy-name DefaultPolicy --backup-management-type AzureIaasVM
backup protection disable -g {rg} -v {vault} -c {container} -i {item} --backup-management-type AzureIaasVM --workload-type VM --delete-backup-data true --yes
backup protection disable --backup-management-type AzureIaasVM --workload-type VM -g {rg} -v {vault} -c {vm} -i {vm} --delete-backup-data --yes
backup item show --backup-management-type AzureIaasVM --workload-type VM -g {rg} -v {vault} -c {vm} -n {vm}
backup protection undelete -g {rg} -v {vault} -c {vm} -i {vm} --workload-type VM --backup-management-type AzureIaasVM 
backup vault backup-properties set -g {rg} -n {vault} --soft-delete-feature-state Disable
backup item show --backup-management-type AzureIaasVM --workload-type VM -g {rg} -v {vault} -c {vm} -n {vm}
backup vault create -n {vault3} -g {rg} -l {loc}
backup vault create -n {vault4} -g {rg} -l {loc}
backup vault list
backup vault list -g {rg}
backup vault backup-properties show -n {vault1} -g {rg} --query [0]
backup vault backup-properties set -n {vault1} -g {rg} --backup-storage-redundancy {model}
backup vault backup-properties show -n {vault1} -g {rg} --query [0]
backup vault backup-properties set -n {vault1} -g {rg} --backup-storage-redundancy {model}
backup vault backup-properties show -n {vault1} -g {rg} --query [0]
backup vault delete -n {vault4} -g {rg} -y
backup vault list
backup recoverypoint list --backup-management-type AzureWorkload --workload-type SAPHANA -g {rg} -v {vault} -c {container} -i {item}
backup recoverypoint list -g {rg} -v {vault} -i {item} -c {container} --backup-management-type AzureWorkload --is-ready-for-move {rp1_is_ready_for_move} --target-tier VaultArchive --query [0]
backup recoverypoint list -g {rg} -v {vault} -i {item} -c {container} --backup-management-type AzureWorkload --tier {rp1_tier} --query [0]
backup recoverypoint move -g {rg} -v {vault} -i {item} -c {container} --source-tier VaultStandard --destination-tier VaultArchive --name {rp_move}
backup recoveryconfig show --vault-name {vault} -g {rg} --restore-mode OriginalWorkloadRestore --item-name {item} --container-name {container} --rp-name {rp_restore}
backup restore restore-azurewl -g {rg} -v {vault} --recovery-config recoveryconfig_hana_archive.json --rehydration-priority High
backup container register -v {vault} -g {rg} --backup-management-type AzureWorkload --workload-type {wt} --resource-id {id}
backup container list -v {vault} -g {rg} --backup-management-type AzureWorkload
backup container show -n {name} -v {vault} -g {rg} --backup-management-type AzureWorkload
backup container show -n {container_name} -v {vault} -g {rg} --backup-management-type AzureWorkload
backup container list -v {vault} -g {rg} --backup-management-type AzureWorkload
backup container re-register -v {vault} -g {rg} --backup-management-type AzureWorkload --workload-type {wt} -y --container-name {name}
backup container list -v {vault} -g {rg} --backup-management-type AzureWorkload
backup container unregister -v {vault} -g {rg} -c {name} -y
backup container list -v {vault} -g {rg} --backup-management-type AzureWorkload
backup container register -v {vault} -g {rg} --backup-management-type AzureWorkload --workload-type {wt} --resource-id {id}
backup container list -v {vault} -g {rg} --backup-management-type AzureWorkload
backup protection enable-for-azurewl -v {vault} -g {rg} -p {policy} --protectable-item-type {pit} --protectable-item-name {item} --server-name {fname} --workload-type {wt}
backup container show -n {name} -v {vault} -g {rg} --backup-management-type AzureWorkload --query name
backup item show -g {rg} -v {vault} -c {name} -n {item} --backup-management-type AzureWorkload --workload-type SAPHanaDatabase
backup container show -n {name} -v {vault} -g {rg} --backup-management-type AzureWorkload --query name
backup item show -g {rg} -v {vault} -c {container1_fullname} -n {item} --backup-management-type AzureWorkload --workload-type {wt}
backup item show -g {rg} -v {vault} -c {container1_fullname} -n {item1_fullname} --backup-management-type AzureWorkload --workload-type SAPHanaDatabase
backup item list -g {rg} -v {vault} -c {container1} --backup-management-type AzureWorkload --workload-type SAPHanaDatabase
backup item list -g {rg} -v {vault} -c {container1_fullname} --backup-management-type AzureWorkload --workload-type SAPHanaDatabase
backup item list -g {rg} -v {vault} --backup-management-type AzureWorkload --workload-type SAPHanaDatabase
backup item set-policy -g {rg} -v {vault} -c {container1} -n {item1_fullname} -p {policy} --backup-management-type AzureWorkload --workload-type SAPHanaDatabase
backup item show -g {rg} -v {vault} -c {container1} -n {item} --backup-management-type AzureWorkload --workload-type SAPHanaDatabase
backup protection disable -v {vault} -g {rg} -c {container1} --backup-management-type AzureWorkload --workload-type {wt} -i {item} -y --delete-backup-data true
backup container unregister -v {vault} -g {rg} -c {name} -y
backup container list -v {vault} -g {rg} --backup-management-type AzureWorkload
backup policy show -g {rg} -v {vault} -n {policy}
backup policy create -g {rg} -v {vault} --policy {policy_json} --backup-management-type AzureWorkload --workload-type {wt} --name {policy_new}
backup policy list -g {rg} -v {vault}
backup policy show -g {rg} -v {vault} -n {policy_new}
backup policy delete -g {rg} -v {vault} -n {policy_new}
backup policy list -g {rg} -v {vault}
backup container register -v {vault} -g {rg} --backup-management-type AzureWorkload --workload-type {wt} --resource-id {id}
backup container list -v {vault} -g {rg} --backup-management-type AzureWorkload
backup container show -n {name} -v {vault} -g {rg} --query properties.friendlyName --backup-management-type AzureWorkload
backup protectable-item list -g {rg} --vault-name {vault} --workload-type {wt}
backup protectable-item show -g {rg} --vault-name {vault} --name {protectable_item_name} --workload-type {wt} --protectable-item-type {pit} --server-name {fname}
backup container unregister -v {vault} -g {rg} -c {name} -y
backup container list -v {vault} -g {rg} --backup-management-type AzureWorkload
backup container register -v {vault} -g {rg} --backup-management-type AzureWorkload --workload-type {wt} --resource-id {id}
backup container list -v {vault} -g {rg} --backup-management-type AzureWorkload
backup protection enable-for-azurewl -v {vault} -g {rg} -p {policy} --protectable-item-type {pit} --protectable-item-name {item} --server-name {fname} --workload-type {wt}
backup container show -n {name} -v {vault} -g {rg} --backup-management-type AzureWorkload --query name
backup protection backup-now -v {vault} -g {rg} -i {item} -c {name} --backup-type Full --enable-compression false
backup job wait -v {vault} -g {rg} -n {job}
backup item show -g {rg} -v {vault} -c {container1} -n {item} --backup-management-type AzureWorkload
backup protection disable -v {vault} -g {rg} -i {item} -c {name} --backup-management-type AzureWorkload -y
backup item show -g {rg} -v {vault} -c {container1} -n {item} --backup-management-type AzureWorkload
backup protection disable -v {vault} -g {rg} -c {container1} --backup-management-type AzureWorkload --workload-type {wt} -i {item} -y --delete-backup-data true
backup container unregister -v {vault} -g {rg} -c {name} -y
backup container list -v {vault} -g {rg} --backup-management-type AzureWorkload
backup container register -v {vault} -g {rg} --backup-management-type AzureWorkload --workload-type {wt} --resource-id {id}
backup container list -v {vault} -g {rg} --backup-management-type AzureWorkload
backup protection enable-for-azurewl --vault-name {vault} -g {rg} -p {policy} --protectable-item-type {pit} --protectable-item-name {item} --server-name {fname} --workload-type {wt}
backup container show -n {name} -v {vault} -g {rg} --backup-management-type AzureWorkload --query name
backup protection backup-now -v {vault} -g {rg} -c {name} -i {item} --backup-type Full --enable-compression false
backup job wait -v {vault} -g {rg} -n {job}
backup item show -g {rg} -v {vault} -c {container1} -n {item} --backup-management-type AzureWorkload
backup recoverypoint list -g {rg} -v {vault} -c {name} -i {item} --workload-type {wt} --query [0]
backup recoveryconfig show --vault-name {vault} -g {rg} --restore-mode AlternateWorkloadRestore --rp-name {rp} --item-name {item} --container-name {container1} --target-item-name {titem} --target-server-type {tpit} --target-server-name {fname} --workload-type {wt}
backup restore restore-azurewl --vault-name {vault} -g {rg} --recovery-config recoveryconfig_hana_restore.json
backup job wait -v {vault} -g {rg} -n {job}
backup recoveryconfig show --vault-name {vault} -g {rg} --restore-mode OriginalWorkloadRestore --item-name {item} --container-name {container1} --rp-name {rp}
backup restore restore-azurewl --vault-name {vault} -g {rg} --recovery-config recoveryconfig_hana_restore.json
backup job wait -v {vault} -g {rg} -n {job}
backup protection disable -v {vault} -g {rg} -c {container1} --backup-management-type AzureWorkload --workload-type SAPHanaDatabase -i {item} -y
backup item show -g {rg} -v {vault} -c {container1} -n {item} --backup-management-type AzureWorkload
backup protection disable -v {vault} -g {rg} -c {container1} --backup-management-type AzureWorkload --workload-type {wt} -i {item} -y --delete-backup-data true
backup container unregister -v {vault} -g {rg} -c {name} -y
backup container list -v {vault} -g {rg} --backup-management-type AzureWorkload
backup container register -v {vault} -g {rg} --backup-management-type AzureWorkload --workload-type {wt} --resource-id {id}
backup container list -v {vault} -g {rg} --backup-management-type AzureWorkload
backup protection enable-for-azurewl -v {vault} -g {rg} -p {policy} --protectable-item-type {pit} --protectable-item-name {item} --server-name {fname} --workload-type {wt}
backup container show -n {name} -v {vault} -g {rg} --backup-management-type AzureWorkload --query name
backup recoverypoint list -g {rg} -v {vault} -c {name} -i {item} --workload-type {wt} --query [].name
backup recoverypoint show-log-chain -g {rg} -v {vault} -c {name} -i {item} --workload-type {wt}
backup recoverypoint show-log-chain -g {rg} -v {vault} -c {name} -i {item} --workload-type {wt}
backup protection disable -v {vault} -g {rg} -c {container1} --backup-management-type AzureWorkload --workload-type {wt} -i {item} -y --delete-backup-data true
backup container unregister -v {vault} -g {rg} -c {name} -y
backup container list -v {vault} -g {rg} --backup-management-type AzureWorkload
backup recoverypoint list --backup-management-type AzureWorkload --workload-type MSSQL -g {rg} -v {vault} -c {container} -i {item}
backup recoverypoint list -g {rg} -v {vault} -i {item} -c {container} --backup-management-type AzureWorkload --is-ready-for-move {rp1_is_ready_for_move} --target-tier VaultArchive --query [0]
backup recoverypoint list -g {rg} -v {vault} -i {item} -c {container} --backup-management-type AzureWorkload --tier {rp1_tier} --query [0]
backup recoverypoint move -g {rg} -v {vault} -i {item} -c {container} --source-tier VaultStandard --destination-tier VaultArchive --name {rp_move}
backup recoverypoint list --backup-management-type AzureWorkload --workload-type MSSQL -g {rg} -v {vault} -c {container} -i {item} --tier VaultArchive --query [0]
backup recoveryconfig show --vault-name {vault} -g {rg} --restore-mode OriginalWorkloadRestore --item-name {item} --container-name {container} --rp-name {rp_restore}
backup restore restore-azurewl -g {rg} -v {vault} --recovery-config recoveryconfig_sql_archive.json --rehydration-priority High
backup container register -v {vault} -g {rg} --backup-management-type AzureWorkload --workload-type {wt} --resource-id {id}
backup container list -v {vault} -g {rg} --backup-management-type AzureWorkload
backup protection auto-enable-for-azurewl -v {vault} -g {rg} -p {policy} --protectable-item-name {item} --protectable-item-type {pit} --server-name {fname} --workload-type {wt}
backup protection auto-disable-for-azurewl -v {vault} -g {rg} --protectable-item-name {item} --protectable-item-type {pit} --server-name {fname} --workload-type {wt}
backup container unregister -v {vault} -g {rg} -c {name} -y
backup container list -v {vault} -g {rg} --backup-management-type AzureWorkload
backup container register -v {vault} -g {rg} --backup-management-type AzureWorkload --workload-type {wt} --resource-id {id} 
backup container list -v {vault} -g {rg} --backup-management-type AzureWorkload
backup container show -n {name} -v {vault} -g {rg} --backup-management-type AzureWorkload
backup container show -n {container_name} -v {vault} -g {rg} --backup-management-type AzureWorkload
backup container list -v {vault} -g {rg} --backup-management-type AzureWorkload
backup container re-register -v {vault} -g {rg} --backup-management-type AzureWorkload --workload-type {wt} -y --container-name {name}
backup container list -v {vault} -g {rg} --backup-management-type AzureWorkload
backup container unregister -v {vault} -g {rg} -c {name} -y
backup container list -v {vault} -g {rg} --backup-management-type AzureWorkload
backup container list -v {vault} -g {rg} --backup-management-type AzureWorkload
backup container show -n {name} -v {vault} -g {rg} --backup-management-type AzureWorkload --query name
backup item show -g {rg} -v {vault} -c {container1} -n {item} --backup-management-type AzureWorkload
backup recoverypoint list -g {rg} -v {vault} -c {name} -i {item} --workload-type {wt} --use-secondary-region --query [0]
backup recoveryconfig show --vault-name {vault} -g {rg} --restore-mode AlternateWorkloadRestore --rp-name {rp} --item-name {item} --container-name {container1} --target-item-name {titem} --target-server-type SQLInstance --target-server-name {tserver} --target-container-name {tcontainer} --workload-type {wt} --target-vault-name {tvault} --target-resource-group {trg}
backup restore restore-azurewl --vault-name {vault} -g {rg} --recovery-config recoveryconfig_sql_crr.json --use-secondary-region
backup job wait -v {vault} -g {rg} -n {job} --use-secondary-region
backup recoveryconfig show --vault-name {vault} -g {rg} --restore-mode restoreasfiles --rp-name {rp} --item-name {item} --container-name {container1} --target-container-name {tcontainer} --workload-type {wt} --target-vault-name {tvault} --target-resource-group {trg} --filepath "C:"
backup restore restore-azurewl --vault-name {vault} -g {rg} --recovery-config recoveryconfig_sql_crr.json --use-secondary-region
backup job wait -v {vault} -g {rg} -n {job} --use-secondary-region
backup container register -v {vault} -g {rg} --backup-management-type AzureWorkload --workload-type {wt} --resource-id {id}
backup container list -v {vault} -g {rg} --backup-management-type AzureWorkload
backup protection enable-for-azurewl -v {vault} -g {rg} -p {policy} --protectable-item-type {pit} --protectable-item-name {item} --server-name {fname} --workload-type {wt}
backup container show -n {name} -v {vault} -g {rg} --backup-management-type AzureWorkload --query name
backup item show -g {rg} -v {vault} -c {name} -n {item} --backup-management-type AzureWorkload --workload-type {wt}
backup container show -n {name} -v {vault} -g {rg} --backup-management-type AzureWorkload --query name
backup item show -g {rg} -v {vault} -c {container1_fullname} -n {item} --backup-management-type AzureWorkload --workload-type {wt}
backup item show -g {rg} -v {vault} -c {container1_fullname} -n {item1_fullname} --backup-management-type AzureWorkload --workload-type SAPHanaDatabase
backup item list -g {rg} -v {vault} -c {container1} --backup-management-type AzureWorkload --workload-type SQLDataBase
backup item list -g {rg} -v {vault} -c {container1_fullname} --backup-management-type AzureWorkload --workload-type SQLDataBase
backup item list -g {rg} -v {vault} --backup-management-type AzureWorkload --workload-type SQLDataBase
backup item set-policy -g {rg} -v {vault} -c {container1} -n {item1_fullname} -p {policy} --backup-management-type AzureWorkload --workload-type SQLDataBase
backup item show -g {rg} -v {vault} -c {container1} -n {item} --backup-management-type AzureWorkload --workload-type SQLDataBase
backup protection disable -v {vault} -g {rg} -c {container1} --backup-management-type AzureWorkload --workload-type {wt} -i {item} -y --delete-backup-data true
backup container unregister -v {vault} -g {rg} -c {name} -y
backup container list -v {vault} -g {rg} --backup-management-type AzureWorkload
backup policy show -g {rg} -v {vault} -n {policy}
backup policy create -g {rg} -v {vault} --policy {policy_json} --backup-management-type AzureWorkload --workload-type {wt} --name {policy_new}
backup policy list -g {rg} -v {vault}
backup policy set -g {rg} -v {vault} --policy {policy1_json} -n {policy_new}
backup policy set -g {rg} -v {vault} --backup-management-type AzureWorkload --fix-for-inconsistent-items -n {policy_new}
backup policy show -g {rg} -v {vault} -n {policy_new}
backup policy delete -g {rg} -v {vault} -n {policy_new}
backup policy list -g {rg} -v {vault}
backup container register -v {vault} -g {rg} --backup-management-type AzureWorkload --workload-type {wt} --resource-id {id}
backup container list -v {vault} -g {rg} --backup-management-type AzureWorkload
backup container show -n {name} -v {vault} -g {rg} --query properties.friendlyName --backup-management-type AzureWorkload
backup protectable-item list -g {rg} --vault-name {vault} --workload-type {wt}
backup protectable-item show -g {rg} --vault-name {vault} --name {protectable_item_name} --workload-type {wt} --protectable-item-type {pit} --server-name {fname}
backup container unregister -v {vault} -g {rg} -c {name} -y
backup container list -v {vault} -g {rg} --backup-management-type AzureWorkload
backup container register -v {vault} -g {rg} --backup-management-type AzureWorkload --workload-type {wt} --resource-id {id}
backup container list -v {vault} -g {rg} --backup-management-type AzureWorkload
backup protection enable-for-azurewl -v {vault} -g {rg} -p {policy} --protectable-item-type {pit} --protectable-item-name {item} --server-name {fname} --workload-type {wt}
backup container show -n {name} -v {vault} -g {rg} --backup-management-type AzureWorkload --query name
backup protection backup-now -v {vault} -g {rg} -i {item} -c {name} --backup-type Full --enable-compression false
backup job wait -v {vault} -g {rg} -n {job}
backup item show -g {rg} -v {vault} -c {container1} -n {item} --backup-management-type AzureWorkload
backup protection disable -v {vault} -g {rg} -i {item} -c {name} --backup-management-type AzureWorkload -y
backup item show -g {rg} -v {vault} -c {container1} -n {item} --backup-management-type AzureWorkload
backup protection disable -v {vault} -g {rg} -c {container1} --backup-management-type AzureWorkload --workload-type {wt} -i {item} -y --delete-backup-data true
backup container unregister -v {vault} -g {rg} -c {name} -y
backup container list -v {vault} -g {rg} --backup-management-type AzureWorkload
backup container register -v {vault} -g {rg} --backup-management-type AzureWorkload --workload-type {wt} --resource-id {id}
backup container list -v {vault} -g {rg} --backup-management-type AzureWorkload
backup protection enable-for-azurewl -v {vault} -g {rg} -p {policy} --protectable-item-type {pit} --protectable-item-name {item} --server-name {fname} --workload-type {wt}
backup container show -n {name} -v {vault} -g {rg} --backup-management-type AzureWorkload --query name
backup protection backup-now -v {vault} -g {rg} -i {item} -c {name} --backup-type Full --enable-compression false
backup job wait -v {vault} -g {rg} -n {job}
backup item show -g {rg} -v {vault} -c {container1} -n {item} --backup-management-type AzureWorkload
backup recoverypoint list -g {rg} -v {vault} -c {name} -i {item} --workload-type {wt} --query [0]
backup recoveryconfig show --vault-name {vault} -g {rg} --restore-mode AlternateWorkloadRestore --rp-name {rp} --item-name {item} --container-name {container1} --target-item-name {titem} --target-server-type SQLInstance --target-server-name {fname} --workload-type {wt}
backup restore restore-azurewl --vault-name {vault} -g {rg} --recovery-config recoveryconfig_sql_restore.json
backup job wait -v {vault} -g {rg} -n {job}
backup recoveryconfig show --vault-name {vault} -g {rg} --restore-mode OriginalWorkloadRestore --item-name {item} --container-name {container1} --rp-name {rp}
backup restore restore-azurewl --vault-name {vault} -g {rg} --recovery-config recoveryconfig_sql_restore.json
backup job wait -v {vault} -g {rg} -n {job}
backup protection disable -v {vault} -g {rg} -c {name} --backup-management-type AzureWorkload --workload-type {wt} -i {item} -y --delete-backup-data true
backup container unregister -v {vault} -g {rg} -c {name} -y
backup container list -v {vault} -g {rg} --backup-management-type AzureWorkload
backup container register -v {vault} -g {rg} --backup-management-type AzureWorkload --workload-type {wt} --resource-id {id}
backup container list -v {vault} -g {rg} --backup-management-type AzureWorkload
backup protection enable-for-azurewl -v {vault} -g {rg} -p {policy} --protectable-item-type {pit} --protectable-item-name {item} --server-name {fname} --workload-type {wt}
backup container show -n {name} -v {vault} -g {rg} --backup-management-type AzureWorkload --query name
backup protection backup-now -v {vault} -g {rg} -i {item} -c {name} --backup-type Full --enable-compression false
backup job wait -v {vault} -g {rg} -n {job}
backup item show -g {rg} -v {vault} -c {container1} -n {item} --backup-management-type AzureWorkload
backup recoverypoint list -g {rg} -v {vault} -c {name} -i {item} --workload-type {wt} --query [0]
backup recoveryconfig show --vault-name {vault} -g {rg} --restore-mode RestoreAsFiles --rp-name {rp} --filepath "C:" --target-container-name {container1} --item-name {item} --container-name {container1}  --workload-type {wt}
backup restore restore-azurewl --vault-name {vault} -g {rg} --recovery-config recoveryconfig_sql_raf.json
backup job wait -v {vault} -g {rg} -n {job}
backup protection disable -v {vault} -g {rg} -c {name} --backup-management-type AzureWorkload --workload-type {wt} -i {item} -y --delete-backup-data true
backup container unregister -v {vault} -g {rg} -c {name} -y
backup container list -v {vault} -g {rg} --backup-management-type AzureWorkload
backup container register -v {vault} -g {rg} --backup-management-type AzureWorkload --workload-type {wt} --resource-id {id}
backup container list -v {vault} -g {rg} --backup-management-type AzureWorkload
backup protection enable-for-azurewl -v {vault} -g {rg} -p {policy} --protectable-item-type {pit} --protectable-item-name {item} --server-name {fname} --workload-type {wt}
backup container show -n {name} -v {vault} -g {rg} --backup-management-type AzureWorkload --query name
backup recoverypoint list -g {rg} -v {vault} -c {name} -i {item} --workload-type {wt} --query [].name
backup recoverypoint show-log-chain -g {rg} -v {vault} -c {name} -i {item} --workload-type {wt}
backup recoverypoint show-log-chain -g {rg} -v {vault} -c {name} -i {item} --workload-type {wt}
backup protection disable -v {vault} -g {rg} -c {container1} --backup-management-type AzureWorkload --workload-type {wt} -i {item} -y --delete-backup-data true
backup container unregister -v {vault} -g {rg} -c {name} -y
backup container list -v {vault} -g {rg} --backup-management-type AzureWorkload
batch account keys list -n clibatch000002 -g clitest.rg000001 --query "secondary" -otsv
batch account show -n clibatch000002 -g clitest.rg000001
batch certificate create --thumbprint {cert} --certificate-file "{cert_f}" --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch certificate list --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch certificate delete --thumbprint {cert} --yes --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch certificate show --thumbprint {cert} --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch account keys list -n clibatch000002 -g clitest.rg000001 --query "secondary" -otsv
batch account show -n clibatch000002 -g clitest.rg000001
batch job-schedule create --json-file "{js_file}" --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch job create --json-file "{j_file}" --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch job list --job-schedule-id {js_id} --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch job list --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch job delete --job-id {j_id} --yes --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch job-schedule delete --job-schedule-id {js_id} --yes --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch account keys list -n clibatch000002 -g clitest.rg000001 --query "secondary" -otsv
batch account show -n clibatch000002 -g clitest.rg000001
batch pool create --id {p_id} --vm-size small --os-family 4 --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch job create --id {j_id} --metadata test=value --job-manager-task-environment-settings a=b --job-max-task-retry-count 5  --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch job create --id {j_id} --metadata test=value --job-max-task-retry-count 5 --job-manager-task-id JobManager --job-manager-task-command-line "cmd /c set AZ_BATCH_TASK_ID" --job-manager-task-environment-settings CLI_TEST_VAR=CLI_TEST_VAR_VALUE --pool-id {p_id} --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch job show --job-id {j_id} --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch job set --job-id {j_id} --on-all-tasks-complete badValue  --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch job set --job-id {j_id} --job-max-wall-clock-time P3Y6M4DT12H30M5S --on-all-tasks-complete terminatejob --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch job show --job-id {j_id} --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch job reset --job-id {j_id} --pool-id {p_id} --on-all-tasks-complete terminatejob --if-unmodified-since {start} --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch job reset --job-id {j_id} --pool-id {p_id}  --on-all-tasks-complete terminatejob  --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch job show --job-id {j_id} --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch account show -n clibatch000002 -g clitest.rg000001
batch account keys list -n clibatch000002 -g clitest.rg000001 --query "secondary" -otsv
batch pool create --json-file "{c_file}" --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch pool create --id pool_image1 --vm-size Standard_A1 --image a:b:c --node-agent-sku-id "batch.node.windows amd64" --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch pool create --id pool_image1 --vm-size Standard_A1 --image /subscriptions/11111111-1111-1111-1111-111111111111/resourceGroups/test_rg/providers/Microsoft.Compute/images/custom_image --node-agent-sku-id "batch.node.windows amd64" --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch pool create --id pool_image1 --vm-size Standard_A1 --image canonical:ubuntuserver:18.04-lts --node-agent-sku-id "batch.node.ubuntu 18.04" --disk-encryption-targets "TemporaryDisk" --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch pool show --pool-id {p_id} --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch pool resize --pool-id {p_id} --target-dedicated-nodes 0 --target-low-priority-nodes 3 --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch pool show --pool-id {p_id} --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch pool node-counts list --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch pool resize --pool-id {p_id} --abort --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch pool show --pool-id {p_id} --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch pool reset --pool-id {p_id} --json-file "{u_file}" --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch pool reset --pool-id {p_id} --start-task-command-line hostname --metadata a=b c=d --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch pool delete --pool-id {p_id} --yes --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch account keys list -n clibatch000002 -g clitest.rg000001 --query "secondary" -otsv
batch account show -n clibatch000002 -g clitest.rg000001
batch pool create --id {pool_p} --vm-size small --os-family 4 --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch pool create --id {pool_i} --vm-size Standard_A1 --image Canonical:UbuntuServer:16.04.0-LTS --node-agent-sku-id "batch.node.ubuntu 16.04" --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch pool create --id missing-params-test --os-family 4 --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch pool create --id missing-required-group-test --vm-size small --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch pool create --id mutually-exclusive-test --vm-size small --os-family 4 --image Canonical:UbuntuServer:16-LTS:latest --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch pool create --id invalid-size-test --vm-size small --image Canonical:UbuntuServer:16.04.0-LTS --node-agent-sku-id "batch.node.ubuntu 16.04" --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch pool create --id missing-optional-test --vm-size small --os-family 4 --start-task-wait-for-success --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch pool create --json-file "{json}" --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch pool show --pool-id azure-cli-test-json --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch pool create --json-file batch-pool-create-missing.json --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch pool create --json-file "{json}" --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch pool create --json-file "{json}" --vm-size small --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch pool list --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch pool list --filter "id eq '{pool_p}'" --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch pool resize --pool-id {pool_p} --target-dedicated-nodes 0 --target-low-priority-nodes 5 --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch pool show --pool-id {pool_p} --select "allocationState, targetLowPriorityNodes" --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch pool resize --pool-id {pool_p} --abort --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch pool autoscale enable --pool-id {pool_i} --auto-scale-formula "$TargetLowPriorityNodes=3" --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch pool show --pool-id {pool_i} --select "enableAutoScale" --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch pool autoscale evaluate --pool-id {pool_i} --auto-scale-formula "$TargetLowPriorityNodes=3" --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch pool autoscale disable --pool-id {pool_i} --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch pool show --pool-id {pool_i} --select "enableAutoScale" --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch pool usage-metrics list --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch pool show --pool-id {pool_j} --select "startTask" --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch pool set --pool-id {pool_j} --start-task-command-line new_value --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch pool show --pool-id {pool_j} --select "startTask" --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch pool supported-images list --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch pool delete --pool-id {pool_i} --yes --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch pool create --id app_package_test --vm-size small --os-family 4 --application-package-references does-not-exist --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch pool set --pool-id {pool_p} --application-package-references does-not-exist --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch account keys list -n clibatch000002 -g clitest.rg000001 --query "secondary" -otsv
batch account show -n clibatch000002 -g clitest.rg000001
batch job create --json-file "{j_file}" --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch task create --job-id {j_id} --json-file "{t_file}" --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch task show --job-id {j_id} --task-id {t_id} --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch task delete --job-id {j_id} --task-id {t_id} --yes --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch task create --job-id {j_id} --task-id aaa --command-line "ping 127.0.0.1 -n 30" --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch job task-counts show --job-id {j_id} --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch task delete --job-id {j_id} --task-id aaa --yes --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch task create --job-id {j_id} --json-file "{ts_file}" --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
batch job delete --job-id {j_id} --yes --account-name {acc_n} --account-key "{acc_k}" --account-endpoint {acc_u}
storage account create -g {rg} -n {str_n} -l {loc} --sku Standard_LRS
batch account create -g {rg} -n {acc} -l {loc}
batch account set -g {rg} -n {acc} --storage-account {str_n}
batch account show -g {rg} -n {acc}
batch account autostorage-keys sync -g {rg} -n {acc}
batch account keys list -g {rg} -n {acc}
batch account keys renew -g {rg} -n {acc} --key-name primary
batch account login -g {rg} -n {acc}
batch account login -g {rg} -n {acc} --shared-key-auth
batch account outbound-endpoints -g {rg} -n {acc}
batch account delete -g {rg} -n {acc} --yes
batch account list -g {rg}
batch location quotas show -l {loc}
batch location list-skus -l {loc} --query "[0:20]"
storage account create -g {rg} -n {str_n} -l {loc} --sku Standard_LRS
batch account create -g {rg} -n {acc} -l {loc} --storage-account {str_n}
batch application create -g {rg} -n {acc} --application-name {app} 
batch application list -g {rg} -n {acc}
batch application package create -g {rg} -n {acc} --application-name {app} --version {app_p} --package-file "{app_f}"
batch application package activate -g {rg} -n {acc} --application-name {app} --version {app_p} --format zip
batch application package show -g {rg} -n {acc} --application-name {app} --version {app_p}
batch application set -g {rg} -n {acc} --application-name {app} --default-version {app_p}
batch application show -g {rg} -n {acc} --application-name {app}
batch application package delete -g {rg} -n {acc} --application-name {app} --version {app_p} --yes
batch application delete -g {rg} -n {acc} --application-name {app} --yes
batch application list -g {rg} -n {acc}
storage account delete -g {rg} -n {str_n} --yes
storage share create -n share
batchai workspace create -g clitest.rg000001 -n workspace
batchai cluster create -g clitest.rg000001 -w workspace -n cluster -f "C:\\Code\\azure-cli\\src\\azure-cli\\azure\\cli\\command_modules\\batchai\\tests\\latest\\data\\auto_scale_cluster_with_azure_files.json"
batchai experiment create -g clitest.rg000001 -w workspace -n experiment
batchai job create -c cluster -g clitest.rg000001 -w workspace -e experiment -n job -f "C:\\Code\\azure-cli\\src\\azure-cli\\azure\\cli\\command_modules\\batchai\\tests\\latest\\data\\custom_toolkit_job.json"
batchai job wait -g clitest.rg000001 -w workspace -e experiment -n job
batchai job show -g clitest.rg000001 -w workspace -e experiment -n job
batchai cluster show -g clitest.rg000001 -w workspace -n cluster
batchai workspace create -g clitest.rg000001 -n workspace
batchai cluster create -g clitest.rg000001 -w workspace -n cluster -i UbuntuLTS --vm-size STANDARD_D1 -t 0 -u DemoUser -k "C:\\Code\\azure-cli\\src\\azure-cli\\azure\\cli\\command_modules\\batchai\\tests\\latest\\data\\key.txt" --use-auto-storage
storage share create -n share
storage container create -n container
batchai workspace create -g clitest.rg000001 -n workspace
batchai cluster create -g clitest.rg000001 -w workspace -n cluster -f "C:\\Code\\azure-cli\\src\\azure-cli\\azure\\cli\\command_modules\\batchai\\tests\\latest\\data\\simple_cluster.json" --afs-name share --bfs-name container -u DemoUser -k "C:\\Code\\azure-cli\\src\\azure-cli\\azure\\cli\\command_modules\\batchai\\tests\\latest\\data\\key.txt"
batchai cluster show -g clitest.rg000001 -w workspace -n cluster
batchai workspace create -g clitest.rg000001 -n workspace
batchai cluster create -n cluster -g clitest.rg000001 -w workspace -s STANDARD_D1 -t 0 -u DemoUser -k "C:\\Code\\azure-cli\\src\\azure-cli\\azure\\cli\\command_modules\\batchai\\tests\\latest\\data\\key.txt" --use-auto-storage --setup-task "echo hi" --setup-task-output "$AZ_BATCHAI_MOUNT_ROOT/autoafs"
storage share create -n share
storage container create -n container
batchai workspace create -g clitest.rg000001 -n workspace
batchai cluster create -g clitest.rg000001 -w workspace -n cluster -i UbuntuLTS --vm-size STANDARD_D1 --min 1 --max 1 -u DemoUser -k "C:\\Code\\azure-cli\\src\\azure-cli\\azure\\cli\\command_modules\\batchai\\tests\\latest\\data\\key.txt" --afs-name share --bfs-name container
batchai cluster show -g clitest.rg000001 -w workspace -n cluster
storage share create -n share
storage container create -n container
batchai workspace create -g clitest.rg000001 -n workspace
batchai cluster create -g clitest.rg000001 -w workspace -n cluster -f "C:\\Code\\azure-cli\\src\\azure-cli\\azure\\cli\\command_modules\\batchai\\tests\\latest\\data\\simple_cluster.json" -u DemoUser -k "C:\\Code\\azure-cli\\src\\azure-cli\\azure\\cli\\command_modules\\batchai\\tests\\latest\\data\\key.txt"
batchai experiment create -g clitest.rg000001 -w workspace -n experiment
batchai job create -c cluster -g clitest.rg000001 -w workspace -e experiment -n job -f "C:\\Code\\azure-cli\\src\\azure-cli\\azure\\cli\\command_modules\\batchai\\tests\\latest\\data\\job_with_file_systems.json"
batchai job wait -g clitest.rg000001 -w workspace -e experiment -n job
batchai job show -g clitest.rg000001 -w workspace -e experiment -n job
batchai job file list -g clitest.rg000001 -w workspace -e experiment -j job -d stdouterr
batchai job file list -g clitest.rg000001 -w workspace -e experiment -j job -d OUTPUT
batchai job create -c cluster -g clitest.rg000001 -w workspace -e experiment -n job2 -f "C:\\Code\\azure-cli\\src\\azure-cli\\azure\\cli\\command_modules\\batchai\\tests\\latest\\data\\job_referencing_file_systems.json" --afs-name share --bfs-name container
batchai job wait -g clitest.rg000001 -w workspace -e experiment -n job2
batchai job show -g clitest.rg000001 -w workspace -e experiment -n job2
batchai job file list -g clitest.rg000001 -w workspace -e experiment -j job2 -d stdouterr
batchai job file list -g clitest.rg000001 -w workspace -e experiment -j job2 -d OUTPUT
storage share create -n share
batchai workspace create -g clitest.rg000001 -n workspace
batchai workspace list -g clitest.rg000001
batchai cluster create -g clitest.rg000001 -w workspace -n cluster -f "C:\\Code\\azure-cli\\src\\azure-cli\\azure\\cli\\command_modules\\batchai\\tests\\latest\\data\\cluster_with_azure_files.json"
batchai experiment create -g clitest.rg000001 -w workspace -n experiment
batchai experiment list -g clitest.rg000001 -w workspace
batchai job create -c cluster -g clitest.rg000001 -w workspace -e experiment -n job -f "C:\\Code\\azure-cli\\src\\azure-cli\\azure\\cli\\command_modules\\batchai\\tests\\latest\\data\\custom_toolkit_job.json"
batchai job wait -g clitest.rg000001 -w workspace -e experiment -n job
batchai job show -g clitest.rg000001 -w workspace -e experiment -n job
batchai job file list -g clitest.rg000001 -w workspace -e experiment -j job -d stdouterr
batchai job file list -g clitest.rg000001 -w workspace -e experiment -j job -d=OUTPUT
batchai cluster resize -g clitest.rg000001 -w workspace -n cluster -t 0
batchai cluster show -g clitest.rg000001 -w workspace -n cluster
batchai cluster resize -g clitest.rg000001 -w workspace -n cluster -t 1
batchai job create -c cluster -g clitest.rg000001 -w workspace -e experiment -n job2 -f "C:\\Code\\azure-cli\\src\\azure-cli\\azure\\cli\\command_modules\\batchai\\tests\\latest\\data\\custom_toolkit_job.json"
batchai job wait -g clitest.rg000001 -w workspace -e experiment -n job2
batchai job show -g clitest.rg000001 -w workspace -e experiment -n job2
batchai cluster delete -g clitest.rg000001 -w workspace -n cluster -y
batchai cluster list -g clitest.rg000001 -w workspace
batchai job delete -g clitest.rg000001 -w workspace -e experiment -n job -y
batchai job delete -g clitest.rg000001 -w workspace -e experiment -n job2 -y
batchai job list -g clitest.rg000001 -w workspace -e experiment
batchai list-usages -l eastus
batchai list-usages -l eastus -o table
billing period list
billing period show -n {period_name}
billing enrollment-account list
billing enrollment-account show -n {enrollment_account_name}
billing balance show --account-name "{myBillingAccount}" --profile-name "{myBillingProfile}"
billing profile list --account-name "{myBillingAccount}"
billing profile list --expand "invoiceSections" --account-name "{myBillingAccount}"
billing profile show --account-name "{myBillingAccount}" --name "{myBillingProfile}"
billing profile show --expand "invoiceSections" --account-name "{myBillingAccount}" --name "{myBillingProfile}"
billing profile list --expand "invoiceSections" --account-name "{myBillingAccount}"
billing profile list --expand "invoiceSections" --account-name "{myBillingAccount}"
billing profile show --account-name "{myBillingAccount}" --name "{myBillingProfile}"
billing customer list --account-name "{myBillingAccount}"
billing customer list --account-name "{myBillingAccount}" --profile-name "{myBillingProfile}"
billing customer show --account-name "{myBillingAccount}" --name "{myCustomer}"
billing customer list --account-name "{myBillingAccount}"
billing policy show --account-name "{myBillingAccount}" --customer-name "{myCustomer}"
billing policy show --account-name {myBillingAccount} --profile-name {myBillingProfile}
billing policy update --account-name "{myBillingAccount}" --profile-name "{myBillingProfile}" --marketplace-purchases "OnlyFreeAllowed" --reservation-purchases "NotAllowed" --view-charges "Allowed"
billing policy show --account-name "{myBillingAccount}" --customer-name "{myCustomer}"
billing policy show --account-name {myBillingAccount} --profile-name {myBillingProfile}
billing property show
billing invoice section list --account-name "{myBillingAccount}" --profile-name "{myBillingProfile}"
billing invoice section show --account-name "{myBillingAccount}" --profile-name "{myBillingProfile}" --name "{myInvoiceSection}"
billing invoice section create --account-name "{myBillingAccount}" --profile-name "{myBillingProfile}" --name "{myInvoiceSection}" --display-name "invoiceSection1" --labels costCategory="Support" pcCode="A123456"
billing invoice section list --account-name "{myBillingAccount}" --profile-name "{myBillingProfile}"
billing invoice section show --account-name "{myBillingAccount}" --profile-name "{myBillingProfile}" --name "{myInvoiceSection}"
billing agreement list --account-name "{myBillingAccount}"
billing agreement show --name "{myAgreement}" --account-name "{myBillingAccount}"
billing permission list --account-name "{myBillingAccount}" --profile-name "{myBillingProfile}" --invoice-section-name "{myInvoiceSection}"
billing permission list --account-name "{myBillingAccount}"
billing role-assignment list --account-name "{myBillingAccount}"
billing role-assignment list --account-name "{myBillingAccount}" --profile-name "{myBillingProfile}"
billing role-assignment list --account-name "{myBillingAccount}" --profile-name "{myBillingProfile}" --invoice-section-name "{myInvoiceSection}"
billing role-definition list --account-name "{myBillingAccount}"
billing role-definition list --account-name "{myBillingAccount}" --profile-name "{myBillingProfile}"
billing role-definition list --account-name "{myBillingAccount}" --profile-name "{myBillingProfile}" --invoice-section-name "{myInvoiceSection}"
billing role-definition show --account-name "{myBillingAccount}" --name {roleDefinitionName} 
billing role-definition show --account-name "{myBillingAccount}" --name {roleDefinitionName} --profile-name "{myBillingProfile}" 
billing role-definition show --account-name "{myBillingAccount}" --name {roleDefinitionName} --profile-name "{myBillingProfile}" --invoice-section-name "{myInvoiceSection}"
billing instruction create --account-name "{myBillingAccount}" --profile-name "{myBillingProfile}" --name "{myInstruction}" --amount 5000 --end-date "2020-12-30T21:26:47.997Z" --start-date "2019-12-30T21:26:47.997Z"
billing instruction update --account-name "{myBillingAccount}" --profile-name "{myBillingProfile}" --name "{myInstruction}" --amount 12
billing instruction show --account-name "{myBillingAccount}" --profile-name "{myBillingProfile}" --name "{myInstruction}"
billing instruction list --account-name "{myBillingAccount}" --profile-name "{myBillingProfile}"
billing instruction show --account-name "{myBillingAccount}" --profile-name "{myBillingProfile}" --name "{myInstruction}"
bot create -k registration -g {rg} -n {botname} -e {endpoint} --appid {app_id} -p {password}
bot authsetting create -g {rg} -n {botname} --client-id {clientid} --client-secret {secret} --provider-scope-string "scope1 scope2" --service google -c myconnname
bot authsetting show -c myconnname -g {rg} -n {botname}
bot authsetting list -n {botname} -g {rg}
bot authsetting delete -g {rg} -n {botname} -c myconnname
bot authsetting list-providers
bot authsetting list-providers --provider-name {service_provider}
bot create -k registration -g {rg} -n {botname} -d {description} -e {endpoint} --appid {app_id} -p {password} --tags key1=value1
bot create -k registration -g {rg} -n {botname} -d {description} -e {endpoint} --appid {app_id} -p {password} --tags key1=value1
bot delete -g {rg} -n {botname}
bot create -k registration -g {rg} -n {botname} --appid {app_id}
bot create -k webapp -g {rg} -n {botname} --appid {app_id} -p "" --lang Javascript --echo
bot create -k webapp -g {rg} -n {botname} --appid {numbers_id} -p {password} --lang Javascript --echo
bot create -k webapp -g {rg} -n {botname} --appid {short_app_id} -p {password} --lang Javascript --echo
bot create -k webapp -g {rg} -n {botname} --appid "" -p {password} --lang Javascript --echo
bot create -k webapp -g {rg} -n {botname} --appid {app_id} --lang Javascript --echo
bot create -k webapp -g {rg} -n {botname} --appid {app_id} -p {password} --lang Javascript
bot create -k webapp -g {rg} -n {botname} --appid {app_id} -p {password} --lang Javascript --echo
bot download -g {rg} -n {botname}
bot publish -g {rg} -n {botname} --code-dir {botname}
bot create -k registration -g {rg} -n {botname} -d {description} -e {endpoint} --appid {app_id} -p {password} --tags key1=value1
bot show -g {rg} -n {botname}
bot update --description description2 -g {rg} -n {botname}
bot delete -g {rg} -n {botname}
bot create -k registration -g {rg} -n {botname} -d {description} -e {endpoint} --appid {app_id}
bot create -k registration -g {rg2} -n {botname} -d {description} -e {endpoint} --appid {app_id}
bot delete -g {rg} -n {botname}
bot create -k webapp -g {rg} -n {botname} --appid {app_id} -p {password} --lang Csharp
bot show -g {rg} -n {botname} --msbot
bot delete -g {rg} -n {botname}
bot create -k webapp -g {rg} -n {botname} --appid {app_id} -p {password} --lang Javascript
bot show -g {rg} -n {botname} --msbot
bot delete -g {rg} -n {botname}
bot create -k registration -g {rg} -n {botname} --appid {app_id}
bot update -g {rg} -n {botname} -e "{endpoint}" --description {description} --sku S1 -d {display_name} --ai-key {ai-key} --ai-api-key {ai-api-key} --ai-app-id {ai-app-id} --tags {tag}={tag-value} --icon-url https://dev.botframework.com/client/images/channels/icons/directline.png
bot delete -g {rg} -n {botname}
bot create -k webapp -g {rg} -n {botname} --appid {app_id} -p {password} --lang Csharp
bot delete -g {rg} -n {botname}
bot prepare-publish -g {rg} -n {botname} --sln-name {sln_name} --proj-name {proj_name} -v v4
bot create -k registration -g {rg} -n {botname} -d {description} -e {endpoint} --appid {app_id} -p {password} --tags key1=value1
bot show -g {rg} -n {botname}
bot prepare-publish -g {rg} -n {botname} --sln-name invalid.sln --proj-name invalid.csproj --code-dir .
bot prepare-publish -g {rg} -n {botname} --sln-name invalid.sln --proj-name invalid.csproj --code-dir .
bot create -k registration -g {rg} -n {botname} --appid {app_id}
bot update -g {rg} -n {botname} --cmk-off --cmk-key-vault-key-url test.url
bot create -k registration -g {rg} -n {botname} -e {endpoint} --appid {app_id} -p {password}
bot directline create -g {rg} -n {botname}
bot directline update -g {rg} -n {botname} --enable-enhanced-auth --trusted-origins {origin_url} --debug
bot create -k registration -g {rg} -n {botname} -e {endpoint} --appid {app_id} -p {password}
bot directline create -g {rg} -n {botname}
bot directline show -g {rg} -n {botname}
bot directline show -g {rg} -n {botname} --with-secrets
bot directline delete -g {rg} -n {botname}
bot create -k registration -g {rg} -n {botname} -e {endpoint} --appid {app_id} -p {password}
bot msteams create -g {rg} -n {botname} --enable-calling true --calling-web-hook https://www.google.com
bot msteams show -g {rg} -n {botname}
bot msteams show -g {rg} -n {botname} --with-secrets
bot msteams delete -g {rg} -n {botname}
bot create -k registration -g {rg} -n {botname} -e {endpoint} --appid {app_id} -p {password}
bot skype create -g {rg} -n {botname} --enable-calling true --enable-media-cards true --enable-messaging true --enable-video true --calling-web-hook https://www.google.com
bot skype show -g {rg} -n {botname}
bot skype show -g {rg} -n {botname} --with-secrets
bot skype delete -g {rg} -n {botname}
bot create -k registration -g {rg} -n {botname} -e {endpoint} --appid {app_id} -p {password}
bot webchat show -g {rg} -n {botname}
bot webchat show -g {rg} -n {botname} --with-secrets
afd custom-domain list -g clitest.rg000001 --profile-name profile000002
afd profile create -g clitest.rg000001 --profile-name profile000002 --sku Standard_AzureFrontDoor
afd custom-domain list -g clitest.rg000001 --profile-name profile000002
afd secret create -g clitest.rg000001 --profile-name profile000002 --secret-name secret000003 --secret-source /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/CliDevReservedGroup/providers/Microsoft.KeyVault/vaults/clibyoc-int/certificates/localdev-wild --use-latest-version True
afd custom-domain create -g clitest.rg000001 --profile-name profile000002 --custom-domain-name customdomain000004 --host-name customdomain000004.localdev.cdn.azure.cn --certificate-type CustomerCertificate --minimum-tls-version TLS12 --secret=/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/clitest.rg000001/providers/Microsoft.Cdn/profiles/profile000002/secrets/secret000003
afd custom-domain show -g clitest.rg000001 --profile-name profile000002 --custom-domain-name customdomain000004
afd custom-domain list -g clitest.rg000001 --profile-name profile000002
afd custom-domain update -g clitest.rg000001 --profile-name profile000002 --custom-domain-name customdomain000004 --certificate-type ManagedCertificate --minimum-tls-version TLS10
afd custom-domain delete -g clitest.rg000001 --profile-name profile000002 --custom-domain-name customdomain000004 --yes
afd custom-domain list -g clitest.rg000001 --profile-name profile000002
afd endpoint list -g clitest.rg000001 --profile-name profile123
afd profile create -g clitest.rg000001 --profile-name profile123 --sku Standard_AzureFrontDoor
afd endpoint list -g clitest.rg000001 --profile-name profile123
afd endpoint create -g clitest.rg000001 --endpoint-name endpoint000002 --profile-name profile123 --origin-response-timeout-seconds 100 --enabled-state Enabled
afd endpoint list -g clitest.rg000001 --profile-name profile123
afd endpoint update -g clitest.rg000001 --endpoint-name endpoint000002 --profile-name profile123 --enabled-state Disabled
afd endpoint update -g clitest.rg000001 --endpoint-name endpoint000002 --profile-name profile123 --origin-response-timeout-seconds 120 --enabled-state Enabled
afd endpoint delete -g clitest.rg000001 --endpoint-name endpoint000002 --profile-name profile123 --yes
afd profile create -g clitest.rg000001 --profile-name profile123 --sku Standard_AzureFrontDoor
afd endpoint create -g clitest.rg000001 --endpoint-name endpoint000002 --profile-name profile123 --origin-response-timeout-seconds 100 --enabled-state Enabled
afd endpoint purge -g clitest.rg000001 --endpoint-name endpoint000002 --profile-name profile123 --content-paths /index.html /javascript/*
afd endpoint purge -g clitest.rg000001 --endpoint-name endpoint000002 --profile-name profile123 --content-paths /index.html /javascript/* --domains endpoint000002.z01.azurefd.net
afd profile create -g clitest.rg000001 --profile-name profile123 --sku Standard_AzureFrontDoor
afd endpoint create -g clitest.rg000001 --endpoint-name endpoint000002 --profile-name profile123 --origin-response-timeout-seconds 100 --enabled-state Enabled
afd log-analytic location list -g clitest.rg000001 --profile-name profile123
afd log-analytic resource list -g clitest.rg000001 --profile-name profile123
afd log-analytic metric list -g clitest.rg000001 --profile-name profile123 --metrics clientRequestCount --date-time-begin 2021-04-02T10:23:07+00:00 --granularity PT5M --date-time-end 2021-04-02T10:28:07+00:00 --custom-domains endpoint000002.z01.azurefd.net --protocols http --group-by cacheStatus
afd log-analytic ranking list -g clitest.rg000001 --profile-name profile123 --metrics clientRequestCount --date-time-begin 2021-04-02T10:23:07+00:00 --date-time-end 2021-04-02T10:28:07+00:00 --custom-domains endpoint000002.z01.azurefd.net --rankings referrer --max-ranking 10
afd endpoint delete -g clitest.rg000001 --endpoint-name endpoint000002 --profile-name profile123 --yes
afd profile create -g clitest.rg000001 --profile-name profile123 --sku Premium_AzureFrontDoor
afd endpoint create -g clitest.rg000001 --endpoint-name endpoint000002 --profile-name profile123 --origin-response-timeout-seconds 100 --enabled-state Enabled
afd waf-log-analytic metric list -g clitest.rg000001 --profile-name profile123 --metrics clientRequestCount --date-time-begin 2021-04-02T10:23:06+00:00 --date-time-end 2021-04-02T10:28:06+00:00 --granularity PT5M --rule-types managed
afd waf-log-analytic ranking list -g clitest.rg000001 --profile-name profile123 --metrics clientRequestCount --date-time-begin 2021-04-02T10:23:06+00:00 --date-time-end 2021-04-02T10:28:06+00:00 --rankings action --max-ranking 10
afd endpoint delete -g clitest.rg000001 --endpoint-name endpoint000002 --profile-name profile123 --yes
afd profile create -g clitest.rg000001 --profile-name profile000002 --sku Standard_AzureFrontDoor
afd origin-group list -g clitest.rg000001 --profile-name profile000002
afd origin-group create -g clitest.rg000001 --profile-name profile000002 --origin-group-name og000003 --probe-request-type GET --probe-protocol Http --probe-interval-in-seconds 120 --probe-path /test1/azure.txt --sample-size 4 --successful-samples-required 3 --additional-latency-in-milliseconds 50
afd origin-group list -g clitest.rg000001 --profile-name profile000002
afd origin-group update -g clitest.rg000001 --profile-name profile000002 --origin-group-name og000003 --probe-request-type GET --probe-protocol Https
afd origin-group update -g clitest.rg000001 --profile-name profile000002 --origin-group-name og000003 --sample-size 5 --additional-latency-in-milliseconds 30
afd origin-group update -g clitest.rg000001 --profile-name profile000002 --origin-group-name og000003 --sample-size 4 --additional-latency-in-milliseconds 30 --probe-request-type HEAD
afd origin-group delete -g clitest.rg000001 --profile-name profile000002 --origin-group-name og000003 --yes
afd origin-group list -g clitest.rg000001 --profile-name profile000002
afd profile create -g clitest.rg000001 --profile-name profile000002 --sku Premium_AzureFrontDoor
afd origin-group create -g clitest.rg000001 --profile-name profile000002 --origin-group-name og000003 --probe-request-type GET --probe-protocol Http --probe-interval-in-seconds 120 --probe-path /test1/azure.txt --sample-size 4 --successful-samples-required 3 --additional-latency-in-milliseconds 50
afd origin create -g clitest.rg000001 --profile-name profile000002 --origin-group-name og000003 --origin-name origin000004 --host-name plstestcli.blob.core.windows.net --origin-host-header plstestcli.blob.core.windows.net --priority 1 --weight 1000 --http-port 80 --https-port 443 --enabled-state Enabled
afd origin create -g clitest.rg000001 --profile-name profile000002 --origin-group-name og000003 --origin-name origin000005 --host-name huaiyiztesthost1.blob.core.chinacloudapi.cn --origin-host-header huaiyiztesthost1.blob.core.chinacloudapi.cn --priority 1 --weight 666 --http-port 8080 --https-port 443 --enabled-state Enabled
afd origin list -g clitest.rg000001 --profile-name profile000002 --origin-group-name og000003
afd origin update -g clitest.rg000001 --profile-name profile000002 --origin-group-name og000003 --origin-name origin000004 --weight 58 --http-port 8080
afd origin update -g clitest.rg000001 --profile-name profile000002 --origin-group-name og000003 --origin-name origin000004 --http-port 80 --enable-private-link --private-link-resource  /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/CliDevReservedGroup/providers/Microsoft.Storage/storageAccounts/plstestcli --private-link-sub-resource blob --private-link-location eastus --private-link-request-message "Private link service from AFD"
afd origin update -g clitest.rg000001 --profile-name profile000002 --origin-group-name og000003 --origin-name origin000004 --private-link-sub-resource table
afd origin update -g clitest.rg000001 --profile-name profile000002 --origin-group-name og000003 --origin-name origin000004 --weight 99 --enable-private-link false --enabled-state Disabled
afd origin delete -g clitest.rg000001 --profile-name profile000002 --origin-group-name og000003 --origin-name origin000004 --yes
afd origin delete -g clitest.rg000001 --profile-name profile000002 --origin-group-name og000003 --origin-name origin000005 --yes
afd origin list -g clitest.rg000001 --profile-name profile000002 --origin-group-name og000003
afd profile list -g clitest.rg000001
afd profile create -g clitest.rg000001 --profile-name profile000002 --sku Standard_AzureFrontDoor --tags tag1=value1 tag2=value2
afd profile list -g clitest.rg000001
afd profile show -g clitest.rg000001 --profile-name profile000002
afd profile update -g clitest.rg000001 --profile-name profile000002 --tags tag3=value3 tag4=value4
afd profile usage -g clitest.rg000001 --profile-name profile000002
afd profile delete -g clitest.rg000001 --profile-name profile000002
afd profile list -g clitest.rg000001
afd profile create -g clitest.rg000001 --profile-name profile000002 --sku Standard_AzureFrontDoor
afd endpoint create -g clitest.rg000001 --endpoint-name endpoint000003 --profile-name profile000002 --origin-response-timeout-seconds 100 --enabled-state Enabled
afd origin-group create -g clitest.rg000001 --profile-name profile000002 --origin-group-name og000004 --probe-request-type GET --probe-protocol Http --probe-interval-in-seconds 120 --probe-path /test1/azure.txt --sample-size 4 --successful-samples-required 3 --additional-latency-in-milliseconds 50
afd origin create -g clitest.rg000001 --profile-name profile000002 --origin-group-name og000004 --origin-name origin000005 --host-name huaiyiztesthost1.blob.core.chinacloudapi.cn --origin-host-header huaiyiztesthost1.blob.core.chinacloudapi.cn --priority 1 --weight 1000 --http-port 80 --https-port 443 --enabled-state Enabled
afd route create -g clitest.rg000001 --profile-name profile000002 --endpoint-name endpoint000003 --route-name route000006 --origin-group og000004 --supported-protocols Https Http --link-to-default-domain Enabled --https-redirect Enabled --forwarding-protocol MatchRequest
afd route list -g clitest.rg000001 --profile-name profile000002 --endpoint-name endpoint000003
afd route update -g clitest.rg000001 --profile-name profile000002 --route-name route000006 --endpoint-name endpoint000003 --forwarding-protocol HttpsOnly --query-string-caching-behavior IgnoreQueryString --enable-compression True --content-types-to-compress text/javascript text/plain
afd route update -g clitest.rg000001 --profile-name profile000002 --route-name route000006 --endpoint-name endpoint000003 --query-string-caching-behavior UseQueryString --content-types-to-compress text/css
afd rule-set create -g clitest.rg000001 --rule-set-name ruleset000007 --profile-name profile000002
afd route update -g clitest.rg000001 --profile-name profile000002 --route-name route000006 --endpoint-name endpoint000003 --rule-sets ruleset000007 --enable-compression False
afd route update -g clitest.rg000001 --profile-name profile000002 --route-name route000006 --endpoint-name endpoint000003 --rule-sets --https-redirect Disabled
afd route delete -g clitest.rg000001 --profile-name profile000002 --endpoint-name endpoint000003 --route-name route000006 --yes
afd route list -g clitest.rg000001 --profile-name profile000002 --endpoint-name endpoint000003
afd profile create -g clitest.rg000001 --profile-name profile000002 --sku Standard_AzureFrontDoor
afd rule-set create -g clitest.rg000001 --rule-set-name ruleset000003 --profile-name profile000002
afd rule list -g clitest.rg000001 --rule-set-name ruleset000003 --profile-name profile000002
afd rule create -g clitest.rg000001 --rule-set-name ruleset000003 --profile-name profile000002 --rule-name r1 --match-variable RemoteAddress --operator GeoMatch --match-values "TH" --action-name CacheExpiration --cache-behavior BypassCache --order 1
afd rule show -g clitest.rg000001 --rule-set-name ruleset000003 --profile-name profile000002 --rule-name r1
afd rule create -g clitest.rg000001 --rule-set-name ruleset000003 --profile-name profile000002 --rule-name r2 --match-variable RequestScheme --match-values "HTTP" --action-name UrlRedirect --redirect-protocol Https --redirect-type Moved --order 2
afd rule show -g clitest.rg000001 --rule-set-name ruleset000003 --profile-name profile000002 --rule-name r2
afd rule list -g clitest.rg000001 --rule-set-name ruleset000003 --profile-name profile000002
afd rule delete -g clitest.rg000001 --rule-set-name ruleset000003 --profile-name profile000002 --rule-name r2 --yes
afd rule list -g clitest.rg000001 --rule-set-name ruleset000003 --profile-name profile000002
afd rule condition add -g clitest.rg000001 --rule-set-name ruleset000003 --profile-name profile000002 --rule-name r1 --match-variable RemoteAddress --operator GeoMatch --match-values "TH" "US"
afd rule show -g clitest.rg000001 --rule-set-name ruleset000003 --profile-name profile000002 --rule-name r1
afd rule action add -g clitest.rg000001 --rule-set-name ruleset000003 --profile-name profile000002 --rule-name r1 --action-name "UrlRewrite" --source-pattern "/abc" --destination "/def"
afd rule show -g clitest.rg000001 --rule-set-name ruleset000003 --profile-name profile000002 --rule-name r1
afd rule condition remove -g clitest.rg000001 --rule-set-name ruleset000003 --profile-name profile000002 --rule-name r1 --index 0
afd rule show -g clitest.rg000001 --rule-set-name ruleset000003 --profile-name profile000002 --rule-name r1
afd rule action remove -g clitest.rg000001 --rule-set-name ruleset000003 --profile-name profile000002 --rule-name r1 --index 0
afd rule show -g clitest.rg000001 --rule-set-name ruleset000003 --profile-name profile000002 --rule-name r1
afd rule delete -g clitest.rg000001 --rule-set-name ruleset000003 --profile-name profile000002 --rule-name r1 --yes
afd rule list -g clitest.rg000001 --rule-set-name ruleset000003 --profile-name profile000002
afd rule-set delete -g clitest.rg000001 --rule-set-name ruleset000003 --profile-name profile000002 --yes
afd rule-set list -g clitest.rg000001 --profile-name profile000002
afd profile create -g clitest.rg000001 --profile-name profile000002 --sku Standard_AzureFrontDoor
afd rule-set list -g clitest.rg000001 --profile-name profile000002
afd rule-set create -g clitest.rg000001 --rule-set-name ruleset000003 --profile-name profile000002
afd rule-set list -g clitest.rg000001 --profile-name profile000002
afd rule-set show -g clitest.rg000001 --rule-set-name ruleset000003 --profile-name profile000002
afd rule-set delete -g clitest.rg000001 --rule-set-name ruleset000003 --profile-name profile000002 --yes
afd rule-set show -g clitest.rg000001 --rule-set-name ruleset000003 --profile-name profile000002
afd rule-set list -g clitest.rg000001 --profile-name profile000002
afd profile create -g clitest.rg000001 --profile-name profile000002 --sku Standard_AzureFrontDoor
afd secret list -g clitest.rg000001 --profile-name profile000002
afd secret create -g clitest.rg000001 --profile-name profile000002 --secret-name secret000003 --secret-source /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/CliDevReservedGroup/providers/Microsoft.KeyVault/vaults/clibyoc-int/certificates/localdev-multi --use-latest-version True
afd secret show -g clitest.rg000001 --profile-name profile000002 --secret-name secret000003
afd secret delete -g clitest.rg000001 --profile-name profile000002 --secret-name secret000003 --yes
afd secret list -g clitest.rg000001 --profile-name profile000002
afd secret list -g clitest.rg000001 --profile-name profile000002
afd profile create -g clitest.rg000001 --profile-name profile000002 --sku Standard_AzureFrontDoor
afd secret list -g clitest.rg000001 --profile-name profile000002
afd secret create -g clitest.rg000001 --profile-name profile000002 --secret-name secret000003 --secret-source /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/CliDevReservedGroup/providers/Microsoft.KeyVault/vaults/clibyoc-int/certificates/localdev-multi --use-latest-version False --secret-version=aab1df2865274378a04592e4f1233797
afd secret show -g clitest.rg000001 --profile-name profile000002 --secret-name secret000003
afd secret list -g clitest.rg000001 --profile-name profile000002
afd secret delete -g clitest.rg000001 --profile-name profile000002 --secret-name secret000003 --yes
afd secret list -g clitest.rg000001 --profile-name profile000002
afd security-policy list -g clitest.rg000001 --profile-name profilesecuritytest
afd profile create -g clitest.rg000001 --profile-name profilesecuritytest --sku Standard_AzureFrontDoor
afd security-policy list -g clitest.rg000001 --profile-name profilesecuritytest
afd endpoint create -g clitest.rg000001 --endpoint-name endpoint1000002 --profile-name profilesecuritytest --origin-response-timeout-seconds 100 --enabled-state Enabled
afd endpoint create -g clitest.rg000001 --endpoint-name endpoint2000003 --profile-name profilesecuritytest --origin-response-timeout-seconds 100 --enabled-state Enabled
afd security-policy create -g clitest.rg000001 --profile-name profilesecuritytest --security-policy-name security000004 --waf-policy /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/CliDevReservedGroup/providers/Microsoft.Network/frontdoorwebapplicationfirewallpolicies/SampleStandard --domains /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/clitest.rg000001/providers/Microsoft.Cdn/profiles/profilesecuritytest/afdEndpoints/endpoint1000002 /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/clitest.rg000001/providers/Microsoft.Cdn/profiles/profilesecuritytest/afdEndpoints/endpoint2000003
afd security-policy show -g clitest.rg000001 --profile-name profilesecuritytest --security-policy-name security000004
afd security-policy list -g clitest.rg000001 --profile-name profilesecuritytest
afd security-policy update -g clitest.rg000001 --profile-name profilesecuritytest --security-policy-name security000004 --domains /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/clitest.rg000001/providers/Microsoft.Cdn/profiles/profilesecuritytest/afdEndpoints/endpoint2000003 --waf-policy /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/CliDevReservedGroup/providers/Microsoft.Network/frontdoorwebapplicationfirewallpolicies/SampleStandard
afd security-policy delete -g clitest.rg000001 --profile-name profilesecuritytest --security-policy-name security000004 --yes
afd security-policy list -g clitest.rg000001 --profile-name profilesecuritytest
cdn endpoint list -g clitest.rg000001 --profile-name profile123
cdn profile create -g clitest.rg000001 -n profile123 --sku Standard_Microsoft
cdn endpoint create -g clitest.rg000001 -n cdn-cli-test-5 --profile-name profile123 --origin www.example.com 80 443 
cdn custom-domain create -g clitest.rg000001 -n customdomain000003 --endpoint-name cdn-cli-test-5 --profile-name profile123 --hostname=customdomain000003.cdn-cli-test-5.azfdtest.xyz
cdn custom-domain show -g clitest.rg000001 -n customdomain000003 --endpoint-name cdn-cli-test-5 --profile-name profile123
keyvault certificate create --vault-name keyvault000002 -n cert000004 --policy "@C:\Code\azure-cli\src\azure-cli\azure\cli\command_modules\cdn\tests\latest\byoc_cert_policy.json"
cdn custom-domain enable-https -g clitest.rg000001 -n customdomain000003 --endpoint-name cdn-cli-test-5 --profile-name profile123 --user-cert-subscription-id=00000000-0000-0000-0000-000000000000 --user-cert-group-name=clitest.rg000001 --user-cert-vault-name=keyvault000002 --user-cert-secret-name=cert000004 --user-cert-protocol-type=sni
cdn endpoint list -g clitest.rg000001 --profile-name profile000002
cdn profile create -g clitest.rg000001 -n profile000002 --sku Standard_Akamai
cdn endpoint create -g clitest.rg000001 -n cdn-cli-test --profile-name profile000002 --origin www.example.com 80 443 
cdn custom-domain list -g clitest.rg000001 --endpoint-name cdn-cli-test --profile-name profile000002
cdn custom-domain create -g clitest.rg000001 -n customdomain000003 --endpoint-name cdn-cli-test --profile-name profile000002 --hostname=customdomain000003.cdn-cli-test.azfdtest.xyz
cdn custom-domain list -g clitest.rg000001 --endpoint-name cdn-cli-test --profile-name profile000002
cdn custom-domain delete -g clitest.rg000001 -n customdomain000003 --endpoint-name cdn-cli-test --profile-name profile000002
cdn custom-domain list -g clitest.rg000001 --endpoint-name cdn-cli-test --profile-name profile000002
cdn profile create -g {rg} -n {profile}
cdn endpoint create -g {rg} --origin {origin} --profile-name {profile} -n {endpoint}
cdn custom-domain list -g {rg} --endpoint-name {endpoint} --profile-name {profile}
cdn custom-domain create -g {rg} --endpoint-name {endpoint} --hostname {hostname} --profile-name {profile} -n {name}
cdn custom-domain show -g {rg} --endpoint-name {endpoint} --profile-name {profile} -n {name}
cdn custom-domain delete -g {rg} --endpoint-name {endpoint} --profile-name {profile} -n {name}
cdn custom-domain enable-https -g {rg} --endpoint-name {endpoint} --profile-name {profile} -n {name}
cdn custom-domain disable-https -g {rg} --endpoint-name {endpoint} --profile-name {profile} -n {name}
cdn endpoint list -g clitest.rg000001 --profile-name profile123
cdn profile create -g clitest.rg000001 -n profile123 --sku Standard_Akamai
cdn endpoint create -g clitest.rg000001 -n cdn-cli-test-2 --profile-name profile123 --origin www.example.com 80 443 
cdn custom-domain create -g clitest.rg000001 -n customdomain000002 --endpoint-name cdn-cli-test-2 --profile-name profile123 --hostname=customdomain000002.cdn-cli-test-2.azfdtest.xyz
cdn custom-domain show -g clitest.rg000001 -n customdomain000002 --endpoint-name cdn-cli-test-2 --profile-name profile123
cdn custom-domain enable-https -g clitest.rg000001 -n customdomain000002 --endpoint-name cdn-cli-test-2 --profile-name profile123
cdn custom-domain disable-https -g clitest.rg000001 -n customdomain000002 --endpoint-name cdn-cli-test-2 --profile-name profile123
cdn endpoint list -g clitest.rg000001 --profile-name profile123
cdn profile create -g clitest.rg000001 -n profile123 --sku Standard_Microsoft
cdn endpoint create -g clitest.rg000001 -n cdn-cli-test-4 --profile-name profile123 --origin www.example.com 80 443 
cdn custom-domain create -g clitest.rg000001 -n customdomain000003 --endpoint-name cdn-cli-test-4 --profile-name profile123 --hostname=customdomain000003.cdn-cli-test-4.azfdtest.xyz
cdn custom-domain create -g clitest.rg000001 -n customdomain000004 --endpoint-name cdn-cli-test-4 --profile-name profile123 --hostname=customdomain000004.cdn-cli-test-4.azfdtest.xyz
cdn custom-domain show -g clitest.rg000001 -n customdomain000003 --endpoint-name cdn-cli-test-4 --profile-name profile123
cdn custom-domain show -g clitest.rg000001 -n customdomain000003 --endpoint-name cdn-cli-test-4 --profile-name profile123
cdn custom-domain enable-https -g clitest.rg000001 -n customdomain000003 --endpoint-name cdn-cli-test-4 --profile-name profile123 --min-tls-version=1.0
keyvault certificate create --vault-name keyvault000002 -n cert000005 --policy "@C:\Code\azure-cli\src\azure-cli\azure\cli\command_modules\cdn\tests\latest\byoc_cert_policy.json"
cdn endpoint list -g clitest.rg000001 --profile-name profile123
cdn profile create -g clitest.rg000001 -n profile123 --sku Standard_Verizon
cdn endpoint create -g clitest.rg000001 -n cdn-cli-test-3 --profile-name profile123 --origin www.contoso.com 80 443 
cdn custom-domain create -g clitest.rg000001 -n customdomain000002 --endpoint-name cdn-cli-test-3 --profile-name profile123 --hostname=customdomain000002.cdn-cli-test-3.azfdtest.xyz
cdn custom-domain show -g clitest.rg000001 -n customdomain000002 --endpoint-name cdn-cli-test-3 --profile-name profile123
cdn custom-domain enable-https -g clitest.rg000001 -n customdomain000002 --endpoint-name cdn-cli-test-3 --profile-name profile123 --min-tls-version=None
cdn custom-domain disable-https -g clitest.rg000001 -n customdomain000002 --endpoint-name cdn-cli-test-3 --profile-name profile123
cdn profile create -g clitest.rg000001 -n akp000002 --sku Standard_Akamai
cdn endpoint create -g clitest.rg000001 -n endpoint000003 --profile-name akp000002 --origin huaiyiztesthost1.blob.core.chinacloudapi.cn 80 443 
cdn endpoint rule add -g clitest.rg000001 -n endpoint000003 --profile-name akp000002 --order 0 --action-name CacheExpiration --cache-behavior Override --cache-duration 00:05:00
cdn endpoint rule add -g clitest.rg000001 -n endpoint000003 --profile-name akp000002 --order 1 --action-name CacheExpiration --match-variable UrlPath --operator Wildcard --match-values /test2/* --cache-behavior Override --cache-duration 00:05:00
cdn endpoint rule add -g clitest.rg000001 -n endpoint000003 --profile-name akp000002 --order 2 --action-name CacheExpiration --match-variable UrlFileExtension --operator Any --match-values mp4 mp3 --cache-behavior Override --cache-duration 00:05:00
cdn endpoint rule remove -g clitest.rg000001 -n endpoint000003 --profile-name akp000002 --order 2
cdn endpoint rule remove -g clitest.rg000001 -n endpoint000003 --profile-name akp000002 --order 1
cdn endpoint rule remove -g clitest.rg000001 -n endpoint000003 --profile-name akp000002 --order 0
cdn endpoint delete -g clitest.rg000001 -n endpoint000003 --profile-name akp000002
cdn endpoint list -g clitest.rg000001 --profile-name profile000002
cdn profile create -g clitest.rg000001 -n profile000002
cdn endpoint create -g clitest.rg000001 -n endpoint000003 --profile-name profile000002 --origin www.contoso.com 80 443  --enable-compression --content-types-to-compress text/plain text/html
cdn endpoint update -g clitest.rg000001 -n endpoint000003 --profile-name profile000002 --content-types-to-compress application/json application/xml
cdn endpoint update -g clitest.rg000001 -n endpoint000003 --profile-name profile000002 --enable-compression False
cdn endpoint update -g clitest.rg000001 -n endpoint000003 --profile-name profile000002 --enable-compression --content-types-to-compress text/javascript application/x-javascript
cdn endpoint delete -g clitest.rg000001 -n endpoint000003 --profile-name profile000002
cdn endpoint list -g clitest.rg000001 --profile-name profile123
cdn profile create -g clitest.rg000001 -n profile123
cdn endpoint list -g clitest.rg000001 --profile-name profile123
cdn endpoint create -g clitest.rg000001 -n endpoint000002 --profile-name profile123 --origin www.example.com 80 443 
cdn endpoint list -g clitest.rg000001 --profile-name profile123
cdn endpoint update -g clitest.rg000001 -n endpoint000002 --profile-name profile123 --no-http --enable-compression
cdn endpoint update -g clitest.rg000001 -n endpoint000002 --profile-name profile123 --no-http false --no-https --enable-compression false
cdn endpoint delete -g clitest.rg000001 -n endpoint000002 --profile-name profile123
cdn profile create -g clitest.rg000001 -n Standard-Akamai-profile --sku Standard_Akamai
cdn endpoint create -g clitest.rg000001 -n endpoint000002 --profile-name Standard-Akamai-profile --origin www.contoso.com 80 443 
cdn profile create -g clitest.rg000001 -n Standard-Verizon-profile --sku Standard_Verizon
cdn endpoint create -g clitest.rg000001 -n endpoint000003 --profile-name Standard-Verizon-profile --origin www.contoso.com 80 443 
cdn profile create -g clitest.rg000001 -n Premium-Verizon-profile --sku Premium_Verizon
cdn endpoint create -g clitest.rg000001 -n endpoint000004 --profile-name Premium-Verizon-profile --origin www.contoso.com 80 443 
cdn profile create -g clitest.rg000001 -n profile123 --sku Standard_Verizon
cdn endpoint create -g clitest.rg000001 -n endpoint000002 --profile-name profile123 --origin www.contoso.com 80 443 
cdn endpoint load -g clitest.rg000001 -n endpoint000002 --profile-name profile123 --content-paths /index.html /javascript/app.js
cdn endpoint purge -g clitest.rg000001 -n endpoint000002 --profile-name profile123 --content-paths /index.html /javascript/*
cdn profile create -g clitest.rg000001 -n profile123
cdn endpoint create -g clitest.rg000001 -n endpoint000002 --profile-name profile123 --origin www.example.com 80 443 
cdn endpoint stop -g clitest.rg000001 -n endpoint000002 --profile-name profile123
cdn endpoint show -g clitest.rg000001 -n endpoint000002 --profile-name profile123
cdn endpoint start -g clitest.rg000001 -n endpoint000002 --profile-name profile123
cdn endpoint show -g clitest.rg000001 -n endpoint000002 --profile-name profile123
cdn profile create -g clitest.rg000001 -n profile123 --sku Standard_Microsoft
cdn endpoint create -g clitest.rg000001 -n endpoint000002 --profile-name profile123 --origin www.example.com 80 443  '/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cdn-sdk-test/providers/Microsoft.Network/privateLinkServices/cdn-sdk-pls-test' 'EastUS' 'Please approve the request'
cdn endpoint list -g clitest.rg000001 --profile-name profile123
cdn endpoint list -g clitest.rg000001 --profile-name profile123
cdn profile create -g clitest.rg000001 -n profile123 --sku Standard_Microsoft
cdn endpoint list -g clitest.rg000001 --profile-name profile123
cdn endpoint create -g clitest.rg000001 -n endpoint000002 --profile-name profile123 --origin www.example.com 80 443 
cdn endpoint list -g clitest.rg000001 --profile-name profile123
cdn endpoint rule add -g clitest.rg000001 -n endpoint000002 --profile-name profile123 --order 1 --rule-name r1               --match-variable RemoteAddress --operator GeoMatch --match-values "TH"               --action-name CacheExpiration --cache-behavior BypassCache
cdn endpoint rule condition add -g clitest.rg000001 -n endpoint000002 --profile-name profile123 --rule-name r1 --match-variable RemoteAddress                                                 --operator GeoMatch --match-values "TH" "US"
cdn endpoint rule action add -g clitest.rg000001 -n endpoint000002 --profile-name profile123 --rule-name r1 --action-name "UrlRewrite"                                              --source-pattern "/abc" --destination "/def"
cdn endpoint rule condition remove -g clitest.rg000001 -n endpoint000002 --profile-name profile123 --rule-name r1 --index 0
cdn endpoint rule action remove -g clitest.rg000001 -n endpoint000002 --profile-name profile123 --rule-name r1 --index 0
cdn endpoint rule add -g clitest.rg000001 -n endpoint000002 --profile-name profile123 --order 2 --rule-name r2               --match-variable RemoteAddress --operator GeoMatch --match-values "TH"               --action-name CacheExpiration --cache-behavior BypassCache
cdn endpoint rule add -g clitest.rg000001 -n endpoint000002 --profile-name profile123 --order 3 --rule-name r3               --match-variable RemoteAddress --operator GeoMatch --match-values "TH"               --action-name CacheExpiration --cache-behavior BypassCache
cdn endpoint rule remove -g clitest.rg000001 -n endpoint000002 --profile-name profile123 --rule-name r1
cdn endpoint rule remove -g clitest.rg000001 -n endpoint000002 --profile-name profile123 --rule-name r3
cdn endpoint delete -g clitest.rg000001 -n endpoint000002 --profile-name profile123
cdn profile create -g clitest.rg000001 -n akp000002 --sku Standard_Verizon
cdn endpoint create -g clitest.rg000001 -n endpoint000003 --profile-name akp000002 --origin huaiyiztesthost1.blob.core.chinacloudapi.cn 80 443 
cdn endpoint rule add -g clitest.rg000001 -n endpoint000003 --profile-name akp000002 --order 0 --action-name CacheExpiration --cache-behavior Override --cache-duration 00:05:00
cdn endpoint rule add -g clitest.rg000001 -n endpoint000003 --profile-name akp000002 --order 1 --action-name CacheExpiration --match-variable UrlPath --operator Wildcard --match-values /test2/* --cache-behavior Override --cache-duration 00:05:00
cdn endpoint rule add -g clitest.rg000001 -n endpoint000003 --profile-name akp000002 --order 2 --action-name CacheExpiration --match-variable UrlFileExtension --operator Any --match-values mp4 mp3 --cache-behavior Override --cache-duration 00:05:00
cdn endpoint rule remove -g clitest.rg000001 -n endpoint000003 --profile-name akp000002 --order 2
cdn endpoint rule remove -g clitest.rg000001 -n endpoint000003 --profile-name akp000002 --order 1
cdn endpoint rule remove -g clitest.rg000001 -n endpoint000003 --profile-name akp000002 --order 0
cdn endpoint delete -g clitest.rg000001 -n endpoint000003 --profile-name akp000002
cdn edge-node list
cdn profile create -g clitest.rg000001 -n profile000002 --sku Standard_Microsoft
cdn endpoint create -g clitest.rg000001 -n endpoint000003 --profile-name profile000002 --origin endpoint000003.contoso.com 80 443 
cdn endpoint show -g clitest.rg000001 -n endpoint000003 --profile-name profile000002
cdn origin show -g clitest.rg000001 -n origin-0 --endpoint-name endpoint000003 --profile-name profile000002
cdn origin-group create -g clitest.rg000001 --endpoint-name endpoint000003 --profile-name profile000002 -n test-origin-group --origins=/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/clitest.rg000001/providers/Microsoft.Cdn/profiles/profile000002/endpoints/endpoint000003/origins/origin-0
cdn origin-group list -g clitest.rg000001 --endpoint-name endpoint000003 --profile-name profile000002
cdn origin-group show -g clitest.rg000001 -n test-origin-group --endpoint-name endpoint000003 --profile-name profile000002
cdn endpoint update -g clitest.rg000001 -n endpoint000003 --profile-name profile000002 --default-origin-group=test-origin-group
cdn origin create -g clitest.rg000001 --endpoint-name endpoint000003 --profile-name profile000002 -n origin000004 --host-name=origin000004.contoso.com --http-port=8080 --https-port=8443 --origin-host-header=origin000004.contoso.com --weight=534 --priority=3
cdn origin list -g clitest.rg000001 --endpoint-name endpoint000003 --profile-name profile000002
cdn origin create -g clitest.rg000001 --endpoint-name endpoint000003 --profile-name profile000002 -n origin000005 --host-name=origin000005.contoso.com --http-port=8080 --https-port=8443 --origin-host-header=origin000005.contoso.com --weight=534 --priority=3
cdn origin list -g clitest.rg000001 --endpoint-name endpoint000003 --profile-name profile000002
cdn origin-group create -g clitest.rg000001 --endpoint-name endpoint000003 --profile-name profile000002 -n test-origin-group-2 --origins=origin000004 --probe-method=GET '--probe-path=/healthz' --probe-protocol=Https --probe-interval=120
cdn origin-group create -g clitest.rg000001 --endpoint-name endpoint000003 --profile-name profile000002 -n test-origin-group-3 --origins=origin000005 --probe-method=GET '--probe-path=/healthz' --probe-protocol=Https --probe-interval=120
cdn origin-group list -g clitest.rg000001 --endpoint-name endpoint000003 --profile-name profile000002
cdn endpoint rule add -g clitest.rg000001 -n endpoint000003 --profile-name profile000002 --order 1 --rule-name r1               --match-variable UrlPath --operator BeginsWith --match-values "/test1"               --action-name OriginGroupOverride --origin-group /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/clitest.rg000001/providers/Microsoft.Cdn/profiles/profile000002/endpoints/endpoint000003/origingroups/test-origin-group-2
cdn endpoint rule add -g clitest.rg000001 -n endpoint000003 --profile-name profile000002 --order 2 --rule-name r2               --match-variable UrlPath --operator BeginsWith --match-values "/test2"               --action-name OriginGroupOverride --origin-group test-origin-group-3
cdn profile create -g clitest.rg000001 -n profile123 --sku Standard_Microsoft
cdn endpoint create -g clitest.rg000001 -n endpoint000002 --profile-name profile123 --origin www.example.com 80 443 
cdn endpoint show -g clitest.rg000001 -n endpoint000002 --profile-name profile123
cdn origin show -g clitest.rg000001 -n origin-0 --endpoint-name endpoint000002 --profile-name profile123
cdn origin list -g clitest.rg000001 --endpoint-name endpoint000002 --profile-name profile123
cdn origin-group create -g clitest.rg000001 --endpoint-name endpoint000002 --profile-name profile123 -n test-origin-group --origins=/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/clitest.rg000001/providers/Microsoft.Cdn/profiles/profile123/endpoints/endpoint000002/origins/origin-0
cdn origin-group list -g clitest.rg000001 --endpoint-name endpoint000002 --profile-name profile123
cdn origin-group show -g clitest.rg000001 -n test-origin-group --endpoint-name endpoint000002 --profile-name profile123
cdn endpoint update -g clitest.rg000001 -n endpoint000002 --profile-name profile123 --default-origin-group=test-origin-group
cdn endpoint update -g clitest.rg000001 -n endpoint000002 --profile-name profile123 --default-origin-group=/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/clitest.rg000001/providers/Microsoft.Cdn/profiles/profile123/endpoints/endpoint000002/origingroups/test-origin-group
cdn origin create -g clitest.rg000001 --endpoint-name endpoint000002 --profile-name profile123 -n origin000003 --host-name=abc.contoso.com --http-port=8080 --https-port=8443 --private-link-resource-id=/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cdn-sdk-test/providers/Microsoft.Network/privateLinkServices/cdn-sdk-pls-test --private-link-location=EastUS '--private-link-approval-message=Please approve the request' --origin-host-header=abc.contoso.com --weight=534 --priority=3
cdn origin list -g clitest.rg000001 --endpoint-name endpoint000002 --profile-name profile123
cdn origin create -g clitest.rg000001 --endpoint-name endpoint000002 --profile-name profile123 -n origin000004 --host-name=abc.contoso.com --http-port=8080 --https-port=8443 --private-link-resource-id=/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cdn-sdk-test/providers/Microsoft.Network/privateLinkServices/cdn-sdk-pls-test --private-link-location=EastUS '--private-link-approval-message=Please approve the request' --origin-host-header=abc.contoso.com --disabled --weight=534 --priority=3
cdn origin list -g clitest.rg000001 --endpoint-name endpoint000002 --profile-name profile123
cdn origin-group create -g clitest.rg000001 --endpoint-name endpoint000002 --profile-name profile123 -n test-origin-group-2 --origins=origin000003,origin000004 --probe-method=GET '--probe-path=/healthz' --probe-protocol=Https --probe-interval=120
cdn origin-group show -g clitest.rg000001 -n test-origin-group --endpoint-name endpoint000002 --profile-name profile123
cdn origin-group list -g clitest.rg000001 --endpoint-name endpoint000002 --profile-name profile123
cdn origin-group delete -g clitest.rg000001 --endpoint-name endpoint000002 --profile-name profile123 --name test-origin-group-2 --yes
cdn origin-group list -g clitest.rg000001 --endpoint-name endpoint000002 --profile-name profile123
cdn origin-group update -g clitest.rg000001 --endpoint-name endpoint000002 --profile-name profile123 -n test-origin-group --origins=/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/clitest.rg000001/providers/Microsoft.Cdn/profiles/profile123/endpoints/endpoint000002/origins/origin-0,origin000003 --probe-method=GET --probe-path=/healthz --probe-interval=60 --probe-protocol=Https
cdn origin-group update -g clitest.rg000001 --endpoint-name endpoint000002 --profile-name profile123 -n test-origin-group --origins=/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/clitest.rg000001/providers/Microsoft.Cdn/profiles/profile123/endpoints/endpoint000002/origins/origin-0,origin000003
cdn origin update -g clitest.rg000001 --endpoint-name endpoint000002 --profile-name profile123 -n origin-0 --http-port=8080 --https-port=8443 --private-link-resource-id=/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cdn-sdk-test/providers/Microsoft.Network/privateLinkServices/cdn-sdk-pls-test --private-link-location=EastUS '--private-link-approval-message=Please approve the request' --origin-host-header=abc.contoso.com --disabled --weight=534 --priority=3
cdn origin show -g clitest.rg000001 -n origin-0 --endpoint-name endpoint000002 --profile-name profile123
cdn origin delete -g clitest.rg000001 --endpoint-name endpoint000002 --profile-name profile123 --name origin000004 --yes
cdn origin list -g clitest.rg000001 --endpoint-name endpoint000002 --profile-name profile123
cdn profile list -g clitest.rg000001
cdn profile create -g clitest.rg000001 -n profile123
cdn profile show -g clitest.rg000001 -n profile123
cdn profile list -g clitest.rg000001
cdn profile update -g clitest.rg000001 -n profile123 --tags foo=bar
cdn profile delete -g clitest.rg000001 -n profile123
cdn profile delete -g clitest.rg000001 -n foo12345
cdn profile create -g {rg} -n {profile} --sku {sku}
cdn waf policy show -g {resource_group} -n {policy}
cdn waf policy set -g {resource_group} --name {policy} --redirect-url "{redirect_url}" --tags="foo=bar"
cdn waf policy show -g {resource_group} -n {policy}
cdn waf policy list -g {resource_group}
cdn waf policy managed-rule-set show -g {resource_group} --policy-name {policy} --rule-set-type {rule_set_type} --rule-set-version {rule_set_version}
cdn waf policy managed-rule-set add -g {resource_group} --policy-name {policy} --rule-set-type {rule_set_type} --rule-set-version {rule_set_version}
cdn waf policy managed-rule-set show -g {resource_group} --policy-name {policy} --rule-set-type {rule_set_type} --rule-set-version {rule_set_version}
cdn waf policy managed-rule-set rule-group-override show -g {resource_group} --policy-name {policy} --rule-set-type {rule_set_type} --rule-set-version {rule_set_version} -n {rule_group}
cdn waf policy managed-rule-set rule-group-override set -g {resource_group} --policy-name {policy} --rule-set-type {rule_set_type} --rule-set-version {rule_set_version} -n {rule_group} -r id=942440 action=Redirect enabled=Enabled -r id=942120 -r id=942100
cdn waf policy managed-rule-set rule-group-override show -g {resource_group} --policy-name {policy} --rule-set-type {rule_set_type} --rule-set-version {rule_set_version} -n {rule_group}
cdn waf policy managed-rule-set rule-group-override list -g {resource_group} --policy-name {policy} --rule-set-type {rule_set_type} --rule-set-version {rule_set_version}
cdn waf policy custom-rule show -g {resource_group} --policy-name {policy} -n {custom_rule_1}
cdn waf policy custom-rule set -g {resource_group} --policy-name {policy} -n {custom_rule_1} --action Block --priority 100 --match-condition match-variable=RequestMethod operator=Equal negate=true match-value=GET match-value=HEAD
cdn waf policy custom-rule show -g {resource_group} --policy-name {policy} -n {custom_rule_1}
cdn waf policy custom-rule set -g {resource_group} --policy-name {policy} -n {custom_rule_2} --action Redirect --priority 200 -m match-variable=RequestUri operator=Contains match-value=.. -m match-variable=QueryString operator=Contains "match-value= "
cdn waf policy custom-rule show -g {resource_group} --policy-name {policy} -n {custom_rule_2}
cdn waf policy custom-rule list -g {resource_group} --policy-name {policy}
cdn waf policy rate-limit-rule show -g {resource_group} --policy-name {policy} -n {rate_limit_rule_1}
cdn waf policy rate-limit-rule set -g {resource_group} --policy-name {policy} -n {rate_limit_rule_1} --action Block --priority 100 --duration 1 --request-threshold 100 --match-condition match-variable=RequestMethod operator=Equal negate=true match-value=GET match-value=HEAD
cdn waf policy rate-limit-rule show -g {resource_group} --policy-name {policy} -n {rate_limit_rule_1}
cdn waf policy rate-limit-rule set -g {resource_group} --policy-name {policy} -n {rate_limit_rule_2} --action Redirect --priority 200 --duration 5 --request-threshold 100 -m match-variable=RequestMethod operator=Equal match-value=PUT -m match-variable=RequestUri operator=Contains match-value=/expensive/resource/
cdn waf policy rate-limit-rule show -g {resource_group} --policy-name {policy} -n {rate_limit_rule_2}
cdn waf policy rate-limit-rule list -g {resource_group} --policy-name {policy}
cdn waf policy set -g {resource_group} --name {policy} --sku Standard_Microsoft --mode Prevention --block-response-body {block_response_body} --block-response-status-code {block_response_status_code} --redirect-url {redirect_url} --tags="" --disabled
cdn waf policy show -g {resource_group} -n {policy}
cdn waf policy managed-rule-set rule-group-override delete -y -g {resource_group} --policy-name {policy} --rule-set-type {rule_set_type} --rule-set-version {rule_set_version} -n {rule_group}
cdn waf policy managed-rule-set rule-group-override show -g {resource_group} --policy-name {policy} --rule-set-type {rule_set_type} --rule-set-version {rule_set_version} -n {rule_group}
cdn waf policy managed-rule-set remove -y -g {resource_group} --policy-name {policy} --rule-set-type {rule_set_type} --rule-set-version {rule_set_version}
cdn waf policy managed-rule-set show -g {resource_group} --policy-name {policy} --rule-set-type {rule_set_type} --rule-set-version {rule_set_version}
cdn waf policy custom-rule delete -y -g {resource_group} --policy-name {policy} -n {custom_rule_1}
cdn waf policy custom-rule show -g {resource_group} --policy-name {policy} -n {custom_rule_1}
cdn waf policy rate-limit-rule delete -y -g {resource_group} --policy-name {policy} -n {rate_limit_rule_1}
cdn waf policy rate-limit-rule show -g {resource_group} --policy-name {policy} -n {rate_limit_rule_1}
cdn waf policy delete -y -g {resource_group} -n {policy}
cdn profile create -g {resource_group} -n {profile} --sku=Standard_Microsoft --location=westus
cdn waf policy set -g {resource_group} --name {policy}
cdn endpoint create -g {resource_group} --origin www.test.com --profile-name {profile} -n {endpoint1} 
cdn endpoint waf policy show -g {resource_group} --profile-name {profile} --endpoint-name {endpoint1}
cdn endpoint waf policy set -g {resource_group} --profile-name {profile} --endpoint-name {endpoint1} --waf-policy-subscription-id {subscription_id} --waf-policy-resource-group-name {resource_group} --waf-policy-name {policy}
cdn endpoint show -g {resource_group} --profile-name {profile} -n {endpoint1}
cdn waf policy show -g {resource_group} -n {policy}
cdn endpoint create -g {resource_group} --origin www.test.com --profile-name {profile} -n {endpoint2}
cdn endpoint waf policy set -g {resource_group} --profile-name {profile} --endpoint-name {endpoint2} --waf-policy-id {policy_id}
cdn endpoint show -g {resource_group} --profile-name {profile} -n {endpoint2}
cdn waf policy show -g {resource_group} -n {policy}
cdn endpoint waf policy remove -y -g {resource_group} --profile-name {profile} --endpoint-name {endpoint1}
cdn endpoint waf policy show -g {resource_group} --profile-name {profile} --endpoint-name {endpoint1}
cdn endpoint show -g {resource_group} --profile-name {profile} -n {endpoint1}
cdn endpoint waf policy remove -y -g {resource_group} --profile-name {profile} --endpoint-name {endpoint2}
cdn endpoint waf policy show -g {resource_group} --profile-name {profile} --endpoint-name {endpoint2}
cdn endpoint show -g {resource_group} --profile-name {profile} -n {endpoint2}
cdn waf policy show -g {resource_group} -n {policy}
cdn waf policy managed-rule-set list-available
cdn waf policy managed-rule-set rule-group-override list-available --rule-set-type {rule_set_type} --rule-set-version {rule_set_version}
cloud show
cloud set -n AzureChinaCloud
cloud show -n AzureChinaCloud
cloud set -n AzureCloud
cloud show
cloud set -n AzureCloud
cloud show -n AzureCloud
cloud set -n AzureCloud
cloud show
cloud set -n AzureGermanCloud
cloud show -n AzureGermanCloud
cloud set -n AzureCloud
cloud show
cloud set -n AzureUSGovernment
cloud show -n AzureUSGovernment
cloud set -n AzureCloud
cloud show
cloud set -n azurechinacloud
cloud show -n AzureChinaCloud
cloud set -n AzureCloud
cloud show
cloud set -n azurecloud
cloud show -n AzureCloud
cloud set -n AzureCloud
cloud show
cloud set -n azuregermancloud
cloud show -n AzureGermanCloud
cloud set -n AzureCloud
cloud show
cloud set -n azureusgovernment
cloud show -n AzureUSGovernment
cloud set -n AzureCloud
cloud show
cloud set -n azCloud
cloud set -n AzureCloud
cloud list
cloud list --subscription foo
cognitiveservices account create -n {sname} -g {rg} --kind {kind} --sku {sku} -l {location} --yes
cognitiveservices account show -n {sname} -g {rg}
cognitiveservices account delete -n {sname} -g {rg}
cognitiveservices account create -n {sname} -g {rg} --kind {kind} --sku {sku} -l {location} --yes
cognitiveservices account show -n {sname} -g {rg}
cognitiveservices account show -n {sname} -g {rg}
cognitiveservices account delete -n {sname} -g {rg}
cognitiveservices account create -n {sname} -g {rg} --kind {kind} --sku {sku} -l {location} --api-properties {apiProperties} --yes
cognitiveservices account delete -n {sname} -g {rg}
cognitiveservices account create -n {sname} -g {rg} --kind {kind} --sku {sku} -l {location} --api-properties {apiPropertiesJson} --yes
cognitiveservices account delete -n {sname} -g {rg}
cognitiveservices account create -n {sname} -g {rg} --kind {kind} --sku {sku} -l {location} --assign-identity --encryption {encryption}  --yes
cognitiveservices account show -n {sname} -g {rg}
cognitiveservices account delete -n {sname} -g {rg}
cognitiveservices account create -n {sname} -g {rg} --kind {kind} --sku {sku} -l {location} --assign-identity --yes
cognitiveservices account update -n {sname} -g {rg} --encryption {encryption}
cognitiveservices account show -n {sname} -g {rg}
cognitiveservices account delete -n {sname} -g {rg}
cognitiveservices account create -n {sname} -g {rg} --kind {kind} --sku {sku} -l {location} --assign-identity --storage {storageIds}  --yes
cognitiveservices account show -n {sname} -g {rg}
cognitiveservices account delete -n {sname} -g {rg}
cognitiveservices account create -n {sname} -g {rg} --kind {kind} --sku {sku} -l {location} --assign-identity --yes
cognitiveservices account update -n {sname} -g {rg} --storage {storageIds}
cognitiveservices account show -n {sname} -g {rg}
cognitiveservices account delete -n {sname} -g {rg}
cognitiveservices account list-kinds
cognitiveservices account list-skus --kind {kind}
cognitiveservices account list-skus --kind {kind} --location {location}
cognitiveservices account create -n {name} -g {rg} --kind {kind} --sku {sku} -l {location} --yes
cognitiveservices account list-skus -n {name} -g {rg}
cognitiveservices account create -n {name} -g {rg} --kind {kind} --sku {sku} -l {location}
cognitiveservices account list-usage -n {name} -g {rg}
cognitiveservices account create -n {sname} -g {rg} --kind {kind} --sku {sku} -l {location} --yes
cognitiveservices account show -n {sname} -g {rg}
cognitiveservices account update -n {sname} -g {rg} --sku {sku} --tags {tags}
cognitiveservices account keys list -n {sname} -g {rg}
cognitiveservices account keys regenerate -n {sname} -g {rg} --key-name Key1
cognitiveservices account list -g {rg}
cognitiveservices account delete -n {sname} -g {rg}
cognitiveservices account create -n {sname} -g {rg} --kind {kind} --sku {sku} -l {location} --custom-domain {customdomain} --yes
cognitiveservices account show -n {sname} -g {rg}
cognitiveservices account delete -n {sname} -g {rg}
cognitiveservices account show-deleted --location {location} -n {sname} -g {rg}
cognitiveservices account recover --location {location} -n {sname} -g {rg}
cognitiveservices account show -n {sname} -g {rg}
cognitiveservices account delete -n {sname} -g {rg}
cognitiveservices account purge --location {location} -n {sname} -g {rg}
cognitiveservices account list-deleted
cognitiveservices account create -n {sname} -g {rg} --kind {kind} --sku {sku} -l {location} --yes
cognitiveservices account show -n {sname} -g {rg}
cognitiveservices commitment-tier list -l centraluseuap
cognitiveservices account commitment-plan list -n {sname} -g {rg}
cognitiveservices account commitment-plan create -n {sname} -g {rg} --commitment-plan-name "plan" --hosting-model "Web" --plan-type "TA" --auto-renew false --current-tier "T1" --next-tier "T2"
cognitiveservices account commitment-plan list -n {sname} -g {rg}
cognitiveservices account commitment-plan show -n {sname} -g {rg} --commitment-plan-name plan
cognitiveservices account commitment-plan delete -n {sname} -g {rg} --commitment-plan-name plan
cognitiveservices account commitment-plan list -n {sname} -g {rg}
cognitiveservices account delete -n {sname} -g {rg}
cognitiveservices account create -n {sname} -g {rg} --kind {kind} --sku {sku} -l {location} --yes --custom-domain {customdomain}
cognitiveservices account delete -n {sname} -g {rg}
cognitiveservices account create -n {sname} -g {rg} --kind {kind} --sku {sku} -l {location} --yes
cognitiveservices account update -n {sname} -g {rg} --custom-domain {customdomain}
cognitiveservices account delete -n {sname} -g {rg}
cognitiveservices account create -n {sname} -g {rg} --kind {kind} --sku {sku} -l {location} --yes
cognitiveservices account show -n {sname} -g {rg}
cognitiveservices account deployment list -n {sname} -g {rg}
cognitiveservices account deployment create -n {sname} -g {rg} --deployment-name dpy --model-name ada --model-version "1" --model-format OpenAI --scale-settings-capacity 1 --scale-settings-scale-type "Manual"
cognitiveservices account deployment list -n {sname} -g {rg}
cognitiveservices account deployment show -n {sname} -g {rg} --deployment-name dpy
cognitiveservices account deployment delete -n {sname} -g {rg} --deployment-name dpy
cognitiveservices account deployment list -n {sname} -g {rg}
cognitiveservices account delete -n {sname} -g {rg}
cognitiveservices account create -n {sname} -g {rg} --kind {kind} --sku {sku} -l {location} --yes
cognitiveservices account show -n {sname} -g {rg}
cognitiveservices account identity show -n {sname} -g {rg}
cognitiveservices account identity assign -n {sname} -g {rg}
cognitiveservices account identity show -n {sname} -g {rg}
cognitiveservices account identity remove -n {sname} -g {rg}
cognitiveservices account identity show -n {sname} -g {rg}
cognitiveservices account delete -n {sname} -g {rg}
cognitiveservices account create -n {sname} -g {rg} --kind {kind} --sku {sku} -l {location} --assign-identity --yes
cognitiveservices account show -n {sname} -g {rg}
cognitiveservices account delete -n {sname} -g {rg}
network vnet create --resource-group {rg} --name {vnetname}
network vnet subnet create --resource-group {rg} --name default --vnet-name {vnetname} --address-prefixes 10.0.0.0/24
network vnet subnet create --resource-group {rg} --name subnet --vnet-name {vnetname} --address-prefixes 10.0.1.0/24
cognitiveservices account create -n {sname} -g {rg} --kind {kind} --sku {sku} -l {location} --custom-domain {customdomain} --yes
cognitiveservices account network-rule list -n {sname} -g {rg}
cognitiveservices account network-rule add -n {sname} -g {rg} --ip-address "200.0.0.1"
cognitiveservices account network-rule list -n {sname} -g {rg}
cognitiveservices account network-rule add -n {sname} -g {rg} --ip-address "100.0.0.0/24"
cognitiveservices account network-rule list -n {sname} -g {rg}
cognitiveservices account network-rule add -n {sname} -g {rg} --subnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/cs_cli_test_000002/subnets/default
cognitiveservices account network-rule list -n {sname} -g {rg}
cognitiveservices account network-rule add -n {sname} -g {rg} --subnet subnet --vnet-name {vnetname}
cognitiveservices account network-rule list -n {sname} -g {rg}
cognitiveservices account network-rule remove -n {sname} -g {rg} --ip-address "200.0.0.1"
cognitiveservices account network-rule list -n {sname} -g {rg}
cognitiveservices account network-rule remove -n {sname} -g {rg} --ip-address "100.0.0.0/24"
cognitiveservices account network-rule list -n {sname} -g {rg}
cognitiveservices account network-rule remove -n {sname} -g {rg} --subnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/cs_cli_test_000002/subnets/default
cognitiveservices account network-rule list -n {sname} -g {rg}
cognitiveservices account network-rule remove -n {sname} -g {rg} --subnet subnet --vnet-name {vnetname}
cognitiveservices account network-rule list -n {sname} -g {rg}
cognitiveservices account network-rule remove -n {sname} -g {rg} --subnet subnet --vnet-name {vnetname}
cognitiveservices account network-rule list -n {sname} -g {rg}
cognitiveservices account delete -n {sname} -g {rg}
cognitiveservices account create -n {sname} -g {rg} --kind {kind} --sku {sku} -l {location} --custom-domain {customdomain}
network private-link-resource list -g {rg} -n {sname} --type Microsoft.CognitiveServices/accounts
network vnet create --resource-group {rg} --name {vnetname} -l {location}
network vnet subnet create --resource-group {rg} --name default --vnet-name {vnetname} --address-prefixes 10.0.0.0/24
cognitiveservices account show -n {sname} -g {rg}
network vnet subnet update --name default --resource-group {rg} --vnet-name {vnetname} --disable-private-endpoint-network-policies true
network private-endpoint create -g {rg} -n {pename} --vnet-name {vnetname} --subnet default --private-connection-resource-id {accountId} --group-id account --connection-name {pename} -l {location}
cognitiveservices account show -n {sname} -g {rg}
network private-endpoint-connection show --id {pecId}
network private-endpoint delete --name {pename} --resource-group {rg}
cognitiveservices account delete -n {sname} -g {rg}
cognitiveservices account create -n {sname} -g {rg} --kind {kind} --sku {sku} -l {location} --custom-domain {customdomain}
network private-link-resource list -g {rg} -n {sname} --type Microsoft.CognitiveServices/accounts
network vnet create --resource-group {rg} --name {vnetname} -l {location}
network vnet subnet create --resource-group {rg} --name default --vnet-name {vnetname} --address-prefixes 10.0.0.0/24
cognitiveservices account show -n {sname} -g {rg}
network vnet subnet update --name default --resource-group {rg} --vnet-name {vnetname} --disable-private-endpoint-network-policies true
network private-endpoint create -g {rg} -n {pename} --vnet-name {vnetname} --subnet default --private-connection-resource-id {accountId} --group-id account --connection-name {pename} -l {location}
cognitiveservices account show -n {sname} -g {rg}
network private-endpoint-connection show --id {pecId}
network private-endpoint-connection approve --id {pecId}
network private-endpoint-connection reject --id {pecId}
network private-endpoint-connection list --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.CognitiveServices/accounts/cs_cli_test_000002
network private-endpoint-connection delete --id {pecId} --yes
network private-endpoint-connection list --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.CognitiveServices/accounts/cs_cli_test_000002
network private-endpoint delete --name {pename} --resource-group {rg}
cognitiveservices account delete -n {sname} -g {rg}
config set test_section1.test_option1=test_value1
config set test_section2.test_option21=test_value21 test_section2.test_option22=test_value22
config get
config get test_section1
config get test_section2
config get test_section1.test_option1
config get test_section2.test_option21
config get test_section2.test_option22
config get test_section1.test_option22
config unset test_section1.test_option1
config unset test_section2.test_option21 test_section2.test_option22
config set test_section1.test_option1=test_value1 --local
config set test_section2.test_option21=test_value21 test_section2.test_option22=test_value22 --local
config get --local
config get test_section1 --local
config get test_section2 --local
config get test_section1.test_option1 --local
config get test_section2.test_option21 --local
config get test_section2.test_option22 --local
config get test_section1.test_option22 --local
config unset test_section1.test_option1 --local
config unset test_section2.test_option21 test_section2.test_option22 --local
configure --defaults global=global1
configure --defaults global2=global2
configure --defaults local=local1 --scope local
configure --list-defaults --scope local
configure --defaults global="" global2=""
configure --defaults local="" --scope local
local-context on
local-context show
local-context show --name resource_group_name vnet_name
local-context delete --name resource_group_name vnet_name
local-context delete --all -y
local-context delete --all --purge -y
local-context delete --all --purge -y --recursive
local-context delete --name resource_group_name --all
local-context off
local-context delete --all --purge -y
consumption budget create --budget-name "costbudget" --category "cost" --amount 100.0 -s "2018-02-01" -e "2018-10-01" --time-grain "monthly"
consumption budget delete --budget-name "costbudget"
consumption budget show --budget-name "havTest01"
consumption budget create --budget-name usagetypebudget1 --amount 20 -s 2018-02-01 -e 2018-10-01 --time-grain annually --category usage --meter-filter 0dfadad2-6e4f-4078-85e1-90c230d4d482
consumption marketplace list
consumption marketplace list --billing-period-name 201804-1
consumption marketplace list --billing-period-name 201804-1 --top 1
consumption pricesheet show
consumption pricesheet show --billing-period-name 20171001
consumption usage list -p 201710 -t 5
consumption usage list -p 201710 -a -m -t 5
consumption usage list -t 5
consumption usage list -a -m -t 5
consumption usage list -t 5 -a
consumption reservation detail list --reservation-order-id ca69259e-bd4f-45c3-bf28-3f353f9cce9b -s "2017-12-01" -e "2017-12-07"
consumption reservation detail list --reservation-order-id ca69259e-bd4f-45c3-bf28-3f353f9cce9b --reservation-id f37f4b70-52ba-4344-a8bd-28abfd21d640 -s "2017-12-01" -e "2017-12-07"
consumption reservation summary list --grain "daily" --reservation-order-id ca69259e-bd4f-45c3-bf28-3f353f9cce9b -s "2017-12-01" -e "2017-12-07"
consumption reservation summary list --grain "daily" --reservation-order-id ca69259e-bd4f-45c3-bf28-3f353f9cce9b --reservation-id f37f4b70-52ba-4344-a8bd-28abfd21d640 -s "2017-12-01" -e "2017-12-07"
consumption reservation summary list --grain "monthly" --reservation-order-id ca69259e-bd4f-45c3-bf28-3f353f9cce9b
consumption reservation summary list --grain "monthly" --reservation-order-id ca69259e-bd4f-45c3-bf28-3f353f9cce9b --reservation-id f37f4b70-52ba-4344-a8bd-28abfd21d640
consumption usage list -s {start_date} -e {end_date} -t 5
container create -g {rg} -n {container_group_name} --image {image} --os-type {os_type} --ip-address {ip_address_type} --dns-name-label {dns_name_label} --ports {ports} --cpu {cpu} --memory {memory} --command-line {command} -e {env} --restart-policy {restart_policy} --secrets {secrets} --secrets-mount-path {secrets_mount_path}
container show -g {rg} -n {container_group_name}
container list -g {rg}
container logs -g {rg} -n {container_group_name}
container delete -g {rg} -n {container_group_name} -y
container create -g {rg} -n {container_group_name} --image {image} --registry-username {registry_username} --registry-password {password}
container show -g {rg} -n {container_group_name}
identity create -g {rg} -n {user_assigned_identity_name}
container create -g {rg} -n {container_group_name1} --image {image} --os-type {os_type} --ip-address {ip_address_type} --assign-identity
container create -g {rg} -n {container_group_name2} --image {image} --os-type {os_type} --ip-address {ip_address_type} --assign-identity {user_assigned_identity}
container create -g {rg} -n {container_group_name3} --image {image} --os-type {os_type} --ip-address {ip_address_type} --assign-identity {system_assigned_identity} {user_assigned_identity}
container create -g {rg} -n {container_group_name} --image nginx --vnet {vnet_name}
container create -g {rg} -n {container_group_name} --image nginx --subnet {subnet_name} 
container create -g {rg} -n {container_group_name} --image nginx --vnet {vnet_name} --subnet {subnet_name} --ip-address {ip_addresss}
container create -g {rg} -n {container_group_name} --image {image} --os-type {os_type} --ip-address {ip_address_type} --cpu {cpu} --memory {memory} --zone {zone} --command-line {command} --restart-policy {restart_policy} --location {location}
container create -g {rg} -n {container_group_name} --image {image}
container export -g {rg} -n {container_group_name} -f "{output_file}"
container create -g {rg} -n {container_group_name} --image nginx --gitrepo-url {gitrepo_url} --gitrepo-dir {gitrepo_dir} --gitrepo-revision {gitrepo_revision} --gitrepo-mount-path {gitrepo_mount_path}
container show -g {rg} -n {container_group_name}
network vnet create -g {rg} -l eastus2 -n {vnet} --subnet-name {subnet}
network vnet show -g {rg} -n {vnet}
role assignment create --assignee e5007d2c-4b13-4a74-9b6a-605d99f03501 --role 4d97b98b-1d4f-4787-a291-c67834d212e7 --scope {vnet_id}
network vnet subnet show -g {rg} --vnet-name {vnet} --name {subnet}
managed-cassandra cluster create -c {c} -l eastus2 -g {rg} -s {subnet_id} -e {certs} --external-seed-nodes {seed_nodes}
managed-cassandra cluster show -c {c} -g {rg}
managed-cassandra cluster delete -c {c} -g {rg} --yes
network vnet create -g {rg} -l eastus2 -n {vnet} --subnet-name {subnet}
network vnet show -g {rg} -n {vnet}
role assignment create --assignee e5007d2c-4b13-4a74-9b6a-605d99f03501 --role 4d97b98b-1d4f-4787-a291-c67834d212e7 --scope {vnet_id}
network vnet subnet show -g {rg} --vnet-name {vnet} --name {subnet}
managed-cassandra cluster create -c {c} -l eastus2 -g {rg} -s {subnet_id} -i password
managed-cassandra cluster show -c {c} -g {rg}
managed-cassandra datacenter create -c {c} -d {d} -l eastus2 -g {rg} -n 3 -s {subnet_id}
managed-cassandra datacenter show -c {c} -d {d} -g {rg}
managed-cassandra datacenter list -c {c} -g {rg}
managed-cassandra cluster list -g {rg}
managed-cassandra cluster list
managed-cassandra cluster deallocate -c {c} -g {rg}
managed-cassandra cluster show -c {c} -g {rg}
managed-cassandra cluster start -c {c} -g {rg}
managed-cassandra cluster show -c {c} -g {rg}
managed-cassandra cluster invoke-command -c {c} -g {rg} --host {host} --command-name "nodetool" --arguments status=""
managed-cassandra cluster status -c {c} -g {rg}
managed-cassandra cluster delete -c {c} -g {rg} --yes
cosmosdb check-name-exists -n {acc}
cosmosdb create -n {acc} -g {rg}
cosmosdb check-name-exists -n {acc}
cosmosdb create -n {acc} -g {rg} --analytical-storage-schema-type FullFidelity
cosmosdb show -n {acc} -g {rg}
cosmosdb create -n {acc} -g {rg} --analytical-storage-schema-type FullFidelity
cosmosdb update -n {acc} -g {rg} --analytical-storage-schema-type WellDefined
cosmosdb show -n {acc} -g {rg}
cosmosdb create -n {acc} -g {rg} --capabilities EnableCassandra
cosmosdb cassandra keyspace exists -g {rg} -a {acc} -n {ks_name}
cosmosdb cassandra keyspace create -g {rg} -a {acc} -n {ks_name}
cosmosdb cassandra keyspace show -g {rg} -a {acc} -n {ks_name}
cosmosdb cassandra keyspace list -g {rg} -a {acc}
cosmosdb cassandra keyspace exists -g {rg} -a {acc} -n {ks_name}
cosmosdb cassandra keyspace delete -g {rg} -a {acc} -n {ks_name} --yes
cosmosdb cassandra keyspace list -g {rg} -a {acc}
cosmosdb create -n {acc} -g {rg} --capabilities EnableCassandra
cosmosdb cassandra keyspace create -g {rg} -a {acc} -n {ks_name} --throughput {tp1}
cosmosdb cassandra keyspace throughput show -g {rg} -a {acc} -n {ks_name}
cosmosdb cassandra keyspace throughput update -g {rg} -a {acc} -n {ks_name} --throughput {tp2}
cosmosdb cassandra table create -g {rg} -a {acc} -k {ks_name} -n {tb_name} --throughput {tp1} --schema {schema}
cosmosdb cassandra table throughput show -g {rg} -a {acc} -k {ks_name} -n {tb_name}
cosmosdb cassandra table throughput update -g {rg} -a {acc} -k {ks_name} -n {tb_name} --throughput {tp2}
cosmosdb create -n {acc} -g {rg} --capabilities EnableCassandra
cosmosdb cassandra keyspace create -g {rg} -a {acc} -n {ks_name} --throughput {tp1}
cosmosdb cassandra keyspace throughput show -g {rg} -a {acc} -n {ks_name}
cosmosdb cassandra keyspace throughput migrate --throughput-type {autoscale} -g {rg} -a {acc} -n {ks_name}
cosmosdb cassandra keyspace throughput show -g {rg} -a {acc} -n {ks_name}
cosmosdb cassandra keyspace throughput update -g {rg} -a {acc} -n {ks_name} --max-throughput {tp2}
cosmosdb cassandra keyspace throughput migrate --throughput-type {manual} -g {rg} -a {acc} -n {ks_name}
cosmosdb cassandra table create -g {rg} -a {acc} --keyspace-name {ks_name} -n {tb_name} --throughput {tp3} --schema {schema}
cosmosdb cassandra table throughput show -g {rg} -a {acc} --keyspace-name {ks_name} -n {tb_name}
cosmosdb cassandra table throughput migrate --throughput-type {autoscale} -g {rg} -a {acc} --keyspace-name {ks_name} -n {tb_name}
cosmosdb cassandra table throughput update -g {rg} -a {acc} --keyspace-name {ks_name} -n {tb_name} --max-throughput {tp4}
cosmosdb cassandra table throughput migrate --throughput-type {manual} -g {rg} -a {acc} --keyspace-name {ks_name} -n {tb_name}
cosmosdb create -n {acc} -g {rg} --capabilities EnableCassandra --enable-analytical-storage true
cosmosdb cassandra keyspace create -g {rg} -a {acc} -n {ks_name}
cosmosdb cassandra table exists -g {rg} -a {acc} -k {ks_name} -n {table_name}
cosmosdb cassandra table create -g {rg} -a {acc} -k {ks_name} -n {table_name} --schema {schema} --analytical-storage-ttl {ttl}
cosmosdb cassandra table update -g {rg} -a {acc} -k {ks_name} -n {table_name} --schema {new_schema} --analytical-storage-ttl {new_ttl}
cosmosdb cassandra table show -g {rg} -a {acc} -k {ks_name} -n {table_name}
cosmosdb cassandra table list -g {rg} -a {acc} -k {ks_name}
cosmosdb cassandra table exists -g {rg} -a {acc} -k {ks_name} -n {table_name}
cosmosdb cassandra table delete -g {rg} -a {acc} -k {ks_name} -n {table_name} --yes
cosmosdb cassandra table list -g {rg} -a {acc} -k {ks_name}
cosmosdb create -n {acc} -g {rg}
cosmosdb database create -g {rg} -n {acc} -d {db_name}
cosmosdb collection create -g {rg} -n {acc} -d {db_name} -c {col} --default-ttl 0
cosmosdb collection show -g {rg} -n {acc} -d {db_name} -c {col}
cosmosdb collection exists -g {rg} -n {acc} -d {db_name} -c {col}
cosmosdb collection exists -g {rg} -n {acc} -d {db_name} -c invalid
cosmosdb collection list -g {rg} -n {acc} -d {db_name}
cosmosdb collection update --throughput {throughput} -g {rg} -n {acc} -d {db_name} -c {col}
cosmosdb collection update --default-ttl {ttl} -g {rg} -n {acc} -d {db_name} -c {col}
cosmosdb collection update --default-ttl 0 -g {rg} -n {acc} -d {db_name} -c {col}
cosmosdb collection delete -g {rg} -n {acc} -d {db_name} -c {col} --yes
cosmosdb create -n {acc} -g {rg}
cosmosdb database create -g {rg} -n {acc} -d {db_name}
cosmosdb database show -g {rg} -n {acc} -d {db_name}
cosmosdb database exists -g {rg} -n {acc} -d {db_name}
cosmosdb database exists -g {rg} -n {acc} -d invalid
cosmosdb database list -g {rg} -n {acc}
cosmosdb database delete -g {rg} -n {acc} -d {db_name} --yes
cosmosdb database exists -g {rg} -n {acc} -d {db_name}
cosmosdb create -n {acc} -g {rg} --backup-policy-type Continuous --locations regionName={loc}
cosmosdb show -n {acc} -g {rg}
cosmosdb restorable-database-account show --location {loc} --instance-id {ins_id}
cosmosdb sql database create -g {rg} -a {acc} -n {db_name}
cosmosdb sql container create -g {rg} -a {acc} -d {db_name} -n {col} -p /pk 
cosmosdb delete -n {acc} -g {rg} --yes
cosmosdb restore --account-name {acc} -g {rg} --restore-timestamp {rts} --location {loc} --target-database-account-name {restored_acc}
cosmosdb show -n {restored_acc} -g {rg}
cosmosdb create -n {acc} -g {rg} --capabilities EnableGremlin
cosmosdb gremlin database exists -g {rg} -a {acc} -n {db_name}
cosmosdb gremlin database create -g {rg} -a {acc} -n {db_name}
cosmosdb gremlin database show -g {rg} -a {acc} -n {db_name}
cosmosdb gremlin database list -g {rg} -a {acc}
cosmosdb gremlin database exists -g {rg} -a {acc} -n {db_name}
cosmosdb gremlin database delete -g {rg} -a {acc} -n {db_name} --yes
cosmosdb gremlin database list -g {rg} -a {acc}
cosmosdb create -n {acc} -g {rg} --capabilities EnableGremlin
cosmosdb gremlin database create -g {rg} -a {acc} -n {db_name}
cosmosdb gremlin graph exists -g {rg} -a {acc} -d {db_name} -n {gp_name}
cosmosdb gremlin graph create -g {rg} -a {acc} -d {db_name} -n {gp_name} -p {part} --ttl {ttl} --conflict-resolution-policy {conflict_resolution} --idx {indexing}
cosmosdb gremlin graph update -g {rg} -a {acc} -d {db_name} -n {gp_name} --ttl {nttl}
cosmosdb gremlin graph show -g {rg} -a {acc} -d {db_name} -n {gp_name}
cosmosdb gremlin graph list -g {rg} -a {acc} -d {db_name}
cosmosdb gremlin graph exists -g {rg} -a {acc} -d {db_name} -n {gp_name}
cosmosdb gremlin graph delete -g {rg} -a {acc} -d {db_name} -n {gp_name} --yes
cosmosdb gremlin graph list -g {rg} -a {acc} -d {db_name}
cosmosdb create -n {acc} -g {rg} --capabilities EnableGremlin
cosmosdb gremlin database create -g {rg} -a {acc} -n {db_name} --throughput {tp1}
cosmosdb gremlin database throughput show -g {rg} -a {acc} -n {db_name}
cosmosdb gremlin database throughput update -g {rg} -a {acc} -n {db_name} --throughput {tp2}
cosmosdb gremlin graph create -g {rg} -a {acc} -d {db_name} -n {gp_name} -p {part} --throughput {tp1}
cosmosdb gremlin graph throughput show -g {rg} -a {acc} -d {db_name} -n {gp_name}
cosmosdb gremlin graph throughput update -g {rg} -a {acc} -d {db_name} -n {gp_name} --throughput {tp2}
cosmosdb create -n {acc} -g {rg} --capabilities EnableGremlin
cosmosdb gremlin database create -g {rg} -a {acc} -n {db_name} --throughput {tp1}
cosmosdb gremlin database throughput show -g {rg} -a {acc} -n {db_name}
cosmosdb gremlin database throughput migrate --throughput-type {autoscale} -g {rg} -a {acc} -n {db_name}
cosmosdb gremlin database throughput show -g {rg} -a {acc} -n {db_name}
cosmosdb gremlin database throughput update -g {rg} -a {acc} -n {db_name} --max-throughput {tp2}
cosmosdb gremlin database throughput migrate --throughput-type {manual} -g {rg} -a {acc} -n {db_name}
cosmosdb gremlin graph create -g {rg} -a {acc} -d {db_name} -n {graph_name} -p {part} --throughput {tp3}
cosmosdb gremlin graph throughput show -g {rg} -a {acc} -d {db_name} -n {graph_name}
cosmosdb gremlin graph throughput migrate --throughput-type {autoscale} -g {rg} -a {acc} -d {db_name} -n {graph_name}
cosmosdb gremlin graph throughput update -g {rg} -a {acc} -d {db_name} -n {graph_name} --max-throughput {tp4}
cosmosdb gremlin graph throughput migrate --throughput-type {manual} -g {rg} -a {acc} -d {db_name} -n {graph_name}
keyvault set-policy -n {kv_name} -g {rg} --spn a232010e-820c-4083-83bb-3ace5fc29d0b --key-permissions get unwrapKey wrapKey
keyvault key create -n {key_name} --kty RSA --size 3072 --vault-name {kv_name}
cosmosdb create -n {acc} -g {rg} --locations regionName={location} failoverPriority=0 --key-uri {key_uri}
cosmosdb locations list
cosmosdb locations show --location {loc}
keyvault set-policy -n {kv_name} -g {rg} --spn a232010e-820c-4083-83bb-3ace5fc29d0b --key-permissions get unwrapKey wrapKey
keyvault key create -n {key_name} --kty RSA --size 3072 --vault-name {kv_name}
cosmosdb create -n {acc} -g {rg} --locations regionName={location} failoverPriority=0 --key-uri {key_uri} --assign-identity [system] --default-identity FirstPartyIdentity
cosmosdb identity remove -n {acc} -g {rg}
cosmosdb identity assign -n {acc} -g {rg}
keyvault set-policy -n {kv_name} -g {rg} --object-id {identity_principal_id} --key-permissions get unwrapKey wrapKey
cosmosdb update -n {acc} -g {rg} --default-identity SystemAssignedIdentity
cosmosdb identity remove -n {acc} -g {rg}
cosmosdb identity assign -n {acc} -g {rg}
identity create -n {id1} -g {rg}
identity create -n {id2} -g {rg}
cosmosdb identity assign -n {acc} -g {rg} --identities {id1}
cosmosdb identity assign -n {acc} -g {rg} --identities {id2}
cosmosdb identity remove -n {acc} -g {rg}
cosmosdb identity remove -n {acc} -g {rg} --identities {id2}
cosmosdb identity assign -n {acc} -g {rg} --identities {id2}
cosmosdb identity remove -n {acc} -g {rg} --identities {id1} {id2}
cosmosdb identity assign -n {acc} -g {rg} --identities {id1} {id2} [system]
cosmosdb identity remove -n {acc} -g {rg} --identities {id2}
cosmosdb identity remove -n {acc} -g {rg} --identities {id1}
cosmosdb identity assign -n {acc} -g {rg} --identities {id1} {id2} [system]
cosmosdb identity remove -n {acc} -g {rg} --identities {id1} {id2} [system]
keyvault set-policy --name {kv_name} --object-id {id1principal} --key-permissions get unwrapKey wrapKey
cosmosdb create -n {acc2} -g {rg} --locations regionName={location} failoverPriority=0 --key-uri {key_uri} --assign-identity {id1} --default-identity "UserAssignedIdentity={id1}"
cosmosdb create -n {acc} -g {rg} --kind MongoDB --enable-analytical-storage true --server-version 3.2
cosmosdb mongodb database create -g {rg} -a {acc} -n {db_name}
cosmosdb mongodb collection exists -g {rg} -a {acc} -d {db_name} -n {col_name}
cosmosdb mongodb collection create -g {rg} -a {acc} -d {db_name} -n {col_name} --shard {shard_key} --analytical-storage-ttl {ttl}
cosmosdb mongodb collection update -g {rg} -a {acc} -d {db_name} -n {col_name} --idx {indexes} --analytical-storage-ttl {new_ttl}
cosmosdb mongodb collection show -g {rg} -a {acc} -d {db_name} -n {col_name}
cosmosdb mongodb collection list -g {rg} -a {acc} -d {db_name}
cosmosdb mongodb collection exists -g {rg} -a {acc} -d {db_name} -n {col_name}
cosmosdb mongodb collection delete -g {rg} -a {acc} -d {db_name} -n {col_name} --yes
cosmosdb mongodb collection list -g {rg} -a {acc} -d {db_name}
cosmosdb mongodb retrieve-latest-backup-time -g {rg} -a {acc} -d {db_name} -c {col} -l {loc}
cosmosdb create -n {acc} -g {rg} --backup-policy-type Continuous --locations regionName={loc} --kind MongoDB
cosmosdb show -n {acc} -g {rg}
cosmosdb mongodb retrieve-latest-backup-time -g {rg} -a {acc} -d {db_name} -c {col} -l {loc}
cosmosdb mongodb database create -g {rg} -a {acc} -n {db_name}
cosmosdb mongodb retrieve-latest-backup-time -g {rg} -a {acc} -d {db_name} -c {col} -l {loc}
cosmosdb mongodb collection create -g {rg} -a {acc} -d {db_name} -n {col} --shard {shard_key} --throughput {throughput}
cosmosdb mongodb retrieve-latest-backup-time -g {rg} -a {acc} -d {db_name} -c {col} -l {loc}
cosmosdb mongodb retrieve-latest-backup-time -g {rg} -a {acc} -d {db_name} -c {col} -l {loc}
cosmosdb mongodb retrieve-latest-backup-time -g {rg} -a {acc} -d {db_name} -c {col} -l {loc}
cosmosdb create -n {acc} -g {rg} --kind MongoDB
cosmosdb mongodb database exists -g {rg} -a {acc} -n {db_name}
cosmosdb mongodb database create -g {rg} -a {acc} -n {db_name}
cosmosdb mongodb database show -g {rg} -a {acc} -n {db_name}
cosmosdb mongodb database list -g {rg} -a {acc}
cosmosdb mongodb database exists -g {rg} -a {acc} -n {db_name}
cosmosdb mongodb database delete -g {rg} -a {acc} -n {db_name} --yes
cosmosdb mongodb database list -g {rg} -a {acc}
cosmosdb create -n {acc} -g {rg} --kind MongoDB
cosmosdb mongodb database create -g {rg} -a {acc} -n {db_name} --throughput {tp1}
cosmosdb mongodb database throughput show -g {rg} -a {acc} -n {db_name}
cosmosdb mongodb database throughput update -g {rg} -a {acc} -n {db_name} --throughput {tp2}
cosmosdb mongodb collection create -g {rg} -a {acc} -d {db_name} -n {col_name} --shard {shard_key} --throughput {tp1}
cosmosdb mongodb collection throughput show -g {rg} -a {acc} -d {db_name} -n {col_name}
cosmosdb mongodb collection throughput update -g {rg} -a {acc} -d {db_name} -n {col_name} --throughput {tp2}
cosmosdb create -n {acc} -g {rg} --kind MongoDB
cosmosdb mongodb database create -g {rg} -a {acc} -n {db_name} --throughput {tp1}
cosmosdb mongodb database throughput show -g {rg} -a {acc} -n {db_name}
cosmosdb mongodb database throughput migrate --throughput-type {autoscale} -g {rg} -a {acc} -n {db_name}
cosmosdb mongodb database throughput show -g {rg} -a {acc} -n {db_name}
cosmosdb mongodb database throughput update -g {rg} -a {acc} -n {db_name} --max-throughput {tp2}
cosmosdb mongodb database throughput migrate --throughput-type {manual} -g {rg} -a {acc} -n {db_name}
cosmosdb mongodb collection create -g {rg} -a {acc} -d {db_name} -n {col_name} --throughput {tp3} --shard {shard_key}
cosmosdb mongodb collection throughput show -g {rg} -a {acc} -d {db_name} -n {col_name}
cosmosdb mongodb collection throughput migrate --throughput-type {autoscale} -g {rg} -a {acc} -d {db_name} -n {col_name}
cosmosdb mongodb collection throughput update -g {rg} -a {acc} -d {db_name} -n {col_name} --max-throughput {tp4}
cosmosdb mongodb collection throughput migrate --throughput-type {manual} -g {rg} -a {acc} -d {db_name} -n {col_name}
cosmosdb create -n {acc} -g {rg} --backup-policy-type Continuous --locations regionName={loc} --kind MongoDB
cosmosdb show -n {acc} -g {rg}
cosmosdb mongodb database create -g {rg} -a {acc} -n {db_name}
cosmosdb mongodb collection create -g {rg} -a {acc} -d {db_name} -n {col} --shard {shard_key} --throughput {throughput}
cosmosdb restorable-database-account show --location {loc} --instance-id {ins_id}
cosmosdb mongodb restorable-database list --location {loc} --instance-id {ins_id}
cosmosdb mongodb restorable-collection list --location {loc} --instance-id {ins_id} --database-rid {db_rid}
cosmosdb mongodb restorable-resource list --restore-location {loc} -l {loc} --instance-id {ins_id} --restore-timestamp {rts}
network vnet create --name {vnet} --resource-group {rg} --subnet-name {sub}
cosmosdb create -n {acc} -g {rg} --enable-virtual-network
cosmosdb network-rule add -n {acc} -g {rg} --subnet {vnet}
cosmosdb network-rule add -n {acc} -g {rg} --virtual-network {vnet} --subnet {sub} --ignore-missing-vnet-service-endpoint
cosmosdb network-rule add -n {acc} -g {rg} --vnet-name {vnet} --subnet {sub} --ignore-missing-endpoint
network vnet create --name {vnet} --resource-group {rg} --subnet-name {sub}
network vnet subnet update -g {rg} --vnet-name {vnet} -n {sub} --service-endpoints Microsoft.AzureCosmosDB
cosmosdb create -n {acc} -g {rg} --enable-virtual-network --virtual-network-rule {subnet_id}
cosmosdb network-rule list -n {acc} -g {rg}
network vnet create --name {vnet} --resource-group {rg} --subnet-name {sub}
cosmosdb create -n {acc} -g {rg} --enable-virtual-network
cosmosdb network-rule add -n {acc} -g {rg} --subnet {subnet_id} --ignore-missing-vnet-service-endpoint
cosmosdb network-rule remove -n {acc} -g {rg} --subnet {subnet_id}
cosmosdb network-rule list -n {acc} -g {rg}
cosmosdb create -n {acc} -g {rg}
network vnet create -n {vnet} -g {rg} -l {loc} --subnet-name {subnet}
network vnet subnet update -n {subnet} --vnet-name {vnet} -g {rg} --disable-private-endpoint-network-policies true
network private-endpoint create -g {rg} -n {pe} --vnet-name {vnet} --subnet {subnet} -l {loc} --connection-name {pe_connection} --private-connection-resource-id {acc_id} --group-ids Sql
cosmosdb private-endpoint-connection show --id {pec_id}
cosmosdb private-endpoint-connection show --account-name {acc} --name {pe_name} --resource-group {rg}
cosmosdb private-endpoint-connection show -a {acc} -n {pe_name} -g {rg}
cosmosdb private-endpoint-connection approve --account-name {acc} --resource-group {rg} --name {pe_name} --description "{approval_desc}"
cosmosdb private-endpoint-connection reject --id {pec_id} --description "{rejection_desc}"
cosmosdb private-endpoint-connection delete --id {pec_id}
cosmosdb create -n {acc} -g {rg}
cosmosdb private-link-resource list --account-name {acc} --resource-group {rg}
cosmosdb create -n {acc} -g {rg} --backup-policy-type Continuous --locations regionName={loc}
cosmosdb show -n {acc} -g {rg}
cosmosdb restorable-database-account show --location {loc} --instance-id {ins_id}
cosmosdb restore --account-name {acc} -g {rg} --restore-timestamp {invalid_restore_time} --location {loc} --target-database-account-name {restored_acc}
cosmosdb restore --account-name {acc} -g {rg} --restore-timestamp {invalid_restore_time} --location {loc} --target-database-account-name {restored_acc}
cosmosdb restore --account-name {invalid_account_name} -g {rg} --restore-timestamp {rts} --location {loc} --target-database-account-name {restored_acc}
cosmosdb sql database create -g {rg} -a {acc} -n {db_name}
cosmosdb sql container create -g {rg} -a {acc} -d {db_name} -n {col} -p /pk 
cosmosdb restore --account-name {acc} -g {rg} --restore-timestamp {rts} --location {loc} --target-database-account-name {restored_acc}
cosmosdb show -n {restored_acc} -g {rg}
cosmosdb create -n {acc} -g {rg} --backup-policy-type Continuous --locations regionName={loc}
cosmosdb show -n {acc} -g {rg}
cosmosdb sql database create -g {rg} -a {acc} -n {db_name}
cosmosdb sql container create -g {rg} -a {acc} -d {db_name} -n {col} -p /pk 
cosmosdb restorable-database-account list -l {loc}
cosmosdb create -n {restored_acc} -g {rg} --is-restore-request true --restore-source {db_id} --restore-timestamp {rts}
cosmosdb show -n {restored_acc} -g {rg}
cosmosdb create -n {acc} -g {rg}
cosmosdb sql database create -g {rg} -a {acc} -n {db_name}
cosmosdb sql container exists -g {rg} -a {acc} -d {db_name} -n {ctn_name}
cosmosdb sql container create -g {rg} -a {acc} -d {db_name} -n {ctn_name} -p {part} --ttl {ttl} --unique-key-policy {unique_key} --conflict-resolution-policy {conflict_resolution} --idx {indexing}
cosmosdb sql container update -g {rg} -a {acc} -d {db_name} -n {ctn_name} --ttl {nttl}
cosmosdb sql container show -g {rg} -a {acc} -d {db_name} -n {ctn_name}
cosmosdb sql container list -g {rg} -a {acc} -d {db_name}
cosmosdb sql container exists -g {rg} -a {acc} -d {db_name} -n {ctn_name}
cosmosdb sql container delete -g {rg} -a {acc} -d {db_name} -n {ctn_name} --yes
cosmosdb sql container list -g {rg} -a {acc} -d {db_name}
cosmosdb create -n {acc} -g {rg} --enable-analytical-storage true
cosmosdb sql database create -g {rg} -a {acc} -n {db_name}
cosmosdb sql container create -g {rg} -a {acc} -d {db_name} -n {ctn_name} -p {part} --analytical-storage-ttl {ttl}
cosmosdb sql container delete -g {rg} -a {acc} -d {db_name} -n {ctn_name} --yes
cosmosdb sql container list -g {rg} -a {acc} -d {db_name}
cosmosdb sql retrieve-latest-backup-time -g {rg} -a {acc} -d {db_name} -c {col} -l {loc}
cosmosdb create -n {acc} -g {rg} --backup-policy-type Continuous --locations regionName={loc} --kind GlobalDocumentDB
cosmosdb show -n {acc} -g {rg}
cosmosdb sql retrieve-latest-backup-time -g {rg} -a {acc} -d {db_name} -c {col} -l {loc}
cosmosdb sql database create -g {rg} -a {acc} -n {db_name}
cosmosdb sql retrieve-latest-backup-time -g {rg} -a {acc} -d {db_name} -c {col} -l {loc}
cosmosdb sql container create -g {rg} -a {acc} -d {db_name} -n {col} -p /pk 
cosmosdb sql retrieve-latest-backup-time -g {rg} -a {acc} -d {db_name} -c {col} -l {loc}
cosmosdb sql retrieve-latest-backup-time -g {rg} -a {acc} -d {db_name} -c {col} -l {loc}
cosmosdb sql retrieve-latest-backup-time -g {rg} -a {acc} -d {db_name} -c {col} -l {loc}
cosmosdb create -n {acc} -g {rg}
cosmosdb sql database exists -g {rg} -a {acc} -n {db_name}
cosmosdb sql database create -g {rg} -a {acc} -n {db_name}
cosmosdb sql database show -g {rg} -a {acc} -n {db_name}
cosmosdb sql database list -g {rg} -a {acc}
cosmosdb sql database exists -g {rg} -a {acc} -n {db_name}
cosmosdb sql database delete -g {rg} -a {acc} -n {db_name} --yes
cosmosdb sql database list -g {rg} -a {acc}
cosmosdb create -n {acc} -g {rg}
cosmosdb sql database create -g {rg} -a {acc} -n {db_name} --max-throughput {tp1}
cosmosdb sql database throughput show -g {rg} -a {acc} -n {db_name}
cosmosdb sql database throughput update -g {rg} -a {acc} -n {db_name} --max-throughput {tp2}
cosmosdb sql container create -g {rg} -a {acc} -d {db_name} -n {ctn_name} -p {part} --max-throughput {tp1}
cosmosdb sql container throughput show -g {rg} -a {acc} -d {db_name} -n {ctn_name}
cosmosdb sql container throughput update -g {rg} -a {acc} -d {db_name} -n {ctn_name} --max-throughput {tp2}
cosmosdb create -n {acc} -g {rg}
cosmosdb sql database create -g {rg} -a {acc} -n {db_name} --throughput {tp1}
cosmosdb sql database throughput show -g {rg} -a {acc} -n {db_name}
cosmosdb sql database throughput update -g {rg} -a {acc} -n {db_name} --throughput {tp2}
cosmosdb sql container create -g {rg} -a {acc} -d {db_name} -n {ctn_name} -p {part} --throughput {tp1}
cosmosdb sql container throughput show -g {rg} -a {acc} -d {db_name} -n {ctn_name}
cosmosdb sql container throughput update -g {rg} -a {acc} -d {db_name} -n {ctn_name} --throughput {tp2}
cosmosdb create -n {acc} -g {rg}
cosmosdb sql database create -g {rg} -a {acc} -n {db_name} --throughput {tp1}
cosmosdb sql database throughput show -g {rg} -a {acc} -n {db_name}
cosmosdb sql database throughput migrate -g {rg} -a {acc} -n {db_name} -t {autoscale}
cosmosdb sql database throughput show -g {rg} -a {acc} -n {db_name}
cosmosdb sql database throughput update -g {rg} -a {acc} -n {db_name} --max-throughput {tp2}
cosmosdb sql database throughput migrate --throughput-type {manual} -g {rg} -a {acc} -n {db_name}
cosmosdb sql container create -g {rg} -a {acc} -d {db_name} -n {ctn_name} -p {part} --throughput {tp3}
cosmosdb sql container throughput show -g {rg} -a {acc} -d {db_name} -n {ctn_name}
cosmosdb sql container throughput migrate -g {rg} -a {acc} -d {db_name} -n {ctn_name} --throughput-type {autoscale}
cosmosdb sql container throughput update -g {rg} -a {acc} -d {db_name} -n {ctn_name} --max-throughput {tp4}
cosmosdb sql container throughput migrate --throughput-type {manual} -g {rg} -a {acc} -d {db_name} -n {ctn_name}
cosmosdb create -n {acc} -g {rg} --backup-policy-type Continuous --locations regionName={loc}
cosmosdb show -n {acc} -g {rg}
cosmosdb sql database create -g {rg} -a {acc} -n {db_name}
cosmosdb sql container create -g {rg} -a {acc} -d {db_name} -n {col} -p /pk 
cosmosdb restorable-database-account show --location {loc} --instance-id {ins_id}
cosmosdb sql restorable-database list --location {loc} --instance-id {ins_id}
cosmosdb sql restorable-container list --location {loc} --instance-id {ins_id} --database-rid {db_rid}
cosmosdb sql restorable-resource list --restore-location {loc} -l {loc} --instance-id {ins_id} --restore-timestamp {rts}
cosmosdb create -n {acc} -g {rg} --locations regionName=eastus2
cosmosdb sql database create -g {rg} -a {acc} -n {db_name}
cosmosdb sql role definition create -g {rg} -a {acc} -b "{create_body}"
cosmosdb sql role definition exists -g {rg} -a {acc} -i {role_def_id}
cosmosdb sql role definition show -g {rg} -a {acc} -i {role_def_id}
cosmosdb sql role definition update -g {rg} -a {acc} -b "{update_body}"
cosmosdb sql role definition create -g {rg} -a {acc} -b "{create_body2}"
cosmosdb sql role definition list -g {rg} -a {acc}
cosmosdb sql role assignment create -g {rg} -a {acc} -s {scope} -p {principal_id} -d {fully_qualified_role_def_id} -i {role_assignment_id}
cosmosdb sql role assignment exists -g {rg} -a {acc} -i {role_assignment_id}
cosmosdb sql role assignment show -g {rg} -a {acc} -i {role_assignment_id}
cosmosdb sql role assignment update -g {rg} -a {acc} -d {role_def_id2} -i {fully_qualified_role_assignment_id}
cosmosdb sql role assignment create -g {rg} -a {acc} -s {scope} -p {principal_id} -n roleName2 -i {role_assignment_id2}
cosmosdb sql role assignment exists -g {rg} -a {acc} -i {role_assignment_id3}
cosmosdb sql role assignment create -g {rg} -a {acc} -s {scope} -p {principal_id} -n roleName2 -i {role_assignment_id3} --no-wait
cosmosdb sql role assignment exists -g {rg} -a {acc} -i {role_assignment_id3}
cosmosdb sql role assignment wait -g {rg} -a {acc} -i {role_assignment_id3} --exists
cosmosdb sql role assignment exists -g {rg} -a {acc} -i {role_assignment_id3}
cosmosdb sql role assignment list -g {rg} -a {acc}
cosmosdb sql role assignment delete -g {rg} -a {acc} -i {role_assignment_id} --yes
cosmosdb sql role assignment delete -g {rg} -a {acc} -i {role_assignment_id2} --yes
cosmosdb sql role assignment delete -g {rg} -a {acc} -i {role_assignment_id3} --yes
cosmosdb sql role assignment list -g {rg} -a {acc}
cosmosdb sql role definition delete -g {rg} -a {acc} -i {role_def_id} --yes
cosmosdb sql role definition delete -g {rg} -a {acc} -i {fully_qualified_role_def_id2} --yes
cosmosdb sql role definition list -g {rg} -a {acc}
cosmosdb create -n {acc} -g {rg}
cosmosdb sql database create -g {rg} -a {acc} -n {db_name}
cosmosdb sql container create -g {rg} -a {acc} -d {db_name} -n {ctn_name} -p {part} 
cosmosdb sql stored-procedure create --resource-group {rg} -a {acc} -d {db_name} -c {ctn_name} -n {sproc_name} -b {body}
cosmosdb sql stored-procedure update -g {rg} -a {acc} -d {db_name} -c {ctn_name} -n {sproc_name} -b {nbody}
cosmosdb sql stored-procedure show -g {rg} -a {acc} -d {db_name} -c {ctn_name} -n {sproc_name}
cosmosdb sql stored-procedure list -g {rg} -a {acc} -d {db_name} -c {ctn_name}
cosmosdb sql stored-procedure delete -g {rg} -a {acc} -d {db_name} -c {ctn_name} -n {sproc_name} --yes
cosmosdb sql stored-procedure list -g {rg} -a {acc} -d {db_name} -c {ctn_name}
cosmosdb create -n {acc} -g {rg}
cosmosdb sql database create -g {rg} -a {acc} -n {db_name}
cosmosdb sql container create -g {rg} -a {acc} -d {db_name} -n {ctn_name} -p {part} 
cosmosdb sql trigger create --resource-group {rg} -a {acc} -d {db_name} -c {ctn_name} -n {trigger_name} -b {body}
cosmosdb sql trigger update -g {rg} -a {acc} -d {db_name} -c {ctn_name} -n {trigger_name} -b {nbody} --operation {op} -t {type}
cosmosdb sql trigger show -g {rg} -a {acc} -d {db_name} -c {ctn_name} -n {trigger_name}
cosmosdb sql trigger list -g {rg} -a {acc} -d {db_name} -c {ctn_name}
cosmosdb sql trigger delete -g {rg} -a {acc} -d {db_name} -c {ctn_name} -n {trigger_name} --yes
cosmosdb sql trigger list -g {rg} -a {acc} -d {db_name} -c {ctn_name}
cosmosdb create -n {acc} -g {rg}
cosmosdb sql database create -g {rg} -a {acc} -n {db_name}
cosmosdb sql container create -g {rg} -a {acc} -d {db_name} -n {ctn_name} -p {part} 
cosmosdb sql user-defined-function create --resource-group {rg} -a {acc} -d {db_name} -c {ctn_name} -n {udf_name} -b {body}
cosmosdb sql user-defined-function update -g {rg} -a {acc} -d {db_name} -c {ctn_name} -n {udf_name} -b {nbody}
cosmosdb sql user-defined-function show -g {rg} -a {acc} -d {db_name} -c {ctn_name} -n {udf_name}
cosmosdb sql user-defined-function list -g {rg} -a {acc} -d {db_name} -c {ctn_name}
cosmosdb sql user-defined-function delete -g {rg} -a {acc} -d {db_name} -c {ctn_name} -n {udf_name} --yes
cosmosdb sql user-defined-function list -g {rg} -a {acc} -d {db_name} -c {ctn_name}
cosmosdb create -n {acc} -g {rg} --capabilities EnableTable
cosmosdb table exists -g {rg} -a {acc} -n {table_name}
cosmosdb table create -g {rg} -a {acc} -n {table_name}
cosmosdb table show -g {rg} -a {acc} -n {table_name}
cosmosdb table list -g {rg} -a {acc}
cosmosdb table exists -g {rg} -a {acc} -n {table_name}
cosmosdb table delete -g {rg} -a {acc} -n {table_name} --yes
cosmosdb table list -g {rg} -a {acc}
cosmosdb create -n {acc} -g {rg} --capabilities EnableTable
cosmosdb table create -g {rg} -a {acc} -n {tb_name} --throughput {tp1}
cosmosdb table throughput show -g {rg} -a {acc} -n {tb_name}
cosmosdb table throughput update -g {rg} -a {acc} -n {tb_name} --throughput {tp2}
cosmosdb create -n {acc} -g {rg} --capabilities EnableTable
cosmosdb table create -g {rg} -a {acc} -n {table_name} --throughput {tp1}
cosmosdb table throughput show -g {rg} -a {acc} -n {table_name}
cosmosdb table throughput migrate --throughput-type {autoscale} -g {rg} -a {acc} -n {table_name}
cosmosdb table throughput show -g {rg} -a {acc} -n {table_name}
cosmosdb table throughput update -g {rg} -a {acc} -n {table_name} --max-throughput {tp2}
cosmosdb table throughput migrate --throughput-type {manual} -g {rg} -a {acc} -n {table_name}
cosmosdb create -n {acc} -g {rg} --enable-automatic-failover --default-consistency-level ConsistentPrefix --network-acl-bypass AzureServices --network-acl-bypass-resource-ids {network_acl_bypass_resource_id} --backup-interval 480 --backup-retention 8
cosmosdb show -n {acc} -g {rg}
cosmosdb update -n {acc} -g {rg} --enable-automatic-failover false --default-consistency-level Session --disable-key-based-metadata-write-access --enable-public-network false --network-acl-bypass None
cosmosdb show -n {acc} -g {rg}
cosmosdb update -n {acc} -g {rg} --tags testKey=testValue --enable-public-network
cosmosdb show -n {acc} -g {rg}
cosmosdb create -n {acc} -g {rg}
cosmosdb delete -n {acc} -g {rg} --yes
cosmosdb create -n {acc} -g {rg} --enable-multiple-write-locations --default-consistency-level ConsistentPrefix
cosmosdb show -n {acc} -g {rg}
cosmosdb create -n {acc} -g {rg}
cosmosdb keys list -n {acc} -g {rg}
cosmosdb keys regenerate -n {acc} -g {rg} --key-kind primary
cosmosdb keys regenerate -n {acc} -g {rg} --key-kind primaryReadonly
cosmosdb keys regenerate -n {acc} -g {rg} --key-kind secondary
cosmosdb keys regenerate -n {acc} -g {rg} --key-kind secondaryReadonly
cosmosdb keys list -n {acc} -g {rg}
cosmosdb list-read-only-keys -n {acc} -g {rg}
cosmosdb list-keys -n {acc} -g {rg}
cosmosdb create -n {acc1} -g {rg}
cosmosdb create -n {acc2} -g {rg}
cosmosdb list -g {rg}
cosmosdb create -n {acc} -g {rg}
cosmosdb list-keys -n {acc} -g {rg}
cosmosdb show -n {acc} -g {rg}
cosmosdb database list -n {acc} -g {rg}
cosmosdb database list -n {acc} --key {primary_master_key}
cosmosdb database list --url-connection {url} --key {primary_master_key}
cosmosdb create -n {acc} -g {rg} --locations {write_location}=0 --locations regionName={read_location} failoverPriority=1 isZoneRedundant=false
cosmosdb create -n {acc} -g {rg} --locations regionName={write_location} failoverPriority=0 --locations regionName={read_location} failoverPriority=1
cosmosdb failover-priority-change -n {acc} -g {rg} --failover-policies {read_location}=0 {write_location}=1
cosmosdb show -n {acc} -g {rg}
cosmosdb create -n {acc} -g {rg}
cosmosdb show -n {acc} -g {rg}
cosmosdb update -n {acc} -g {rg} --backup-interval 120 --backup-retention 8
cosmosdb update -n {acc} -g {rg} --backup-policy-type Continuous
cosmosdb create -n {acc} -g {rg} --kind MongoDB --ip-range-filter "20.10.10.10,12.12.122.122,12.22.11.11" --server-version 3.2 --enable-analytical-storage true --enable-free-tier false
cosmosdb show -n {acc} -g {rg}
cosmosdb update -n {acc} -g {rg} --capabilities EnableAggregationPipeline --server-version 3.2
cosmosdb show -n {acc} -g {rg}
cosmosdb keys list --type connection-strings -n {acc} -g {rg}
cosmosdb update -n {acc} -g {rg} --backup-interval 120 --backup-retention 8
cosmosdb update -n {acc} -g {rg} --backup-interval 120 --backup-retention 8 --backup-redundancy {geo}
cosmosdb update -n {acc} -g {rg} --backup-interval 120 --backup-retention 8 --backup-redundancy {lrs}
databoxedge device create -l {location} --sku {sku} --name {name} -g {rg}
databoxedge device update --name {name} -g {rg} --tags {tags}
databoxedge device list -g {rg}
databoxedge device show -n {name} -g {rg}
databoxedge device show-update-summary -n {name} -g {rg}
databoxedge alert list -d {name} -g {rg}
databoxedge list-node -g {rg} -d {name}
databoxedge device delete -n {name} -g {rg} -y
databoxedge device list -g {rg}
databoxedge bandwidth-schedule create --device-name {name} --days {days} --name {bwname} --rate-in-mbps {rate} --resource-group {rg} --start {start} --stop {stop}
databoxedge bandwidth-schedule update --device-name {name} --days {days-update} --name {bwname} --rate-in-mbps {rate-update} --resource-group {rg} --start {start-update} --stop {stop-update}
databoxedge bandwidth-schedule list -d {name} -g {rg}
databoxedge bandwidth-schedule show -d {name} -g {rg} --name {bwname}
databoxedge bandwidth-schedule delete -d {name} -g {rg} --name {bwname} -y
databoxedge bandwidth-schedule list -d {name} -g {rg}
databoxedge device create -l {location} --sku {sku} --name {name} -g {rg}
databoxedge order create --device-name {name} --company-name Microsoft --contact-person JohnMcclane --email-list john@microsoft.com --phone 426-9400 --address-line1 MicrosoftCorporation --city WA --country "United States" --postal-code 98052 --state WA --resource-group {rg} --status Untracked
databoxedge order update --device-name {name} --company-name Microsoft --contact-person JohnMcclane --email-list john@microsoft.com --phone 426-9400 --address-line1 MicrosoftCorporation --city WA --country "United States" --postal-code 98052 --state WA --resource-group {rg} --status Untracked
databoxedge order list -d {name} -g {rg}
databoxedge order show -d {name} -g {rg}
databoxedge order delete -d {name} -g {rg} -y
databoxedge order list -d {name} -g {rg}
dls account create -g {rg} -n {dls1} -l {loc} --disable-encryption
dls account create -g {rg} -n {dls2} -l {loc} --disable-encryption
storage account create -g {rg} -n {wasb} -l {loc} --sku Standard_GRS
storage account keys list -g {rg} -n {wasb}
dla account create -g {rg} -n {dla} -l {loc} --default-data-lake-store {dls1}
dla account show -n {dla} -g {rg}
dla account list -g {rg}
dla account list
dla account update -g {rg} -n {dla} --firewall-state Enabled --max-degree-of-parallelism 15 --max-job-count 2 --query-store-retention 15 --allow-azure-ips Enabled
dla account show -n {dla} -g {rg}
dla account blob-storage add -g {rg} -n {dla} --storage-account-name {wasb} --access-key {wasb_key}
dla account blob-storage show -g {rg} -n {dla} --storage-account-name {wasb}
dla account blob-storage list -g {rg} -n {dla}
dla account blob-storage delete -g {rg} -n {dla} --storage-account-name {wasb}
dla account blob-storage list -g {rg} -n {dla}
dla account data-lake-store add -g {rg} -n {dla} --data-lake-store-account-name {dls2}
dla account data-lake-store show -g {rg} -n {dla} --data-lake-store-account-name {dls2}
dla account data-lake-store list -g {rg} -n {dla}
dla account data-lake-store delete -g {rg} -n {dla} --data-lake-store-account-name {dls2}
dla account data-lake-store list -g {rg} -n {dla}
dla account compute-policy create -g {rg} -n {dla} --compute-policy-name {user_policy} --object-id {user_oid} --object-type User
dla account compute-policy create -g {rg} -n {dla} --compute-policy-name {user_policy} --object-id {user_oid} --object-type User --max-dop-per-job 2
dla account compute-policy show -g {rg} -n {dla} --compute-policy-name {user_policy}
dla account compute-policy create -g {rg} -n {dla} --compute-policy-name {group_policy} --object-id {group_oid} --object-type Group --max-dop-per-job 2
dla account compute-policy update -g {rg} -n {dla} --compute-policy-name {user_policy} --min-priority-per-job 2
dla account compute-policy list -g {rg} -n {dla}
dla account compute-policy delete -g {rg} -n {dla} --compute-policy-name {user_policy}
dla account compute-policy list -g {rg} -n {dla}
dla account delete -g {rg} -n {dla}
dla account list -g {rg}
dls account create -g {rg} -n {dls} -l {loc} --disable-encryption
dla account create -g {rg} -n {dla} -l {loc} --default-data-lake-store {dls}
dla job submit -n {dla} --job-name "python cli catalog job" --script "DROP DATABASE IF EXISTS catalog_item_1;
CREATE DATABASE catalog_item_1;
CREATE TABLE catalog_item_1.dbo.catalog_item_2 (
  UserId int,
  Start DateTime,
  Region string,
  Query string,
  Duration int,
  Urls string,
  ClickedUrls string,
  INDEX idx1 CLUSTERED (Region ASC)
    PARTITIONED BY (UserId) HASH (Region));
ALTER TABLE catalog_item_1.dbo.catalog_item_2 ADD IF NOT EXISTS PARTITION (1);
DROP FUNCTION IF EXISTS catalog_item_1.dbo.catalog_item_3;
CREATE FUNCTION catalog_item_1.dbo.catalog_item_3()
  RETURNS @result TABLE (
    s_date DateTime,
    s_time string,
    s_sitename string,
    cs_method string,
    cs_uristem string,
    cs_uriquery string,
    s_port int,
    cs_username string,
    c_ip string,
    cs_useragent string,
    cs_cookie string,
    cs_referer string,
    cs_host string,
    sc_status int,
    sc_substatus int,
    sc_win32status int,
    sc_bytes int,
    cs_bytes int,
    s_timetaken int) AS
      BEGIN
        @result = EXTRACT
          s_date DateTime,
          s_time string,
          s_sitename string,
          cs_method string,
          cs_uristem string,
          cs_uriquery string,
          s_port int,
          cs_username string,
          c_ip string,
          cs_useragent string,
          cs_cookie string,
          cs_referer string,
          cs_host string,
          sc_status int,
          sc_substatus int,
          sc_win32status int,
          sc_bytes int,
          cs_bytes int,
          s_timetaken int FROM \"@/Samples/Data/WebLog.log\" USING Extractors.Text(delimiter:' ');
        RETURN;
    END;
CREATE VIEW catalog_item_1.dbo.catalog_item_8 AS SELECT * FROM (VALUES(1,2),(2,4)) AS T(a, b);
CREATE PROCEDURE catalog_item_1.dbo.catalog_item_4() AS BEGIN CREATE VIEW catalog_item_1.dbo.catalog_item_8 AS SELECT * FROM (VALUES(1,2),(2,4)) AS T(a, b); END;"
dla job wait -n {dla} --job-id {job_id}
dla catalog database list -n {dla}
dla catalog database show -n {dla} --database-name {db}
dla catalog schema list -n {dla} --database-name {db}
dla catalog schema show -n {dla} --database-name {db} --schema-name dbo
dla catalog table list -n {dla} --database-name {db} --schema-name dbo
dla catalog table list -n {dla} --database-name {db}
dla catalog table show -n {dla} --database-name {db} --schema-name dbo --table-name {table}
dla catalog view list -n {dla} --database-name {db} --schema-name dbo
dla catalog view list -n {dla} --database-name {db}
dla catalog view show -n {dla} --database-name {db} --schema-name dbo --view-name {view}
dla catalog procedure list -n {dla} --database-name {db} --schema-name dbo
dla catalog procedure show -n {dla} --database-name {db} --schema-name dbo --procedure-name {proc}
dla catalog procedure list -n {dla} --database-name {db} --schema-name dbo
dla catalog procedure show -n {dla} --database-name {db} --schema-name dbo --procedure-name {proc}
dla catalog tvf list -n {dla} --database-name {db} --schema-name dbo
dla catalog tvf list -n {dla} --database-name {db}
dla catalog tvf show -n {dla} --database-name {db} --schema-name dbo --table-valued-function-name {tvf}
dla catalog credential create -n {dla} --database-name {db} --credential-name {cred} --user-name {cred_username} --password {cred_pwd} --uri "http://adl.contoso.com:443"
dla catalog credential list -n {dla} --database-name {db}
dla catalog credential show -n {dla} --database-name {db} --credential-name {cred}
dla catalog credential delete -n {dla} --database-name {db} --credential-name {cred}
dla catalog credential list -n {dla} --database-name {db}
dls account create -g {rg} -n {dls} -l {loc} --disable-encryption
dls account show -g {rg} -n {dls}
dla account create -g {rg} -n {dla} -l {loc} --default-data-lake-store {dls}
dla account show -g {rg} -n {dla}
dla job submit -n {dla} --job-name clijobtest --script "DROP DATABASE IF EXISTS FOO; CREATE DATABASE FOO;"
dla job cancel -n {dla} --job-id {job_id}
dla job show -n {dla} --job-id {job_id}
dla job submit -n {dla} --job-name clijobtest --script "DROP DATABASE IF EXISTS FOO; CREATE DATABASE FOO;" --recurrence-name {recurrence_name}
dla job submit -n {dla} --job-name clijobtest --script "DROP DATABASE IF EXISTS FOO; CREATE DATABASE FOO;" --recurrence-name {recurrence_name} --recurrence-id {recurrence_id} --pipeline-name {pipeline_name}
dla job submit -n {dla} --job-name clijobtest --script "DROP DATABASE IF EXISTS FOO; CREATE DATABASE FOO;" --recurrence-name {recurrence_name} --recurrence-id {recurrence_id} --pipeline-name {pipeline_name} --pipeline-id {pipeline_id} --pipeline-uri {pipeline_uri} --run-id {run_id}
dla job wait -n {dla} --job-id {job_id}
dla job list -n {dla}
dla job recurrence list -n {dla}
dla job recurrence show -n {dla} --recurrence-id {recurrence_id}
dla job pipeline list -n {dla}
dla job pipeline show -n {dla} --pipeline-id {pipeline_id}
dls account create -g {rg} -n {dls} -l {loc} --disable-encryption
dls account show -g {rg} -n {dls}
dls fs create -n {dls} --path "{dir}" --folder --force
dls fs show -n {dls} --path "{dir}"
dls fs access set-owner -n {dls} --path "{dir}" --group {group_id} --owner {user_id}
dls fs show -n {dls} --path "{dir}"
dls fs access set-permission -n {dls} --path "{dir}" --permission 777
dls fs show -n {dls} --path "{dir}"
dls fs access show -n {dls} --path "{dir}"
dls fs access set -n {dls} --path "{dir}" --acl-spec {new_acl}
dls fs access show -n {dls} --path "{dir}"
dls fs access set-entry -n {dls} --path "{dir}" --acl-spec {acl_to_modify}
dls fs access show -n {dls} --path "{dir}"
dls fs access remove-entry -n {dls} --path "{dir}" --acl-spec {acl_to_remove}
dls fs access show -n {dls} --path "{dir}"
dls fs access remove-all -n {dls} --path "{dir}" --default-acl
dls fs access show -n {dls} --path "{dir}"
dls fs access remove-all -n {dls} --path "{dir}"
dls fs access show -n {dls} --path "{dir}"
dls account create -g {rg} -n {dls} -l {loc} --disable-encryption
dls account show -g {rg} -n {dls}
dls fs create -n {dls} --path "{folder1}" --folder --force
dls fs show -n {dls} --path "{folder1}"
dls fs create -n {dls} --path "{folder1}/{file}" --content {content}
dls fs show -n {dls} --path "{folder1}/{file}"
dls fs set-expiry -n {dls} --path "{folder1}/{file}" --expiration-time {time_in_milliseconds}
dls fs show -n {dls} --path "{folder1}/{file}"
dls fs remove-expiry -n {dls} --path "{folder1}/{file}"
dls fs show -n {dls} --path "{folder1}/{file}"
dls fs create -n {dls} --path "{folder2}" --folder --force
dls fs move -n {dls} --source-path "{folder1}/{file}" --destination-path "{folder2}/{file}"
dls fs show -n {dls} --path "{folder2}/{file}"
dls fs preview -n {dls} --path "{folder2}/{file}"
dls fs preview -n {dls} --path "{folder2}/{file}" --length 1 --offset 3
dls fs list -n {dls} --path "{folder2}"
dls fs append -n {dls} --path "{folder2}/{file}" --content {content}
dls fs show -n {dls} --path "{folder2}/{file}"
dls fs upload -n {dls} --destination-path "{folder1}/{upload_file}" --source-path "{local_file}"
dls fs show -n {dls} --path "{folder1}/{upload_file}"
dls fs join -n {dls} --destination-path "{folder1}/{join_file}" --source-paths "{folder1}/{upload_file}" "{folder2}/{file}"
dls fs show -n {dls} --path "{folder1}/{join_file}"
dls fs download -n {dls} --destination-path "{dir}/{download_file}" --source-path "{folder1}/{join_file}"
dls fs delete -n {dls} --path "{folder1}/{join_file}"
dls fs list -n {dls} --path "{folder1}"
dls fs create -n {dls} --path "{folder2}" --folder
dls fs create -n {dls} --path "{folder2}/tempfile01.txt"
dls fs delete -n {dls} --path "{folder2}" --recurse
dls fs test -n {dls} --path "{folder2}"
dls fs test -n {dls} --path "{folder1}"
dls account create -g {rg} -n {dls} -l {loc}
dls account show -n {dls} -g {rg}
dls account enable-key-vault -n {dls} -g {rg}
dls account list -g {rg}
dls account list
dls account update -g {rg} -n {dls} --firewall-state Enabled --trusted-id-provider-state Enabled
dls account show -n {dls} -g {rg}
dls account firewall create -g {rg} -n {dls} --firewall-rule-name {fw} --start-ip-address {start_ip} --end-ip-address {end_ip}
dls account firewall show -g {rg} -n {dls} --firewall-rule-name {fw}
dls account firewall update -g {rg} -n {dls} --firewall-rule-name {fw} --end-ip-address {new_end_ip}
dls account firewall show -g {rg} -n {dls} --firewall-rule-name {fw}
dls account firewall list -g {rg} -n {dls}
dls account firewall delete -g {rg} -n {dls} --firewall-rule-name {fw}
dls account firewall list -g {rg} -n {dls}
network vnet subnet show -g {rg} -n default --vnet-name {vnet}
network vnet subnet create --resource-group {rg} --vnet-name {vnet} --name {updated_subnet} --address-prefixes 10.0.1.0/24
network vnet subnet update --service-endpoints Microsoft.AzureActiveDirectory --ids "{subnet_id}"
network vnet subnet update --service-endpoints Microsoft.AzureActiveDirectory --ids "{updated_subnet_id}"
dls account network-rule create -g {rg} --account-name {dls} --name {network_rule} --subnet {subnet_id}
dls account network-rule show -g {rg} --account-name {dls} --name {network_rule}
dls account network-rule update -g {rg} --account-name {dls} --name {network_rule} --subnet {updated_subnet_id}
dls account network-rule show -g {rg} --account-name {dls} --name {network_rule}
dls account network-rule list -g {rg} --account-name {dls}
dls account network-rule delete -g {rg} --account-name {dls} --name {network_rule}
dls account network-rule list -g {rg} --account-name {dls}
dls account trusted-provider create -g {rg} -n {dls} --trusted-id-provider-name {provider} --id-provider {trusted_provider}
dls account trusted-provider show -g {rg} -n {dls} --trusted-id-provider-name {provider}
dls account trusted-provider update -g {rg} -n {dls} --trusted-id-provider-name {provider} --id-provider {new_provider}
dls account trusted-provider show -g {rg} -n {dls} --trusted-id-provider-name {provider}
dls account trusted-provider list -g {rg} -n {dls}
dls account trusted-provider delete -g {rg} -n {dls} --trusted-id-provider-name {provider}
dls account trusted-provider list -g {rg} -n {dls}
dls account delete -g {rg} -n {dls}
dls account list -g {rg}
network vnet subnet show -g {vsubnet_rg} -n {vsubnet_sn} --vnet-name {vsubnet_vn}
dms create -l {lname} -n {sname} -g {rg} --sku-name {skuname} --subnet {vnetid} --tags area=cli env=test
dms project show -g {rg} --service-name {sname} -n {pname1}
dms project create -g {rg} --service-name {sname} -l {lname} -n {pname1} --source-platform SQL --target-platform SQLDB --tags Type=test Cli
dms project show -g {rg} --service-name {sname} -n {pname1}
dms project create -g {rg} --service-name {sname} -l {lname} -n {pnamepg} --source-platform PostgreSQL --target-platform AzureDbForPostgreSQL --tags Type=test Cli
dms project show -g {rg} --service-name {sname} -n {pnamepg}
dms project create -g {rg} --service-name {sname} -l {lname} -n {pnamemysql} --source-platform MySQL --target-platform AzureDbForMySQL --tags Type=test Cli
dms project show -g {rg} --service-name {sname} -n {pnamemysql}
dms project create -g {rg} --service-name {sname} -l {lname} -n {pname2} --source-platform SQL --target-platform SQLDB
dms project list -g {rg} --service-name {sname}
dms project check-name -g {rg} --service-name {sname} -n {pname2}
dms project delete -g {rg} --service-name {sname} -n {pname2} -y
dms project check-name -g {rg} --service-name {sname} -n {pname2}
dms delete -g {rg} -n {sname} --delete-running-tasks true -y
network vnet subnet show -g {vsubnet_rg} -n {vsubnet_sn} --vnet-name {vsubnet_vn}
dms list-skus
dms show -g {rg} -n {sname}
dms create -l {lname} -n {sname} -g {rg} --sku-name {skuname} --subnet {vnetid} --tags area=cli env=test
dms show -g {rg} -n {sname}
dms list -g {rg}
dms check-status -g {rg} -n {sname}
dms stop -g {rg} -n {sname}
dms check-status -g {rg} -n {sname}
dms start -g {rg} -n {sname}
dms check-status -g {rg} -n {sname}
dms check-name -l {lname} -n {sname}
dms delete -g {rg} -n {sname} -y
dms check-name -l {lname} -n {sname}
network vnet subnet show -g {vsubnet_rg} -n {vsubnet_sn} --vnet-name {vsubnet_vn}
dms create -l {lname} -n {sname} -g {rg} --sku-name {skuname} --subnet {vnetid} --tags area=cli env=test
dms project create -g {rg} --service-name {sname} -l {lname} -n {pname} --source-platform SQL --target-platform SQLDB
dms project create -g {rg} --service-name {sname} -l {lname} -n {pnamepg} --source-platform PostgreSQL --target-platform AzureDbForPostgreSQL
dms project create -g {rg} --service-name {sname} -l {lname} -n {pnamemysql} --source-platform MySql --target-platform AzureDbForMySQL
dms project task show -g {rg} --service-name {sname} --project-name {pname} -n {tname1}
dms project task show -g {rg} --service-name {sname} --project-name {pnamepg} -n {tnamepg}
dms project task show -g {rg} --service-name {sname} --project-name {pnamemysql} -n {tnamemysql}
dms project task create --task-type OfflineMigration --database-options-json "{dboptions1}" -n {tname1} --project-name {pname} -g {rg} --service-name {sname} --source-connection-json "{sconn}" --target-connection-json "{tconn}"
dms project task show -g {rg} --service-name {sname} --project-name {pname} -n {tname1}
dms project task cancel -g {rg} --service-name {sname} --project-name {pname} -n {tname1}
dms project task create --task-type OnlineMigration --database-options-json "{dboptionspg}" -n {tnamepg} --project-name {pnamepg} -g {rg} --service-name {sname} --source-connection-json "{sconnpg}" --target-connection-json "{tconnpg}"
dms project task show -g {rg} --service-name {sname} --project-name {pnamepg} -n {tnamepg}
dms project task cancel -g {rg} --service-name {sname} --project-name {pnamepg} -n {tnamepg}
dms project task create --task-type OfflineMigration --database-options-json "{dboptionsmysql}" -n {tnamemysql} --project-name {pnamemysql} -g {rg} --service-name {sname} --source-connection-json "{sconnmysql}" --target-connection-json "{tconnmysql}"
dms project task show -g {rg} --service-name {sname} --project-name {pnamemysql} -n {tnamemysql}
dms project task cancel -g {rg} --service-name {sname} --project-name {pnamemysql} -n {tnamemysql}
dms project task create --task-type OfflineMigration --database-options-json "{dboptions2}" -n {tname2} --project-name {pname} -g {rg} --service-name {sname} --source-connection-json "{sconn}" --target-connection-json "{tconn}"
dms project task list -g {rg} --service-name {sname} --project-name {pname} --task-type "Migrate.SqlServer.SqlDb"
dms project task check-name -g {rg} --service-name {sname} --project-name {pname} -n {tname1}
dms project task delete -g {rg} --service-name {sname} --project-name {pname} -n {tname1} --delete-running-tasks true -y
dms project task check-name -g {rg} --service-name {sname} --project-name {pname} -n {tname1}
dms delete -g {rg} -n {sname} --delete-running-tasks true -y
eventgrid topic create --name {topic_name} --resource-group {rg} --location {location}
eventgrid topic show --name {topic_name} --resource-group {rg} -ojson
eventgrid event-subscription create --source-resource-id {scope} --name {event_subscription_name} --endpoint {endpoint_url} --advanced-filter eventType
eventgrid event-subscription create --source-resource-id {scope}  --name {event_subscription_name} --endpoint {endpoint_url} --advanced-filter data.key2 NumberIn
eventgrid event-subscription create --source-resource-id {scope} --name {event_subscription_name} --endpoint {endpoint_url} --advanced-filter data.key2 FooNumberLessThan 2 3
eventgrid event-subscription create --source-resource-id {scope} --name {event_subscription_name} --endpoint {endpoint_url} --advanced-filter data.key2 NumberLessThan 2 3
eventgrid event-subscription create --source-resource-id {scope} --name {event_subscription_name} --endpoint {endpoint_url} --advanced-filter data.key2 IsNotNull 1
eventgrid event-subscription create --source-resource-id {scope} --name {event_subscription_name} --endpoint {endpoint_url} --advanced-filter data.key2 IsNullOrUndefined 1
eventgrid event-subscription create --source-resource-id {scope}  --name {event_subscription_name} --endpoint "{endpoint_url}" --advanced-filter data.key2 NumberIn 2 3 4 100 200
eventgrid event-subscription create --source-resource-id {scope} --name {event_subscription_name} --endpoint "{endpoint_url}" --advanced-filter data.key1 NumberIn 2 3 4 100 200 --advanced-filter data.key2 StringIn 2 3 4 100 200
eventgrid event-subscription update --source-resource-id {scope} --name {event_subscription_name} --endpoint "{endpoint_url}" --advanced-filter data.key1 NumberIn 21 13 400 101 --advanced-filter data.key2 StringIn 122 3 214 1100 2
eventgrid event-subscription update --source-resource-id {scope} --name {event_subscription_name} --endpoint "{endpoint_url}" --advanced-filter data.key1 IsNullOrUndefined --advanced-filter data.key2 IsNotNull
eventgrid event-subscription update --source-resource-id {scope} --name {event_subscription_name} --endpoint "{endpoint_url}" --advanced-filter data.key1 NumberInRange 1,10 --advanced-filter data.key2 NumberNotInRange 10,12 50,55
eventgrid event-subscription update --source-resource-id {scope} --name {event_subscription_name} --endpoint "{endpoint_url}" --advanced-filter data.key1 StringNotBeginsWith Red Blue Green --advanced-filter data.key2 StringNotEndsWith Red Blue Green --advanced-filter data.key2 StringNotContains Red Blue Green
eventgrid event-subscription update --source-resource-id {scope} --name {event_subscription_name} --endpoint "{endpoint_url}" --enable-advanced-filtering-on-arrays true
eventgrid event-subscription delete --source-resource-id {scope} --name {event_subscription_name}
eventgrid topic delete --name {topic_name} --resource-group {rg}
eventgrid event-subscription create --source-resource-id {source_resource_id} --name {event_subscription_name} --endpoint "{endpoint_url}"
eventgrid event-subscription show --source-resource-id {source_resource_id} --name {event_subscription_name}
eventgrid event-subscription show --include-full-endpoint-url --source-resource-id {source_resource_id} --name {event_subscription_name}
eventgrid event-subscription update --source-resource-id {source_resource_id} --name {event_subscription_name} --endpoint "{endpoint_url}" --subject-ends-with .jpg
eventgrid event-subscription list --source-resource-id {source_resource_id}
eventgrid event-subscription list --topic-type Microsoft.Storage.StorageAccounts --location {location}
eventgrid event-subscription list --topic-type Microsoft.Storage.StorageAccounts --location {location} --resource-group {rg}
eventgrid event-subscription list --location {location} --resource-group {rg}
eventgrid event-subscription list --location {location}
eventgrid event-subscription list --source-resource-id {source_resource_id} --odata-query "CONTAINS(name,'{event_subscription_name}')"
eventgrid event-subscription list --topic-type Microsoft.Storage.StorageAccounts --location {location} --odata-query "CONTAINS(name,'{event_subscription_name}')"
eventgrid event-subscription list --topic-type Microsoft.Storage.StorageAccounts --location {location} --resource-group {rg} --odata-query "CONTAINS(name,'{event_subscription_name}')"
eventgrid event-subscription list --location {location} --resource-group {rg} --odata-query "name eq '{event_subscription_name}'"
eventgrid event-subscription list --location {location} --odata-query "name eq '{event_subscription_name}'"
eventgrid event-subscription delete --source-resource-id {source_resource_id} --name {event_subscription_name}
eventgrid event-subscription create --source-resource-id {source_resource_id} --name {event_subscription_name1} --endpoint-type storagequeue --endpoint {storagequeue_endpoint_id} --event-ttl 2000 --deadletter-endpoint {deadletter_endpoint_id}
eventgrid event-subscription create --source-resource-id {source_resource_id} --name {event_subscription_name1} --endpoint-type storagequeue --endpoint {storagequeue_endpoint_id} --max-delivery-attempts 31 --deadletter-endpoint {deadletter_endpoint_id}
eventgrid event-subscription create --source-resource-id {source_resource_id} --name {event_subscription_name1} --endpoint-type stoRAgequeue --endpoint {storagequeue_endpoint_id} --event-delivery-schema cloudeventschemav1_0 --deadletter-endpoint {deadletter_endpoint_id} --subject-begins-with SomeRandomText1 --subject-ends-with SomeRandomText2
eventgrid event-subscription show --source-resource-id {source_resource_id} --name {event_subscription_name1}
eventgrid event-subscription create --source-resource-id {source_resource_id} --name {event_subscription_name2} --endpoint-type HybRidConnection --endpoint {hybridconnection_endpoint_id} --deadletter-endpoint {deadletter_endpoint_id} --max-delivery-attempts 20 --event-ttl 1000 --subject-begins-with SomeRandomText1 --subject-ends-with SomeRandomText2
eventgrid event-subscription show --source-resource-id {source_resource_id} --name {event_subscription_name2}
eventgrid event-subscription create --source-resource-id {source_resource_id} --name {event_subscription_name3} --endpoint-type SErvIcEBusQueUE --endpoint {servicebusqueue_endpoint_id} --deadletter-endpoint {deadletter_endpoint_id} --max-delivery-attempts 10 --event-ttl 1200  --subject-begins-with SomeRandomText1 --subject-ends-with SomeRandomText2
eventgrid event-subscription show  --source-resource-id {source_resource_id} --name {event_subscription_name3}
eventgrid event-subscription delete  --source-resource-id {source_resource_id} --name {event_subscription_name1}
eventgrid event-subscription delete  --source-resource-id {source_resource_id} --name {event_subscription_name2}
eventgrid event-subscription delete  --source-resource-id {source_resource_id} --name {event_subscription_name3}
eventgrid event-subscription create --source-resource-id {source_resource_id} --name {event_subscription_name1} --endpoint-type SErvIcEBusTOPic --endpoint {servicebustopic_endpoint_id} --subject-begins-with SomeRandomText1 --event-delivery-schema CloudEVENTSchemaV1_0
eventgrid event-subscription show --source-resource-id {source_resource_id} --name {event_subscription_name1}
eventgrid event-subscription create --source-resource-id {source_resource_id} --name {event_subscription_name2} --endpoint-type azUREFunction --endpoint {azurefunction_endpoint_id_cloudevent} --subject-begins-with SomeRandomText1 --max-events-per-batch 10 --preferred-batch-size-in-kilobytes 128
eventgrid event-subscription show --source-resource-id {source_resource_id} --name {event_subscription_name2}
eventgrid event-subscription create --source-resource-id {source_resource_id} --name {event_subscription_name4} --endpoint-type webhook --endpoint "{endpoint_url_for_validation}" --subject-begins-with SomeRandomText1 --max-events-per-batch 10 --preferred-batch-size-in-kilobytes 128
eventgrid event-subscription show --source-resource-id {source_resource_id} --name {event_subscription_name4}
eventgrid event-subscription create --source-resource-id {source_resource_id} --name {event_subscription_name3} --endpoint-type webhook --endpoint "{endpoint_url_for_validation}" --subject-begins-with SomeRandomText1 --max-events-per-batch 10 --preferred-batch-size-in-kilobytes 128 --azure-active-directory-tenant-id "{azure_active_directory_tenant_id}" --azure-active-directory-application-id-or-uri "{azure_active_directory_application_id_or_uri}"
eventgrid event-subscription show --source-resource-id {source_resource_id} --name {event_subscription_name3}
eventgrid event-subscription update --source-resource-id {source_resource_id} --name {event_subscription_name1} --subject-begins-with SomeRandomText1234
eventgrid event-subscription show --source-resource-id {source_resource_id} --name {event_subscription_name1}
eventgrid event-subscription update --source-resource-id {source_resource_id} --name {event_subscription_name2} --endpoint-type azUREFunction --endpoint {azurefunction_endpoint_id_cloudevent} --subject-begins-with SomeRandomText2234431
eventgrid event-subscription show --source-resource-id {source_resource_id} --name {event_subscription_name2}
eventgrid event-subscription update --source-resource-id {source_resource_id} --name {event_subscription_name4} --endpoint-type webhook --endpoint "{endpoint_url_for_validation}" --subject-begins-with SomeRandomText112341
eventgrid event-subscription show --source-resource-id {source_resource_id} --name {event_subscription_name4}
eventgrid event-subscription update --source-resource-id {source_resource_id} --name {event_subscription_name3} --endpoint "{endpoint_url_for_validation}" --subject-begins-with SomeRandomText123412
eventgrid event-subscription show --source-resource-id {source_resource_id} --name {event_subscription_name3}
eventgrid event-subscription show --source-resource-id {source_resource_id} --name {event_subscription_name1}
eventgrid event-subscription show --source-resource-id {source_resource_id} --name {event_subscription_name2}
eventgrid event-subscription show --source-resource-id {source_resource_id} --name {event_subscription_name3}
eventgrid event-subscription delete --source-resource-id {source_resource_id} --name {event_subscription_name1}
eventgrid event-subscription delete --source-resource-id {source_resource_id} --name {event_subscription_name2}
eventgrid event-subscription delete --source-resource-id {source_resource_id} --name {event_subscription_name3}
eventgrid event-subscription delete --source-resource-id {source_resource_id} --name {event_subscription_name4}
eventgrid event-subscription create --source-resource-id {source_resource_id} --name {event_subscription_name} --endpoint "{endpoint_url}" --subject-ends-with {subject_ends_with} --included-event-types {event_type_1} {event_type_2} --subject-case-sensitive --labels {label_1} {label_2}
eventgrid event-subscription show --source-resource-id {source_resource_id} --name {event_subscription_name}
eventgrid event-subscription show --include-full-endpoint-url --source-resource-id {source_resource_id} --name {event_subscription_name}
eventgrid event-subscription list --source-resource-id {source_resource_id}
eventgrid event-subscription list --source-resource-id {source_resource_id} --odata-query "CONTAINS(name,'{event_subscription_name}')"
eventgrid event-subscription delete --source-resource-id {source_resource_id} --name {event_subscription_name}
eventgrid topic create --name {topic_name} --resource-group {rg} --location {location}
eventgrid topic show --name {topic_name} --resource-group {rg}
eventgrid topic create --name {topic_name2} --resource-group {rg} --location {location} --input-schema eventgridschema --input-mapping-fields topic=myTopicField
eventgrid topic create --name {topic_name2} --resource-group {rg} --location {location} --input-schema customeventschema
eventgrid topic create --name {topic_name2} --resource-group {rg} --location {location} --kind azure --extended-location-name {extended_location_name} --extended-location-type customLocation
eventgrid topic create --name {topic_name2} --resource-group {rg} --location {location} --input-schema CloudEventSchemaV1_0
eventgrid topic create --name {topic_name4} --resource-group {rg} --location {location} --public-network-access disabled --inbound-ip-rules 19.12.43.90/12 allow --inbound-ip-rules 19.12.43.70/20 allow --sku BASic --identity systemassigned
eventgrid topic update --name {topic_name4} --resource-group {rg} --tags Dept=IT
eventgrid topic update --name {topic_name4} --resource-group {rg} --tags Dept=Finance --sku BaSIC --identity NoIDENTIty
eventgrid topic list --resource-group {rg}
eventgrid topic list --resource-group {rg} --odata-query "name eq '{topic_name}'"
eventgrid topic key list --name {topic_name} --resource-group {rg}
eventgrid topic key regenerate --name {topic_name} --resource-group {rg} --key-name key1
eventgrid topic key regenerate --name {topic_name} --resource-group {rg} --key-name key2
eventgrid event-subscription create --source-resource-id {scope} --name {event_subscription_name} --endpoint "{endpoint_url}"
eventgrid event-subscription show --source-resource-id {scope} --name {event_subscription_name}
eventgrid event-subscription show --source-resource-id {scope} --name {event_subscription_name} --include-full-endpoint-url
eventgrid event-subscription update --source-resource-id {scope} --name {event_subscription_name} --endpoint "{endpoint_url}"
eventgrid event-subscription list --source-resource-id {scope}
eventgrid event-subscription list --source-resource-id {scope} --odata-query "name eq '{event_subscription_name}'"
eventgrid event-subscription list --topic-type Microsoft.EventGrid.Topics --location {location}
eventgrid event-subscription list --topic-type Microsoft.EventGrid.Topics --location {location} --odata-query "CONTAINS(name,'{event_subscription_name}')"
eventgrid event-subscription delete --source-resource-id {scope} --name {event_subscription_name}
eventgrid topic delete --name {topic_name} --resource-group {rg}
group show -n clieventgrid000001 -o json
eventgrid event-subscription create --source-resource-id {source_resource_id} --name {event_subscription_name} --endpoint "{endpoint_url}" --delivery-attribute-mapping somestaticname1 static somestaticvalue1  --delivery-attribute-mapping somestaticname2 static somestaticvalue2 true --delivery-attribute-mapping somestaticname3 static somestaticvalue3 false --delivery-attribute-mapping somedynamicattribname1 dynamic data.key1
eventgrid event-subscription update --source-resource-id {source_resource_id} --name {event_subscription_name} --endpoint "{endpoint_url}" --delivery-attribute-mapping somestaticname1 static somestaticvalue1 --delivery-attribute-mapping somestaticname2 static somestaticvalue2 true --delivery-attribute-mapping somedynamicattribname2 dynamic data.key2
eventgrid event-subscription delete --source-resource-id {source_resource_id} --name {event_subscription_name}
group show -n clieventgrid000001 -o json
eventgrid event-subscription create --source-resource-id {source_resource_id} --name {event_subscription_name} --endpoint-type eventhub --endpoint {eventhub_id}
eventgrid event-subscription update --source-resource-id {source_resource_id} --name {event_subscription_name} --delivery-identity systemassigned --delivery-identity-endpoint-type eventhub --delivery-identity-endpoint {eventhub_id}
eventgrid event-subscription update --source-resource-id {source_resource_id} --name {event_subscription_name} --endpoint-type eventhub --endpoint {eventhub_id}
eventgrid event-subscription delete --source-resource-id {source_resource_id} --name {event_subscription_name}
group show -n clieventgrid000001 -o json
eventgrid event-subscription create --source-resource-id {source_resource_id} --name {event_subscription_name} --endpoint-type stoRAgequeue --endpoint {storagequeue_endpoint_id} --event-delivery-schema cloudeventschemav1_0 --storage-queue-msg-ttl 120
eventgrid event-subscription create --source-resource-id {source_resource_id} --name {event_subscription_name} --endpoint-type stoRAgequeue --endpoint {storagequeue_endpoint_id} --storage-queue-msg-ttl 300
eventgrid event-subscription delete --source-resource-id {source_resource_id} --name {event_subscription_name}
group show -n clitest.rg000001 -o json
eventgrid system-topic create --name {policy_system_topic_name_global} --resource-group {rg} --location global --topic-type Microsoft.PolicyInsights.PolicyStates --source /subscriptions/{subscription_id}
eventgrid system-topic delete --name {policy_system_topic_name_global} --resource-group {rg} --yes
eventgrid system-topic create --name {storage_system_topic_name_regional} --resource-group {regional_resource_group} --location {location} --topic-type Microsoft.Storage.StorageAccounts --source {storage_account} --identity noidentity
eventgrid system-topic update --name {storage_system_topic_name_regional} --resource-group {regional_resource_group} --identity systemassigned
eventgrid system-topic delete --name {storage_system_topic_name_regional} --resource-group {regional_resource_group} --yes
group create --resource-group {rg} --location {loc}
eventhubs cluster create --resource-group {rg} --name {clustername} --location {loc} --tags tag1=value1
eventhubs cluster show --resource-group {rg} --name {clustername}
eventhubs namespace create --resource-group {rg} --name {namespacename} --location {loc} --tags {tags} --sku {sku} --cluster-arm-id {clusterid}
eventhubs cluster namespace list --resource-group {rg} --name {clustername}
eventhubs cluster update --resource-group {rg} --name {clustername} --tags tag2=value2
eventhubs cluster list --resource-group {rg}
eventhubs namespace exists --name {namespacename}
eventhubs namespace create --resource-group {rg} --name {namespacenamekafka} --location {loc} --tags {tags} --sku {sku} --enable-auto-inflate {isautoinflateenabled} --maximum-throughput-units {maximumthroughputunits} --enable-kafka {isautoinflateenabled}
eventhubs namespace create --resource-group {rg} --name {namespacename} --location {loc} --tags {tags} --sku {sku} --enable-auto-inflate {isautoinflateenabled} --maximum-throughput-units {maximumthroughputunits}
eventhubs namespace show --resource-group {rg} --name {namespacename}
eventhubs namespace update --resource-group {rg} --name {namespacename} --tags {tags2} --maximum-throughput-units {maximumthroughputunits_update}
eventhubs namespace list
eventhubs namespace list --resource-group {rg}
eventhubs namespace authorization-rule create --resource-group {rg} --namespace-name {namespacename} --name {authoname} --rights {accessrights}
eventhubs namespace authorization-rule show --resource-group {rg} --namespace-name {namespacename} --name {authoname}
eventhubs namespace authorization-rule update --resource-group {rg} --namespace-name {namespacename} --name {authoname} --rights {accessrights1}
eventhubs namespace authorization-rule show --resource-group {rg} --namespace-name {namespacename} --name {defaultauthorizationrule}
eventhubs namespace authorization-rule keys list --resource-group {rg} --namespace-name {namespacename} --name {authoname}
eventhubs namespace authorization-rule keys renew --resource-group {rg} --namespace-name {namespacename} --name {authoname} --key {primary}
eventhubs namespace authorization-rule keys renew --resource-group {rg} --namespace-name {namespacename} --name {authoname} --key {secondary}
eventhubs namespace authorization-rule delete --resource-group {rg} --namespace-name {namespacename} --name {authoname}
eventhubs namespace delete --resource-group {rg} --name {namespacename}
eventhubs namespace exists --name {namespacenameprimary}
eventhubs namespace create --resource-group {rg} --name {namespacenameprimary} --location {loc_south} --tags {tags} --sku {sku}
eventhubs namespace show --resource-group {rg} --name {namespacenameprimary}
eventhubs namespace create --resource-group {rg} --name {namespacenamesecondary} --location {loc_north} --tags {tags} --sku {sku}
eventhubs namespace show --resource-group {rg} --name {namespacenamesecondary}
eventhubs namespace authorization-rule create --resource-group {rg} --namespace-name {namespacenameprimary} --name {authoname} --rights {accessrights}
eventhubs namespace authorization-rule show --resource-group {rg} --namespace-name {namespacenameprimary} --name {authoname}
eventhubs georecovery-alias exists --resource-group {rg} --namespace-name {namespacenameprimary} --alias {aliasname}
eventhubs georecovery-alias set  --resource-group {rg} --namespace-name {namespacenameprimary} --alias {aliasname} --partner-namespace {id}
eventhubs georecovery-alias show  --resource-group {rg} --namespace-name {namespacenameprimary} --alias {aliasname}
eventhubs georecovery-alias show  --resource-group {rg} --namespace-name {namespacenamesecondary} --alias {aliasname}
eventhubs georecovery-alias show  --resource-group {rg} --namespace-name {namespacenameprimary} --alias {aliasname}
eventhubs georecovery-alias authorization-rule show --resource-group {rg} --namespace-name {namespacenameprimary} --alias {aliasname} --name {authoname}
eventhubs georecovery-alias authorization-rule list --resource-group {rg} --namespace-name {namespacenameprimary} --alias {aliasname}
eventhubs georecovery-alias show  --resource-group {rg} --namespace-name {namespacenameprimary} --alias {aliasname}
eventhubs georecovery-alias show  --resource-group {rg} --namespace-name {namespacenameprimary} --alias {aliasname}
eventhubs georecovery-alias show  --resource-group {rg} --namespace-name {namespacenameprimary} --alias {aliasname}
eventhubs georecovery-alias break-pair  --resource-group {rg} --namespace-name {namespacenameprimary} --alias {aliasname}
eventhubs georecovery-alias show  --resource-group {rg} --namespace-name {namespacenameprimary} --alias {aliasname}
eventhubs georecovery-alias show  --resource-group {rg} --namespace-name {namespacenameprimary} --alias {aliasname}
eventhubs georecovery-alias show  --resource-group {rg} --namespace-name {namespacenameprimary} --alias {aliasname}
eventhubs georecovery-alias show  --resource-group {rg} --namespace-name {namespacenameprimary} --alias {aliasname}
eventhubs georecovery-alias set  --resource-group {rg} --namespace-name {namespacenameprimary} --alias {aliasname} --partner-namespace {id}
eventhubs georecovery-alias show  --resource-group {rg} --namespace-name {namespacenameprimary} --alias {aliasname}
eventhubs georecovery-alias show  --resource-group {rg} --namespace-name {namespacenameprimary} --alias {aliasname}
eventhubs georecovery-alias show  --resource-group {rg} --namespace-name {namespacenameprimary} --alias {aliasname}
eventhubs georecovery-alias show  --resource-group {rg} --namespace-name {namespacenameprimary} --alias {aliasname}
eventhubs georecovery-alias fail-over  --resource-group {rg} --namespace-name {namespacenamesecondary} --alias {aliasname}
eventhubs georecovery-alias show  --resource-group {rg} --namespace-name {namespacenamesecondary} --alias {aliasname}
eventhubs georecovery-alias show  --resource-group {rg} --namespace-name {namespacenamesecondary} --alias {aliasname}
eventhubs georecovery-alias show  --resource-group {rg} --namespace-name {namespacenamesecondary} --alias {aliasname}
eventhubs georecovery-alias show  --resource-group {rg} --namespace-name {namespacenamesecondary} --alias {aliasname}
eventhubs georecovery-alias delete  --resource-group {rg} --namespace-name {namespacenamesecondary} --alias {aliasname}
eventhubs namespace delete --resource-group {rg} --name {namespacenameprimary}
eventhubs namespace delete --resource-group {rg} --name {namespacenamesecondary}
eventhubs namespace create --resource-group {rg} --name {namespacename} --location {loc} --tags {tags} --sku {sku} --enable-auto-inflate {isautoinflateenabled} --maximum-throughput-units {maximumthroughputunits}
eventhubs namespace show --resource-group {rg} --name {namespacename}
eventhubs eventhub create --resource-group {rg} --namespace-name {namespacename} --name {eventhubname}
eventhubs eventhub show --resource-group {rg} --namespace-name {namespacename} --name {eventhubname}
eventhubs eventhub consumer-group create --resource-group {rg} --namespace-name {namespacename} --eventhub-name {eventhubname} --name {consumergroupname} --user-metadata {usermetadata1}
eventhubs eventhub consumer-group show --resource-group {rg} --namespace-name {namespacename} --eventhub-name {eventhubname} --name {consumergroupname}
eventhubs eventhub consumer-group update --resource-group {rg} --namespace-name {namespacename} --eventhub-name {eventhubname} --name {consumergroupname} --user-metadata {usermetadata2}
eventhubs eventhub consumer-group list --resource-group {rg} --namespace-name {namespacename} --eventhub-name {eventhubname}
eventhubs eventhub consumer-group delete --resource-group {rg} --namespace-name {namespacename} --eventhub-name {eventhubname} --name {consumergroupname}
eventhubs eventhub delete --resource-group {rg} --namespace-name {namespacename} --name {eventhubname}
eventhubs namespace delete --resource-group {rg} --name {namespacename}
account show --query id -otsv
eventhubs namespace create --resource-group {rg} --name {namespacename} --location {loc} --tags {tags} --sku {sku} --enable-auto-inflate {isautoinflateenabled} --maximum-throughput-units {maximumthroughputunits}
eventhubs namespace show --resource-group {rg} --name {namespacename}
eventhubs eventhub create --resource-group {rg} --namespace-name {namespacename} --name {eventhubname}
eventhubs eventhub show --resource-group {rg} --namespace-name {namespacename} --name {eventhubname}
eventhubs eventhub update --resource-group {rg} --namespace-name {namespacename} --name {eventhubname} --partition-count {partitioncount} --message-retention {messageretentionindays}
eventhubs eventhub update --resource-group {rg} --namespace-name {namespacename} --name {eventhubname} --enable-capture {isautoinflateenabled} --skip-empty-archives {isautoinflateenabled} --capture-interval 120 --capture-size-limit 10485763 --destination-name {destinationname} --storage-account {storageaccount} --blob-container {blobcontainer} --archive-name-format {archinvenameformat} 
eventhubs eventhub list --resource-group {rg} --namespace-name {namespacename}
eventhubs eventhub authorization-rule create --resource-group {rg} --namespace-name {namespacename} --eventhub-name {eventhubname} --name {authoname} --rights {accessrights}
eventhubs eventhub authorization-rule show --resource-group {rg} --namespace-name {namespacename} --eventhub-name {eventhubname} --name {authoname}
eventhubs eventhub authorization-rule update --resource-group {rg} --namespace-name {namespacename} --eventhub-name {eventhubname} --name {authoname} --rights {accessrights1}
eventhubs eventhub authorization-rule keys list --resource-group {rg} --namespace-name {namespacename} --eventhub-name {eventhubname} --name {authoname}
eventhubs eventhub authorization-rule keys renew --resource-group {rg} --namespace-name {namespacename} --eventhub-name {eventhubname} --name {authoname} --key {primary}
eventhubs eventhub authorization-rule keys renew --resource-group {rg} --namespace-name {namespacename} --eventhub-name {eventhubname} --name {authoname} --key {secondary}
eventhubs eventhub authorization-rule delete --resource-group {rg} --namespace-name {namespacename} --eventhub-name {eventhubname} --name {authoname}
eventhubs eventhub delete --resource-group {rg} --namespace-name {namespacename} --name {eventhubname}
eventhubs namespace delete --resource-group {rg} --name {namespacename}
eventhubs namespace exists --name {namespacename}
eventhubs namespace create --resource-group {rg} --name {namespacename} --location {loc} --tags {tags} --sku {sku} --enable-auto-inflate {isautoinflateenabled} --maximum-throughput-units {maximumthroughputunits} --cluster-arm-id {clusterarmid} --assign-identity {enableidentity}
eventhubs namespace create --resource-group {rg} --name {namespacename1} --location {loc} --tags {tags} --sku {sku} --enable-auto-inflate {isautoinflateenabled} --maximum-throughput-units {maximumthroughputunits} --cluster-arm-id {clusterarmid}
eventhubs namespace show --resource-group {rg} --name {namespacename}
keyvault set-policy -n {kv_name} -g {rg} --object-id {principal_id} --key-permissions  get unwrapKey wrapKey
keyvault key create -n {key_name} --vault-name {kv_name}
eventhubs namespace update --resource-group {rg} --name {namespacename} --tags {tags2} --maximum-throughput-units {maximumthroughputunits_update} --key-source {key_source} --key-name {key_name} --key-vault-uri {key_uri} --key-version ""
eventhubs namespace update --resource-group {rg} --name {namespacename1} --tags {tags2} --maximum-throughput-units {maximumthroughputunits_update} --assign-identity {enableidentity} --key-source {key_source} --key-name {key_name} --key-vault-uri {key_uri} --key-version ""
eventhubs namespace list
eventhubs namespace list --resource-group {rg}
eventhubs namespace authorization-rule create --resource-group {rg} --namespace-name {namespacename} --name {authoname} --rights {accessrights}
eventhubs namespace authorization-rule show --resource-group {rg} --namespace-name {namespacename} --name {authoname}
eventhubs namespace authorization-rule update --resource-group {rg} --namespace-name {namespacename} --name {authoname} --rights {accessrights1}
eventhubs namespace authorization-rule show --resource-group {rg} --namespace-name {namespacename} --name {defaultauthorizationrule}
eventhubs namespace authorization-rule delete --resource-group {rg} --namespace-name {namespacename} --name {authoname}
eventhubs namespace delete --resource-group {rg} --name {namespacename}
eventhubs namespace delete --resource-group {rg} --name {namespacename1}
eventhubs namespace exists --name {namespacename}
eventhubs namespace create --resource-group {rg} --name {namespacename} --location {loc} --tags {tags} --sku {sku} --maximum-throughput-units {maximumthroughputunits} --disable-local-auth {istrue} --enable-auto-inflate {istrue}
eventhubs namespace update --resource-group {rg} --name {namespacename} --tags {tags2} --maximum-throughput-units {maximumthroughputunits}
eventhubs namespace create --resource-group {rg} --name {namespacename1} --location {loc} --tags {tags} --sku {skupremium} --disable-local-auth {isfalse}
eventhubs namespace update --resource-group {rg} --name {namespacename1} --disable-local-auth {istrue} --tags {tags2}
eventhubs namespace delete --resource-group {rg} --name {namespacename}
eventhubs namespace delete --resource-group {rg} --name {namespacename1}
network vnet create --resource-group {rg} --name {namevnet}
network vnet create --resource-group {rg} --name {namevnet1}
network vnet subnet create --resource-group {rg} --name {namesubnet1} --vnet-name {namevnet} --address-prefixes 10.0.0.0/24
network vnet subnet create --resource-group {rg} --name {namesubnet2} --vnet-name {namevnet1} --address-prefixes 10.0.0.0/24
eventhubs namespace exists --name {namespacename}
eventhubs namespace create --resource-group {rg} --name {namespacename} --tags {tags} --sku {sku} --default-action Allow
eventhubs namespace show --resource-group {rg} --name {namespacename}
eventhubs namespace update --resource-group {rg} --name {namespacename} --tags {tags} --default-action Deny
eventhubs namespace network-rule list --resource-group {rg} --name {namespacename}
eventhubs namespace network-rule add --resource-group {rg} --name {namespacename} --ip-address {ipmask1} --action Allow
eventhubs namespace network-rule add --resource-group {rg} --name {namespacename} --ip-address {ipmask2} --action Allow
eventhubs namespace network-rule list --resource-group {rg} --name {namespacename}
eventhubs namespace network-rule remove --resource-group {rg} --name {namespacename} --ip-address {ipmask2}
eventhubs namespace network-rule add --resource-group {rg} --name {namespacename} --subnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_eh_network000001/providers/Microsoft.Network/virtualNetworks/sbehvnettest1/subnets/default --ignore-missing-endpoint True
eventhubs namespace network-rule add --resource-group {rg} --name {namespacename} --subnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_eh_network000001/providers/Microsoft.Network/virtualNetworks/sbehvnettest2/subnets/secondvnet --ignore-missing-endpoint True
eventhubs namespace network-rule list --resource-group {rg} --name {namespacename}
eventhubs namespace network-rule remove --resource-group {rg} --name {namespacename} --subnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_eh_network000001/providers/Microsoft.Network/virtualNetworks/sbehvnettest2/subnets/secondvnet
eventhubs namespace delete --resource-group {rg} --name {namespacename}
network vnet create -n {vnet} -g {rg} -l {loc} --subnet-name {subnet}
network vnet subnet update -n {subnet} --vnet-name {vnet} -g {rg} --disable-private-endpoint-network-policies true
eventhubs namespace create --resource-group {rg} --name {namespacename} --location {loc} --tags {tags} --sku {sku}
eventhubs namespace show --resource-group {rg} --name {namespacename}
eventhubs namespace private-link-resource show --namespace-name {namespacename} -g {rg}
eventhubs namespace show -n {namespacename} -g {rg}
network private-endpoint create -g {rg} -n {pe} --vnet-name {vnet} --subnet {subnet} -l {loc} --connection-name {pe_connection} --private-connection-resource-id {ehn_id} --group-ids {group_id}
eventhubs namespace show -n {namespacename} -g {rg}
eventhubs namespace private-endpoint-connection show --namespace-name {namespacename} -g {rg} --name {ehn_pec_name}
eventhubs namespace private-endpoint-connection approve --namespace-name {namespacename} -g {rg} --name {ehn_pec_name}
eventhubs namespace private-endpoint-connection reject --namespace-name {namespacename} -g {rg} --name {ehn_pec_name}
eventhubs namespace private-endpoint-connection show --namespace-name {namespacename} -g {rg} --name {ehn_pec_name}
eventhubs namespace private-endpoint-connection delete --id {sa_pec_id} -y
extension remove -n alias
extension show -n alias
extension add -n alias
hdinsight create -n {cluster} -g {rg} -l {loc} -p {http_password} -t {cluster_type} --no-validation-timeout --storage-account hdicli000002 --storage-container default --ssh-user sshuser --ssh-password Password1!
hdinsight show -n {cluster} -g {rg}
hdinsight application create -g {rg} -n {app} --cluster-name {cluster} --script-uri {script_uri} --script-action-name {script_action} --script-parameters {script_params}
hdinsight application wait --created -n {app} -g {rg} --cluster-name {cluster}
hdinsight application list -g {rg} --cluster-name {cluster}
hdinsight application show -g {rg} -n {app} --cluster-name {cluster}
hdinsight create -n {cluster} -g {rg} -l {loc} -p {http_password} -t {cluster_type} --no-validation-timeout --storage-account hdicli000002 --storage-container default
hdinsight show -n {cluster} -g {rg}
hdinsight autoscale create --cluster-name {cluster} --resource-group {rg} --type Load --min-workernode-count 4 --max-workernode-count 5 --yes
hdinsight show --name {cluster} --resource-group {rg}
hdinsight autoscale update --cluster-name {cluster} --resource-group {rg} --min-workernode-count 3
hdinsight show --name {cluster} --resource-group {rg}
hdinsight autoscale show --cluster-name {cluster} --resource-group {rg}
hdinsight autoscale delete --cluster-name {cluster} --resource-group {rg} --yes
hdinsight show --name {cluster} --resource-group {rg}
hdinsight autoscale create --cluster-name {cluster} --resource-group {rg} --type Schedule --timezone "China Standard Time" --days Monday --time 09:00 --workernode-count 4 --yes
hdinsight autoscale show --cluster-name {cluster} --resource-group {rg}
hdinsight autoscale condition create --cluster-name {cluster} --resource-group {rg} --days Tuesday --time 08:00 --workernode-count 5
hdinsight autoscale show --cluster-name {cluster} --resource-group {rg}
hdinsight autoscale condition update --cluster-name {cluster} --resource-group {rg} --index 1 --workernode-count 4
hdinsight autoscale show --cluster-name {cluster} --resource-group {rg}
hdinsight autoscale condition list --cluster-name {cluster} --resource-group {rg}
hdinsight autoscale condition delete --cluster-name {cluster} --resource-group {rg} --index 1 --yes
hdinsight autoscale condition list --cluster-name {cluster} --resource-group {rg}
resource create -g {rg} -n {ws} --resource-type Microsoft.OperationalInsights/workspaces -p @"{la_prop_path}"
hdinsight create -n {cluster} -g {rg} -l {loc} -p {http_password} -t {cluster_type} --no-validation-timeout --storage-account hdicli000002 --storage-container default --ssh-user sshuser --ssh-password Password1!
hdinsight show -n {cluster} -g {rg}
hdinsight azure-monitor show -g {rg} -n {cluster}
hdinsight azure-monitor enable -g {rg} -n {cluster} --workspace {ws} --no-validation-timeout
hdinsight azure-monitor show -g {rg} -n {cluster}
hdinsight azure-monitor disable -g {rg} -n {cluster}
hdinsight azure-monitor show -g {rg} -n {cluster}
hdinsight create -n {cluster} -g {rg} -l {loc} -p {http_password} -t {cluster_type} --no-validation-timeout --storage-account hdicli000002 --storage-container default -t kafka --workernode-data-disks-per-node 4
hdinsight show -n {cluster} -g {rg}
hdinsight create -n {cluster} -g {rg} -l {loc} -p {http_password} -t {cluster_type} --no-validation-timeout --storage-account hdicli000002 --storage-container default -t kafka --workernode-data-disks-per-node 4 --workernode-data-disk-storage-account-type Standard_LRS --workernode-data-disk-size 1023
hdinsight show -n {cluster} -g {rg}
hdinsight create -n {cluster} -g {rg} -l {loc} -p {http_password} -t {cluster_type} --no-validation-timeout --storage-account hdicli000002 --storage-container default -t kafka --workernode-data-disks-per-node 4 --kafka-management-node-size Standard_D4_v2 --kafka-client-group-id 7bef90fa-0aa3-4bb4-b4d2-2ae7c14cfe41 --kafka-client-group-name KafakaRestProperties -v 4.0 --component-version kafka=2.1 --location "South Central US"
hdinsight show -n {cluster} -g {rg}
hdinsight create -n {cluster} -g {rg} -l {loc} -p {http_password} -t {cluster_type} --no-validation-timeout --storage-account hdicli000002
hdinsight show -n {cluster} -g {rg}
hdinsight create -n {cluster} -g {rg} -l {loc} -p {http_password} -t {cluster_type} --no-validation-timeout --storage-account hdicli000002 --storage-container default
hdinsight show -n {cluster} -g {rg}
hdinsight resize -n {cluster} -g {rg} --workernode-count 2
hdinsight show -n {cluster} -g {rg}
hdinsight create -n {cluster} -g {rg} -l {loc} -p {http_password} -t {cluster_type} --no-validation-timeout --storage-account hdicli000002 --storage-container default --version 4.0 -l southcentralus --subnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetforcreatcluster/subnets/default --zones 1 --cluster-configurations @"c:\code\azure-cli\src\azure-cli\azure\cli\command_modules\hdinsight\tests\latest\customallmetastores.json"
hdinsight show -n {cluster} -g {rg}
hdinsight show -n {cluster} -g {rg}
hdinsight create -n {cluster} -g {rg} -l {loc} -p {http_password} -t {cluster_type} --no-validation-timeout --storage-account hdicli000002 --storage-container default --cluster-configurations {{\"gateway\":{{\"restAuthCredential.username\":\"admin\"}}}}
hdinsight show -n {cluster} -g {rg}
hdinsight create -n {cluster} -g {rg} -l {loc} -p {http_password} -t {cluster_type} --no-validation-timeout --storage-account hdicli000002 --storage-container default -t spark --component-version spark=2.4 --version 4.0
hdinsight show -n {cluster} -g {rg}
hdinsight create -n {cluster} -g {rg} -l {loc} -p {http_password} -t {cluster_type} --no-validation-timeout --storage-account hdicli000002 --storage-container default --version 3.6 -l southcentralus --enable-compute-isolation --host-sku ESv3-Type2 --workernode-size Standard_E8S_V3 --headnode-size Standard_E8S_V3
hdinsight show -n {cluster} -g {rg}
hdinsight show -n {cluster} -g {rg}
hdinsight create -n {cluster} -g {rg} -l {loc} -p {http_password} -t {cluster_type} --no-validation-timeout --storage-account hdicli000002 --storage-container default --workernode-size Standard_DS14_V2 --headnode-size Standard_DS14_V2 --zookeepernode-size Standard_DS14_V2 --encryption-at-host true
hdinsight show -n {cluster} -g {rg}
hdinsight show -n {cluster} -g {rg}
hdinsight create -n {cluster} -g {rg} -l {loc} -p {http_password} -t {cluster_type} --no-validation-timeout --storage-account hdicli000002 --storage-container default --encryption-in-transit true
hdinsight show -n {cluster} -g {rg}
hdinsight show -n {cluster} -g {rg}
hdinsight create -n {cluster} -g {rg} -l {loc} -p {http_password} -t {cluster_type} --no-validation-timeout --storage-account hdicli000002 --storage-container default --version 4.0 --autoscale-type Load --autoscale-min-workernode-count 4 --autoscale-max-workernode-count 5
hdinsight show -n {cluster} -g {rg}
hdinsight show -n {cluster} -g {rg}
hdinsight create -n {cluster} -g {rg} -l {loc} -p {http_password} -t {cluster_type} --no-validation-timeout --storage-account hdicli000002 --storage-container default --minimal-tls-version 1.2
hdinsight show -n {cluster} -g {rg}
hdinsight show -n {cluster} -g {rg}
hdinsight create -n {cluster} -g {rg} -l {loc} -p {http_password} -t {cluster_type} --no-validation-timeout --storage-account hdicli000002 --storage-container default --version 4.0 -l southcentralus --subnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/testvnet/subnets/default --resource-provider-connection Outbound --enable-private-link --private-link-configurations @"c:\code\azure-cli\src\azure-cli\azure\cli\command_modules\hdinsight\tests\latest\privatelinkconfigurations.json"
hdinsight show -n {cluster} -g {rg}
hdinsight show -n {cluster} -g {rg}
hdinsight create -n {cluster} -g {rg} -l {loc} -p {http_password} -t {cluster_type} --no-validation-timeout --storage-account hdicli000002 --storage-container default --version 4.0 --autoscale-type Schedule --timezone "China Standard Time" --days Monday --time "09:00" --autoscale-workernode-count 5
hdinsight show -n {cluster} -g {rg}
hdinsight show -n {cluster} -g {rg}
hdinsight create -n {cluster} -g {rg} -l {loc} -p {http_password} -t {cluster_type} --no-validation-timeout --storage-account hdicli000002 --storage-container default --ssh-user sshuser --ssh-password Password1!
hdinsight show -n {cluster} -g {rg}
resource create -g {rg} -n {ws} --resource-type Microsoft.OperationalInsights/workspaces -p @"{la_prop_path}"
hdinsight create -n {cluster} -g {rg} -l {loc} -p {http_password} -t {cluster_type} --no-validation-timeout --storage-account hdicli000002 --storage-container default --ssh-user sshuser --ssh-password Password1!
hdinsight show -n {cluster} -g {rg}
hdinsight monitor show -g {rg} -n {cluster}
hdinsight monitor enable -g {rg} -n {cluster} --workspace {ws} --no-validation-timeout
hdinsight monitor show -g {rg} -n {cluster}
hdinsight monitor disable -g {rg} -n {cluster}
hdinsight monitor show -g {rg} -n {cluster}
hdinsight create -n {cluster} -g {rg} -l {loc} -p {http_password} -t {cluster_type} --no-validation-timeout --storage-account hdicli000002 --storage-container default --ssh-user sshuser --ssh-password Password1!
hdinsight show -n {cluster} -g {rg}
hdinsight script-action execute -g {rg} -n {script_action} --cluster-name {cluster} --script-uri {script_uri} --roles {head_node} {worker_node} --persist-on-success
hdinsight script-action list -g {rg} --cluster-name {cluster}
hdinsight script-action delete -g {rg} -n {script_action} --cluster-name {cluster}
hdinsight script-action list -g {rg} --cluster-name {cluster}
hdinsight script-action list-execution-history -g {rg} --cluster-name {cluster}
hdinsight script-action show-execution-details -g {rg} --cluster-name {cluster} --execution-id {script_execution_id}
hdinsight script-action execute -g {rg} --cluster-name {cluster} --name {script_action_1} --script-uri {script_uri} --roles {head_node} {worker_node}
hdinsight script-action list-execution-history -g {rg} --cluster-name {cluster}
hdinsight script-action promote -g {rg} --cluster-name {cluster} --execution-id {script_execution_id}
hdinsight script-action list -g {rg} --cluster-name {cluster}
hdinsight script-action list-execution-history -g {rg} --cluster-name {cluster}
hdinsight list-usage -l {loc}
iot central app create -n iotc-cli-test000002 -g clitest.rg000001 --subdomain iotc-cli-test000002 --sku ST2
iot central app create -n iotc-cli-test000002-template -g clitest.rg000001 --subdomain iotc-cli-test000002-template --template iotc-pnp-preview@1.0.0 --display-name "My Custom App Display Name" --sku ST1
iot central app update -n iotc-cli-test000002-template -g clitest.rg000001 --set displayName=iotc-cli-test000002update subdomain=iotc-cli-test000002update sku.name=ST2
iot central app show -n iotc-cli-test000002 -g clitest.rg000001
iot central app show -n iotc-cli-test000002-template -g clitest.rg000001
iot central app delete -n iotc-cli-test000002-template -g clitest.rg000001 --yes
iot central app list -g clitest.rg000001
iot central app delete -n iotc-cli-test000002 -g clitest.rg000001 --yes
iot hub create -n iot-hub-for-cert-test000003 -g clitest.rg000002 --sku S1
iot hub certificate create --hub-name iot-hub-for-cert-test000003 -g clitest.rg000002 -n certificate-000004 -p testcert.cer
iot hub certificate create --hub-name iot-hub-for-cert-test000003 -g clitest.rg000002 -n verified-certificate-000005 -p testcert.cer --verified
iot hub certificate list --hub-name iot-hub-for-cert-test000003 -g clitest.rg000002
iot hub certificate show --hub-name iot-hub-for-cert-test000003 -g clitest.rg000002 -n certificate-000004
iot hub certificate generate-verification-code --hub-name iot-hub-for-cert-test000003 -g clitest.rg000002 -n certificate-000004 --etag IjAyMDBhYTNmLTAwMDAtMDcwMC0wMDAwLTYxMjdhZjlhMDAwMCI=
iot hub certificate verify --hub-name iot-hub-for-cert-test000003 -g clitest.rg000002 -n certificate-000004 -p verify.cer --etag IjAyMDBjNjNmLTAwMDAtMDcwMC0wMDAwLTYxMjdhZjlkMDAwMCI=
iot hub certificate delete --hub-name iot-hub-for-cert-test000003 -g clitest.rg000002 -n certificate-000004 --etag IjAyMDBjZDNmLTAwMDAtMDcwMC0wMDAwLTYxMjdhZjllMDAwMCI=
iot hub certificate delete --hub-name iot-hub-for-cert-test000003 -g clitest.rg000002 -n verified-certificate-000005 --etag IjAyMDBiNzNmLTAwMDAtMDcwMC0wMDAwLTYxMjdhZjliMDAwMCI=
storage container create --name iothubcontainer1000005 --account-name clitest000002
storage account show-connection-string --resource-group clitest.rg000001 --name clitest000002
identity create -n hub-user-identity000004 -g clitest.rg000001
iot hub create -n cli-file-upload-hub000003 -g clitest.rg000001
iot hub update -n cli-file-upload-hub000003 -g clitest.rg000001 --fc iothubcontainer1000005 --fcs DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=clitest000002;AccountKey=veryFakedStorageAccountKey== --fsa identityBased
iot hub update -n cli-file-upload-hub000003 -g clitest.rg000001 --fc iothubcontainer1000005 --fcs DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=clitest000002;AccountKey=veryFakedStorageAccountKey== --fsi /test/user/identity
iot hub update -n cli-file-upload-hub000003 -g clitest.rg000001 --fc iothubcontainer1000005 --fcs DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=clitest000002;AccountKey=veryFakedStorageAccountKey== --fsi [system]
iot hub update -n cli-file-upload-hub000003 -g clitest.rg000001 --fc iothubcontainer1000005 --fcs DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=clitest000002;AccountKey=veryFakedStorageAccountKey==
iot hub update -n cli-file-upload-hub000003 -g clitest.rg000001 --fsa keyBased
iot hub update -n cli-file-upload-hub000003 -g clitest.rg000001 --fsa identitybased
iot hub update -n cli-file-upload-hub000003 -g clitest.rg000001 --fsi [system]
iot hub update -n cli-file-upload-hub000003 -g clitest.rg000001 --fsi /test/user/identity
iot hub identity assign --system -n cli-file-upload-hub000003 -g clitest.rg000001
storage account show -n clitest000002 -g clitest.rg000001
role assignment create --role "Storage Blob Data Contributor" --assignee "51006a28-58e5-45c6-a7b4-c4a69f120468" --scope "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Storage/storageAccounts/clitest000002"
iot hub update -n cli-file-upload-hub000003 -g clitest.rg000001 --fsi [system]
iot hub update -n cli-file-upload-hub000003 -g clitest.rg000001 --fsa identityBased
iot hub update -n cli-file-upload-hub000003 -g clitest.rg000001 --fsi [system]
iot hub update -n cli-file-upload-hub000003 -g clitest.rg000001 --fsi /test/user/identity
role assignment create --role "Storage Blob Data Contributor" --assignee "cc21757e-59f5-4385-963f-f216fa8d23a2" --scope "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Storage/storageAccounts/clitest000002"
iot hub identity assign -n cli-file-upload-hub000003 -g clitest.rg000001 --user /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/clitest.rg000001/providers/Microsoft.ManagedIdentity/userAssignedIdentities/hub-user-identity000004
iot hub update -n cli-file-upload-hub000003 -g clitest.rg000001 --fsi /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/clitest.rg000001/providers/Microsoft.ManagedIdentity/userAssignedIdentities/hub-user-identity000004
iot hub update -n cli-file-upload-hub000003 -g clitest.rg000001 --fsa keyBased
storage container create --name iothubcontainer --account-name clitest000002
storage account show-connection-string --resource-group clitest.rg000001 --name clitest000002
storage account show -n clitest000002 -g clitest.rg000001
identity create -n iot-user-identity000006 -g clitest.rg000001
identity create -n iot-user-identity000007 -g clitest.rg000001
identity create -n iot-user-identity000008 -g clitest.rg000001
iot hub create -n identitytesthub000003 -g clitest.rg000001 --sku s1 --location westus2 --mintls "1.2" --mi-system-assigned --mi-user-assigned /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/clitest.rg000001/providers/Microsoft.ManagedIdentity/userAssignedIdentities/iot-user-identity000006 --role "Storage Blob Data Contributor" --scopes "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Storage/storageAccounts/clitest000002"
iot hub show --name identitytesthub000003
iot hub update -n identitytesthub000003 --fsa identityBased --fsi [system] --fcs DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=clitest000002;AccountKey=veryFakedStorageAccountKey== --fc iothubcontainer --fnld 15
iot hub update -n identitytesthub000003 -g clitest.rg000001 --fsa keyBased
iot hub update -n identitytesthub000003 -g clitest.rg000001 --fsi test/user/
iot hub update -n identitytesthub000003 -g clitest.rg000001 --fsi [system]
iot hub update -n identitytesthub000003 -g clitest.rg000001 --fsa identityBased
eventhubs namespace create --resource-group clitest.rg000001 --name ehNamespaceiothubfortest1000009
eventhubs eventhub create --resource-group clitest.rg000001 --namespace-name ehNamespaceiothubfortest1000009 --name eventHubiothubfortest000010
role assignment create --role "Azure Event Hubs Data Sender" --assignee "583fd422-91d7-4b19-9437-25f97e866b02" --scope "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.EventHub/namespaces/ehNamespaceiothubfortest1000009/eventhubs/eventHubiothubfortest000010"
identity show --id "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/clitest.rg000001/providers/Microsoft.ManagedIdentity/userAssignedIdentities/iot-user-identity000006"
role assignment create --role "Azure Event Hubs Data Sender" --assignee "00f9fd21-9378-40c0-8d88-827c675151f5" --scope "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.EventHub/namespaces/ehNamespaceiothubfortest1000009/eventhubs/eventHubiothubfortest000010"
iot hub routing-endpoint create --hub-name identitytesthub000003 -g clitest.rg000001 -n EHSystemIdentityEndpoint000004 -t EventHub -r clitest.rg000001 -s 00000000-0000-0000-0000-000000000000 --auth-type identityBased --endpoint-uri sb://ehNamespaceiothubfortest1000009.servicebus.windows.net --entity-path eventHubiothubfortest000010
iot hub routing-endpoint create --hub-name identitytesthub000003 -g clitest.rg000001 -n EHUserIdentityEndpoint000005 -t EventHub -r clitest.rg000001 -s 00000000-0000-0000-0000-000000000000 --auth-type identityBased --identity /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/clitest.rg000001/providers/Microsoft.ManagedIdentity/userAssignedIdentities/iot-user-identity000006 --endpoint-uri sb://ehNamespaceiothubfortest1000009.servicebus.windows.net --entity-path eventHubiothubfortest000010
iot hub routing-endpoint delete --hub-name identitytesthub000003 -g clitest.rg000001 -n EHUserIdentityEndpoint000005
iot hub routing-endpoint delete --hub-name identitytesthub000003 -g clitest.rg000001 -n EHSystemIdentityEndpoint000004
network vnet create -n test-iot-vnet -g clitest.rg000001 -l westus2 --subnet-name subnet1
network vnet subnet update -n subnet1 --vnet-name test-iot-vnet -g clitest.rg000001 --disable-private-endpoint-network-policies true
network private-link-resource list --type Microsoft.Devices/IoTHubs -n identitytesthub000003 -g clitest.rg000001
iot hub show -n identitytesthub000003 -g clitest.rg000001
network private-endpoint create -g clitest.rg000001 -n iot-private-endpoint --vnet-name test-iot-vnet --subnet subnet1 -l westus2 --connection-name iot-private-endpoint-connection --private-connection-resource-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Devices/IotHubs/identitytesthub000003 --group-ids iotHub
iot hub show -n identitytesthub000003 -g clitest.rg000001
network private-endpoint-connection list --type Microsoft.Devices/IoTHubs -n identitytesthub000003 -g clitest.rg000001
network private-endpoint-connection approve --type Microsoft.Devices/IoTHubs -n identitytesthub000003.59062809-cfa0-4dd6-965f-d4c9ac6bf09f --resource-name identitytesthub000003 -g clitest.rg000001 --description "Approving endpoint connection"
network private-endpoint-connection approve --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Devices/IotHubs/identitytesthub000003/PrivateEndpointConnections/identitytesthub000003.59062809-cfa0-4dd6-965f-d4c9ac6bf09f --description "Approving endpoint connection"
network private-endpoint-connection reject --type Microsoft.Devices/IoTHubs -n identitytesthub000003.59062809-cfa0-4dd6-965f-d4c9ac6bf09f --resource-name identitytesthub000003 -g clitest.rg000001 --description "Rejecting endpoint connection"
network private-endpoint-connection show --type Microsoft.Devices/IoTHubs -n identitytesthub000003.59062809-cfa0-4dd6-965f-d4c9ac6bf09f --resource-name identitytesthub000003 -g clitest.rg000001
network private-endpoint-connection delete --type Microsoft.Devices/IoTHubs -n identitytesthub000003.59062809-cfa0-4dd6-965f-d4c9ac6bf09f --resource-name identitytesthub000003 -g clitest.rg000001 -y
iot hub identity show -n identitytesthub000003 -g clitest.rg000001
iot hub show --n identitytesthub000003 -g clitest.rg000001 --query="properties.state"
iot hub show --n identitytesthub000003 -g clitest.rg000001 --query="properties.state"
iot hub show --n identitytesthub000003 -g clitest.rg000001 --query="properties.state"
iot hub show --n identitytesthub000003 -g clitest.rg000001 --query="properties.state"
iot hub identity assign -n identitytesthub000003 -g clitest.rg000001 --user /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/clitest.rg000001/providers/Microsoft.ManagedIdentity/userAssignedIdentities/iot-user-identity000007 /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/clitest.rg000001/providers/Microsoft.ManagedIdentity/userAssignedIdentities/iot-user-identity000008
iot hub identity remove -n identitytesthub000003 -g clitest.rg000001 --system
iot hub identity assign -n identitytesthub000003 -g clitest.rg000001 --system
iot hub identity remove -n identitytesthub000003 -g clitest.rg000001 --system-assigned
iot hub identity remove -n identitytesthub000003 -g clitest.rg000001 --user /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/clitest.rg000001/providers/Microsoft.ManagedIdentity/userAssignedIdentities/iot-user-identity000007
iot hub identity assign -n identitytesthub000003 -g clitest.rg000001 --system
iot hub identity remove -n identitytesthub000003 -g clitest.rg000001 --user-assigned
iot hub identity remove -n identitytesthub000003 -g clitest.rg000001 --system
storage container create --name iothubcontainer1000004 --account-name clitest000002
storage account show-connection-string --resource-group clitest.rg000001 --name clitest000002
eventhubs namespace create --resource-group clitest.rg000001 --name ehNamespaceiothubfortest1000005
eventhubs eventhub create --resource-group clitest.rg000001 --namespace-name ehNamespaceiothubfortest1000005 --name eventHubiothubfortest000006
eventhubs eventhub authorization-rule create --resource-group clitest.rg000001 --namespace-name ehNamespaceiothubfortest1000005 --eventhub-name eventHubiothubfortest000006 --name eventHubPolicyiothubfortest --rights Send
eventhubs eventhub authorization-rule keys list --resource-group clitest.rg000001 --namespace-name ehNamespaceiothubfortest1000005 --eventhub-name eventHubiothubfortest000006 --name eventHubPolicyiothubfortest
iot hub create -n iot-hub-for-test-11000003 -g clitest.rg000001 --sku F1
iot hub create -n iot-hub-for-test-11000003 -g clitest.rg000001 --sku F1 --partition-count 4
iot hub create -n iot-hub-for-test-11000003 -g clitest.rg000001 --sku S1 --fn true
iot hub create -n iot-hub-for-test-11000003 -g clitest.rg000001 --sku S1 --fn true --fc containerName
iot hub create -n iot-hub-for-test-11000003 -g clitest.rg000001 --sku S1 --mintls 2.5
iot hub create -n iot-hub-for-test-11000003 -g clitest.rg000001 --retention-day 3 --c2d-ttl 23 --c2d-max-delivery-count 89 --feedback-ttl 29 --feedback-lock-duration 35 --feedback-max-delivery-count 40 --fileupload-notification-max-delivery-count 79 --fileupload-notification-ttl 20 --min-tls-version 1.2 --fnld 15
iot hub show-connection-string -n iot-hub-for-test-11000003
iot hub show-connection-string -n iot-hub-for-test-11000003 -g clitest.rg000001
iot hub show-connection-string -n iot-hub-for-test-11000003 -g clitest.rg000001 --all
iot hub update -n iot-hub-for-test-11000003 --fnd 80 --rd 4 --ct 34 --cdd 46 --ft 43 --fld 10 --fd 76 --fn true --fnt 32 --fst 3 --fcs DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=clitest000002;AccountKey=veryFakedStorageAccountKey== --fc iothubcontainer1000004 --tags e=f g=h
iot hub update -n iot-hub-for-test-11000003 -g clitest.rg000001 --fsa identityBased
iot hub update -n iot-hub-for-test-11000003 -g clitest.rg000001 --fsi [system]
iot hub update -n iot-hub-for-test-11000003 -g clitest.rg000001 --fsi test/user/
iot hub update -n iot-hub-for-test-11000003 -g clitest.rg000001 --disable-local-auth --disable-module-sas
iot hub update -n iot-hub-for-test-11000003 -g clitest.rg000001 --disable-module-sas false  --disable-device-sas
iot hub update -n iot-hub-for-test-11000003 -g clitest.rg000001 --disable-local-auth false --disable-device-sas false
iot hub show -n iot-hub-for-test-11000003
iot hub list -g clitest.rg000001
iot hub list-skus -n iot-hub-for-test-11000003
iot hub policy create --hub-name iot-hub-for-test-11000003 -n test_policy --permissions RegistryWrite ServiceConnect DeviceConnect
iot hub policy list --hub-name iot-hub-for-test-11000003
iot hub policy show --hub-name iot-hub-for-test-11000003 -n test_policy
iot hub policy renew-key --hub-name iot-hub-for-test-11000003 -n test_policy --renew-key Primary
iot hub show-connection-string -n iot-hub-for-test-11000003 --policy-name test_policy
iot hub policy renew-key --hub-name iot-hub-for-test-11000003 -n test_policy --renew-key Swap
iot hub policy delete --hub-name iot-hub-for-test-11000003 -n test_policy
iot hub policy list --hub-name iot-hub-for-test-11000003
iot hub consumer-group create --hub-name iot-hub-for-test-11000003 -n cg1
iot hub consumer-group show --hub-name iot-hub-for-test-11000003 -n cg1
iot hub consumer-group list --hub-name iot-hub-for-test-11000003
iot hub consumer-group delete --hub-name iot-hub-for-test-11000003 -n cg1
iot hub consumer-group list --hub-name iot-hub-for-test-11000003
iot hub show-quota-metrics -n iot-hub-for-test-11000003
iot hub show-stats -n iot-hub-for-test-11000003
iot hub routing-endpoint create --hub-name iot-hub-for-test-11000003 -g clitest.rg000001 -n Event1 -t EventHub -r clitest.rg000001 -s 00000000-0000-0000-0000-000000000000 -c "Endpoint=sb://ehnamespaceiothubfortest1ndzpkj6.servicebus.windows.net/;SharedAccessKeyName=eventHubPolicyiothubfortest;SharedAccessKey=UdasmA/UA6OMqClEvNPZycQYEJllxdviYDY8QuGxq5o=;EntityPath=eventHubiothubfortest000006"
iot hub routing-endpoint list --hub-name iot-hub-for-test-11000003 -g clitest.rg000001
iot hub routing-endpoint list --hub-name iot-hub-for-test-11000003 -g clitest.rg000001 -t EventHub
iot hub routing-endpoint show --hub-name iot-hub-for-test-11000003 -g clitest.rg000001 -n Event1
iot hub routing-endpoint create --hub-name iot-hub-for-test-11000003 -g clitest.rg000001 -n Storage1 -t azurestoragecontainer -r clitest.rg000001 -s 00000000-0000-0000-0000-000000000000 -c "DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=clitest000002;AccountKey=veryFakedStorageAccountKey==" --container-name iothubcontainer1000004 --encoding avro -b 100 -w 150
iot hub route create --hub-name iot-hub-for-test-11000003 -g clitest.rg000001 -n route1 -s DeviceMessages --en Event1 -c true -e True
iot hub route list --hub-name iot-hub-for-test-11000003 -g clitest.rg000001
iot hub route list --hub-name iot-hub-for-test-11000003 -g clitest.rg000001 -s DeviceMessages
iot hub route show --hub-name iot-hub-for-test-11000003 -g clitest.rg000001 -n route1
iot hub route test --hub-name iot-hub-for-test-11000003 -g clitest.rg000001 -n route1
iot hub route test --hub-name iot-hub-for-test-11000003 -g clitest.rg000001 -s DeviceMessages
iot hub route update --hub-name iot-hub-for-test-11000003 -g clitest.rg000001 -n route1 -s DeviceMessages
iot hub route update --hub-name iot-hub-for-test-11000003 -g clitest.rg000001 -n route1 -s TwinChangeEvents
iot hub route update --hub-name iot-hub-for-test-11000003 -g clitest.rg000001 -n route1 -s DeviceLifecycleEvents
iot hub route update --hub-name iot-hub-for-test-11000003 -g clitest.rg000001 -n route1 -s DeviceJobLifecycleEvents
iot hub route update --hub-name iot-hub-for-test-11000003 -g clitest.rg000001 -n route1 -s DeviceConnectionStateEvents
iot hub route delete --hub-name iot-hub-for-test-11000003 -g clitest.rg000001
iot hub routing-endpoint delete --hub-name iot-hub-for-test-11000003 -g clitest.rg000001 -n Event1
iot hub devicestream show -n iot-hub-for-test-11000003 -g clitest.rg000001
iot hub message-enrichment create -n iot-hub-for-test-11000003 -g clitest.rg000001 --key key --value value --endpoints events fake_endpoint
iot hub message-enrichment create -n iot-hub-for-test-11000003 -g clitest.rg000001 --key key --value value --endpoints events
iot hub message-enrichment update -n iot-hub-for-test-11000003 -g clitest.rg000001 --key fake_key --value value --endpoints events
iot hub message-enrichment update -n iot-hub-for-test-11000003 -g clitest.rg000001 --key key --value value --endpoints events fake_endpoint
iot hub message-enrichment update -n iot-hub-for-test-11000003 -g clitest.rg000001 --key key --value value --endpoints events
iot hub message-enrichment list -n iot-hub-for-test-11000003 -g clitest.rg000001
iot hub message-enrichment delete -n iot-hub-for-test-11000003 -g clitest.rg000001 --key fake_key
iot hub message-enrichment delete -n iot-hub-for-test-11000003 -g clitest.rg000001 --key key
iot hub manual-failover -n iot-hub-for-test-11000003 -g clitest.rg000001
iot hub delete -n iot-hub-for-test-11000003
iot hub create -n iot000003 -g clitest.rg000001 --sku S1
iot dps create -g clitest.rg000001 -n dps000002 --tags key1=value1 key2=value2
iot dps list -g clitest.rg000001
iot dps show -g clitest.rg000001 -n dps000002
iot dps update -g clitest.rg000001 -n dps000002 --tags key3=value3 --set properties.allocationPolicy="GeoLatency"
iot dps update -g clitest.rg000001 -n dps000002 --tags ""
iot dps access-policy create -g clitest.rg000001 --dps-name dps000002 -n policy000004 -r EnrollmentRead
iot dps access-policy list -g clitest.rg000001 --dps-name dps000002
iot dps access-policy show -g clitest.rg000001 --dps-name dps000002 -n policy000004
iot dps access-policy update -g clitest.rg000001 --dps-name dps000002 -n policy000004 -r EnrollmentWrite
iot dps access-policy delete -g clitest.rg000001 --dps-name dps000002 -n policy000004
iot dps certificate create --dps-name dps000002 -g clitest.rg000001 --name certificate000005 -p testcert.cer
iot dps certificate create --dps-name dps000002 -g clitest.rg000001 --name verified-certificate-000006 -p testcert.cer --verified
iot dps certificate list --dps-name dps000002 -g clitest.rg000001
iot dps certificate show --dps-name dps000002 -g clitest.rg000001 --name certificate000005
iot dps certificate update --dps-name dps000002 -g clitest.rg000001 --name certificate000005 -p testcert.cer --etag IjAwMDA5YzE1LTAwMDAtMDcwMC0wMDAwLTYxMjdiMDY2MDAwMCI=
iot dps certificate generate-verification-code --dps-name dps000002 -g clitest.rg000001 -n certificate000005 --etag IjAwMDA5ZTE1LTAwMDAtMDcwMC0wMDAwLTYxMjdiMDY5MDAwMCI=
iot dps certificate verify --dps-name dps000002 -g clitest.rg000001 -n certificate000005 -p verify.cer --etag IjAwMDA5ZjE1LTAwMDAtMDcwMC0wMDAwLTYxMjdiMDZhMDAwMCI=
iot dps certificate delete --dps-name dps000002 -g clitest.rg000001 --name certificate000005 --etag IjAwMDBhMDE1LTAwMDAtMDcwMC0wMDAwLTYxMjdiMDZiMDAwMCI=
iot dps certificate delete --dps-name dps000002 -g clitest.rg000001 --name verified-certificate-000006 --etag IjAwMDA5ZDE1LTAwMDAtMDcwMC0wMDAwLTYxMjdiMDY3MDAwMCI=
iot hub policy create --hub-name iot000003 -n key000008 --permissions RegistryWrite
iot hub show-connection-string --name iot000003 -g clitest.rg000001
iot dps linked-hub create --dps-name dps000002 -g clitest.rg000001 --connection-string HostName=iot000003.azure-devices.net;SharedAccessKeyName=iothubowner;SharedAccessKey=dyobhj9kZLUex7dbX5UlQGx6DVm6CuykfrNdlP4EPxY= -l westus
iot dps linked-hub list --dps-name dps000002 -g clitest.rg000001
iot dps linked-hub show --dps-name dps000002 -g clitest.rg000001 --linked-hub iot000003.azure-devices.net
iot dps linked-hub update --dps-name dps000002 -g clitest.rg000001 --linked-hub iot000003.azure-devices.net --allocation-weight 10 --apply-allocation-policy True
iot dps linked-hub show --dps-name dps000002 -g clitest.rg000001 --linked-hub iot000003.azure-devices.net
iot dps linked-hub delete --dps-name dps000002 -g clitest.rg000001 --linked-hub iot000003.azure-devices.net
iot dps delete -g clitest.rg000001 -n dps000002
keyvault private-link-resource list --vault-name {kv}
keyvault create --hsm-name {hsm} -g {rg} -l {loc} --administrators "3707fb2f-ac10-4591-a04f-8b0d786ea37d"
keyvault private-link-resource list --hsm-name {hsm}
keyvault delete --hsm-name {hsm} -g {rg}
keyvault purge --hsm-name {hsm} -l {loc}
keyvault show -n {kv} -g {rg} --query "id" -otsv
network vnet create -n {vnet} -g {rg} -l {loc} --subnet-name {subnet}
network vnet subnet update -n {subnet} --vnet-name {vnet} -g {rg} --disable-private-endpoint-network-policies true
network private-endpoint create -g {rg} -n {pe} --vnet-name {vnet} --subnet {subnet} -l {loc} --connection-name {pe_connection} --private-connection-resource-id {kv_id} --group-id vault
keyvault show -n {kv}
keyvault private-endpoint-connection show --id {kv_pec_id}
keyvault private-endpoint-connection show --vault-name {kv} --name {kv_pec_name}
keyvault private-endpoint-connection show --vault-name {kv} -n {kv_pec_name}
keyvault set-policy -g {rg} -n {kv} --object-id {policy_id} --certificate-permissions get list
keyvault private-endpoint-connection reject --id {kv_pec_id} --description "{rejection_desc}" --no-wait
keyvault private-endpoint-connection show --id {kv_pec_id}
keyvault private-endpoint-connection wait --id {kv_pec_id} --created
keyvault private-endpoint-connection show --id {kv_pec_id}
keyvault private-endpoint-connection approve --vault-name {kv} --name {kv_pec_name} --description "{approval_desc}"
keyvault create --hsm-name {hsm} -g {rg} -l {loc} --administrators "3707fb2f-ac10-4591-a04f-8b0d786ea37d"
network vnet create -n {vnet} -g {rg} -l {loc} --subnet-name {subnet}
network vnet subnet update -n {subnet} --vnet-name {vnet} -g {rg} --disable-private-endpoint-network-policies true
network private-endpoint create -g {rg} -n {pe} --vnet-name {vnet} --subnet {subnet} -l {loc} --connection-name {pe_connection} --private-connection-resource-id {hsm_id} --group-id managedhsm
keyvault show --hsm-name {hsm}
keyvault private-endpoint-connection show --id {hsm_pec_id}
keyvault private-endpoint-connection show --hsm-name {hsm} --name {hsm_pec_name}
keyvault private-endpoint-connection list --hsm-name {hsm}
keyvault private-endpoint-connection approve --hsm-name {hsm} --name {hsm_pec_name} --description "{approval_desc}"
keyvault private-endpoint-connection wait --id {hsm_pec_id} --created
keyvault private-endpoint-connection reject --id {hsm_pec_id} --description "{rejection_desc}" --no-wait
keyvault private-endpoint-connection wait --id {hsm_pec_id} --created
keyvault private-endpoint-connection show --id {hsm_pec_id}
keyvault private-endpoint-connection delete --hsm-name {hsm} --name {hsm_pec_name}
network private-endpoint delete -g {rg} -n {pe}
keyvault delete --hsm-name {hsm} -g {rg}
keyvault purge --hsm-name {hsm} -l {loc}
group create -g {rg} -l {loc}
keyvault create --hsm-name {hsm_name} -g {rg} -l {loc} --administrators {init_admin}
keyvault show --hsm-name {hsm_name}
keyvault show --hsm-name {hsm_name} -g {rg}
keyvault list --resource-type hsm
keyvault list --resource-type hsm -g {rg}
keyvault delete --hsm-name {hsm_name}
keyvault show-deleted --hsm-name {hsm_name}
keyvault create -g {rg} -n {kv} -l {loc}
keyvault create -g {rg} -n {kv} -l {loc}
keyvault show -n {kv}
keyvault list -g {rg}
keyvault update -g {rg} -n {kv} --set properties.sku.name=premium
keyvault update -g {rg} -n {kv} --enable-soft-delete --enabled-for-deployment --enabled-for-disk-encryption --enabled-for-template-deployment --bypass AzureServices --default-action Deny
keyvault set-policy -g {rg} -n {kv} --object-id {policy_id} --key-permissions get wrapkey wrapKey
keyvault set-policy -g {rg} -n {kv} --object-id {policy_id} --key-permissions get wrapkey wrapkey
keyvault set-policy -g {rg} -n {kv} --object-id {policy_id} --certificate-permissions get list
ad app create --display-name {kv}
keyvault set-policy -g {rg} -n {kv} --object-id {policy_id} --application-id {app_id} --key-permissions get list
keyvault delete-policy -g {rg} -n {kv} --object-id {policy_id} --application-id {app_id}
ad app delete --id {app_id}
keyvault delete-policy -g {rg} -n {kv} --object-id {policy_id}
keyvault delete -n {kv}
keyvault list -g {rg}
keyvault show-deleted -n {kv}
keyvault key create --hsm-name {hsm_name} -n {key_name}
keyvault key backup --hsm-name {hsm_name} -n {key_name} -f "{key_backup}"
keyvault security-domain download --hsm-name {hsm_name} --security-domain-file "{sdfile}" --sd-quorum 2 --sd-wrapping-keys "{cer1_path}" "{cer2_path}" "{cer3_path}" --no-wait
keyvault delete --hsm-name {hsm_name}
keyvault create --hsm-name {next_hsm_name} -l {loc} -g {rg} --administrators {init_admin} --retention-days 7 --no-wait
keyvault wait-hsm --hsm-name {next_hsm_name} --created
keyvault security-domain init-recovery --hsm-name {next_hsm_name} --sd-exchange-key "{exchange_key}"
keyvault security-domain upload --hsm-name {next_hsm_name} --sd-file "{sdfile}" --sd-exchange-key "{exchange_key}" --sd-wrapping-keys "{key1_path}" "{key2_path}"
keyvault key restore --hsm-name {next_hsm_name} -f "{key_backup}"
keyvault role definition list --hsm-name {hsm_name}
keyvault role definition create --hsm-name {hsm_name} --role-definition {role_definition}
keyvault role definition show --hsm-name {hsm_name} --name {name}
keyvault role definition update --hsm-name {hsm_name} --role-definition {updated_role_definition}
keyvault role definition show --hsm-name {hsm_name} --name {name}
keyvault role definition list --hsm-name {hsm_name}
keyvault role definition delete --hsm-name {hsm_name} --name {name}
keyvault role definition list --hsm-name {hsm_name}
keyvault show -n {kv} -g {rg}
keyvault key create --vault-name {kv} -n {key} -p software
keyvault key create --vault-name {kv} -n {key2}
keyvault set-policy -n {kv} --object-id {obj_id} --key-permissions {key_perms}
keyvault key encrypt -n {key} --vault-name {kv} -a RSA-OAEP --value "{plaintext_value}" --data-type plaintext
keyvault key encrypt -n {key} --vault-name {kv} -a RSA-OAEP --value "{base64_value}" --data-type base64
keyvault key decrypt -n {key} --vault-name {kv} -a RSA-OAEP --value "{encryption_result1}" --data-type plaintext
keyvault key decrypt -n {key} --vault-name {kv} -a RSA-OAEP --value "{encryption_result2}" --data-type base64
keyvault key list --vault-name {kv}
keyvault key list --vault-name {kv} --maxresults 10
keyvault key list --vault-name {kv} --maxresults 1
keyvault key create --vault-name {kv} -n {key} -p software --disabled --ops encrypt decrypt --tags test=foo
keyvault key list-versions --vault-name {kv} -n {key}
keyvault key list-versions --vault-name {kv} -n {key} --maxresults 10
keyvault key list-versions --vault-name {kv} -n {key} --maxresults 1
keyvault key list-versions --id {kid}
keyvault key list-versions --id {pkid}
keyvault key show --vault-name {kv} -n {key}
keyvault key show --vault-name {kv} -n {key} -v {version1}
keyvault key show --id {kid1}
keyvault key set-attributes --vault-name {kv} -n {key} --enabled true
keyvault key backup --vault-name {kv} -n {key} --file "{key_file}"
keyvault key delete --vault-name {kv} -n {key}
keyvault key purge --vault-name {kv} -n {key}
keyvault key delete --vault-name {kv} -n {key2}
keyvault key list --vault-name {kv}
keyvault key list --vault-name {kv} --maxresults 10
keyvault key restore --vault-name {kv} --file "{key_file}"
keyvault key list-versions --vault-name {kv} -n {key}
keyvault key list-versions --vault-name {kv} -n {key} --maxresults 10
keyvault key import --vault-name {kv} -n import-key-plain --pem-file "{key_plain_file}" -p software
keyvault key import --vault-name {kv} -n import-key-encrypted --pem-file "{key_enc_file}" --pem-password {key_enc_password} -p hsm
keyvault key import --vault-name {kv} -n import-key-plain --pem-string '{key_plain_string}' -p software
keyvault key import --vault-name {kv} -n import-key-encrypted --pem-string "{key_enc_string}" --pem-password {key_enc_password} -p hsm
keyvault key create --vault-name {kv} -n eckey1 --kty EC
keyvault key create --vault-name {kv} -n eckey1 --curve P-256
keyvault key delete --vault-name {kv} -n eckey1
keyvault key import --vault-name {kv} -n import-eckey-plain --pem-file "{key_plain_file}" -p software
keyvault key import --vault-name {kv} -n import-eckey-encrypted --pem-file "{key_enc_file}" --pem-password {key_enc_password}
keyvault key create --vault-name {kv2} --name key1 --kty RSA-HSM --size 2048 --ops import
keyvault key create --vault-name {kv2} --name key2 --kty RSA-HSM --size 3072 --ops import
keyvault key create --vault-name {kv2} --name key2 --kty RSA-HSM --size 4096 --ops import
keyvault show -n {kv} -g {rg}
keyvault set-policy -n {kv} --object-id {obj_id} --key-permissions {key_perms}
keyvault key create --vault-name {kv} -n {key} -p software
keyvault key rotation-policy update --value "{policy}" --vault-name {kv} -n {key}
keyvault key rotation-policy show --vault-name {kv} -n {key}
keyvault key rotate --vault-name {kv} -n {key}
keyvault key create --kty oct-HSM --size 256 -n {key} --hsm-name {hsm_name} --ops encrypt decrypt
keyvault key encrypt -n {key} --hsm-name {hsm_name} -a A256GCM --value "{plaintext_value}" --data-type plaintext --aad {aad}
keyvault key encrypt -n {key} --hsm-name {hsm_name} -a A256GCM --value "{base64_value}" --data-type base64 --aad {aad}
keyvault key decrypt -n oct256key-000001 --hsm-name ystesthsm -a A256GCM --value "NdkeIVHFPLL0M5oHXev9nvk=" --data-type plaintext --iv 2946f5d74f971c5438519fc8 --tag 56dbce9159956ebe9fc6670ca689ba21 --aad 101112131415161718191a1b1c1d1e1f
keyvault key decrypt -n oct256key-000001 --hsm-name ystesthsm -a A256GCM --value "brIwaH5jAQS1ogmXpATOhzw=" --data-type base64 --iv c76792d27e2cee6fca9c63a0 --tag c59ae02d7422d20192ae5e6b5422a4c7 --aad 101112131415161718191a1b1c1d1e1f
keyvault key delete -n {key} --hsm-name {hsm_name}
keyvault key purge -n {key} --hsm-name {hsm_name}
keyvault key random --count 4 --hsm-name {hsm_name}
keyvault key random --count 1 --id {hsm_url}
keyvault key import --vault-name {kv} -n ec-p256-file --pem-file "{ec-p256-file}"
keyvault key download --vault-name {kv} -n ec-p256-file -f "ec-p256-file.der" -e DER
keyvault key download --vault-name {kv} -n ec-p256-file -f "ec-p256-file.pem" -e PEM
keyvault key import --vault-name {kv} -n ec-p384-file --pem-file "{ec-p384-file}"
keyvault key download --vault-name {kv} -n ec-p384-file -f "ec-p384-file.der" -e DER
keyvault key download --vault-name {kv} -n ec-p384-file -f "ec-p384-file.pem" -e PEM
keyvault key import --vault-name {kv} -n ec-p521-file --pem-file "{ec-p521-file}"
keyvault key download --vault-name {kv} -n ec-p521-file -f "ec-p521-file.der" -e DER
keyvault key download --vault-name {kv} -n ec-p521-file -f "ec-p521-file.pem" -e PEM
keyvault key import --vault-name {kv} -n ec-p256k-file --pem-file "{ec-p256k-file}"
keyvault key download --vault-name {kv} -n ec-p256k-file -f "ec-p256k-file.der" -e DER
keyvault key download --vault-name {kv} -n ec-p256k-file -f "ec-p256k-file.pem" -e PEM
keyvault key import --vault-name {kv} -n rsa-2048-file --pem-file "{rsa-2048-file}"
keyvault key download --vault-name {kv} -n rsa-2048-file -f "rsa-2048-file.der" -e DER
keyvault key download --vault-name {kv} -n rsa-2048-file -f "rsa-2048-file.pem" -e PEM
keyvault key import --vault-name {kv} -n rsa-3072-file --pem-file "{rsa-3072-file}"
keyvault key download --vault-name {kv} -n rsa-3072-file -f "rsa-3072-file.der" -e DER
keyvault key download --vault-name {kv} -n rsa-3072-file -f "rsa-3072-file.pem" -e PEM
keyvault key import --vault-name {kv} -n rsa-4096-file --pem-file "{rsa-4096-file}"
keyvault key download --vault-name {kv} -n rsa-4096-file -f "rsa-4096-file.der" -e DER
keyvault key download --vault-name {kv} -n rsa-4096-file -f "rsa-4096-file.pem" -e PEM
keyvault show -n {kv}
keyvault secret set --vault-name {kv} -n {sec} --value ABC123
keyvault secret delete --vault-name {kv} -n {sec}
keyvault secret list-deleted --vault-name {kv}
keyvault secret set --vault-name {kv} -n {sec} --value ABC123
keyvault secret set --vault-name {kv} -n {sec} --value ABC123
keyvault secret set --vault-name {kv} -n {sec} --value ABC123
keyvault secret set --vault-name {kv} -n {sec} --value ABC123
keyvault secret set --vault-name {kv} -n {sec} --value ABC123
keyvault secret set --vault-name {kv} -n {sec} --value ABC123
keyvault secret set --vault-name {kv} -n {sec} --value ABC123
keyvault secret set --vault-name {kv} -n {sec} --value ABC123
keyvault secret set --vault-name {kv} -n {sec} --value ABC123
keyvault secret set --vault-name {kv} -n {sec} --value ABC123
keyvault show -n {kv} -g {rg}
keyvault set-policy -n {kv} --object-id {obj_id} --secret-permissions {secret_perms}
keyvault secret set --vault-name {kv} -n {sec} --value ABC123
keyvault secret set --vault-name {kv} -n {sec2} --value 123456
keyvault secret list --vault-name {kv}
keyvault secret list --vault-name {kv} --maxresults 10
keyvault secret list --vault-name {kv} --maxresults 1
keyvault secret set --vault-name {kv} -n {sec} --value DEF456 --tags test=foo --description "test type"
keyvault secret list-versions --vault-name {kv} -n {sec}
keyvault secret list-versions --vault-name {kv} -n {sec} --maxresults 10
keyvault secret list-versions --vault-name {kv} -n {sec} --maxresults 1
keyvault secret show --vault-name {kv} -n {sec}
keyvault secret show --vault-name {kv} -n {sec} -v {ver1}
keyvault secret show --id {sid1}
keyvault secret set-attributes --vault-name {kv} -n {sec} --enabled false
keyvault secret backup --vault-name {kv} -n {sec} --file "{bak_file}"
keyvault secret delete --vault-name {kv} -n {sec}
keyvault secret purge --vault-name {kv} -n {sec}
keyvault secret delete --vault-name {kv} -n {sec2}
keyvault secret list --vault-name {kv}
keyvault secret restore --vault-name {kv} --file "{bak_file}"
keyvault secret list-versions --vault-name {kv} -n {sec}
keyvault secret delete --vault-name {kv} -n {sec}
keyvault secret list --vault-name {kv}
keyvault secret list --vault-name {kv} --maxresults 10
keyvault secret set --vault-name {kv} -n download-{enc} --file "{src_path}" --encoding {enc}
keyvault secret download --vault-name {kv} -n download-{enc} --file "{dest_path}"
keyvault secret set --vault-name {kv} -n download-{enc} --file "{src_path}" --encoding {enc}
keyvault secret download --vault-name {kv} -n download-{enc} --file "{dest_path}"
keyvault secret set --vault-name {kv} -n download-{enc} --file "{src_path}" --encoding {enc}
keyvault secret download --vault-name {kv} -n download-{enc} --file "{dest_path}"
keyvault secret set --vault-name {kv} -n download-{enc} --file "{src_path}" --encoding {enc}
keyvault secret download --vault-name {kv} -n download-{enc} --file "{dest_path}"
keyvault secret set --vault-name {kv} -n download-{enc} --file "{src_path}" --encoding {enc}
keyvault secret download --vault-name {kv} -n download-{enc} --file "{dest_path}"
keyvault secret set --vault-name {kv} -n download-{enc} --file "{src_path}" --encoding {enc}
keyvault secret download --vault-name {kv} -n download-{enc} --file "{dest_path}"
keyvault certificate contact add --vault-name {kv} --email admin@contoso.com --name "John Doe" --phone 123-456-7890
keyvault certificate contact add --vault-name {kv} --email other@contoso.com 
keyvault certificate contact list --vault-name {kv}
keyvault certificate contact delete --vault-name {kv} --email admin@contoso.com
keyvault certificate contact list --vault-name {kv}
keyvault certificate issuer create --vault-name {kv} --issuer-name issuer1 --provider Test
keyvault certificate issuer show --vault-name {kv} --issuer-name issuer1
keyvault certificate issuer update --vault-name {kv} --issuer-name issuer1 --organization-id TestOrg --account-id test_account
keyvault certificate issuer update --vault-name {kv} --issuer-name notexist --organization-id TestOrg --account-id test_account
keyvault certificate issuer update --vault-name {kv} --issuer-name issuer1 --account-id ""
keyvault certificate issuer list --vault-name {kv}
keyvault certificate issuer admin add --vault-name {kv} --issuer-name issuer1 --email test@test.com --first-name Test --last-name Admin --phone 123-456-7890
keyvault certificate issuer admin add --vault-name {kv} --issuer-name issuer1 --email test2@test.com
keyvault certificate issuer admin list --vault-name {kv} --issuer-name issuer1
keyvault certificate issuer admin delete --vault-name {kv} --issuer-name issuer1 --email test@test.com
keyvault certificate issuer admin list --vault-name {kv} --issuer-name issuer1
keyvault certificate issuer delete --vault-name {kv} --issuer-name issuer1
keyvault certificate issuer list --vault-name {kv}
keyvault certificate create --vault-name {kv} -n pending-cert -p @"{policy_path}"
keyvault certificate pending show --vault-name {kv} -n pending-cert
keyvault certificate list --vault-name {kv} --include-pending
keyvault certificate list --vault-name {kv} --include-pending true
keyvault certificate list --vault-name {kv}
keyvault certificate list --vault-name {kv}  --include-pending false
keyvault certificate pending merge --vault-name {kv} -n pending-cert --file "{fake_cert_path}"
keyvault certificate pending delete --vault-name {kv} -n pending-cert
keyvault certificate pending show --vault-name {kv} -n pending-cert
keyvault certificate import --vault-name {kv} -n pem-cert1 --file "{pem_file}" -p @"{pem_policy_path}"
keyvault certificate download --vault-name {kv} -n pem-cert1 --file "{dest_binary}" -e DER
keyvault certificate download --vault-name {kv} -n pem-cert1 --file "{dest_string}" -e PEM
keyvault certificate delete --vault-name {kv} -n pem-cert1
keyvault certificate get-default-policy
keyvault certificate get-default-policy --scaffold
keyvault show -n {kv} -g {rg}
keyvault certificate create --vault-name {kv} -n cert1 -p @"{policy_path}"
keyvault certificate create --vault-name {kv} -n cert2 -p @"{policy_path}"
keyvault certificate show --vault-name {kv} -n cert2 --query policy
keyvault secret download --vault-name {kv} --file "{cert_secret_path}" -n cert2 --encoding base64
keyvault certificate import --vault-name {kv} --file "{cert_secret_path}" -n cert2 -p @"{policy3_path}"
keyvault certificate delete --vault-name {kv} -n cert2
keyvault certificate list --vault-name {kv}
keyvault certificate list --vault-name {kv} --maxresults 10
keyvault certificate create --vault-name {kv} -n cert1 -p @"{policy2_path}"
keyvault certificate list-versions --vault-name {kv} -n cert1 --maxresults 10
keyvault certificate list-versions --vault-name {kv} -n cert1
keyvault certificate show --vault-name {kv} -n cert1
keyvault certificate show --vault-name {kv} -n cert1 -v {ver1}
keyvault certificate show --id {cert_id}
keyvault key list --vault-name {kv}
keyvault secret list --vault-name {kv}
keyvault key show --vault-name {kv} -n cert1
keyvault secret show --vault-name {kv} -n cert1
keyvault certificate set-attributes --vault-name {kv} -n cert1 --enabled false -p @"{policy_path}"
keyvault set-policy -n {kv} --object-id {obj_id} --certificate-permissions backup delete get restore list purge
keyvault certificate backup --vault-name {kv} -n cert1 --file {bak_file}
keyvault certificate delete --vault-name {kv} -n cert1
keyvault certificate purge --vault-name {kv} -n cert1
keyvault certificate list --vault-name {kv}
keyvault certificate list --vault-name {kv} --maxresults 10
keyvault certificate restore --vault-name {kv} --file {bak_file}
keyvault certificate list --vault-name {kv}
keyvault certificate import --vault-name {kv} -n pem-cert1 --file "{pem_plain_file}" -p @"{pem_policy_path}"
keyvault certificate import --vault-name {kv} -n pem-cert2 --file "{pem_encrypted_file}" --password {pem_encrypted_password} -p @"{pem_policy_path}"
keyvault certificate import --vault-name {kv} -n pem-cert2 --file "notexist.json" -p @"{pem_policy_path}"
keyvault show -n {kv} -g {rg}
keyvault set-policy -n {kv} --object-id {obj_id} --key-permissions {key_perms} --secret-permissions {secret_perms} --certificate-permissions {cert_perms}
keyvault secret set --vault-name {kv} -n secret1 --value ABC123
keyvault secret set --vault-name {kv} -n secret2 --value ABC123
keyvault key create --vault-name {kv} -n key1 -p software
keyvault key create --vault-name {kv} -n key2 -p software
keyvault certificate import --vault-name {kv} -n cert1 --file "{pem_plain_file}" -p @"{pem_policy_path}"
keyvault certificate import --vault-name {kv} -n cert2 --file "{pem_plain_file}" -p @"{pem_policy_path}"
keyvault secret delete --vault-name {kv} -n secret1
keyvault secret delete --vault-name {kv} -n secret2
keyvault key delete --vault-name {kv} -n key1
keyvault key delete --vault-name {kv} -n key2
keyvault certificate delete --vault-name {kv} -n cert1
keyvault certificate delete --vault-name {kv} -n cert2
keyvault secret recover --vault-name {kv} -n secret1
keyvault key recover --vault-name {kv} -n key1
keyvault certificate recover --vault-name {kv} -n cert1
keyvault secret purge --vault-name {kv} -n secret2
keyvault key purge --vault-name {kv} -n key2
keyvault certificate purge --vault-name {kv} -n cert2
keyvault delete -n {kv}
keyvault recover -n {kv} --no-wait
network vnet create -g {rg} -n {vnet} -l {loc}
network vnet subnet create -g {rg} --vnet-name {vnet} --name {subnet} --address-prefixes 10.0.0.0/21 --service-endpoints Microsoft.KeyVault
network vnet subnet show -g {rg} --vnet-name {vnet} --name {subnet}
keyvault create -n {kv2} -l {loc} -g {rg} --network-acls "{network_acls_json_string}"
keyvault create -n {kv3} -l {loc} -g {rg} --network-acls "{network_acls_json_filename}"
network vnet create -g {rg} -n {vnet2} -l {loc}
network vnet subnet create -g {rg} --vnet-name {vnet2} --name {subnet2} --address-prefixes 10.0.0.0/21 --service-endpoints Microsoft.KeyVault
network vnet subnet show -g {rg} --vnet-name {vnet2} --name {subnet2}
network vnet create -g {rg} -n {vnet3} -l {loc}
network vnet subnet create -g {rg} --vnet-name {vnet3} --name {subnet3} --address-prefixes 10.0.0.0/21 --service-endpoints Microsoft.KeyVault
network vnet subnet show -g {rg} --vnet-name {vnet3} --name {subnet3}
keyvault create -n {kv4} -l {loc} -g {rg} --network-acls-ips {ip3} {ip4} --network-acls-vnets {subnetId2} {vnet3}/{subnet3}
keyvault create -n {kv5} -l {loc} -g {rg} --network-acls "@{network_acls_json_filename}" --network-acls-ips {ip3} {ip4} --network-acls-vnets {subnetId2} {vnet3}/{subnet3}
keyvault create -n {kv6} -l {loc} -g {rg} --network-acls "{network_acls_json_filename}" --network-acls-ips {ip3} {ip4} --network-acls-vnets {subnetId2} {vnet3}/{subnet3}
keyvault create -g {rg} -n {kv} -l {loc} --sku premium --retention-days 7 {add}
keyvault update --name {kv} --resource-group {rg} --default-action Deny
keyvault network-rule add --subnet {subnetId} --name {kv} --resource-group {rg}
keyvault network-rule add --subnet {subnetId} --name {kv} --resource-group {rg}
keyvault network-rule list --name {kv} --resource-group {rg}
keyvault network-rule remove --subnet {subnetId} --name {kv} --resource-group {rg}
keyvault network-rule add --ip-address {ip} --name {kv} --resource-group {rg}
keyvault network-rule add --ip-address {ip} --name {kv} --resource-group {rg}
keyvault network-rule add --ip-address {ip5} --name {kv} --resource-group {rg}
keyvault network-rule list --name {kv} --resource-group {rg}
keyvault network-rule remove --ip-address {ip} --name {kv} --resource-group {rg}
keyvault network-rule add --ip-address {ip} {ip2} {ip3} --name {kv} --resource-group {rg}
keyvault network-rule add --ip-address {ip} {ip5} --name {kv} --resource-group {rg}
keyvault network-rule add --ip-address {ip4} {ip5} --name {kv} --resource-group {rg}
keyvault create -g {rg} -n {kv} -l {loc}
keyvault create -g {rg} -n {kv2} -l {loc} --public-network-access Enabled
keyvault create -g {rg} -n {kv3} -l {loc} --public-network-access Disabled
keyvault update -g {rg} -n {kv3} --public-network-access Enabled
kusto cluster create -n {name} -g {rg} --sku {sku} --capacity {capacity}
kusto cluster show -n {name} -g {rg}
kusto cluster update -n {name} -g {rg} --sku {sku} --capacity {capacity} 
kusto cluster delete -n {name} -g {rg} -y
kusto cluster create -n {name} -g {rg} --sku {sku}
kusto cluster stop -n {name} -g {rg}
kusto cluster show -n {name} -g {rg}
kusto cluster start -n {name} -g {rg}
kusto cluster show -n {name} -g {rg}
kusto cluster delete -n {name} -g {rg} -y
kusto cluster create -n {cluster_name} -g {rg} --sku {sku}
kusto database create --cluster-name {cluster_name} -g {rg} -n {database_name}  --soft-delete-period {soft_delete_period} --hot-cache-period {hot_cache_period}
kusto database update --cluster-name {cluster_name} -g {rg} -n {database_name}  --soft-delete-period {soft_delete_period} --hot-cache-period {hot_cache_period}
kusto database delete --cluster-name {cluster_name} -g {rg} -n {database_name} -y
kusto cluster delete -n {cluster_name} -g {rg} -y
managedservices definition create --name {name} --tenant-id  {tenant-id} --principal-id {principal-id} --role-definition-id {role-definition-id} --definition-id {definition-id}
managedservices definition show --definition {definition-id}
managedservices assignment  create --definition {registration-definition-resource-id} --assignment-id {assignment-id}
managedservices assignment  show --assignment {assignment-id}
managedservices assignment  delete --assignment {assignment-id}
managedservices assignment  list
managedservices definition delete --definition {definition-id}
managedservices definition list
maps account create -n {name} -g {rg} --sku {sku} --accept-tos
maps account create -n {name} -g {rg} --sku {sku} --accept-tos
maps account create -n {name3} -g {rg1} --sku {skus1} --accept-tos
maps account update -n {name} -g {rg} --sku {skus1} --tags {tags}
maps account show -n {name} -g {rg}
maps account show --ids /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Maps/accounts/cli-000005
maps account list -g {rg}
maps account create -n {name1} -g {rg1} --sku {sku} --accept-tos
maps account create -n {name2} -g {rg} --sku {sku} --accept-tos
maps account list -g {rg}
maps account list -g {rg1}
maps account keys list -n {name} -g {rg}
maps account keys renew -n {name} -g {rg} --key {key_type_primary}
maps account keys renew -n {name} -g {rg} --key {key_type_secondary}
maps account delete -n {name} -g {rg}
maps account list -g {rg}
maps account delete -n {name1} -g {rg1}
maps account delete -n {name2} -g {rg}
maps account delete -n {name3} -g {rg1}
maps account list -g {rg}
maps account list -g {rg1}
maps account create -n {name} -g {rg} --sku {skus1} --accept-tos
maps creator create -n {name} --creator-name {creator_name} -g {rg} --storage-units {storage_units} -l westus2
maps creator update -n {name} --creator-name {creator_name} -g {rg} --storage-units 10 --tags {tags}
maps creator show -n {name} -g {rg} --creator-name {creator_name}
maps creator list -g {rg} -n {name}
maps creator delete -n {name} --creator-name {creator_name} -g {rg} -y
maps creator list -n {name} -g {rg}
maps map list-operation
term accept --product "vsec" --plan "management" --publisher "checkpoint"
term show --product "vsec" --plan "management" --publisher "checkpoint"
monitor activity-log list --start-time 2018-01-01T00:00:00Z --end-time 2999-01-01T00:00:00Z
monitor action-group create -n cliactiongrouptest000002 -g cli_test_monitor_ag_basic000001 -ojson
monitor action-group list -g cli_test_monitor_ag_basic000001 -ojson
monitor action-group update -n cliactiongrouptest000002 -g cli_test_monitor_ag_basic000001 -ojson --short-name new_name --tag owner=alice
monitor action-group update -n cliactiongrouptest000002 -g cli_test_monitor_ag_basic000001 -ojson -a email alice alice@example.com usecommonalertsChema -a sms alice_sms 1 5551234567 -a webhook alice_web https://www.example.com/alert?name=alice useAadAuth testobjid http://iduri usecommonalertschema -a armrole alicearmrole abcde usecommonAlertSchema -a azureapppush alice_apppush alice@example.com -a itsm alice_itsm test_workspace test_conn ticket_blob eastus -a automationrunbook alice_runbook test_account test_runbook test_webhook http://example.com isglobalrunbook -a voice alice_voice 1 5551234567 -a logicapp alice_logicapp test_resource http://callback -a azurefunction azfunc test_rsrc test_func http://trigger usecommonalertSchema 
monitor action-group update -n cliactiongrouptest000002 -g cli_test_monitor_ag_basic000001 -ojson -r alice_web
monitor action-group enable-receiver -n nonexist --action-group cliactiongrouptest000002 -g cli_test_monitor_ag_basic000001
monitor action-group enable-receiver -n alice --action-group cliactiongrouptest000002 -g cli_test_monitor_ag_basic000001
monitor action-group delete -n cliactiongrouptest000002 -g cli_test_monitor_ag_basic000001 -ojson
monitor action-group list -g cli_test_monitor_ag_basic000001 -ojson
monitor action-group create -n cliact000002 -g clitest.rg000001 --query id -otsv
monitor action-group create -n cliact000003 -g clitest.rg000001 --query id -otsv
monitor action-group create -n cliact000004 -g clitest.rg000001 --query id -otsv
group show -n clitest.rg000001 -ojson
monitor activity-log alert create -n clialert000005 -g clitest.rg000001 -ojson
monitor activity-log alert show -n clialert000005 -g clitest.rg000001 -ojson
monitor activity-log alert action-group add -n clialert000005 -g clitest.rg000001 -a /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/microsoft.insights/actionGroups/cliact000002 -ojson
monitor activity-log alert action-group add -n clialert000005 -g clitest.rg000001 -a cliact000003 --reset -ojson
monitor activity-log alert action-group add -n clialert000005 -g clitest.rg000001 -a /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/microsoft.insights/actionGroups/cliact000002 cliact000004 -ojson
monitor activity-log alert action-group add -n clialert000005 -g clitest.rg000001 -a /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/microsoft.insights/actionGroups/cliact000002 -ojson
monitor activity-log alert show -n clialert000005 -g clitest.rg000001 -ojson
monitor activity-log alert action-group add -n clialert000005 -g clitest.rg000001 -a cliact000002 -w purpose=test -ojson
monitor activity-log alert action-group add -n clialert000005 -g clitest.rg000001 -a /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/microsoft.insights/actionGroups/cliact000002 -w purpose=error-trigger --strict -ojson
monitor activity-log alert action-group remove -n clialert000005 -g clitest.rg000001 -a cliact000002 -ojson
monitor activity-log alert action-group remove -n clialert000005 -g clitest.rg000001 -a /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/microsoft.insights/actionGroups/cliact000002 -ojson
monitor activity-log alert action-group remove -n clialert000005 -g clitest.rg000001 -a cliact000003 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/microsoft.insights/actionGroups/cliact000004 -ojson
monitor activity-log alert delete -n clialert000005 -g clitest.rg000001
monitor activity-log alert show -n clialert000005 -g clitest.rg000001
group show -n clitest.rg000001 -ojson
monitor activity-log alert create -n clialert000002 -g clitest.rg000001 -ojson
monitor activity-log alert show -n clialert000002 -g clitest.rg000001 -ojson
monitor activity-log alert update -n clialert000002 -g clitest.rg000001 -c category=Security and level=Informational
monitor activity-log alert update -n clialert000002 -g clitest.rg000001 -c level=Error and category=Security and resourceGroup=clitest.rg000001
group show -n clitest.rg000001 -ojson
monitor activity-log alert create -n clialert000002 -g clitest.rg000001 -ojson
monitor activity-log alert show -n clialert000002 -g clitest.rg000001 -ojson
monitor activity-log alert scope add -n clialert000002 -g clitest.rg000001 -s /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg00000
monitor activity-log alert scope add -n clialert000002 -g clitest.rg000001 -s /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg0000
monitor activity-log alert scope add -n clialert000002 -g clitest.rg000001 -s /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg0000 --reset
monitor activity-log alert scope add -n clialert000002 -g clitest.rg000001 -s /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg00000 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg0000 --reset
monitor activity-log alert scope remove -n clialert000002 -g clitest.rg000001 -s /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001
group show -n clitest.rg000001 -ojson
monitor activity-log alert create -n clialert000002 -g clitest.rg000001 -ojson
monitor activity-log alert show -n clialert000002 -g clitest.rg000001 -ojson
monitor activity-log alert create -n {name} -g {rg}
monitor activity-log alert create -n clialert000002 -g clitest.rg000001 --disable -ojson
group show -n clitest.rg000001 -ojson
monitor action-group create -n cliact000002 -g clitest.rg000001 -ojson
monitor activity-log alert create -n clialert000003 -g clitest.rg000001 -s /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001 --action cliact000002 --condition category=Security and level=Error --disable -ojson
vmss create -g {rg} -n {vmss} --image UbuntuLTS --admin-username testadmin --admin-password TestTest12#$
vmss show -g {rg} -n {vmss}
monitor autoscale create --resource {vmss_id} --count 3
monitor autoscale list -g {rg}
monitor autoscale show -g {rg} -n {vmss}
monitor autoscale update -g {rg} -n {vmss} --count 2
monitor autoscale update -g {rg} -n {vmss} --min-count 1 --count 2 --max-count 4
monitor autoscale update -g {rg} -n {vmss} --max-count 5
monitor autoscale delete -g {rg} -n {vmss}
vmss create -g {rg} -n {vmss} --image UbuntuLTS --admin-username testadmin --admin-password TestTest12#$
vmss show -g {rg} -n {vmss}
monitor autoscale create --resource {vmss_id} --count 3
monitor autoscale profile create -g {rg} --autoscale-name {vmss} -n {sched} --start 2018-12-24 --end 2018-12-26 --count 5 --timezone "Pacific Standard Time"
monitor autoscale profile list -g {rg} --autoscale-name {vmss}
monitor autoscale profile delete -g {rg} --autoscale-name {vmss} -n {sched}
monitor autoscale profile list -g {rg} --autoscale-name {vmss}
vmss create -g {rg} -n {vmss} --image UbuntuLTS --admin-username testname --admin-password TestTest12#$
vmss show -g {rg} -n {vmss}
monitor autoscale create --resource {vmss_id} --count 3
monitor autoscale profile create -g {rg} --autoscale-name {vmss} -n weekend --recurrence week sat sun --count 1 --timezone "Pacific Standard Time"
monitor autoscale profile create -g {rg} --autoscale-name {vmss} -n weekday --recurrence week mo tu we th fr --count 4 --timezone "Pacific Standard Time"
monitor autoscale profile list -g {rg} --autoscale-name {vmss}
monitor autoscale update -g {rg} -n {vmss} --count 4
monitor autoscale profile list -g {rg} --autoscale-name {vmss}
monitor autoscale profile delete -g {rg} --autoscale-name {vmss} -n weekend
monitor autoscale profile list -g {rg} --autoscale-name {vmss}
monitor autoscale profile delete -g {rg} --autoscale-name {vmss} -n weekday
monitor autoscale profile list -g {rg} --autoscale-name {vmss}
vmss create -g {rg} -n {vmss} --image UbuntuLTS --admin-username testadmin --admin-password TestTest12#$ --instance-count 2
vmss show -g {rg} -n {vmss}
monitor autoscale create --resource {vmss_id} --min-count 1 --count 3 --max-count 5
monitor autoscale rule list -g {rg} --autoscale-name {vmss}
monitor autoscale rule create -g {rg} --autoscale-name {vmss} --condition "'Mynamespace.abcd' Percentage CPU > 75 avg 5m where VMName == cliname1 or cliname2" --scale to 5
monitor autoscale rule create -g {rg} --autoscale-name {vmss} --condition "'Mynamespace.abcd' Percentage CPU > 75 avg 5m where VMName == cliname1 or cliname2" --scale to 5
monitor autoscale rule create -g {rg} --autoscale-name {vmss} --condition "'Mynamespace.abcd' Percentage CPU > 75 avg 5m where VMName == cliname1 or cliname2" --scale to 5
monitor autoscale rule list -g {rg} --autoscale-name {vmss}
vmss create -g {rg} -n {vmss} --image UbuntuLTS --admin-username testadmin --admin-password TestTest12#$
vmss show -g {rg} -n {vmss}
monitor autoscale create --resource {vmss_id} --min-count 1 --count 3 --max-count 5
monitor autoscale rule list -g {rg} --autoscale-name {vmss}
monitor autoscale rule create -g {rg} --autoscale-name {vmss} --condition "Percentage CPU > 75 avg 5m" --scale to 5
monitor autoscale rule create -g {rg} --autoscale-name {vmss} --timegrain "avg 5m" --condition "Percentage CPU < 30 avg 10m" --scale in 50% --cooldown 10
monitor autoscale rule create -g {rg} --autoscale-name {vmss} --timegrain "min 1m" --condition "Percentage CPU < 10 avg 5m" --scale to 1
monitor autoscale rule list -g {rg} --autoscale-name {vmss}
monitor autoscale rule list -g {rg} --autoscale-name {vmss} --profile-name falseprofile
monitor autoscale rule list -g {rg} --autoscale-name {vmss}
monitor autoscale profile create -g {rg} --autoscale-name {vmss} -n test2 --start 2018-03-01 --end 2018-04-01 --min-count 1 --count 3 --max-count 5 --timezone "Pacific Standard Time"
monitor autoscale profile create -g {rg} --autoscale-name {vmss} -n test3 --start 2018-05-01 --end 2018-06-01 --min-count 1 --count 2 --max-count 5 --timezone "Pacific Standard Time"
monitor autoscale profile create -g {rg} --autoscale-name {vmss} -n test1 --start 2018-01-01 --end 2018-02-01 --min-count 1 --count 2 --max-count 5 --timezone "Pacific Standard Time" --copy-rules default
monitor autoscale rule list -g {rg} --autoscale-name {vmss} --profile-name test1
monitor autoscale rule list -g {rg} --autoscale-name {vmss} --profile-name test2
monitor autoscale rule list -g {rg} --autoscale-name {vmss} --profile-name test3
monitor autoscale rule copy -g {rg} --autoscale-name {vmss} --source-schedule test1 --dest-schedule test2 --index "*"
monitor autoscale rule copy -g {rg} --autoscale-name {vmss} --source-schedule test2 --dest-schedule test3 --index 0
monitor autoscale rule list -g {rg} --autoscale-name {vmss} --profile-name test2
monitor autoscale rule list -g {rg} --autoscale-name {vmss} --profile-name test3
monitor autoscale rule delete -g {rg} --autoscale-name {vmss} --index 2
monitor autoscale rule list -g {rg} --autoscale-name {vmss}
monitor autoscale rule delete -g {rg} --autoscale-name {vmss} --index "*"
monitor autoscale rule list -g {rg} --autoscale-name {vmss}
extension add -n spring-cloud
spring-cloud create -n {sc} -g {rg}
spring-cloud config-server git set -n {sc} -g {rg} --uri {gitrepo}
spring-cloud app create -n {scapp} -s {sc} -g {rg}
monitor autoscale create -g {rg} --resource {deployment_id} --min-count 1 --count 1 --max-count 3
monitor autoscale rule list -g {rg} --autoscale-name {sc}
monitor autoscale rule create -g {rg} --autoscale-name {sc} --condition "tomcat.global.request.total.count > 0 avg 3m where AppName == {scapp} and Deployment == default" --scale out 1
monitor autoscale rule create -g {rg} --autoscale-name {sc} --condition "tomcat.global.request.total.count > 0 avg 3m where AppName == {scapp} and Deployment == default" --scale out 1
monitor autoscale rule create -g {rg} --autoscale-name {sc} --condition "tomcat.global.request.total.count > 0 avg 3m where AppName == {scapp} and Deployment == default" --scale out 1
monitor autoscale rule list -g {rg} --autoscale-name {sc}
extension remove -n spring-cloud
network nsg create -n {nsg} -g {rg}
monitor log-analytics workspace create -g {rg} -n {ws}
monitor diagnostic-settings categories list -g {rg} --resource-type Microsoft.Network/networkSecurityGroups --resource {nsg}
monitor diagnostic-settings create -n test01 --resource {nsg} --resource-type Microsoft.Network/networkSecurityGroups --resource-group {rg} --storage-account {sa} --logs '{log_config}' -o json
monitor diagnostic-settings list --resource {nsg} --resource-type Microsoft.Network/networkSecurityGroups --resource-group {rg} -o json
monitor diagnostic-settings show -n test01 --resource {nsg} --resource-type Microsoft.Network/networkSecurityGroups --resource-group {rg} -o json
monitor diagnostic-settings delete -n test01 --resource {nsg} --resource-type Microsoft.Network/networkSecurityGroups --resource-group {rg} -o json
monitor diagnostic-settings list --resource {nsg} --resource-type Microsoft.Network/networkSecurityGroups --resource-group {rg} -o json
monitor diagnostic-settings create -n test02 --resource {nsg} --resource-type Microsoft.Network/networkSecurityGroups --resource-group {rg} --workspace {ws} --export-to-resource-specific --logs '{log_config}' -o json
vm create -g {rg} -n {vm1} --image UbuntuLTS --admin-password TestPassword11!! --admin-username testadmin --authentication-type password
vm create -g {rg} -n {vm2} --image UbuntuLTS --admin-password TestPassword11!! --admin-username testadmin --authentication-type password
vm create -g {rg} -n {vm3} --image UbuntuLTS --admin-password TestPassword11!! --admin-username testadmin --authentication-type password
monitor action-group create -g {rg} -n {ag1}
monitor metrics alert create -g {rg} -n {alert} --scopes {vm1_id} {vm2_id} --action {ag1} --region eastus --condition "avg Percentage CPU > 90" --description "High CPU"
monitor clone --source-resource {vm1_id} --target-resource {vm3_id}
monitor action-group create -g {rg} -n {ag1}
monitor metrics alert create -g {rg} -n {alert} --scopes {sa_id} --region westus --action {ag1} --description "Test" --condition "total transactions > 5 where ResponseType includes Success and ApiName includes GetBlob" --condition "avg SuccessE2ELatency > 250 where ApiName includes GetBlob"
monitor clone --source-resource {sa_id} --target-resource {sa_id_2}
monitor action-group create -g {rg} -n {ag1}
monitor metrics alert create -g {rg} -n {alert} --scopes {sa_id} --region westus --action {ag1} --description "Test" --condition "total transactions > 5 where ResponseType includes Success and ApiName includes GetBlob" --condition "avg SuccessE2ELatency > 250 where ApiName includes GetBlob"
monitor clone --source-resource {sa_id} --target-resource {sa_id_2} --always-clone
network public-ip create -g {rg} -n {ip1}
network public-ip create -g {rg} -n {ip2}
monitor action-group create -g {rg} -n {ag1}
monitor metrics alert create -g {rg} -n {alert} --scopes {ip1_id} --region westus --action {ag1} --description "Test" --condition "total TCPBytesForwardedDDoS > 5"
monitor metrics alert create -g {rg} -n {alert2} --scopes {ip1_id} --region westus --action {ag1} --description "Test2" --condition "max TCPBytesForwardedDDoS > 5"
monitor clone --source-resource {ip1_id} --target-resource {ip2_id}
monitor log-analytics cluster create -g {rg1} -n {new_cluster_name} --sku-capacity {sku_capacity}
monitor log-analytics cluster show -g {rg1} -n {new_cluster_name}
monitor log-analytics cluster update -g {rg1} -n {new_cluster_name} --sku-capacity {sku_capacity}
monitor log-analytics cluster show -g {rg1} -n {new_cluster_name}
monitor log-analytics cluster list -g {rg1}
monitor log-analytics cluster delete -g {rg1} -n {new_cluster_name} -y
monitor log-analytics cluster show -g {rg1} -n {new_cluster_name}
monitor log-analytics cluster update -g {rg} -n {cluster_name} --key-name {key_name} --key-vault-uri {key_vault_uri} --key-version {key_version}
monitor log-analytics cluster wait -g {rg} -n {cluster_name} --updated
monitor log-analytics cluster show -g {rg} -n {cluster_name}
monitor log-analytics workspace create -g {rg} -n {workspace_name} --quota 1 --level 100 --sku CapacityReservation
monitor log-analytics workspace data-export create -g {rg} --workspace-name {workspace_name} -n {data_export_name} --destination {sa_id_1} --enable -t {table_name}
monitor log-analytics workspace data-export create -g {rg} --workspace-name {workspace_name} -n {data_export_name_2} --destination {sa_id_1} --enable -t "SecurityEvent Heartbeat"
monitor log-analytics workspace data-export create -g {rg} --workspace-name {workspace_name} -n {data_export_name_2} --destination {sa_id_1} --enable -t {table_name}
monitor log-analytics workspace data-export create -g {rg} --workspace-name {workspace_name} -n {data_export_name_2} --destination {sa_id_1} --enable -t ABC
monitor log-analytics workspace data-export create -g {rg} --workspace-name {workspace_name} -n {data_export_name_2} --destination {sa_id_1} --enable -t AppPerformanceCounters
monitor log-analytics workspace data-export show -g {rg} --workspace-name {workspace_name} -n {data_export_name}
monitor log-analytics workspace data-export list -g {rg} --workspace-name {workspace_name}
eventhubs namespace create --resource-group {rg} --name {namespacename}
eventhubs eventhub create --resource-group {rg} --namespace-name {namespacename} --name {eventhubname}
monitor log-analytics workspace data-export update -g {rg} --workspace-name {workspace_name} -n {data_export_name} --destination {namespace_id} --enable true -t Usage Alert
eventhubs eventhub list -g {rg} --namespace-name {namespacename}
monitor log-analytics workspace data-export delete -g {rg} --workspace-name {workspace_name} -n {data_export_name} -y
monitor log-analytics workspace data-export create -g {rg} --workspace-name {workspace_name} -n {data_export_name} --destination {eventhub_id} --enable false -t {table_name}
monitor log-analytics workspace data-export delete -g {rg} --workspace-name {workspace_name} -n {data_export_name} -y
monitor log-analytics workspace data-export show -g {rg} --workspace-name {workspace_name} -n {data_export_name}
monitor log-analytics workspace create -g {rg} -n {name} --tags clitest=myron
monitor log-analytics workspace update -g {rg} -n {name} --retention-time 100
monitor log-analytics workspace show -g {rg} -n {name}
monitor log-analytics workspace list-usages -g {rg} -n {name}
monitor log-analytics workspace list -g {rg}
monitor log-analytics workspace get-shared-keys -g {rg} -n {name}
monitor log-analytics workspace get-schema -g {rg} -n {name}
monitor log-analytics workspace pack enable -g {rg} --workspace-name {name} -n AzureSecurityOfThings
monitor log-analytics workspace pack list -g {rg} --workspace-name {name}
monitor log-analytics workspace pack disable -g {rg} --workspace-name {name} -n AzureSecurityOfThings
monitor log-analytics workspace pack list -g {rg} --workspace-name {name}
monitor log-analytics workspace delete -g {rg} -n {name} -y
monitor log-analytics workspace linked-service create -g {rg} --workspace-name {workspace_name} -n {linked_service_name} --write-access-resource-id {cluster_resource_id_1}
monitor log-analytics workspace linked-service update -g {rg} --workspace-name {workspace_name} -n {linked_service_name} --write-access-resource-id {cluster_resource_id_2}
monitor log-analytics workspace linked-service show -g {rg} --workspace-name {workspace_name} -n {linked_service_name}
monitor log-analytics workspace linked-service list -g {rg} --workspace-name {workspace_name}
monitor log-analytics workspace linked-service delete -g {rg} --workspace-name {workspace_name} -n {linked_service_name} -y
monitor log-analytics workspace linked-service list -g {rg} --workspace-name {workspace_name}
monitor log-analytics workspace create -g {rg} -n {name} --tags clitest=myron
monitor log-analytics workspace linked-storage create --type CustomLogs -g {rg} -n {name} --storage-accounts {sa_1}
monitor log-analytics workspace linked-storage add --type CustomLogs -g {rg} -n {name} --storage-accounts {sa_2} {sa_id_3}
monitor log-analytics workspace linked-storage remove --type CustomLogs -g {rg} -n {name} --storage-accounts {sa_1}
monitor log-analytics workspace linked-storage show --type CustomLogs -g {rg} -n {name}
monitor log-analytics workspace create -g {rg} -n {name_2} --tags clitest=myron
monitor log-analytics workspace linked-storage create --type AzureWatson -g {rg} -n {name} --storage-accounts {sa_1}
monitor log-analytics workspace linked-storage list -g {rg} -n {name}
monitor log-analytics workspace linked-storage delete --type AzureWatson -g {rg} -n {name} -y
monitor log-analytics workspace linked-storage list -g {rg} -n {name}
monitor log-analytics workspace create -g {rg} -n {name} --tags clitest=myron --query-access Disabled --ingestion-access Disabled
monitor log-analytics workspace update -g {rg} -n {name} --query-access Disabled --ingestion-access Enabled
monitor log-analytics workspace show -g {rg} -n {name}
monitor log-analytics workspace create -g {rg} -n {name} --quota 1 --level 100 --sku CapacityReservation
monitor log-analytics workspace update -g {rg} -n {name} --quota 2 --level 200
monitor log-analytics workspace table list -g {rg} --workspace-name {name}
monitor log-analytics workspace table update -g {rg} --workspace-name {name} -n {table_name} --retention-time 30 --debug
monitor log-analytics workspace list-deleted-workspaces -g {rg}
monitor log-analytics workspace delete -g {rg} -n {name} -y
monitor log-analytics workspace list-deleted-workspaces -g {rg}
monitor log-analytics workspace recover -g {rg} -n {name}
monitor log-analytics workspace show -g {rg} -n {name}
monitor log-analytics workspace list-deleted-workspaces -g {rg}
monitor log-analytics workspace delete -g {rg} -n {name} --force -y
monitor log-analytics workspace show -g {rg} -n {name}
monitor log-analytics workspace create -g {rg} -n {workspace_name} --tags clitest=myron
monitor log-analytics workspace saved-search create -g {rg} --workspace-name {workspace_name} -n {saved_search_name} --category {category} --display-name {display_name} -q "{query}" --fa {function_alias} --fp "{function_param}" --tags a=b c=d
monitor log-analytics workspace saved-search show -g {rg} --workspace-name {workspace_name} -n {saved_search_name}
monitor log-analytics workspace saved-search list -g {rg} --workspace-name {workspace_name}
monitor log-analytics workspace saved-search update -g {rg} --workspace-name {workspace_name} -n {saved_search_name} --category {category_2} --display-name {display_name_2} -q "{query_2}" --fa {function_alias_2} --fp "{function_param_2}" --tags a=c f=e
monitor log-analytics workspace saved-search delete -g {rg} --workspace-name {workspace_name} -n {saved_search_name} -y
monitor log-analytics workspace saved-search show -g {rg} --workspace-name {workspace_name} -n {saved_search_name}
monitor log-profiles create --categories 'Write' --enabled false --days 1095 --location southcentralus --locations westus southcentralus --name {name} --storage-account-id {storage}
monitor log-profiles delete -n {name}
monitor action-group create -g {rg} -n {ag1}
monitor metrics alert create -g {rg} -n {alert} --scopes {vm_id} --region westus --action {ag1} --condition "avg Percentage CPU > dynamic low 2 of 4 since 2020-11-01T16:00:00.000Z" --description "High CPU"
monitor action-group create -g {rg} -n {ag1}
monitor action-group create -g {rg} -n {ag2}
monitor metrics alert create -g {rg} -n {alert} --scopes {vm_id} {vm_id_2} --action {ag1} --region westus --condition "avg Percentage CPU > dynamic low 2 of 4 since 2020-11-01T16:00:00.000Z" --description "High CPU"
monitor metrics alert update -g {rg} -n {alert} --severity 3 --description "High Or Low CPU" --add-action ag2 test=best --remove-action ag1 --remove-conditions cond0 --evaluation-frequency 5m --window-size 15m --tags foo=boo --auto-mitigate --add-condition "avg Percentage CPU >< dynamic medium 1 of 6 since 2020-10-01T10:23:00.000Z"
monitor metrics alert list -g {rg}
monitor metrics alert show -g {rg} -n {alert}
monitor metrics alert delete -g {rg} -n {alert}
monitor metrics alert list -g {rg}
monitor action-group create -g {rg} -n {ag1}
monitor metrics alert dimension create -n ResponseType --op include -v Success
monitor metrics alert dimension create -n ApiName -v GetBlob
monitor metrics alert condition create -t static --aggregation total --metric transactions --dimension ""_where_ ResponseType includes Success"" ""_where_ ApiName includes GetBlob"" --op GreaterThan --threshold 5
monitor metrics alert condition create -t dynamic --aggregation Average --metric "Percentage Cpu" --op GreaterOrLessThan --num-periods 6 --num-violations 1 --since 2020-11-02T12:11:11Z --sensitivity medium
monitor metrics alert create -g {rg} -n {alert} --scopes {vm_id} {vm_id_2} --action {ag1} --region westus --description "High CPU" --condition "avg 'Percentage Cpu' >< dynamic medium 1 of 6 since 2020-11-02T12:11:11+00:00"
monitor action-group create -g {rg} -n {ag1}
monitor metrics alert create -g {rg} -n {alert2} --scopes {sub_id} --target-resource-type {resource_type} --target-resource-region {resource_region} --action {ag1} --condition "avg Percentage CPU > 90" --description "High CPU"
monitor metrics alert create -g {rg} -n {alert} --scopes {rg_id_1} {rg_id_2} --target-resource-type {resource_type} --target-resource-region {resource_region} --action {ag1} --condition "avg Percentage CPU > 90" --description "High CPU"
sql db create -g cli_test_metric_alert_v1_2000001 --server clitestservermatricalertA000002 --name cliautomationdb01
monitor action-group create -g {rg} -n {ag1}
monitor metrics alert create -g {rg} -n {alert} --scopes {sql_db_1_id} --action {ag1} --condition "avg cpu_percent > 90" --description "High CPU"
monitor action-group create -g {rg} -n {ag1}
monitor metrics alert create -g {rg} -n {alert} --scopes {vm_id} {vm_id_2} --region westus --action {ag1} --condition "avg Percentage CPU > 90" --description "High CPU"
monitor action-group create -g {rg} -n {ag1}
monitor metrics alert create -g {rg} -n {alert} --scopes {vm_id} --region westus --action {ag1} --condition "avg Percentage CPU > 90" --description "High CPU"
monitor metrics alert create -g {rg} -n {alert} --scopes {sa_id} --region westus --description "Test" --condition "avg MyNs.UnemittedMetric >= 10 with skipMetricValidation"
network application-gateway create -g {rg} -n ag1 --public-ip-address ip1
network application-gateway show -g {rg} -n ag1
monitor metrics alert create -g {rg} -n {alert} --scopes {ag_id} --region westus --description "Test" --condition "avg UnhealthyHostCount>= 1 where BackendSettingsPool includes address-pool-dcc-blue~backendHttpSettings"
monitor action-group create -g {rg} -n {ag1}
monitor action-group create -g {rg} -n {ag2}
monitor metrics alert create -g {rg} -n {alert} --scopes {sa_id} --action {ag1} --region westus --description "Test" --condition "total transactions > 5 where ResponseType includes Success and ApiName includes GetBlob" --condition "avg SuccessE2ELatency > 250 where ApiName includes GetBlob"
monitor metrics alert update -g {rg} -n {alert} --severity 3 --description "alt desc" --add-action ag2 test=best --remove-action ag1 --remove-conditions cond0 --evaluation-frequency 5m --window-size 15m --tags foo=boo --auto-mitigate
monitor metrics alert update -g {rg} -n {alert} --enabled false
monitor metrics alert update -g {rg} -n {alert} --add-action ag2 test=best2
monitor metrics alert list -g {rg}
monitor metrics alert show -g {rg} -n {alert}
monitor metrics alert delete -g {rg} -n {alert}
monitor metrics alert list -g {rg}
monitor metrics alert create -g {rg} -n {alert} --scopes {sa_id} --region westus --action {ag1} --description "Test2" --condition "avg SuccessE2ELatency > 250 where ApiName includes GetBlob:"
appservice plan create -g {rg} -n {plan}
webapp create -g {rg} -n {app} -p plan1
monitor metrics alert create -g {rg} -n {alert}2 --scopes {app_id} --region "{app_location}" --action {ag1} --description "Test *" --condition "total Http4xx > 10 where Instance includes *"
storage account show -n {sa}
monitor metrics alert create -n {alert_name} -g {rg} --scopes {storage_account_id} --region {storage_location} --condition "count account.MS-ERRORCODE-SU001 > 4" --description "Cloud_lumico"
monitor metrics alert create -n {alert_name} -g {rg} --scopes {storage_account_id} --region {storage_location} --condition "count account.MS-ERRORCODE|,-SU001 > 4" --description "Cloud_lumico"
storage account show -n {sa} -g {rg}
monitor metrics list-namespaces --resource {sa_id}
monitor metrics list-definitions --resource {sa_id} --namespace {namespace}
monitor metrics list --resource {sa_id} --namespace {namespace} --metrics Ingress Egress --start-time 2018-01-01T00:00:00Z --end-time 2999-01-01T00:00:00Z
monitor metrics list --resource {sa_id} --metrics Ingress Egress --start-time 2018-01-01 00:00:00 +00:00 --offset 5000d
monitor metrics list --resource {sa_id} --metrics Ingress Egress --end-time 2025-01-01 00:00:00 +00:00 --offset 5000d
extension add -n application-insights
storage account show -n {sa} -g {rg} --query id -otsv
monitor diagnostic-settings subscription list
monitor diagnostic-settings subscription delete --name clitestfbjom3xrwnhzo -y
monitor diagnostic-settings subscription create -l southcentralus --name {name} --storage-account {storage} --logs '{log_config}'
monitor diagnostic-settings subscription show --name {name}
monitor diagnostic-settings subscription list
monitor log-analytics workspace create -n {ws} -g {rg} --query id -otsv
monitor diagnostic-settings subscription update --name {name} --workspace {ws_id}
monitor diagnostic-settings subscription delete --name {name} -y
network public-ip create -g {rg} -n {ip_addr} --location {location} --zone {zone} --sku Standard 
network public-ip prefix create --length 29 --location {location} --name {ip_prefix} --resource-group {rg} --zone {zone}
network nat gateway create --resource-group {rg} --public-ip-prefixes {ip_prefix} --name {name} --location {location} --public-ip-addresses {ip_addr} --idle-timeout {idle_timeout} --zone {zone}
network nat gateway update -g {rg} --name {name} --idle-timeout {idle_timeout_updated}
network nat gateway list -g {rg}
network nat gateway show --resource-group {rg} --name {name}
network nat gateway delete --resource-group {rg} --name {name}
network nat gateway list -g {rg}
network nat gateway create --resource-group {rg} --name {name} --location {location} --idle-timeout {idle_timeout} --zone {zone}
network vnet create -n cli-vnet-backup000006 -g {rg} -l southcentralus --address-prefix 10.5.0.0/16
network vnet subnet create -n default --vnet-name cli-vnet-backup000006 --address-prefixes '10.5.0.0/24' --delegations 'Microsoft.Netapp/volumes' -g {rg}
netappfiles account create -g {rg} -a 'cli-acc-000002' -l southcentralusstage
netappfiles pool create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -l southcentralusstage --service-level 'Premium' --size 4
netappfiles volume create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -l southcentralusstage --vnet cli-vnet-backup000006 --subnet default --file-path cli-vol-000004 --usage-threshold 100
netappfiles vault list -g {rg} -a cli-acc-000002
netappfiles volume update -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 --vault-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_netappfiles_test_account_backup_000001/providers/Microsoft.NetApp/netAppAccounts/cli-acc-000002/vaults/cbsvault --backup-enabled True 
netappfiles volume backup create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -l southcentralusstage --backup-name cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles account backup list -g {rg} -a cli-acc-000002
netappfiles volume delete -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004
netappfiles account backup delete -g {rg} -a cli-acc-000002 --backup-name cli-backup-000005 -y
netappfiles account backup list -g {rg} -a cli-acc-000002
network vnet create -n cli-vnet-backup000006 -g {rg} -l southcentralus --address-prefix 10.5.0.0/16
network vnet subnet create -n default --vnet-name cli-vnet-backup000006 --address-prefixes '10.5.0.0/24' --delegations 'Microsoft.Netapp/volumes' -g {rg}
netappfiles account create -g {rg} -a 'cli-acc-000002' -l southcentralusstage
netappfiles pool create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -l southcentralusstage --service-level 'Premium' --size 4
netappfiles volume create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -l southcentralusstage --vnet cli-vnet-backup000006 --subnet default --file-path cli-vol-000004 --usage-threshold 100
netappfiles vault list -g {rg} -a cli-acc-000002
netappfiles volume update -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 --vault-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_netappfiles_test_account_backup_000001/providers/Microsoft.NetApp/netAppAccounts/cli-acc-000002/vaults/cbsvault --backup-enabled True 
netappfiles volume backup create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -l southcentralusstage --backup-name cli-backup-000005
netappfiles account backup show -g {rg} -a cli-acc-000002 --backup-name cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles vault list -g {rg} -a cli-acc-000002
netappfiles volume update -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 --vault-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_netappfiles_test_account_backup_000001/providers/Microsoft.NetApp/netAppAccounts/cli-acc-000002/vaults/cbsvault --backup-enabled False 
network vnet create -n cli-vnet-backup000006 -g {rg} -l southcentralus --address-prefix 10.5.0.0/16
network vnet subnet create -n default --vnet-name cli-vnet-backup000006 --address-prefixes '10.5.0.0/24' --delegations 'Microsoft.Netapp/volumes' -g {rg}
netappfiles account create -g {rg} -a 'cli-acc-000002' -l southcentralusstage
netappfiles pool create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -l southcentralusstage --service-level 'Premium' --size 4
netappfiles volume create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -l southcentralusstage --vnet cli-vnet-backup000006 --subnet default --file-path cli-vol-000004 --usage-threshold 100
netappfiles vault list -g {rg} -a cli-acc-000002
netappfiles volume update -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 --vault-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_netappfiles_test_account_backup_000001/providers/Microsoft.NetApp/netAppAccounts/cli-acc-000002/vaults/cbsvault --backup-enabled True 
netappfiles volume backup create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -l southcentralusstage --backup-name cli-backup-000005
netappfiles account backup list -g {rg} -a cli-acc-000002
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles vault list -g {rg} -a cli-acc-000002
netappfiles volume update -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 --vault-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_netappfiles_test_account_backup_000001/providers/Microsoft.NetApp/netAppAccounts/cli-acc-000002/vaults/cbsvault --backup-enabled False 
netappfiles account create -g {rg} -a {acc_name} -l {loc} --encryption {encryption}
netappfiles account create -g {rg} -a {acc2_name} -l {loc}
netappfiles account update -g {rg} -a {acc2_name} --encryption {encryption}
netappfiles account create -g {rg} -a {acc_name} -l {loc} --tags Tag1=Value1
netappfiles account ad add -g {rg} -n {acc_name} --username aduser --password aduser --smb-server-name SMBSERVER --dns '1.2.3.4' --domain westcentralus --ad-name {ad_name} --kdc-ip {kdc_ip} --ldap-signing {ldap} --allow-local-ldap-users {ldap_users}
netappfiles account ad list -g {rg} -n {acc_name}
netappfiles account ad remove -g {rg} -n {acc_name} --active-directory a64a2544-864d-b984-f982-6488915418f8
netappfiles account show -g {rg} -n {acc_name}
netappfiles account create --resource-group {rg} --account-name '{acc_name}' --location {loc} --tags {tags}
netappfiles account list --resource-group {rg}
netappfiles account delete --resource-group {rg} --account-name '{acc_name}'
netappfiles account list --resource-group {rg}
netappfiles account create -g {rg} -a {acc_name} -l {loc} --tags {tags}
netappfiles account list --resource-group {rg}
netappfiles account delete --resource-group {rg} -a {acc_name}
netappfiles account list --resource-group {rg}
netappfiles account create -g {rg} -a {acc_name} -l {loc}
netappfiles account show --resource-group {rg} -a {acc_name}
netappfiles account show --ids /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_netappfiles_test_account_000001/providers/Microsoft.NetApp/netAppAccounts/cli-acc-000002
netappfiles account create -g {rg} -a {acc1_name} -l {loc} --tags Tag1=Value1
netappfiles account create -g {rg} -a {acc2_name} -l {loc} --tags Tag1=Value1
netappfiles account list -g {rg}
netappfiles account delete -g {rg} -a {acc1_name}
netappfiles account delete -g {rg} -a {acc2_name}
netappfiles account list -g {rg}
netappfiles account create -g {rg} -a '{acc_name}' -l {loc}
netappfiles account update -g {rg} -a {acc_name} --tags {tags}
network vnet create -n cli-vnet-backup000006 -g {rg} -l southcentralus --address-prefix 10.5.0.0/16
network vnet subnet create -n default --vnet-name cli-vnet-backup000006 --address-prefixes '10.5.0.0/24' --delegations 'Microsoft.Netapp/volumes' -g {rg}
netappfiles account create -g {rg} -a 'cli-acc-000002' -l southcentralusstage
netappfiles pool create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -l southcentralusstage --service-level 'Premium' --size 4
netappfiles volume create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -l southcentralusstage --vnet cli-vnet-backup000006 --subnet default --file-path cli-vol-000004 --usage-threshold 100
netappfiles vault list -g {rg} -a cli-acc-000002
netappfiles volume update -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 --vault-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_netappfiles_test_backup_000001/providers/Microsoft.NetApp/netAppAccounts/cli-acc-000002/vaults/cbsvault --backup-enabled True 
netappfiles volume backup create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -l southcentralusstage --backup-name cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup list -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004
netappfiles volume backup create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -l southcentralusstage --backup-name cli-backup-000007
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000007
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000007
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000007
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000007
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000007
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000007
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000007
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000007
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000007
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000007
netappfiles volume backup list -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004
netappfiles volume backup delete -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 --backup-name cli-backup-000005
netappfiles volume backup list -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004
netappfiles vault list -g {rg} -a cli-acc-000002
netappfiles volume update -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 --vault-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_netappfiles_test_backup_000001/providers/Microsoft.NetApp/netAppAccounts/cli-acc-000002/vaults/cbsvault --backup-enabled False 
network vnet create -n cli-vnet-backup000006 -g {rg} -l southcentralus --address-prefix 10.5.0.0/16
network vnet subnet create -n default --vnet-name cli-vnet-backup000006 --address-prefixes '10.5.0.0/24' --delegations 'Microsoft.Netapp/volumes' -g {rg}
netappfiles account create -g {rg} -a 'cli-acc-000002' -l southcentralusstage
netappfiles pool create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -l southcentralusstage --service-level 'Premium' --size 4
netappfiles volume create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -l southcentralusstage --vnet cli-vnet-backup000006 --subnet default --file-path cli-vol-000004 --usage-threshold 100
netappfiles vault list -g {rg} -a cli-acc-000002
netappfiles volume update -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 --vault-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_netappfiles_test_backup_000001/providers/Microsoft.NetApp/netAppAccounts/cli-acc-000002/vaults/cbsvault --backup-enabled True 
netappfiles volume backup create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -l southcentralusstage --backup-name cli-backup-000005
netappfiles vault list -g {rg} -a cli-acc-000002
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume update -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 --vault-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_netappfiles_test_backup_000001/providers/Microsoft.NetApp/netAppAccounts/cli-acc-000002/vaults/cbsvault --backup-enabled False
network vnet create -n cli-vnet-backup000006 -g {rg} -l southcentralus --address-prefix 10.5.0.0/16
network vnet subnet create -n default --vnet-name cli-vnet-backup000006 --address-prefixes '10.5.0.0/24' --delegations 'Microsoft.Netapp/volumes' -g {rg}
netappfiles account create -g {rg} -a 'cli-acc-000002' -l southcentralusstage
netappfiles pool create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -l southcentralusstage --service-level 'Premium' --size 4
netappfiles volume create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -l southcentralusstage --vnet cli-vnet-backup000006 --subnet default --file-path cli-vol-000004 --usage-threshold 100
netappfiles vault list -g {rg} -a cli-acc-000002
netappfiles volume update -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 --vault-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_netappfiles_test_backup_000001/providers/Microsoft.NetApp/netAppAccounts/cli-acc-000002/vaults/cbsvault --backup-enabled True 
netappfiles volume backup create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -l southcentralusstage --backup-name cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show --ids /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_netappfiles_test_backup_000001/providers/Microsoft.NetApp/netAppAccounts/cli-acc-000002/capacityPools/cli-pool-000003/volumes/cli-vol-000004/backups/cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles vault list -g {rg} -a cli-acc-000002
netappfiles volume update -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 --vault-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_netappfiles_test_backup_000001/providers/Microsoft.NetApp/netAppAccounts/cli-acc-000002/vaults/cbsvault --backup-enabled False 
network vnet create -n cli-vnet-backup000006 -g {rg} -l southcentralus --address-prefix 10.5.0.0/16
network vnet subnet create -n default --vnet-name cli-vnet-backup000006 --address-prefixes '10.5.0.0/24' --delegations 'Microsoft.Netapp/volumes' -g {rg}
netappfiles account create -g {rg} -a 'cli-acc-000002' -l southcentralusstage
netappfiles pool create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -l southcentralusstage --service-level 'Premium' --size 4
netappfiles volume create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -l southcentralusstage --vnet cli-vnet-backup000006 --subnet default --file-path cli-vol-000004 --usage-threshold 100
netappfiles vault list -g {rg} -a cli-acc-000002
netappfiles volume update -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 --vault-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_netappfiles_test_backup_000001/providers/Microsoft.NetApp/netAppAccounts/cli-acc-000002/vaults/cbsvault --backup-enabled True 
netappfiles volume backup create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -l southcentralusstage --backup-name cli-backup-000005
netappfiles volume backup status -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup status -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004
network vnet create -n cli-vnet-backup000006 -g {rg} -l southcentralus --address-prefix 10.5.0.0/16
network vnet subnet create -n default --vnet-name cli-vnet-backup000006 --address-prefixes '10.5.0.0/24' --delegations 'Microsoft.Netapp/volumes' -g {rg}
netappfiles account create -g {rg} -a 'cli-acc-000002' -l southcentralusstage
netappfiles pool create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -l southcentralusstage --service-level 'Premium' --size 4
netappfiles volume create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -l southcentralusstage --vnet cli-vnet-backup000006 --subnet default --file-path cli-vol-000004 --usage-threshold 100
netappfiles vault list -g {rg} -a cli-acc-000002
netappfiles volume update -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 --vault-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_netappfiles_test_backup_000001/providers/Microsoft.NetApp/netAppAccounts/cli-acc-000002/vaults/cbsvault --backup-enabled True 
netappfiles volume backup create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -l southcentralusstage --backup-name cli-backup-000005
netappfiles volume backup list -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -l southcentralusstage --backup-name cli-backup-000007
netappfiles volume backup list -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000007
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000007
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000007
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000007
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000007
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000007
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000007
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000007
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000007
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000007
netappfiles vault list -g {rg} -a cli-acc-000002
netappfiles volume update -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 --vault-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_netappfiles_test_backup_000001/providers/Microsoft.NetApp/netAppAccounts/cli-acc-000002/vaults/cbsvault --backup-enabled False 
network vnet create -n cli-vnet-backup000006 -g {rg} -l southcentralus --address-prefix 10.5.0.0/16
network vnet subnet create -n default --vnet-name cli-vnet-backup000006 --address-prefixes '10.5.0.0/24' --delegations 'Microsoft.Netapp/volumes' -g {rg}
netappfiles account create -g {rg} -a 'cli-acc-000002' -l southcentralusstage
netappfiles pool create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -l southcentralusstage --service-level 'Premium' --size 4
netappfiles volume create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -l southcentralusstage --vnet cli-vnet-backup000006 --subnet default --file-path cli-vol-000004 --usage-threshold 100
netappfiles vault list -g {rg} -a cli-acc-000002
netappfiles volume update -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 --vault-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_netappfiles_test_backup_000001/providers/Microsoft.NetApp/netAppAccounts/cli-acc-000002/vaults/cbsvault --backup-enabled True 
netappfiles volume backup create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -l southcentralusstage --backup-name cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 --backup-name cli-backup-000005
netappfiles volume create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000007 -l southcentralusstage --vnet cli-vnet-backup000006 --subnet default --file-path cli-vol-000007 --usage-threshold 100 --backup-id f315e11e-8a23-08f4-8bad-fe9045b64165
netappfiles volume show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles vault list -g {rg} -a cli-acc-000002
netappfiles volume update -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 --vault-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_netappfiles_test_backup_000001/providers/Microsoft.NetApp/netAppAccounts/cli-acc-000002/vaults/cbsvault --backup-enabled False 
network vnet create -n cli-vnet-backup000006 -g {rg} -l southcentralus --address-prefix 10.5.0.0/16
network vnet subnet create -n default --vnet-name cli-vnet-backup000006 --address-prefixes '10.5.0.0/24' --delegations 'Microsoft.Netapp/volumes' -g {rg}
netappfiles account create -g {rg} -a 'cli-acc-000002' -l southcentralusstage
netappfiles pool create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -l southcentralusstage --service-level 'Premium' --size 4
netappfiles volume create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -l southcentralusstage --vnet cli-vnet-backup000006 --subnet default --file-path cli-vol-000004 --usage-threshold 100
netappfiles vault list -g {rg} -a cli-acc-000002
netappfiles volume update -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 --vault-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_netappfiles_test_backup_000001/providers/Microsoft.NetApp/netAppAccounts/cli-acc-000002/vaults/cbsvault --backup-enabled True 
netappfiles volume backup create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -l southcentralusstage --backup-name cli-backup-000005
netappfiles volume backup update -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 --backup-name cli-backup-000005 --label label
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 --backup-name cli-backup-000005
netappfiles volume backup show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -b cli-backup-000005
netappfiles vault list -g {rg} -a cli-acc-000002
netappfiles volume update -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 --vault-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_netappfiles_test_backup_000001/providers/Microsoft.NetApp/netAppAccounts/cli-acc-000002/vaults/cbsvault --backup-enabled False 
netappfiles account create -g {rg} -a 'cli-acc-000002' -l eastus2euap
netappfiles account backup-policy create -g {rg} -a cli-acc-000002 --backup-policy-name cli-ba-pol-000003 --location eastus2euap --daily-backups 1 --weekly-backups 2 --monthly-backups 3 --enabled True --tags Tag1=Value1 Tag2=Value2
netappfiles account backup-policy list -g {rg} -a 'cli-acc-000002'
netappfiles account backup-policy delete -g {rg} -a cli-acc-000002 --backup-policy-name cli-ba-pol-000003
netappfiles account backup-policy create -g {rg} -a cli-acc-000002 -b cli-ba-pol-000003 -l eastus2euap -d 1 -w 2 -m 3 -e True --tags Tag1=Value1 Tag2=Value2
netappfiles account backup-policy delete -g {rg} -a cli-acc-000002 --backup-policy-name cli-ba-pol-000003
netappfiles account backup-policy list -g {rg} -a 'cli-acc-000002'
netappfiles account create -g {rg} -a 'cli-acc-000002' -l eastus2euap
netappfiles account backup-policy create -g {rg} -a cli-acc-000002 --backup-policy-name cli-ba-pol-000003 -l eastus2euap --daily-backups 1 --enabled true
netappfiles account backup-policy show -g {rg} -a cli-acc-000002 --backup-policy-name cli-ba-pol-000003
netappfiles account backup-policy show --ids /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_netappfiles_test_backup_policy_000001/providers/Microsoft.NetApp/netAppAccounts/cli-acc-000002/backupPolicies/cli-ba-pol-000003
netappfiles account create -g {rg} -a 'cli-acc-000002' -l eastus2euap
netappfiles account backup-policy create -g {rg} -a cli-acc-000002 --backup-policy-name cli000003 -l eastus2euap --daily-backups 1 --enabled true
netappfiles account backup-policy create -g {rg} -a cli-acc-000002 --backup-policy-name cli000004 -l eastus2euap --daily-backups 1 --enabled true
netappfiles account backup-policy create -g {rg} -a cli-acc-000002 --backup-policy-name cli000005 -l eastus2euap --daily-backups 1 --enabled true
netappfiles account backup-policy list -g {rg} -a 'cli-acc-000002'
netappfiles account backup-policy delete -g {rg} -a cli-acc-000002 --backup-policy-name cli000003
netappfiles account backup-policy delete -g {rg} -a cli-acc-000002 --backup-policy-name cli000004
netappfiles account backup-policy delete -g {rg} -a cli-acc-000002 --backup-policy-name cli000005
netappfiles account backup-policy list -g {rg} -a 'cli-acc-000002'
netappfiles account create -g {rg} -a 'cli-acc-000002' -l eastus2euap
netappfiles account backup-policy create -g {rg} -a cli-acc-000002 --backup-policy-name cli-ba-pol-000003 -l eastus2euap -d 1 -w 2 -m 3 -e True --tags Tag1=Value1
netappfiles account backup-policy update -g {rg} -a cli-acc-000002 --backup-policy-name cli-ba-pol-000003 -l eastus2euap -d 4 -w 5 -m 6 -e False --tags Tag1=Value2
netappfiles account backup-policy show -g {rg} -a cli-acc-000002 --backup-policy-name cli-ba-pol-000003
netappfiles account create --resource-group {rg} --account-name 'cli-acc-000002' -l southcentralusstage
netappfiles pool create --resource-group {rg} --account-name cli-acc-000002 --pool-name cli-pool-000003 -l southcentralusstage --service-level Premium --size 4 --tags Tag1=Value1 Tag2=Value2
netappfiles pool list --resource-group {rg} --account-name cli-acc-000002
netappfiles pool delete --resource-group {rg} --account-name 'cli-acc-000002' --pool-name 'cli-pool-000003'
netappfiles pool list --resource-group {rg} --account-name cli-acc-000002
netappfiles pool create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -l southcentralusstage --service-level 'Premium' --size 4 --tags Tag1=Value1 Tag2=Value2
netappfiles pool delete --resource-group {rg} -a cli-acc-000002 -p cli-pool-000003
netappfiles pool list --resource-group {rg} -a cli-acc-000002
netappfiles account create --resource-group {rg} --account-name 'cli-acc-000002' -l southcentralusstage
netappfiles pool create --resource-group {rg} --account-name cli-acc-000002 --pool-name cli-pool-000003 -l southcentralusstage --service-level 'Premium' --size a 
netappfiles account create --resource-group {rg} --account-name 'cli-acc-000002' -l southcentralusstage
netappfiles pool create --resource-group {rg} --account-name cli-acc-000002 --pool-name cli-pool-000003 -l southcentralusstage --service-level 'Premium' --size 3 
netappfiles account create -g {rg} -a 'cli000002' -l southcentralusstage
netappfiles pool create -g {rg} -a cli000002 -p cli000003 -l southcentralusstage --service-level Premium --size 4
netappfiles pool show --resource-group {rg} -a cli000002 -p cli000003
netappfiles pool show --ids /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_netappfiles_test_pool_000001/providers/Microsoft.NetApp/netAppAccounts/cli000002/capacityPools/cli000003
netappfiles account create -g {rg} -a 'cli000002' -l southcentralusstage
netappfiles pool create -g {rg} -a 'cli000002' -p 'cli000003' -l southcentralusstage --service-level Premium --size 4 --tags Tag1=Value1
netappfiles pool create -g {rg} -a 'cli000002' -p 'cli000004' -l southcentralusstage --service-level Premium --size 4 --tags Tag1=Value1
netappfiles pool list -g {rg} -a 'cli000002'
netappfiles pool delete -g {rg} -a cli000002 -p cli000003
netappfiles pool delete -g {rg} -a cli000002 -p cli000004
netappfiles pool list --resource-group {rg} -a 'cli000002'
netappfiles account create -g {rg} -a 'cli000002' -l southcentralusstage
netappfiles pool create -g {rg} -a cli000002 -p cli000003 -l southcentralusstage --service-level Premium --size 4 --encryption-type Double
netappfiles pool show --resource-group {rg} -a cli000002 -p cli000003
netappfiles account create -g {rg} -a {acc_name} -l {loc}
netappfiles pool create -g {rg} -a {acc_name} -p {pool_name} -l {loc} {pool_default}
netappfiles pool update -g {rg} -a {acc_name} -p {pool_name} --tags {tag} --qos-type {qos_type}
network vnet create -n cli-vnet-lefr-02 -g {rg} -l southcentralus --address-prefix 10.5.0.0/16
network vnet subnet create -n cli-subnet-lefr-02 --vnet-name cli-vnet-lefr-02 --address-prefixes '10.5.0.0/24' --delegations 'Microsoft.Netapp/volumes' -g {rg}
netappfiles account create -g {rg} -a 'cli-acc-000002' -l southcentralusstage
netappfiles pool create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -l southcentralusstage --service-level 'Premium' --size 4 
netappfiles volume create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -l southcentralusstage --service-level 'Premium' --usage-threshold 100 --file-path cli-vol-000004 --vnet cli-vnet-lefr-02 --subnet cli-subnet-lefr-02 
netappfiles snapshot create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -s cli-sn-000005 -l southcentralusstage 
netappfiles snapshot list -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004
netappfiles snapshot delete -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -s cli-sn-000005
netappfiles snapshot list -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004
network vnet create -n cli-vnet-lefr-02 -g {rg} -l southcentralus --address-prefix 10.5.0.0/16
network vnet subnet create -n cli-subnet-lefr-02 --vnet-name cli-vnet-lefr-02 --address-prefixes '10.5.0.0/24' --delegations 'Microsoft.Netapp/volumes' -g {rg}
netappfiles account create -g {rg} -a 'cli-acc-000002' -l southcentralusstage
netappfiles pool create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -l southcentralusstage --service-level 'Premium' --size 4 
netappfiles volume create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -l southcentralusstage --service-level 'Premium' --usage-threshold 100 --file-path cli-vol-000004 --vnet cli-vnet-lefr-02 --subnet cli-subnet-lefr-02 
netappfiles snapshot create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -s cli-sn-000005 -l southcentralusstage
netappfiles snapshot list -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004
netappfiles snapshot show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -s cli-sn-000005
netappfiles volume create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-sn-2000006 -l southcentralusstage --service-level 'Premium' --usage-threshold 100 --file-path cli-sn-2000006 --vnet cli-vnet-lefr-02 --subnet cli-subnet-lefr-02  --snapshot-id b8aeafdd-bbb0-52ae-4b8d-298543d58259
network vnet create -n cli-vnet-lefr-02 -g {rg} -l southcentralus --address-prefix 10.5.0.0/16
network vnet subnet create -n cli-subnet-lefr-02 --vnet-name cli-vnet-lefr-02 --address-prefixes '10.5.0.0/24' --delegations 'Microsoft.Netapp/volumes' -g {rg}
netappfiles account create -g {rg} -a 'cli-acc-000002' -l southcentralusstage
netappfiles pool create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -l southcentralusstage --service-level 'Premium' --size 4 
netappfiles volume create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -l southcentralusstage --service-level 'Premium' --usage-threshold 100 --file-path cli-vol-000004 --vnet cli-vnet-lefr-02 --subnet cli-subnet-lefr-02 
netappfiles snapshot create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -s cli-sn-000005 -l southcentralusstage
netappfiles snapshot show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -s cli-sn-000005
netappfiles snapshot show --ids /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_netappfiles_test_snapshot_000001/providers/Microsoft.NetApp/netAppAccounts/cli-acc-000002/capacityPools/cli-pool-000003/volumes/cli-vol-000004/snapshots/cli-sn-000005
network vnet create -n cli-vnet-lefr-02 -g {rg} -l southcentralus --address-prefix 10.5.0.0/16
network vnet subnet create -n cli-subnet-lefr-02 --vnet-name cli-vnet-lefr-02 --address-prefixes '10.5.0.0/24' --delegations 'Microsoft.Netapp/volumes' -g {rg}
netappfiles account create -g {rg} -a 'cli-acc-000002' -l southcentralusstage
netappfiles pool create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -l southcentralusstage --service-level 'Premium' --size 4 
netappfiles volume create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -l southcentralusstage --service-level 'Premium' --usage-threshold 100 --file-path cli-vol-000004 --vnet cli-vnet-lefr-02 --subnet cli-subnet-lefr-02 
netappfiles snapshot create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -s cli-sn-000005 -l southcentralusstage
netappfiles snapshot create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -s cli-sn-000006 -l southcentralusstage
netappfiles snapshot list -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004
network vnet create -n cli-vnet-lefr-02 -g {rg} -l southcentralus --address-prefix 10.5.0.0/16
network vnet subnet create -n cli-subnet-lefr-02 --vnet-name cli-vnet-lefr-02 --address-prefixes '10.5.0.0/24' --delegations 'Microsoft.Netapp/volumes' -g {rg}
netappfiles account create -g {rg} -a 'cli-acc-000002' -l southcentralusstage
netappfiles pool create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -l southcentralusstage --service-level 'Premium' --size 4 
netappfiles volume create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -l southcentralusstage --service-level 'Premium' --usage-threshold 100 --file-path cli-vol-000004 --vnet cli-vnet-lefr-02 --subnet cli-subnet-lefr-02 
netappfiles snapshot create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -s cli-sn-000005 -l southcentralusstage
netappfiles snapshot list -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004
netappfiles snapshot show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -s cli-sn-000005
netappfiles volume revert -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -s cd282b44-b94b-f128-85a6-e61b1d9499be
netappfiles snapshot list -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004
netappfiles account create -g {rg} -a 'cli-acc-000002' -l southcentralusstage
network vnet create -n cli-vnet-lefr-02 -g {rg} -l southcentralus --address-prefix 10.5.0.0/16
network vnet subnet create -n default --vnet-name cli-vnet-lefr-02 --address-prefixes '10.5.0.0/24' --delegations 'Microsoft.Netapp/volumes' -g {rg}
netappfiles pool create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -l southcentralusstage --service-level 'Premium' --size 4
netappfiles volume create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -l southcentralusstage --vnet cli-vnet-lefr-02 --subnet default --file-path cli-vol-000004 --service-level 'Premium' --usage-threshold 100 
netappfiles snapshot policy create -g {rg} -a cli-acc-000002 --snapshot-policy-name cli-sn-pol-000005 -l southcentralusstage -u 1 --hourly-minute 10 --enabled True
netappfiles snapshot policy show -g {rg} -a cli-acc-000002 --snapshot-policy-name cli-sn-pol-000005
netappfiles volume update -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 --snapshot-policy-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_netappfiles_test_snapshot_policy_000001/providers/Microsoft.NetApp/netAppAccounts/cli-acc-000002/snapshotPolicies/cli-sn-pol-000005
netappfiles volume show -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004
netappfiles account create -g {rg} -a 'cli-acc-000002' -l southcentralusstage
netappfiles snapshot policy create -g {rg} -a cli-acc-000002 --snapshot-policy-name cli-sn-pol-000003 --location southcentralusstage --hourly-snapshots 1 --daily-snapshots 2 --weekly-snapshots 3 --monthly-snapshots 4 --hourly-minute 10 --daily-minute 20 --weekly-minute 30 --monthly-minute 40 --daily-hour 2 --weekly-hour 3 --monthly-hour 4 --weekly-day Monday --monthly-days 1,3,20 --enabled True --tags Tag1=Value1
netappfiles snapshot policy list -g {rg} -a 'cli-acc-000002'
netappfiles snapshot policy delete -g {rg} -a cli-acc-000002 --snapshot-policy-name cli-sn-pol-000003
netappfiles snapshot policy create -g {rg} -a cli-acc-000002 --snapshot-policy-name cli-sn-pol-000003 -l southcentralusstage -u 1 -d 2 -w 3 -m 4 --hourly-minute 10 --daily-minute 20 --weekly-minute 30 --monthly-minute 40 --daily-hour 2 --weekly-hour 3 --monthly-hour 4 --weekly-day Monday --monthly-days 1,3,20 --enabled True --tags Tag1=Value1
netappfiles snapshot policy delete -g {rg} -a cli-acc-000002 --snapshot-policy-name cli-sn-pol-000003
netappfiles snapshot policy list -g {rg} -a 'cli-acc-000002'
netappfiles account create -g {rg} -a 'cli-acc-000002' -l southcentralusstage
netappfiles snapshot policy create -g {rg} -a cli-acc-000002 --snapshot-policy-name cli-sn-pol-000003 -l southcentralusstage -u 1 --hourly-minute 10
netappfiles snapshot policy show -g {rg} -a cli-acc-000002 --snapshot-policy-name cli-sn-pol-000003
netappfiles snapshot policy show --ids /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_netappfiles_test_snapshot_policy_000001/providers/Microsoft.NetApp/netAppAccounts/cli-acc-000002/snapshotPolicies/cli-sn-pol-000003
netappfiles account create -g {rg} -a 'cli-acc-000002' -l southcentralusstage
netappfiles snapshot policy create -g {rg} -a cli-acc-000002 --snapshot-policy-name cli000003 -l southcentralusstage -u 1 --hourly-minute 10
netappfiles snapshot policy create -g {rg} -a cli-acc-000002 --snapshot-policy-name cli000004 -l southcentralusstage -u 1 --hourly-minute 10
netappfiles snapshot policy create -g {rg} -a cli-acc-000002 --snapshot-policy-name cli000005 -l southcentralusstage -u 1 --hourly-minute 10
netappfiles snapshot policy list -g {rg} -a 'cli-acc-000002'
netappfiles snapshot policy delete -g {rg} -a cli-acc-000002 --snapshot-policy-name cli000003
netappfiles snapshot policy delete -g {rg} -a cli-acc-000002 --snapshot-policy-name cli000004
netappfiles snapshot policy delete -g {rg} -a cli-acc-000002 --snapshot-policy-name cli000005
netappfiles snapshot policy list -g {rg} -a 'cli-acc-000002'
netappfiles account create -g {rg} -a 'cli-acc-000002' -l southcentralusstage
netappfiles snapshot policy create -g {rg} -a cli-acc-000002 --snapshot-policy-name cli-sn-pol-000003 -l southcentralusstage -u 1 --hourly-minute 10 --enabled True
netappfiles snapshot policy show -g {rg} -a cli-acc-000002 --snapshot-policy-name cli-sn-pol-000003
network vnet create -n cli-vnet-lefr-02 -g {rg} -l southcentralus --address-prefix 10.5.0.0/16
network vnet subnet create -n default --vnet-name cli-vnet-lefr-02 --address-prefixes '10.5.0.0/24' --delegations 'Microsoft.Netapp/volumes' -g {rg}
netappfiles pool create -g {rg} -a cli-acc-000002 -p cli-pool-000004 -l southcentralusstage --service-level 'Premium' --size 4
netappfiles volume create -g {rg} -a cli-acc-000002 -p cli-pool-000004 -v cli-vol-000005 -l southcentralusstage --vnet cli-vnet-lefr-02 --subnet default --file-path cli-vol-000005 --service-level 'Premium' --usage-threshold 100 --snapshot-policy-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_netappfiles_test_snapshot_policy_000001/providers/Microsoft.NetApp/netAppAccounts/cli-acc-000002/snapshotPolicies/cli-sn-pol-000003
netappfiles snapshot policy volumes -g {rg} -a cli-acc-000002 --snapshot-policy-name cli-sn-pol-000003
netappfiles volume create -g {rg} -a cli-acc-000002 -p cli-pool-000004 -v cli-vol-000006 -l southcentralusstage --vnet cli-vnet-lefr-02 --subnet default --file-path cli-vol-000006 --service-level 'Premium' --usage-threshold 100 --snapshot-policy-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_netappfiles_test_snapshot_policy_000001/providers/Microsoft.NetApp/netAppAccounts/cli-acc-000002/snapshotPolicies/cli-sn-pol-000003
netappfiles snapshot policy volumes -g {rg} -a cli-acc-000002 --snapshot-policy-name cli-sn-pol-000003
netappfiles account create -g {rg} -a 'cli-acc-000002' -l southcentralusstage
netappfiles snapshot policy create -g {rg} -a cli-acc-000002 --snapshot-policy-name cli-sn-pol-000003 -l southcentralusstage -u 1 -d 2 -w 3 -m 4 --hourly-minute 10 --daily-minute 20 --weekly-minute 30 --monthly-minute 40 --daily-hour 2 --weekly-hour 3 --monthly-hour 4 --weekly-day Monday --monthly-days 2,5,30 --enabled True --tags Tag1=Value1
netappfiles snapshot policy update -g {rg} -a cli-acc-000002 --snapshot-policy-name cli-sn-pol-000003 -l southcentralusstage -u 5 -d 6 -w 7 -m 8 --hourly-minute 50 --daily-minute 0 --weekly-minute 10 --monthly-minute 20 --daily-hour 6 --weekly-hour 7 --monthly-hour 8 --weekly-day Wednesday --monthly-days 1,2,20 --enabled False
netappfiles snapshot policy show -g {rg} -a cli-acc-000002 --snapshot-policy-name cli-sn-pol-000003
network vnet create -n {vnet} -g {rg} -l {vnet_loc} --address-prefix 10.5.0.0/16
network vnet subnet create -n {subnet} --vnet-name {vnet} --address-prefixes '10.5.0.0/24' --delegations 'Microsoft.Netapp/volumes' -g {rg}
netappfiles account create -g {rg} -a {acc_name} -l {loc}
netappfiles pool create -g {rg} -a {acc_name} -p {pool_name} -l {loc} --service-level 'Premium' --size 4
netappfiles volume create -g {rg} -a {acc_name} -p {pool_name} -v {vol_name} -l {loc} --vnet {vnet} --subnet {subnet} --file-path {vol_name} --usage-threshold 100
netappfiles vault list -g {rg} -a {acc_name}
network vnet create -n cli-vnet-000006 --resource-group {rg} -l southcentralus --address-prefix 10.0.0.0/16
network vnet subnet create -n cli-subnet-000007 -g {rg} --vnet-name cli-vnet-000006 --address-prefixes '10.0.0.0/24' --delegations 'Microsoft.Netapp/volumes'
netappfiles account create -g {rg} -a 'cli-acc-000002' -l southcentralusstage
netappfiles pool create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -l southcentralusstage --service-level 'Premium' --size 4 
netappfiles volume create --resource-group {rg} --account-name cli-acc-000002 --pool-name cli-pool-000003 --volume-name cli-vol-000004 -l southcentralusstage --service-level 'Premium' --usage-threshold 100 --file-path cli-vol-000004 --vnet cli-vnet-000006 --subnet cli-subnet-000007   --rule-index 1 --allowed-clients 0.0.0.0/0
netappfiles pool create -g {rg} -a cli-acc-000002 -p cli-pool-000005 -l southcentralusstage --service-level 'Premium' --size 4
netappfiles volume pool-change -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -d /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_netappfiles_test_volume_000001/providers/Microsoft.NetApp/netAppAccounts/cli-acc-000002/capacityPools/cli-pool-000005
netappfiles volume show -g {rg} -a cli-acc-000002 -p cli-pool-000005 -v cli-vol-000004
network vnet create -n cli-vnet-000005 --resource-group {rg} -l southcentralus --address-prefix 10.0.0.0/16
network vnet subnet create -n cli-subnet-000006 -g {rg} --vnet-name cli-vnet-000005 --address-prefixes '10.0.0.0/24' --delegations 'Microsoft.Netapp/volumes'
netappfiles account create -g {rg} -a 'cli-acc-000002' -l southcentralusstage
netappfiles pool create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -l southcentralusstage --service-level 'Premium' --size 4 --tags Tag1=Value1 Tag2=Value2
netappfiles volume create --resource-group {rg} --account-name cli-acc-000002 --pool-name cli-pool-000003 --volume-name cli-vol-000004 -l southcentralusstage --service-level 'Premium' --usage-threshold 100 --file-path cli-vol-000004 --vnet cli-vnet-000005 --subnet cli-subnet-000006 --protocol-types NFSv3 --tags Tag1=Value1 Tag2=Value2 --rule-index 1 --allowed-clients 0.0.0.0/0
netappfiles volume list --resource-group {rg} --account-name cli-acc-000002 --pool-name cli-pool-000003
netappfiles volume delete --resource-group {rg} --account-name cli-acc-000002 --pool-name cli-pool-000003 --volume-name cli-vol-000004
netappfiles volume list --resource-group {rg} -a cli-acc-000002 -p cli-pool-000003
network vnet create -n cli-vnet-000005 --resource-group {rg} -l southcentralus --address-prefix 10.0.0.0/16
network vnet subnet create -n cli-subnet-000006 -g {rg} --vnet-name cli-vnet-000005 --address-prefixes '10.0.0.0/24' --delegations 'Microsoft.Netapp/volumes'
netappfiles account create -g {rg} -a 'cli-acc-000002' -l southcentralusstage
netappfiles pool create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -l southcentralusstage --service-level 'Premium' --size 4 
netappfiles volume create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -l southcentralusstage --service-level 'Premium' --usage-threshold 100 --file-path cli-vol-000004 --vnet cli-vnet-000005 --subnet cli-subnet-000006 --protocol-types NFSv4.1 --tags Tag2=Value1 --rule-index 2 --unix-read-only False --unix-read-write True --cifs False
netappfiles volume create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -l southcentralusstage --service-level 'Premium' --usage-threshold 100 --file-path cli-vol-000004 --vnet cli-vnet-000005 --subnet cli-subnet-000006 --protocol-types NFSv4.1 --tags Tag2=Value1 --unix-read-only False --unix-read-write True --cifs False --allowed-clients 1.2.3.0/24
netappfiles volume create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 -l southcentralusstage --service-level 'Premium' --usage-threshold 100 --file-path cli-vol-000004 --vnet cli-vnet-000005 --subnet cli-subnet-000006 --protocol-types NFSv4.1 --tags Tag2=Value1 --rule-index 2 --unix-read-only False --unix-read-write True --cifs False --allowed-clients 1.2.3.0/24
account show
group create -n cli-rg-subnet000007 --subscription 00000000-0000-0000-0000-000000000000 -l southcentralus
network vnet create -n cli-vnet-000005 --resource-group cli-rg-subnet000007 -l southcentralus --address-prefix 10.0.0.0/16
network vnet subnet create -n cli-subnet-000006 -g cli-rg-subnet000007 --vnet-name cli-vnet-000005 --address-prefixes '10.0.0.0/24' --delegations 'Microsoft.Netapp/volumes'
netappfiles account create -g {rg} -a cli-acc-000002 -l southcentralusstage
netappfiles pool create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -l southcentralusstage --service-level 'Premium' --size 4
netappfiles volume create --resource-group {rg} --account-name cli-acc-000002 --pool-name cli-pool-000003 --volume-name cli-vol-000004 -l southcentralusstage --service-level 'Premium' --usage-threshold 100 --file-path cli-vol-000004 --vnet cli-vnet-000005 --subnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli-rg-subnet000007/providers/Microsoft.Network/virtualNetworks/cli-vnet-000005/subnets/cli-subnet-000006
netappfiles volume delete --resource-group {rg} --account-name cli-acc-000002 --pool-name cli-pool-000003 --volume-name cli-vol-000004
group delete --yes -n cli-rg-subnet000007
network vnet create -n cli-vnet-000005 --resource-group {rg} -l southcentralus --address-prefix 10.0.0.0/16
network vnet subnet create -n cli-subnet-000006 -g {rg} --vnet-name cli-vnet-000005 --address-prefixes '10.0.0.0/24' --delegations 'Microsoft.Netapp/volumes'
netappfiles account create -g {rg} -a 'cli-acc-000002' -l southcentralusstage
netappfiles pool create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -l southcentralusstage --service-level 'Premium' --size 4 
netappfiles volume create --resource-group {rg} --account-name cli-acc-000002 --pool-name cli-pool-000003 --volume-name cli-vol-000004 -l southcentralusstage --service-level 'Premium' --usage-threshold 100 --file-path cli-vol-000004 --vnet cli-vnet-000005 --subnet cli-subnet-000006   --rule-index 1 --allowed-clients 0.0.0.0/0
netappfiles volume export-policy add -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 --allowed-clients '1.2.3.0/24' --rule-index 3 --unix-read-only true --unix-read-write false --cifs false --nfsv3 true --nfsv41 false
netappfiles volume export-policy add -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 --allowed-clients '1.2.4.0/24' --rule-index 2 --unix-read-only true --unix-read-write false --cifs true --nfsv3 true --nfsv41 false
netappfiles volume export-policy list -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004
netappfiles volume export-policy remove -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 --rule-index 3
netappfiles volume show --resource-group {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004
network vnet create -n cli-vnet-000005 --resource-group {rg} -l southcentralus --address-prefix 10.0.0.0/16
network vnet subnet create -n cli-subnet-000006 -g {rg} --vnet-name cli-vnet-000005 --address-prefixes '10.0.0.0/24' --delegations 'Microsoft.Netapp/volumes'
netappfiles account create -g {rg} -a 'cli-acc-000002' -l southcentralusstage
netappfiles pool create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -l southcentralusstage --service-level 'Premium' --size 4 --tags Tag2=Value1
netappfiles volume create --resource-group {rg} --account-name cli-acc-000002 --pool-name cli-pool-000003 --volume-name cli-vol-000004 -l southcentralusstage --service-level 'Premium' --usage-threshold 100 --file-path cli-vol-000004 --vnet cli-vnet-000005 --subnet cli-subnet-000006 --protocol-types NFSv4.1 --tags Tag2=Value1 --rule-index 1 --allowed-clients 0.0.0.0/0
netappfiles volume show --resource-group {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004
netappfiles volume show --ids /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_netappfiles_test_volume_000001/providers/Microsoft.NetApp/netAppAccounts/cli-acc-000002/capacityPools/cli-pool-000003/volumes/cli-vol-000004
network vnet create -n cli-vnet-000006 --resource-group {rg} -l southcentralus --address-prefix 10.0.0.0/16
network vnet subnet create -n cli-subnet-000007 -g {rg} --vnet-name cli-vnet-000006 --address-prefixes '10.0.0.0/24' --delegations 'Microsoft.Netapp/volumes'
netappfiles account create -g {rg} -a 'cli-acc-000002' -l southcentralusstage
netappfiles pool create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -l southcentralusstage --service-level 'Premium' --size 4 --tags Tag1=Value1
netappfiles volume create --resource-group {rg} --account-name cli-acc-000002 --pool-name cli-pool-000003 --volume-name cli-vol-000004 -l southcentralusstage --service-level 'Premium' --usage-threshold 100 --file-path cli-vol-000004 --vnet cli-vnet-000006 --subnet cli-subnet-000007  --tags Tag1=Value1 --rule-index 1 --allowed-clients 0.0.0.0/0
netappfiles volume create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000005 -l southcentralusstage --service-level 'Premium' --usage-threshold 100 --file-path cli-vol-000005 --vnet cli-vnet-000006 --subnet cli-subnet-000007 --tags Tag1=Value1
netappfiles volume list --resource-group {rg} -a 'cli-acc-000002' -p 'cli-pool-000003'
netappfiles volume delete -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004
netappfiles volume list -g {rg} -a 'cli-acc-000002' -p 'cli-pool-000003'
network vnet create -n cli-vnet-000005 --resource-group {rg} -l southcentralus --address-prefix 10.0.0.0/16
network vnet subnet create -n cli-subnet-000006 -g {rg} --vnet-name cli-vnet-000005 --address-prefixes '10.0.0.0/24' --delegations 'Microsoft.Netapp/volumes'
netappfiles account create -g {rg} -a 'cli-acc-000002' -l southcentralusstage
netappfiles pool create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -l southcentralusstage --service-level 'Standard' --size 8 
netappfiles volume create --resource-group {rg} --account-name cli-acc-000002 --pool-name cli-pool-000003 --volume-name cli-vol-000004 -l southcentralusstage --service-level 'Standard' --usage-threshold 200 --file-path cli-vol-000004 --vnet cli-vnet-000005 --subnet cli-subnet-000006   --rule-index 1 --allowed-clients 0.0.0.0/0
netappfiles volume export-policy add -g {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 --allowed-clients '1.2.3.0/24' --rule-index 3 --unix-read-only true --unix-read-write false --cifs false --nfsv3 true --nfsv41 false
network vnet create -n cli-vnet-000009 --resource-group {rg} -l southcentralus --address-prefix 10.0.0.0/16
network vnet subnet create -n cli-subnet-000010 -g {rg} --vnet-name cli-vnet-000009 --address-prefixes '10.0.0.0/24' --delegations 'Microsoft.Netapp/volumes'
netappfiles account create -g {rg} -a 'cli-acc-000003' -l southcentralusstage
netappfiles pool create -g {rg} -a cli-acc-000003 -p cli-pool-000005 -l southcentralusstage --service-level 'Premium' --size 4 
netappfiles volume create --resource-group {rg} --account-name cli-acc-000003 --pool-name cli-pool-000005 --volume-name cli-vol-000007 -l southcentralusstage --service-level 'Premium' --usage-threshold 100 --file-path cli-vol-000007 --vnet cli-vnet-000009 --subnet cli-subnet-000010   --rule-index 1 --allowed-clients 0.0.0.0/0
account show
network vnet create -n cli-vnet-000011 --resource-group cli_netappfiles_test_volume2_000002 -l eastus2euap --address-prefix 10.1.0.0/16
network vnet subnet create -n cli-subnet-000012 -g cli_netappfiles_test_volume2_000002 --vnet-name cli-vnet-000011 --address-prefixes '10.1.0.0/24' --delegations 'Microsoft.Netapp/volumes'
netappfiles account create -g cli_netappfiles_test_volume2_000002 -a cli-acc-000004 -l eastus2euap
netappfiles pool create -g cli_netappfiles_test_volume2_000002 -a cli-acc-000004 -p cli-pool-000006 -l eastus2euap --service-level 'Premium' --size 4
netappfiles volume create --resource-group cli_netappfiles_test_volume2_000002 --account-name cli-acc-000004 --pool-name cli-pool-000006 --volume-name cli-vol-000008 -l eastus2euap --service-level 'Premium' --usage-threshold 100 --file-path cli-vol-000008 --vnet cli-vnet-000011 --subnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_netappfiles_test_volume2_000002/providers/Microsoft.Network/virtualNetworks/cli-vnet-000011/subnets/cli-subnet-000012 --volume-type DataProtection --endpoint-type dst --replication-schedule _10minutely --remote-volume-resource-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_netappfiles_test_volume2_000002/providers/Microsoft.NetApp/netAppAccounts/cli-acc-000003/capacityPools/cli-pool-000005/volumes/cli-vol-000007
netappfiles volume replication approve -g {rg} -a cli-acc-000003 -p cli-pool-000005 -v cli-vol-000007 --remote-volume-resource-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_netappfiles_test_volume2_000002/providers/Microsoft.NetApp/netAppAccounts/cli-acc-000004/capacityPools/cli-pool-000006/volumes/cli-vol-000008
netappfiles volume replication status -g cli_netappfiles_test_volume2_000002 -a cli-acc-000004 -p cli-pool-000006 -v cli-vol-000008
netappfiles volume replication status -g cli_netappfiles_test_volume2_000002 -a cli-acc-000004 -p cli-pool-000006 -v cli-vol-000008
netappfiles volume replication status -g cli_netappfiles_test_volume2_000002 -a cli-acc-000004 -p cli-pool-000006 -v cli-vol-000008
netappfiles volume replication status -g cli_netappfiles_test_volume2_000002 -a cli-acc-000004 -p cli-pool-000006 -v cli-vol-000008
netappfiles volume replication status -g cli_netappfiles_test_volume2_000002 -a cli-acc-000004 -p cli-pool-000006 -v cli-vol-000008
netappfiles volume replication status -g cli_netappfiles_test_volume2_000002 -a cli-acc-000004 -p cli-pool-000006 -v cli-vol-000008
netappfiles volume replication suspend -g cli_netappfiles_test_volume2_000002 -a cli-acc-000004 -p cli-pool-000006 -v cli-vol-000008
netappfiles volume replication status -g cli_netappfiles_test_volume2_000002 -a cli-acc-000004 -p cli-pool-000006 -v cli-vol-000008
netappfiles volume replication status -g cli_netappfiles_test_volume2_000002 -a cli-acc-000004 -p cli-pool-000006 -v cli-vol-000008
netappfiles volume replication resume -g cli_netappfiles_test_volume2_000002 -a cli-acc-000004 -p cli-pool-000006 -v cli-vol-000008
netappfiles volume replication status -g cli_netappfiles_test_volume2_000002 -a cli-acc-000004 -p cli-pool-000006 -v cli-vol-000008
netappfiles volume replication status -g cli_netappfiles_test_volume2_000002 -a cli-acc-000004 -p cli-pool-000006 -v cli-vol-000008
netappfiles volume replication status -g cli_netappfiles_test_volume2_000002 -a cli-acc-000004 -p cli-pool-000006 -v cli-vol-000008
netappfiles volume replication status -g cli_netappfiles_test_volume2_000002 -a cli-acc-000004 -p cli-pool-000006 -v cli-vol-000008
netappfiles volume replication status -g cli_netappfiles_test_volume2_000002 -a cli-acc-000004 -p cli-pool-000006 -v cli-vol-000008
netappfiles volume replication suspend -g cli_netappfiles_test_volume2_000002 -a cli-acc-000004 -p cli-pool-000006 -v cli-vol-000008 -f True
netappfiles volume replication status -g cli_netappfiles_test_volume2_000002 -a cli-acc-000004 -p cli-pool-000006 -v cli-vol-000008
netappfiles volume replication status -g cli_netappfiles_test_volume2_000002 -a cli-acc-000004 -p cli-pool-000006 -v cli-vol-000008
netappfiles volume replication remove -g cli_netappfiles_test_volume2_000002 -a cli-acc-000004 -p cli-pool-000006 -v cli-vol-000008
network vnet create -n cli-vnet-000005 --resource-group {rg} -l southcentralus --address-prefix 10.0.0.0/16
network vnet subnet create -n cli-subnet-000006 -g {rg} --vnet-name cli-vnet-000005 --address-prefixes '10.0.0.0/24' --delegations 'Microsoft.Netapp/volumes'
netappfiles account create -g {rg} -a 'cli-acc-000002' -l southcentralusstage
netappfiles pool create -g {rg} -a cli-acc-000002 -p cli-pool-000003 -l southcentralusstage --service-level 'Premium' --size 4 
netappfiles volume create --resource-group {rg} --account-name cli-acc-000002 --pool-name cli-pool-000003 --volume-name cli-vol-000004 -l southcentralusstage --service-level 'Premium' --usage-threshold 100 --file-path cli-vol-000004 --vnet cli-vnet-000005 --subnet cli-subnet-000006   --rule-index 1 --allowed-clients 0.0.0.0/0
netappfiles volume update --resource-group {rg} -a cli-acc-000002 -p cli-pool-000003 -v cli-vol-000004 --tags Tag1=Value2 --usage-threshold 200
network vnet create -n cli-vnet-000002 --resource-group {rg} -l southcentralus --address-prefix 10.0.0.0/16
network vnet subnet create -n cli-subnet-000003 -g {rg} --vnet-name cli-vnet-000002 --address-prefixes '10.0.0.0/24' --delegations 'Microsoft.Netapp/volumes'
netappfiles account create -g {rg} -a 'cli-acc-000004' -l southcentralusstage
netappfiles pool create -g {rg} -a cli-acc-000004 -p cli-pool-000005 -l southcentralusstage --service-level 'Premium' --size 4 
netappfiles volume create --resource-group {rg} --account-name cli-acc-000004 --pool-name cli-pool-000005 --volume-name cli-vol-000006 -l southcentralusstage --service-level 'Premium' --usage-threshold 100 --file-path cli-vol-000006 --vnet cli-vnet-000002 --subnet cli-subnet-000003 --smb-encryption False --smb-continuously-avl False --encryption-key-source Microsoft.NetApp --ldap-enabled False --is-def-quota-enabled False --avs-data-store Disabled
network dns zone import -n {zone} -g {rg} --file-name "{path}"
network dns record-set list -g {rg} -z {zone}
network dns zone export -g {rg} -n {zone} --file-name "{export}"
network dns zone delete -g {rg} -n {zone} -y
network dns zone import -n {zone} -g {rg} --file-name "{export}"
network dns record-set list -g {rg} -z {zone}
network dns zone import -n {zone} -g {rg} --file-name "{path}"
network dns record-set list -g {rg} -z {zone}
network dns zone export -g {rg} -n {zone} --file-name "{export}"
network dns zone delete -g {rg} -n {zone} -y
network dns zone import -n {zone} -g {rg} --file-name "{export}"
network dns record-set list -g {rg} -z {zone}
network dns zone import -n {zone} -g {rg} --file-name "{path}"
network dns record-set list -g {rg} -z {zone}
network dns zone export -g {rg} -n {zone} --file-name "{export}"
network dns zone delete -g {rg} -n {zone} -y
network dns zone import -n {zone} -g {rg} --file-name "{export}"
network dns record-set list -g {rg} -z {zone}
network dns zone import -n {zone} -g {rg} --file-name "{path}"
network dns record-set list -g {rg} -z {zone}
network dns zone export -g {rg} -n {zone} --file-name "{export}"
network dns zone delete -g {rg} -n {zone} -y
network dns zone import -n {zone} -g {rg} --file-name "{export}"
network dns record-set list -g {rg} -z {zone}
network dns zone import -n {zone} -g {rg} --file-name "{path}"
network dns record-set list -g {rg} -z {zone}
network dns zone export -g {rg} -n {zone} --file-name "{export}"
network dns zone delete -g {rg} -n {zone} -y
network dns zone import -n {zone} -g {rg} --file-name "{export}"
network dns record-set list -g {rg} -z {zone}
network dns zone import -n {zone} -g {rg} --file-name "{path}"
network dns record-set list -g {rg} -z {zone}
network dns zone export -g {rg} -n {zone} --file-name "{export}"
network dns zone delete -g {rg} -n {zone} -y
network dns zone import -n {zone} -g {rg} --file-name "{export}"
network dns record-set list -g {rg} -z {zone}
network dns zone import -n {zone} -g {rg} --file-name "{path}"
network dns record-set list -g {rg} -z {zone}
network dns zone export -g {rg} -n {zone} --file-name "{export}"
network dns zone delete -g {rg} -n {zone} -y
network dns zone import -n {zone} -g {rg} --file-name "{export}"
network dns record-set list -g {rg} -z {zone}
network dns zone import -n {zone} -g {rg} --file-name "{path}"
network dns record-set list -g {rg} -z {zone}
network dns zone export -g {rg} -n {zone} --file-name "{export}"
network dns zone delete -g {rg} -n {zone} -y
network dns zone import -n {zone} -g {rg} --file-name "{export}"
network dns record-set list -g {rg} -z {zone}
network dns zone import -n {zone} -g {rg} --file-name "{path}"
network dns record-set list -g {rg} -z {zone}
network dns zone export -g {rg} -n {zone} --file-name "{export}"
network dns zone delete -g {rg} -n {zone} -y
network dns zone import -n {zone} -g {rg} --file-name "{export}"
network dns record-set list -g {rg} -z {zone}
network dns zone list
network dns zone create -n {zone} -g {rg}
network dns zone list -g {rg}
network dns zone show -n {zone} -g {rg}
network dns record-set a create -n myrsa -g {rg} --zone-name {zone}
network dns record-set a add-record -g {rg} --zone-name {zone} --record-set-name myrsa --ipv4-address 10.0.0.10
network dns record-set a add-record -g {rg} --zone-name {zone} --record-set-name myrsa --ipv4-address 10.0.0.10
network dns record-set a add-record -g {rg} --zone-name {zone} --record-set-name myrsaalt --ipv4-address 10.0.0.10
network dns record-set aaaa create -n myrsaaaa -g {rg} --zone-name {zone}
network dns record-set aaaa add-record -g {rg} --zone-name {zone} --record-set-name myrsaaaa --ipv6-address 2001:db8:0:1:1:1:1:1
network dns record-set aaaa add-record -g {rg} --zone-name {zone} --record-set-name myrsaaaa --ipv6-address 2001:db8:0:1:1:1:1:1
network dns record-set aaaa add-record -g {rg} --zone-name {zone} --record-set-name myrsaaaaalt --ipv6-address 2001:db8:0:1:1:1:1:1
network dns record-set caa create -n myrscaa -g {rg} --zone-name {zone}
network dns record-set caa add-record -g {rg} --zone-name {zone} --record-set-name myrscaa --flags 0 --tag foo --value "my value"
network dns record-set caa add-record -g {rg} --zone-name {zone} --record-set-name myrscaa --flags 0 --tag foo --value "my value"
network dns record-set caa add-record -g {rg} --zone-name {zone} --record-set-name myrscaaalt --flags 0 --tag foo --value "my value"
network dns record-set cname create -n myrscname -g {rg} --zone-name {zone}
network dns record-set cname set-record -g {rg} --zone-name {zone} --record-set-name myrscname --cname mycname
network dns record-set cname set-record -g {rg} --zone-name {zone} --record-set-name myrscname --cname mycname
network dns record-set cname set-record -g {rg} --zone-name {zone} --record-set-name myrscnamealt --cname mycname
network dns record-set mx create -n myrsmx -g {rg} --zone-name {zone}
network dns record-set mx add-record -g {rg} --zone-name {zone} --record-set-name myrsmx --exchange 12 --preference 13
network dns record-set mx add-record -g {rg} --zone-name {zone} --record-set-name myrsmx --exchange 12 --preference 13
network dns record-set mx add-record -g {rg} --zone-name {zone} --record-set-name myrsmxalt --exchange 12 --preference 13
network dns record-set ns create -n myrsns -g {rg} --zone-name {zone}
network dns record-set ns add-record -g {rg} --zone-name {zone} --record-set-name myrsns --nsdname foobar.com
network dns record-set ns add-record -g {rg} --zone-name {zone} --record-set-name myrsns --nsdname foobar.com
network dns record-set ns add-record -g {rg} --zone-name {zone} --record-set-name myrsnsalt --nsdname foobar.com
network dns record-set ptr create -n myrsptr -g {rg} --zone-name {zone}
network dns record-set ptr add-record -g {rg} --zone-name {zone} --record-set-name myrsptr --ptrdname foobar.com
network dns record-set ptr add-record -g {rg} --zone-name {zone} --record-set-name myrsptr --ptrdname foobar.com
network dns record-set ptr add-record -g {rg} --zone-name {zone} --record-set-name myrsptralt --ptrdname foobar.com
network dns record-set srv create -n myrssrv -g {rg} --zone-name {zone}
network dns record-set srv add-record -g {rg} --zone-name {zone} --record-set-name myrssrv --port 1234 --priority 1 --target target.com --weight 50
network dns record-set srv add-record -g {rg} --zone-name {zone} --record-set-name myrssrv --port 1234 --priority 1 --target target.com --weight 50
network dns record-set srv add-record -g {rg} --zone-name {zone} --record-set-name myrssrvalt --port 1234 --priority 1 --target target.com --weight 50
network dns record-set txt create -n myrstxt -g {rg} --zone-name {zone}
network dns record-set txt add-record -g {rg} --zone-name {zone} --record-set-name myrstxt --value some_text
network dns record-set txt add-record -g {rg} --zone-name {zone} --record-set-name myrstxt --value some_text
network dns record-set txt add-record -g {rg} --zone-name {zone} --record-set-name myrstxtalt --value some_text
network dns record-set a add-record -g {rg} --zone-name {zone} --record-set-name myrsa --ipv4-address 10.0.0.11
network dns record-set soa update -g {rg} --zone-name {zone} --email foo.com --expire-time 30 --minimum-ttl 20 --refresh-time 60 --retry-time 90 --serial-number 123
network dns record-set txt add-record -g {rg} -z {zone} -n longtxt -v
network dns zone show -n {zone} -g {rg}
network dns record-set a show -n myrsa -g {rg} --zone-name {zone}
network dns record-set list -g {rg} -z {zone}
network dns record-set txt list -g {rg} -z {zone}
network dns record-set a remove-record -g {rg} --zone-name {zone} --record-set-name myrsa --ipv4-address 10.0.0.10
network dns record-set aaaa remove-record -g {rg} --zone-name {zone} --record-set-name myrsaaaa --ipv6-address 2001:db8:0:1:1:1:1:1
network dns record-set caa remove-record -g {rg} --zone-name {zone} --record-set-name myrscaa --flags 0 --tag foo --value "my value"
network dns record-set cname remove-record -g {rg} --zone-name {zone} --record-set-name myrscname --cname mycname
network dns record-set mx remove-record -g {rg} --zone-name {zone} --record-set-name myrsmx --exchange 12 --preference 13
network dns record-set ns remove-record -g {rg} --zone-name {zone} --record-set-name myrsns --nsdname foobar.com
network dns record-set ptr remove-record -g {rg} --zone-name {zone} --record-set-name myrsptr --ptrdname foobar.com
network dns record-set srv remove-record -g {rg} --zone-name {zone} --record-set-name myrssrv --port 1234 --priority 1 --target target.com --weight 50
network dns record-set txt remove-record -g {rg} --zone-name {zone} --record-set-name myrstxt --value some_text
network dns record-set a show -n myrsa -g {rg} --zone-name {zone}
network dns record-set a remove-record -g {rg} --zone-name {zone} --record-set-name myrsa --ipv4-address 10.0.0.11
network dns record-set a show -n myrsa -g {rg} --zone-name {zone}
network dns record-set a delete -n myrsa -g {rg} --zone-name {zone} -y
network dns record-set cname delete -n myrscname -g {rg} --zone-name {zone} -y
network dns zone delete -g {rg} -n {zone} -y
network dns zone create -g {rg} -n {zone}
network traffic-manager profile create -g {rg} -n {tm} --unique-dns-name {tm_dns} --routing-method geographic
network dns record-set a create -g {rg} -z {zone} -n a1 --target-resource {tm_id}
network dns record-set a update -g {rg} -z {zone} -n a1 --target-resource ""
network dns zone create -n {parent_zone_name} -g {rg}
network dns zone show -n {parent_zone_name} -g {rg}
network dns zone create -n {child_zone_name} -g {rg} -p {parent_zone_name}
network dns zone show -n {parent_zone_name} -g {rg}
network dns record-set ns show -n {record_set_name} -g {rg} --zone-name {parent_zone_name}
network dns zone delete -g {rg} -n {parent_zone_name} -y
network dns zone delete -g {rg} -n {child_zone_name} -y
network dns zone list
network dns zone create -n {zone} -g {rg}
network dns zone list -g {rg}
network dns zone show -n {zone} -g {rg}
network dns record-set a add-record -g {rg} --zone-name {zone} --record-set-name myrsa --ipv4-address 10.0.0.10 --if-none-match
network dns record-set aaaa add-record -g {rg} --zone-name {zone} --record-set-name myrsaaaa --ipv6-address 2001:db8:0:1:1:1:1:1 --if-none-match
network dns record-set caa add-record -g {rg} --zone-name {zone} --record-set-name myrscaa --flags 0 --tag foo --value "my value" --if-none-match
network dns record-set cname set-record -g {rg} --zone-name {zone} --record-set-name myrscname --cname mycname --if-none-match
network dns record-set mx add-record -g {rg} --zone-name {zone} --record-set-name myrsmx --exchange 12 --preference 13 --if-none-match
network dns record-set ns add-record -g {rg} --zone-name {zone} --record-set-name myrsns --nsdname foobar.com --if-none-match
network dns record-set ptr add-record -g {rg} --zone-name {zone} --record-set-name myrsptr --ptrdname foobar.com --if-none-match
network dns record-set srv add-record -g {rg} --zone-name {zone} --record-set-name myrssrv --port 1234 --priority 1 --target target.com --weight 50 --if-none-match
network dns record-set txt add-record -g {rg} --zone-name {zone} --record-set-name myrstxt --value some_text --if-none-match
network dns record-set a add-record -g {rg} --zone-name {zone} --record-set-name myrsa --ipv4-address 10.0.0.11
network dns record-set soa update -g {rg} --zone-name {zone} --email foo.com --expire-time 30 --minimum-ttl 20 --refresh-time 60 --retry-time 90 --serial-number 123
network dns record-set txt add-record -g {rg} -z {zone} -n longtxt -v
network dns zone show -n {zone} -g {rg}
network dns record-set a show -n myrsa -g {rg} --zone-name {zone}
network dns record-set list -g {rg} -z {zone}
network dns record-set txt list -g {rg} -z {zone}
network dns record-set a remove-record -g {rg} --zone-name {zone} --record-set-name myrsa --ipv4-address 10.0.0.10
network dns record-set aaaa remove-record -g {rg} --zone-name {zone} --record-set-name myrsaaaa --ipv6-address 2001:db8:0:1:1:1:1:1
network dns record-set caa remove-record -g {rg} --zone-name {zone} --record-set-name myrscaa --flags 0 --tag foo --value "my value"
network dns record-set cname remove-record -g {rg} --zone-name {zone} --record-set-name myrscname --cname mycname
network dns record-set mx remove-record -g {rg} --zone-name {zone} --record-set-name myrsmx --exchange 12 --preference 13
network dns record-set ns remove-record -g {rg} --zone-name {zone} --record-set-name myrsns --nsdname foobar.com
network dns record-set ptr remove-record -g {rg} --zone-name {zone} --record-set-name myrsptr --ptrdname foobar.com
network dns record-set srv remove-record -g {rg} --zone-name {zone} --record-set-name myrssrv --port 1234 --priority 1 --target target.com --weight 50
network dns record-set txt remove-record -g {rg} --zone-name {zone} --record-set-name myrstxt --value some_text
network dns record-set a show -n myrsa -g {rg} --zone-name {zone}
network dns record-set a remove-record -g {rg} --zone-name {zone} --record-set-name myrsa --ipv4-address 10.0.0.11
network dns record-set a show -n myrsa -g {rg} --zone-name {zone}
network dns record-set a delete -n myrsa -g {rg} --zone-name {zone} -y
network dns record-set cname delete -n myrscname -g {rg} --zone-name {zone} -y
network dns zone delete -g {rg} -n {zone} -y
network asg list
network asg create -g {rg} -n {asg} --tags foo=doo
network asg update -g {rg} -n {asg} --tags foo=bar
network asg list
network asg show -g {rg} -n {asg}
network asg delete -g {rg} -n {asg}
network asg list
network lb create -g {rg} -l {location} -n {lb} --sku {sku} --public-ip-address {ip}
network lb show -g {rg} -n {lb}
network public-ip show -g {rg} -n {ip}
network vnet create -n {vnet} -g {rg} -l {loc} --subnet-name {subnet}
network vnet subnet update -n {subnet} --vnet-name {vnet} -g {rg} --disable-private-endpoint-network-policies true
storage account private-link-resource list --account-name {sa} -g {rg}
storage account show -n {sa} -g {rg}
network private-endpoint create -g {rg} -n {pe} --vnet-name {vnet} --subnet {subnet} -l {loc} --connection-name {pe_connection} --private-connection-resource-id {sa_id} --group-ids blob
storage account show -n {sa} -g {rg}
storage account private-endpoint-connection show --account-name {sa} -g {rg} --name {sa_pec_name}
network private-endpoint show -g {rg} -n {pe}
network private-dns zone create -n {zone_name1} -g {rg}
network private-dns zone create -n {zone_name2} -g {rg}
network private-endpoint dns-zone-group create --endpoint-name {pe} -g {rg} -n {private_dns_zone_group_name} --zone-name {private_zone_name1} --private-dns-zone {zone_name1}
network private-endpoint dns-zone-group add --endpoint-name {pe} -g {rg} -n {private_dns_zone_group_name} --zone-name {private_zone_name2} --private-dns-zone {zone_name2}
network private-endpoint dns-zone-group show --endpoint-name {pe} -g {rg} -n {private_dns_zone_group_name}
network private-endpoint dns-zone-group list --endpoint-name {pe} -g {rg}
network private-endpoint dns-zone-group remove --endpoint-name {pe} -g {rg} -n {private_dns_zone_group_name} --zone-name {private_zone_name2}
network private-endpoint dns-zone-group show --endpoint-name {pe} -g {rg} -n {private_dns_zone_group_name}
network private-endpoint dns-zone-group delete --endpoint-name {pe} -g {rg} -n {private_dns_zone_group_name}
network vnet create -g {rg} -n {vnet} --subnet-name {subnet1} -l {location}
network lb create -g {rg} -l {location} -n {lb} --public-ip-address {ip} --sku {sku}
network vnet subnet update -g {rg} -n {subnet1} --vnet-name {vnet} --disable-private-link-service-network-policies
network vnet subnet create -g {rg} -n {subnet2} --vnet-name {vnet} --address-prefixes 10.0.2.0/24
network vnet subnet update -g {rg} -n {subnet2} --vnet-name {vnet} --disable-private-endpoint-network-policies
network private-link-service create -g {rg} -n {lks1} --vnet-name {vnet} --subnet {subnet1} --lb-name {lb} --lb-frontend-ip-configs LoadBalancerFrontEnd -l {location}
network private-endpoint list-types -l {location}
network private-endpoint create -g {rg} -n {pe} --vnet-name {vnet} --subnet {subnet2} --private-connection-resource-id {pls_id} --connection-name tttt -l {location}
network private-endpoint list
network private-endpoint list -g {rg}
network private-link-service show -g {rg} -n {lks1}
network private-link-service connection update -g {rg} -n {pe_connect} --service-name {lks1} --connection-status Rejected --action-required "need action"
network private-endpoint show -g {rg} -n {pe}
network private-link-service connection delete -g {rg} -n {pe_connect} --service-name {lks1}
network private-link-service show -g {rg} -n {lks1}
network private-endpoint delete -g {rg} -n {pe}
network vnet create -g {rg} -n {vnet} --subnet-name {subnet1} -l {location}
network lb create -g {rg} -l {location} -n {lb} --public-ip-address {ip} --sku {sku}
network vnet subnet update -g {rg} -n {subnet1} --vnet-name {vnet} --disable-private-link-service-network-policies
network vnet subnet create -g {rg} -n {subnet2} --vnet-name {vnet} --address-prefixes 10.0.2.0/24
network vnet subnet update -g {rg} -n {subnet2} --vnet-name {vnet} --disable-private-endpoint-network-policies
network private-link-service create -g {rg} -n {lks1} --vnet-name {vnet} --subnet {subnet1} --lb-name {lb} --lb-frontend-ip-configs LoadBalancerFrontEnd -l {location}  --enable-proxy-protocol
network private-link-service update -g {rg} -n {lks1} --visibility {sub1} {sub1} --auto-approval {sub1} {sub1}  --enable-proxy-protocol False
network private-link-service list -g {rg}
network private-link-service show -g {rg} -n {lks1}
network private-link-service delete -g {rg} -n {lks1}
network vnet subnet update -g {rg} -n {subnet1} --vnet-name {vnet} --disable-private-link-service-network-policies false
network lb create -g {rg} -l {location} -n lb --vnet-name vnet --subnet subnet --sku Standard
network lb frontend-ip create -g {rg} --lb-name lb -n LoadBalancerFrontEnd2 -z 1 2 3 --vnet-name vnet --subnet subnet
network lb create -g {rg} -l {location} -n {lb} --public-ip-zone {zone} --public-ip-address {ip}
network lb show -g {rg} -n {lb}
network public-ip show -g {rg} -n {ip}
network lb create -g {rg} -l {location} -n {lb} --frontend-ip-zone {zone} --public-ip-address "" --vnet-name vnet1 --subnet subnet1
network lb show -g {rg} -n {lb}
network lb frontend-ip create -g {rg} --lb-name {lb} -n LoadBalancerFrontEnd2 -z {zone}  --vnet-name vnet1 --subnet subnet1
network lb create -g {rg} -n {lb2} -l westcentralus --sku Standard
network public-ip create -n {ip2} -g {rg} -l westcentralus --sku Standard --allocation-method Static --version IPv6
network lb frontend-ip create --lb-name {lb2} -n ipv6 -g {rg} --private-ip-address-version IPv6 --public-ip-address {ip2}
network lb create -g {rg} -n {lb3} --sku Standard -l westcentralus --private-ip-address-version IPv6
network public-ip create -g {rg} -l {location} -n {ip1}
network public-ip show -g {rg} -n {ip1}
network public-ip create -g {rg} -l {location} -n {ip2} --sku {standard_sku} --tags foo=doo
network public-ip show -g {rg} -n {ip2}
network public-ip create -g {rg} -l {location} -n {ip3} --sku {standard_sku} --tier {global_tier}
network public-ip show -g {rg} -n {ip3}
network public-ip create -g {rg} -l {location} -n {ip4} --tier {global_tier}
network custom-ip prefix create -g {rg} -n {prefix} --cidr 40.40.40.0/24
network custom-ip prefix update -g {rg} -n {prefix} --tags foo=doo
network custom-ip prefix list -g {rg}
network custom-ip prefix show -g {rg} -n {prefix}
network custom-ip prefix update -g {rg} -n {prefix} --state commission
network public-ip prefix create -g {rg} -n {prefix} --length 30
network public-ip prefix update -g {rg} -n {prefix} --tags foo=doo
network public-ip prefix list -g {rg}
network public-ip prefix delete -g {rg} -n {prefix}
network public-ip prefix list -g {rg}
network public-ip prefix create -g {rg} -n {prefix} --length 30
network public-ip create -g {rg} -n {pip} --public-ip-prefix {prefix} --sku Standard
network public-ip prefix create -g {rg} -n {prefix_name_ipv4} --length 30
network public-ip prefix create -g {rg} -n {prefix_name_ipv6} --length 127 --version IPv6
network public-ip prefix create -g {rg} -n {prefix_name_ipv6} --length 127 --version IPv5
network public-ip prefix create -g {rg} -n {prefix_name_ipv4} --length 28
network public-ip create -g {rg} -n {pip} --public-ip-prefix {prefix_name_ipv4} --sku Standard --ip-address 20.44.7010
network public-ip prefix create -g {rg} -n {prefix} --length 30 --zone 1 2 3
network list-usages --location westus
network application-gateway create -g {rg} -n ag1 --no-wait
network application-gateway wait -g {rg} -n ag1 --exists
network application-gateway update -g {rg} -n ag1 --no-wait
network application-gateway update -g {rg} -n ag1 --no-wait --capacity 3 --sku standard_small --tags foo=doo
network application-gateway wait -g {rg} -n ag1 --updated
network application-gateway list --resource-group {rg}
network application-gateway show --resource-group {rg} --name ag1
network application-gateway show-backend-health -g {rg} -n ag1
network application-gateway stop --resource-group {rg} -n ag1
network application-gateway start --resource-group {rg} -n ag1
network application-gateway delete --resource-group {rg} -n ag1
network application-gateway list --resource-group {rg}
network public-ip create -g {rg} -n pubip1 --sku Standard
network application-gateway create -g {rg} -n ag1 --sku WAF_v2 --public-ip-address pubip1
network application-gateway list --resource-group {rg}
network application-gateway show --resource-group {rg} --name ag1
network application-gateway show-backend-health -g {rg} -n ag1 --host-name-from-http-settings --path /test --timeout 100 --http-settings appGatewayBackendHttpSettings --address-pool appGatewayBackendPool
network public-ip create -g {rg} -n {ip} --sku Standard
network application-gateway create -g {rg} -n {appgw} --sku Standard_v2 --enable-private-link --private-ip-address 10.0.0.17 --public-ip-address {ip}
network application-gateway show -g {rg} -n {appgw}
network application-gateway delete -g {rg} -n {appgw}
identity create -g {rg} -n {access_identity}
keyvault set-policy -g {rg} -n {kv} --object-id {access_identity_principal} --secret-permissions get list set
keyvault certificate get-default-policy
keyvault certificate create --vault-name {kv} --name {cert} --policy "{keyvault_cert_policy}"
keyvault certificate show --vault-name {kv} --name {cert}
network public-ip create -g {rg} -n {ip} --sku Standard
network application-gateway create -g {rg} -n {gw} --sku Standard_v2 --public-ip-address {ip} --identity {access_identity} --frontend-port 1000 --key-vault-secret-id {secret_id} --ssl-certificate-name {ssl_cert_name}
identity create -g {rg} -n {one_off_identity}
identity create -g {rg} -n {access_identity}
keyvault set-policy -g {rg} -n {kv} --object-id {access_identity_principal} --secret-permissions get list set
keyvault certificate get-default-policy
keyvault certificate create --vault-name {kv} --name {cert} --policy "{keyvault_cert_policy}"
network public-ip create -g {rg} -n {ip} --sku Standard
network application-gateway create -g {rg} -n {gw} --sku Standard_v2 --public-ip-address {ip} --trusted-client-cert name={cname} data="{cert}"
network application-gateway client-cert add -g {rg} --gateway-name {gw} --name {cname1} --data "{cert1}"
network application-gateway client-cert list -g {rg} --gateway-name {gw}
network application-gateway client-cert update -g {rg} --gateway-name {gw} --name {cname1} --data "{cert}"
network application-gateway client-cert show -g {rg} --gateway-name {gw} --name {cname}
network application-gateway client-cert show -g {rg} --gateway-name {gw} --name {cname1}
network application-gateway client-cert remove -g {rg} --gateway-name {gw} --name {cname1}
network public-ip create -g {rg} -n {ip} --sku Standard
network application-gateway create -g {rg} -n {gw} --sku Standard_v2 --public-ip-address {ip} --ssl-profile name={name} client-auth-configuration=True min-protocol-version=TLSv1_0 cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 policy-type=Custom
network application-gateway ssl-profile add -g {rg} --gateway-name {gw} --name {name1} --client-auth-configuration True --min-protocol-version TLSv1_0 --cipher-suites TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 --policy-type Custom
network application-gateway ssl-profile update -g {rg} --gateway-name {gw} --name {name1} --client-auth-configuration False
network application-gateway ssl-profile show -g {rg} --gateway-name {gw} --name {name1} 
network application-gateway ssl-profile list -g {rg} --gateway-name {gw}
network application-gateway ssl-profile remove -g {rg} --gateway-name {gw} --name {name} 
network public-ip create -g {rg} -n {ip} --sku Standard -z 1 3
network application-gateway create -g {rg} -n {gateway} --sku Standard_v2 --min-capacity 2 --max-capacity 4 --zones 1 3 --public-ip-address {ip} --no-wait
network application-gateway wait -g {rg} -n {gateway} --exists
network application-gateway show -g {rg} -n {gateway}
network application-gateway create -g {rg} -n {gateway} --no-wait
network application-gateway wait -g {rg} -n {gateway} --exists
network application-gateway auth-cert create -g {rg} --gateway-name {gateway} -n {cert1} --cert-file "{cert1_file}" --no-wait
network application-gateway auth-cert create -g {rg} --gateway-name {gateway} -n {cert2} --cert-file "{cert2_file}" --no-wait
network application-gateway http-settings create -g {rg} --gateway-name {gateway} -n {settings} --auth-certs {cert1} {cert2} --no-wait --port 443 --protocol https
network application-gateway http-settings update -g {rg} --gateway-name {gateway} -n {settings} --auth-certs {cert2} {cert1} --no-wait
network application-gateway show -g {rg} -n {gateway}
network public-ip create -g {rg} -n {ip1} --sku Standard
network application-gateway create -g {rg} -n {gateway} --sku Standard_v2 --public-ip-address {ip1}
network application-gateway wait -g {rg} -n {gateway} --exists
network application-gateway root-cert create -g {rg} --gateway-name {gateway} -n {cert1} --cert-file "{cert1_file}"
network application-gateway root-cert create -g {rg} --gateway-name {gateway} -n {cert2} --cert-file "{cert2_file}"
network application-gateway http-settings create -g {rg} --gateway-name {gateway} -n {settings} --root-certs {cert1} {cert2} --host-name-from-backend-pool true --no-wait --port 443 --protocol https
network application-gateway http-settings update -g {rg} --gateway-name {gateway} -n {settings} --root-certs {cert2} {cert1} --no-wait
network application-gateway show -g {rg} -n {gateway}
network application-gateway http-settings update -g {rg} --gateway-name {gateway} -n {settings} --no-wait
network application-gateway create -g {rg} -n {gateway} --no-wait
network application-gateway wait -g {rg} -n {gateway} --exists
network application-gateway redirect-config create --gateway-name {gateway} -g {rg} -n {name} -t permanent --include-query-string --include-path false --target-listener appGatewayHttpListener --no-wait
network application-gateway redirect-config show --gateway-name {gateway} -g {rg} -n {name}
network application-gateway redirect-config update --gateway-name {gateway} -g {rg} -n {name} --include-path --include-query-string false --no-wait
network application-gateway redirect-config show --gateway-name {gateway} -g {rg} -n {name}
network vnet create -g {rg} -n vnet2 --subnet-name subnet1
network application-gateway create -g {rg} -n ag2 --subnet {subnet_id} --subnet-address-prefix 10.0.0.0/28 --tags foo=doo
network application-gateway create -g {rg} -n ag2 --subnet {subnet_id} --servers 172.0.0.1 www.mydomain.com
network application-gateway create -g {rg} -n ag1 --no-wait --connection-draining-timeout 180
network application-gateway create -g {rg} -n ag2 --no-wait --tags a=b c=d
network application-gateway wait -g {rg} -n ag1 --created --interval 120
network application-gateway wait -g {rg} -n ag2 --created --interval 120
network application-gateway show -g {rg} -n ag1
network application-gateway show -g {rg} -n ag2
network application-gateway delete -g {rg} -n ag2 --no-wait
network application-gateway wait -g {rg} -n ag2 --deleted
network application-gateway create -g {rg} -n ag3 --subnet subnet1 --private-ip-address {private_ip} --cert-file "{path}" --cert-password {pass} --no-wait
network application-gateway wait -g {rg} -n ag3 --exists
network application-gateway show -g {rg} -n ag3
network application-gateway ssl-cert update -g {rg} --gateway-name ag3 -n ag3SslCert --cert-file "{path}" --cert-password {pass}
network application-gateway wait -g {rg} -n ag3 --updated
network application-gateway ssl-policy set -g {rg} --gateway-name ag3 --disabled-ssl-protocols TLSv1_0 TLSv1_1 --no-wait
network application-gateway ssl-policy show -g {rg} --gateway-name ag3
network application-gateway ssl-policy set -g {rg} --gateway-name ag3 --min-protocol-version TLSv1_0 --cipher-suites {cipher} --no-wait
network application-gateway ssl-policy show -g {rg} --gateway-name ag3
network application-gateway ssl-policy set -g {rg} --gateway-name ag3 -n {policy} --no-wait
network application-gateway ssl-policy show -g {rg} --gateway-name ag3
network application-gateway create -g {rg} -n {ag} --no-wait
network application-gateway wait -g {rg} -n {ag} --exists
network {res} create -g {rg} --gateway-name {ag} -n {name} --no-wait --servers 123.4.5.6 www.mydns.com
network {res} show -g {rg} --gateway-name {ag} -n {name}
network {res} update -g {rg} --gateway-name {ag} -n {name} --no-wait --servers 5.4.3.2
network {res} show -g {rg} --gateway-name {ag} -n {name}
network {res} list -g {rg} --gateway-name {ag}
network {res} delete -g {rg} --gateway-name {ag} --no-wait -n {name}
network {res} list -g {rg} --gateway-name {ag}
network public-ip create -g {rg} -n {ip1}
network vnet create -g {rg} -n {vnet1} --subnet-name {subnet}
network application-gateway create -g {rg} -n {ag} --no-wait --public-ip-address {ip1} --vnet-name {vnet1} --subnet {subnet}
network application-gateway wait -g {rg} -n {ag} --exists
network {res} create -g {rg} --gateway-name {ag} -n {name} --no-wait --private-ip-address 10.0.0.10 --vnet-name {vnet1} --subnet {subnet}
network {res} show -g {rg} --gateway-name {ag} -n {name}
network {res} list -g {rg} --gateway-name {ag}
network {res} delete -g {rg} --gateway-name {ag} --no-wait -n {name}
network {res} list -g {rg} --gateway-name {ag}
network application-gateway create -g {rg} -n {ag} --no-wait
network application-gateway wait -g {rg} -n {ag} --exists
network public-ip create -g {rg} -n {ip1}
network public-ip create -g {rg} -n {ip2}
network {res} create -g {rg} --gateway-name {ag} -n {name} --no-wait --public-ip-address {ip1}
network {res} show -g {rg} --gateway-name {ag} -n {name}
network {res} list -g {rg} --gateway-name {ag}
network {res} delete -g {rg} --gateway-name {ag} --no-wait -n {name}
network {res} list -g {rg} --gateway-name {ag}
network application-gateway create -g {rg} -n {ag} --no-wait
network application-gateway wait -g {rg} -n {ag} --exists
network {res} create -g {rg} --gateway-name {ag} -n {name} --no-wait --port 111
network {res} show -g {rg} --gateway-name {ag} -n {name}
network {res} update -g {rg} --gateway-name {ag} -n {name} --no-wait --port 112
network {res} show -g {rg} --gateway-name {ag} -n {name}
network {res} list -g {rg} --gateway-name {ag}
network {res} delete -g {rg} --gateway-name {ag} --no-wait -n {name}
network {res} list -g {rg} --gateway-name {ag}
network application-gateway create -g {rg} -n {ag} --no-wait
network application-gateway wait -g {rg} -n {ag} --exists
network {res} create -g {rg} --gateway-name {ag} -n {name} --no-wait --frontend-port appGatewayFrontendPort --host-name www.test.com
network {res} show -g {rg} --gateway-name {ag} -n {name}
network {res} update -g {rg} --gateway-name {ag} -n {name} --no-wait --host-name www.test2.com
network {res} show -g {rg} --gateway-name {ag} -n {name}
network {res} list -g {rg} --gateway-name {ag}
network {res} delete -g {rg} --gateway-name {ag} --no-wait -n {name}
network {res} list -g {rg} --gateway-name {ag}
network public-ip create -g {rg} -n {gateway_ip} --sku Standard
network application-gateway create -g {rg} -n {ag} --sku WAF_v2 --public-ip-address {gateway_ip} 
network application-gateway frontend-port create -g {rg} --gateway-name {ag} -n {port} --port 18080
network {res} create -g {rg} --gateway-name {ag} -n {name} --frontend-port {port} --host-names "*.contoso.com" "www.microsoft.com"
network {res} show -g {rg} --gateway-name {ag} -n {name}
network {res} update -g {rg} --gateway-name {ag} -n {name} --host-names "*.contoso.com" "www.bing.com"
network {res} show -g {rg} --gateway-name {ag} -n {name}
network {res} list -g {rg} --gateway-name {ag}
network {res} delete -g {rg} --gateway-name {ag} --no-wait -n {name}
network {res} list -g {rg} --gateway-name {ag}
network application-gateway waf-policy create -g {rg} --name {waf_1}
network application-gateway waf-policy create -g {rg} --name {waf_2}
network application-gateway waf-policy create -g {rg} --name {waf_3}
network public-ip create -g {rg} -n ip-1 --sku Standard
network application-gateway create -g {rg} --name {ag} --public-ip-address ip-1 --sku WAF_v2
network application-gateway http-listener update -g {rg} --gateway-name {ag} --name appGatewayHttpListener --waf-policy {waf_1}
network application-gateway frontend-port create -g {rg} --gateway-name {ag} --port 9020 --name 9020
network application-gateway http-listener create -g {rg} --gateway-name {ag} --name {listener_2} --frontend-port 9020 --waf-policy {waf_2}
network application-gateway http-listener update -g {rg} --gateway-name {ag} --name {listener_2} --waf-policy {waf_3}
network application-gateway show -g {rg} --name {ag}
network application-gateway create -g {rg} -n {ag} --no-wait
network application-gateway wait -g {rg} -n {ag} --exists
network {res} create -g {rg} --gateway-name {ag} -n {name} --no-wait --affinity-cookie-name mycookie --connection-draining-timeout 60 --cookie-based-affinity --host-name-from-backend-pool --protocol https --timeout 50 --port 70
network {res} show -g {rg} --gateway-name {ag} -n {name}
network {res} update -g {rg} --gateway-name {ag} -n {name} --no-wait --affinity-cookie-name mycookie2 --connection-draining-timeout 0 --cookie-based-affinity disabled --host-name-from-backend-pool false --protocol http --timeout 40 --port 71
network {res} show -g {rg} --gateway-name {ag} -n {name}
network {res} list -g {rg} --gateway-name {ag}
network {res} delete -g {rg} --gateway-name {ag} --no-wait -n {name}
network {res} list -g {rg} --gateway-name {ag}
network public-ip create -g {rg} -n {gateway_ip} --sku Standard
network application-gateway create -g {rg} -n {ag} --sku WAF_v2 --public-ip-address {gateway_ip} 
network application-gateway probe create -g {rg} --gateway-name {ag} -n {name} --no-wait --path /test --protocol http --interval 25 --timeout 100 --threshold 10 --min-servers 2 --host www.test.com --match-status-codes 200 204 --host-name-from-http-settings false --port 2048 
network application-gateway probe show -g {rg} --gateway-name {ag} -n {name}
network application-gateway probe update -g {rg} --gateway-name {ag} -n {name} --no-wait --path /test2 --protocol https --interval 26 --timeout 101 --threshold 11 --min-servers 3 --host "" --match-status-codes 201 --host-name-from-http-settings --port 4096 
network application-gateway probe show -g {rg} --gateway-name {ag} -n {name}
network application-gateway probe list -g {rg} --gateway-name {ag}
network application-gateway probe delete -g {rg} --gateway-name {ag} --no-wait -n {name}
network application-gateway probe list -g {rg} --gateway-name {ag}
network public-ip create -g {rg} -n {ip} --sku Standard
network application-gateway create -g {rg} -n {ag} --public-ip-address {ip} --sku Standard_v2 --no-wait
network application-gateway wait -g {rg} -n {ag} --exists
network {res} update -g {rg} --gateway-name {ag} -n rule1 --priority 1
network application-gateway http-listener create -g {rg} --gateway-name {ag} -n mylistener --no-wait --frontend-port appGatewayFrontendPort --host-name www.test.com
network application-gateway http-listener create -g {rg} --gateway-name {ag} -n mylistener2 --no-wait --frontend-port appGatewayFrontendPort --host-name www.test2.com
network {res} create -g {rg} --gateway-name {ag} -n {name} --no-wait --http-listener mylistener --priority 12
network {res} show -g {rg} --gateway-name {ag} -n {name}
network {res} update -g {rg} --gateway-name {ag} -n {name} --no-wait --http-listener mylistener2 --priority 32
network {res} show -g {rg} --gateway-name {ag} -n {name}
network application-gateway rewrite-rule set create -g {rg} --gateway-name {ag} -n {set}
network {res} create -g {rg} --gateway-name {ag} -n {name2} --no-wait --rewrite-rule-set {set} --http-listener mylistener --priority 10
network {res} show -g {rg} --gateway-name {ag} -n {name2}
network {res} update -g {rg} --gateway-name {ag} -n {name2} --rewrite-rule-set {set_id} --priority 21
network {res} list -g {rg} --gateway-name {ag}
network {res} delete -g {rg} --gateway-name {ag} --no-wait -n {name}
network {res} list -g {rg} --gateway-name {ag}
network public-ip create -g {rg} -n {ip} --sku Standard
network application-gateway create -g {rg} -n {ag} --public-ip-address {ip} --sku Standard_v2 --no-wait
network application-gateway wait -g {rg} -n {ag} --exists
network application-gateway http-listener create -g {rg} --gateway-name {ag} -n mylistener --no-wait --frontend-port appGatewayFrontendPort --host-name www.test.com
network application-gateway rewrite-rule set create -g {rg} --gateway-name {ag} -n {set}
network application-gateway address-pool create -g {rg} --gateway-name {ag} -n {pool} --no-wait
network application-gateway http-settings create -g {rg} --gateway-name {ag} -n {settings} --port 443 --protocol https
network application-gateway url-path-map create -g {rg} --gateway-name {ag} -n {name} --rule-name {rulename} --paths /mypath1/* --address-pool {pool} --default-address-pool {pool} --http-settings {settings} --default-http-settings {settings} --default-rewrite-rule-set {set} --rewrite-rule-set {set}
network application-gateway url-path-map update -g {rg} --gateway-name {ag} -n {name} --default-rewrite-rule-set {set}
network application-gateway url-path-map rule create -g {rg} --gateway-name {ag} -n {rulename2} --path-map-name {name} --paths /mypath122/* --address-pool {pool} --http-settings {settings} --rewrite-rule-set {set}
network public-ip create -g {rg} -n {ip} --sku Standard
network application-gateway create -g {rg} -n {ag} --public-ip-address {ip} --sku Standard_v2 --no-wait
network application-gateway wait -g {rg} -n {ag} --exists
network application-gateway http-listener create -g {rg} --gateway-name {ag} -n mylistener --no-wait --frontend-port appGatewayFrontendPort --host-name www.test.com
network application-gateway rewrite-rule set create -g {rg} --gateway-name {ag} -n {set}
network application-gateway redirect-config create -g {rg} --gateway-name {ag} -n {redirect_config} --target-listener mylistener --type Permanent
network application-gateway address-pool create -g {rg} --gateway-name {ag} -n {pool} --no-wait
network application-gateway http-settings create -g {rg} --gateway-name {ag} -n {settings} --port 443 --protocol https
network application-gateway url-path-map create -g {rg} --gateway-name {ag} -n {name} --rule-name {rulename} --paths /mypath1/* --redirect-config {redirect_config} --default-redirect-config {redirect_config}
network application-gateway url-path-map rule create -g {rg} --gateway-name {ag} -n {rulename2} --path-map-name {name} --paths /mypath122/* --address-pool {pool} --http-settings {settings}
network application-gateway url-path-map rule create -g {rg} --gateway-name {ag} -n {rulename2} --path-map-name {name} --paths /mypath122/* --address-pool {pool} --http-settings {settings} --redirect-config {redirect_config}
network public-ip create -g {rg} -n {ip} --sku Standard
network application-gateway create -g {rg} -n {gw} --public-ip-address {ip} --sku Standard_v2 --no-wait
network application-gateway wait -g {rg} -n {gw} --exists
network application-gateway rewrite-rule set create -g {rg} --gateway-name {gw} -n {set} --no-wait
network application-gateway rewrite-rule set show -g {rg} --gateway-name {gw} -n {set}
network application-gateway rewrite-rule create -g {rg} --gateway-name {gw} --rule-set-name {set} -n {rule} --sequence 123 --request-headers foo=bar --response-headers cat=hat --no-wait
network application-gateway rewrite-rule update -g {rg} --gateway-name {gw} --rule-set-name {set} -n {rule} --sequence 321 --request-headers bar=foo --response-headers hat=cat --no-wait
network application-gateway rewrite-rule update -g {rg} --gateway-name {gw} --rule-set-name {set} -n {rule} --set ruleSequence=321 --remove actionSet.responseHeaderConfigurations 0 --no-wait
network application-gateway rewrite-rule show -g {rg} --gateway-name {gw} --rule-set-name {set} -n {rule}
network application-gateway rewrite-rule list -g {rg} --gateway-name {gw} --rule-set-name {set}
network application-gateway rewrite-rule list-request-headers
network application-gateway rewrite-rule list-response-headers
network application-gateway rewrite-rule create -g {rg} --gateway-name {gw} --rule-set-name {set} -n {rule2} --sequence 123 --request-headers foo=bar --response-headers cat=hat --modified-path "/def" --modified-query-string "a=b&c=d%20f"
network application-gateway rewrite-rule update -g {rg} --gateway-name {gw} --rule-set-name {set} -n {rule2} --sequence 321 --request-headers bar=foo --response-headers hat=cat --modified-path "/def2" --modified-query-string "a=b&c=d%20f12" --enable-reroute
network application-gateway rewrite-rule update -g {rg} --gateway-name {gw} --rule-set-name {set} -n {rule2} --set ruleSequence=321 --remove actionSet.responseHeaderConfigurations 0 --no-wait
network application-gateway rewrite-rule show -g {rg} --gateway-name {gw} --rule-set-name {set} -n {rule2}
network application-gateway rewrite-rule create -g {rg} --gateway-name {gw} --rule-set-name {set} -n {rule3} --sequence 123 --modified-path "/" --no-wait
network application-gateway rewrite-rule condition create -g {rg} --gateway-name {gw} --rule-set-name {set} --rule-name {rule} --variable {var} --pattern "^Bearer" --ignore-case false --negate --no-wait
network application-gateway rewrite-rule condition update -g {rg} --gateway-name {gw} --rule-set-name {set} --rule-name {rule} --variable {var} --pattern "^Bearers" --no-wait
network application-gateway rewrite-rule condition show -g {rg} --gateway-name {gw} --rule-set-name {set} --rule-name {rule} --variable {var}
network application-gateway rewrite-rule condition list -g {rg} --gateway-name {gw} --rule-set-name {set} --rule-name {rule}
network application-gateway rewrite-rule condition delete -g {rg} --gateway-name {gw} --rule-set-name {set} --rule-name {rule} --variable {var} --no-wait
network application-gateway rewrite-rule condition list -g {rg} --gateway-name {gw} --rule-set-name {set} --rule-name {rule}
network application-gateway rewrite-rule condition list-server-variables
network application-gateway rewrite-rule delete -g {rg} --gateway-name {gw} --rule-set-name {set} -n {rule} --no-wait
network application-gateway rewrite-rule list -g {rg} --gateway-name {gw} --rule-set-name {set}
network application-gateway rewrite-rule set delete -g {rg} --gateway-name {gw} -n {set} --no-wait
network application-gateway rewrite-rule set list -g {rg} --gateway-name {gw}
network application-gateway create -g {rg} -n test4 --subnet subnet1 --vnet-name vnet4 --vnet-address-prefix 10.0.0.1/16 --subnet-address-prefix 10.0.0.1/28 --public-ip-address {ip}
network application-gateway create -g {rg} -n {ag} --subnet subnet1 --vnet-name vnet1 --public-ip-address {ip} --sku WAF_Medium --no-wait
network application-gateway wait -g {rg} -n {ag} --exists
network application-gateway show -g {rg} -n {ag}
network application-gateway waf-config set -g {rg} --gateway-name {ag} --enabled true --firewall-mode prevention --rule-set-version 2.2.9 --disabled-rule-groups crs_30_http_policy --disabled-rules 981175 981176 --no-wait
network application-gateway waf-config show -g {rg} --gateway-name {ag}
network public-ip create -g {rg} -n {ip} --sku standard
network application-gateway create -g {rg} -n {ag} --subnet subnet1 --vnet-name vnet1 --public-ip-address {ip} --sku WAF_v2 --no-wait
network application-gateway wait -g {rg} -n {ag} --exists
network application-gateway waf-config set -g {rg} --gateway-name ag1 --enabled true --firewall-mode prevention --rule-set-version 3.0 --exclusion RequestHeaderNames StartsWith abc --exclusion RequestArgNames Equals def --no-wait
network application-gateway waf-config show -g {rg} --gateway-name ag1
network application-gateway waf-policy create -g {rg} -n {waf}
network application-gateway waf-policy show -g {rg} -n {waf}
network application-gateway waf-policy custom-rule create -g {rg} --policy-name {waf} -n {rule} --priority 50 --action LOG --rule-type MatchRule
network application-gateway waf-policy show -g {rg} -n {waf}
network application-gateway waf-policy custom-rule show -g {rg} --policy-name {waf} -n {rule}
network application-gateway waf-policy custom-rule match-condition add -g {rg} --policy-name {waf} -n {rule} --match-variables RequestHeaders.value --operator contains --values foo boo --transform lowercase
network application-gateway waf-policy custom-rule show -g {rg} --policy-name {waf} -n {rule}
network application-gateway waf-policy custom-rule update -g {rg} --policy-name {waf} -n {rule} --priority 75
network application-gateway waf-policy custom-rule match-condition add -g {rg} --policy-name {waf} -n {rule} --match-variables RequestHeaders.value --operator contains --values remove this --transform lowercase
network application-gateway waf-policy custom-rule show -g {rg} --policy-name {waf} -n {rule}
network application-gateway waf-policy custom-rule match-condition remove -g {rg} --policy-name {waf} -n {rule} --index 0
network application-gateway waf-policy custom-rule show -g {rg} --policy-name {waf} -n {rule}
network application-gateway waf-policy create -g {rg} -n {waf}
network application-gateway waf-policy managed-rule exclusion add -g {rg} --policy-name {waf}                  --match-variable RequestHeaderNames --match-operator StartsWith --selector Bing
network application-gateway waf-policy managed-rule exclusion rule-set add -g {rg} --policy-name {waf}             --match-variable RequestHeaderNames --match-operator StartsWith --selector Bing             --type OWASP --version 3.2             --group-name {rule_group1} --rule-ids 921140 921150
network application-gateway waf-policy managed-rule exclusion rule-set add -g {rg} --policy-name {waf}             --match-variable RequestHeaderNames --match-operator StartsWith --selector Bing             --type OWASP --version 3.2             --group-name {rule_group2} --rule-ids 931100
network application-gateway waf-policy managed-rule exclusion rule-set remove -g {rg} --policy-name {waf}             --match-variable RequestHeaderNames --match-operator StartsWith --selector Bing             --type OWASP --version 3.2 --group-name {rule_group1}
network application-gateway waf-policy managed-rule exclusion rule-set list -g {rg} --policy-name {waf}
network application-gateway waf-policy create -g {rg} -n {waf}
network application-gateway waf-policy managed-rule rule-set add -g {rg} --policy-name {waf} --type OWASP --version 3.0 --group-name {csr_grp1} --rules 921100 921110
network application-gateway waf-policy show -g {rg} -n {waf}
network application-gateway waf-policy managed-rule rule-set add -g {rg} --policy-name {waf} --type OWASP --version 3.0 --group-name {csr_grp1} --rules 921150
network application-gateway waf-policy managed-rule rule-set list -g {rg} --policy-name {waf}
network application-gateway waf-policy managed-rule rule-set add -g {rg} --policy-name {waf} --type OWASP --version 3.0 --group-name {csr_grp2} --rules 913100
network application-gateway waf-policy managed-rule rule-set list -g {rg} --policy-name {waf}
network application-gateway waf-policy managed-rule rule-set update -g {rg} --policy-name {waf} --type OWASP --version 3.0 --group-name {csr_grp1} --rules 921100 921150
network application-gateway waf-policy managed-rule rule-set list -g {rg} --policy-name {waf}
network application-gateway waf-policy managed-rule rule-set remove -g {rg} --policy-name {waf} --type OWASP --version 3.1 --group-name {csr_grp1} 
network application-gateway waf-policy managed-rule rule-set list -g {rg} --policy-name {waf}
network application-gateway waf-policy managed-rule rule-set update -g {rg} --policy-name {waf} --type OWASP --version 3.1
network application-gateway waf-policy managed-rule rule-set list -g {rg} --policy-name {waf}
network application-gateway waf-policy managed-rule rule-set update -g {rg} --policy-name {waf} --type OWASP --version 3.1 --group-name REQUEST-911-METHOD-ENFORCEMENT --rules 911100
network application-gateway waf-policy managed-rule rule-set list -g {rg} --policy-name {waf}
network application-gateway waf-policy create -g {rg} -n {waf}
network application-gateway waf-policy managed-rule exclusion add -g {rg} --policy-name {waf} --match-variable "RequestHeaderNames" --selector-match-operator "StartsWith" --selector "Bing"
network application-gateway waf-policy managed-rule exclusion list -g {rg} --policy-name {waf}
network application-gateway waf-policy managed-rule exclusion add -g {rg} --policy-name {waf} --match-variable "RequestHeaderNames" --selector-match-operator "Contains" --selector "Azure"
network application-gateway waf-policy managed-rule exclusion list -g {rg} --policy-name {waf}
network application-gateway waf-policy managed-rule exclusion remove  -g {rg} --policy-name {waf} 
network application-gateway waf-policy managed-rule exclusion list -g {rg} --policy-name {waf}
network application-gateway waf-policy create -g {rg} -n {waf}
network application-gateway waf-policy policy-setting update -g {rg} --policy-name {waf} --state Enabled --file-upload-limit-in-mb 64 --mode Prevention
network application-gateway waf-policy create -g {rg} -n {waf}
network application-gateway waf-policy update -g {rg} -n {waf} --tags test=best
network application-gateway waf-policy show -g {rg} -n {waf}
network application-gateway waf-policy list -g {rg}
network application-gateway waf-policy custom-rule create -g {rg} --policy-name {waf} -n {custom-rule1} --priority 50 --action log --rule-type MatchRule
network application-gateway waf-policy custom-rule create -g {rg} --policy-name {waf} -n {custom-rule2} --priority 100 --action log --rule-type MatchRule
network application-gateway waf-policy policy-setting update -g {rg} --policy-name {waf} --state Enabled --file-upload-limit-in-mb 64 --mode Prevention
network application-gateway waf-policy managed-rule rule-set add -g {rg} --policy-name {waf} --type OWASP --version 3.0
network application-gateway waf-policy managed-rule rule-set add -g {rg} --policy-name {waf} --type OWASP --version 3.0 --group-name {csr_grp1} --rules 921100 921110
network application-gateway waf-policy managed-rule rule-set add -g {rg} --policy-name {waf} --type OWASP --version 3.0 --group-name {csr_grp2} --rules 913100
network application-gateway waf-policy managed-rule rule-set add -g {rg} --policy-name {waf} --type Microsoft_BotManagerRuleSet --version 0.1
network application-gateway waf-policy managed-rule exclusion add -g {rg} --policy-name {waf} --match-variable "RequestHeaderNames" --selector-match-operator "StartsWith" --selector "Bing"
network application-gateway waf-policy show -g {rg} -n {waf}
network public-ip create -g {rg} -n {ip1} --sku standard
network public-ip create -g {rg} -n {ip2} --sku standard
network application-gateway create -g {rg} -n {ag1} --subnet subnet1 --vnet-name vnet1 --public-ip-address {ip1} --sku WAF_v2 --waf-policy {waf}
network application-gateway create -g {rg} -n {ag2} --subnet subnet2 --vnet-name vnet2 --public-ip-address {ip2} --sku WAF_v2 --waf-policy {waf}
network application-gateway show -g {rg} -n {ag1}
network application-gateway show -g {rg} -n {ag2}
network application-gateway waf-policy show -g {rg} -n {waf}
network application-gateway waf-policy create -g {rg} -n {waf} --version 3.1 --type OWASP
network application-gateway waf-policy managed-rule rule-set add -g {rg} --policy-name {waf} --type OWASP --version 3.1 --group-name {csr_grp1} --rules 921120 921110
network application-gateway waf-policy show -g {rg} -n {waf}
network application-gateway waf-policy managed-rule rule-set add -g {rg} --policy-name {waf} --type OWASP --version 3.1 --group-name {csr_grp1} --rules 921150
network application-gateway waf-policy managed-rule rule-set list -g {rg} --policy-name {waf}
network application-gateway waf-policy managed-rule rule-set add -g {rg} --policy-name {waf} --type OWASP --version 3.1 --group-name {csr_grp2} --rules 913100
network application-gateway waf-policy managed-rule rule-set list -g {rg} --policy-name {waf}
network application-gateway waf-policy managed-rule rule-set update -g {rg} --policy-name {waf} --type OWASP --version 3.1 --group-name {csr_grp1} --rules 921130 921140
network application-gateway waf-policy managed-rule rule-set list -g {rg} --policy-name {waf}
network application-gateway waf-policy managed-rule rule-set remove -g {rg} --policy-name {waf} --type OWASP --version 3.1 --group-name {csr_grp1} 
network application-gateway waf-policy managed-rule rule-set list -g {rg} --policy-name {waf}
network public-ip create -g {rg} -n {ip1} --dns-name {dns} --allocation-method static
network public-ip create -g {rg} -n {ip2}
network public-ip update -g {rg} -n {ip2} --allocation-method static --dns-name wowza2 --idle-timeout 10 --tags foo=doo
network public-ip list -g {rg}
network public-ip show -g {rg} -n {ip1}
network public-ip delete -g {rg} -n {ip1}
network public-ip list -g {rg}
network public-ip create -g {rg} -n ip --sku Standard -z 1 2 3
network public-ip create -g {rg} -n {ip} -l centralus -z 2
network public-ip show -g {rg} -n {ip} -otable
network route-filter create -g {rg} -n {filter} --tags foo=doo
network route-filter update -g {rg} -n {filter}
network route-filter show -g {rg} -n {filter}
network route-filter list -g {rg}
network route-filter rule create -g {rg} --filter-name {filter} -n rule1 --communities 12076:5040 12076:5030 --access allow
network route-filter rule update -g {rg} --filter-name {filter} -n rule1 --set access=Deny
network route-filter rule show -g {rg} --filter-name {filter} -n rule1
network route-filter rule list -g {rg} --filter-name {filter}
network route-filter rule delete -g {rg} --filter-name {filter} -n rule1
network route-filter delete -g {rg} -n {filter}
network express-route list-service-providers
network express-route create -g {rg} -n {er} --bandwidth 50 --provider "Ibiza Test Provider" --peering-location Area51 --sku-tier Premium --tags foo=doo
network express-route list
network express-route list --resource-group {rg}
network express-route show --resource-group {rg} --name {er}
network express-route get-stats --resource-group {rg} --name {er}
network express-route update -g {rg} -n {er} --set tags.test=Test
network express-route update -g {rg} -n {er} --tags foo=boo
network express-route auth create -g {rg} --circuit-name {er} -n auth1
network express-route auth list --resource-group {rg} --circuit-name {er}
network express-route auth show -g {rg} --circuit-name {er} -n auth1
network express-route auth delete -g {rg} --circuit-name {er} -n auth1
network express-route auth list --resource-group {rg} --circuit-name {er}
network express-route peering create -g {rg} --circuit-name {er} --peering-type {peering} --peer-asn {asn} --vlan-id {vlan} --primary-peer-subnet {pri_prefix} --secondary-peer-subnet {sec_prefix}
network express-route peering create -g {rg} --circuit-name {er} --peering-type MicrosoftPeering --peer-asn 10002 --vlan-id 103 --primary-peer-subnet 104.0.0.0/30 --secondary-peer-subnet 105.0.0.0/30 --advertised-public-prefixes 104.0.0.0/30 --customer-asn 10000 --routing-registry-name level3
network express-route peering show -g {rg} --circuit-name {er} -n MicrosoftPeering
network express-route peering delete -g {rg} --circuit-name {er} -n MicrosoftPeering
network express-route peering list --resource-group {rg} --circuit-name {er}
network express-route peering update -g {rg} --circuit-name {er} -n AzurePrivatePeering --set vlanId=200
network express-route list-arp-tables --resource-group {rg} --name {er} --peering-name azureprivatepeering --path primary
network express-route list-route-tables --resource-group {rg} --name {er} --peering-name azureprivatepeering --path primary
network express-route list-route-tables-summary --resource-group {rg} --name {er} --peering-name azureprivatepeering --path primary
network express-route delete --resource-group {rg} --name {er}
network express-route list --resource-group {rg}
network express-route gateway connection show --ids /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myrg/providers/Microsoft.Network/expressRouteGateways/aaa
keyvault secret set --name {CAK_name} --vault-name {kv} --value {CAK_value}
keyvault secret set --name {CKN_name} --vault-name {kv} --value {CKN_value}
identity create -g {rg} -n {name}
keyvault set-policy -n {kv} --secret-permissions get --object-id d085cdb2-c36a-4be8-8536-6382bb927d15
network express-route port location list
network express-route port location show -l {peeringRG}
network express-route port create -g {rg} -n {name} --location {location} --peering-location {peeringRG} --encapsulation {encapsulation} --bandwidth {bandwidth}
network express-route port list -g {rg}
network express-route port show -g {rg} -n {name}
network express-route port identity assign -g {rg} -n {name} --identity /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/cli_test_express_route_port000001/providers/Microsoft.ManagedIdentity/userAssignedIdentities/expressRouteTest
network express-route port identity show -g {rg} -n {name}
network express-route port link list -g {rg} --port-name {name}
network express-route port link show -g {rg} --port-name {name} -n link1
network express-route port link update -g {rg} --port-name {name} -n link1 --macsec-ckn-secret-identifier {CKN_id} --macsec-cak-secret-identifier {CAK_id} --macsec-cipher {cipher} --admin-state
network express-route port generate-loa --customer-name MyCustomer -g {rg} --name {name} -f loa1
network express-route create -g {rg} -n {er} --bandwidth 50 --provider "Ibiza Test Provider" --peering-location Area51 --sku-tier Premium
network express-route peering create -g {rg} --circuit-name {er} --peering-type MicrosoftPeering --peer-asn 10002 --vlan-id 103 --primary-peer-subnet 104.0.0.0/30 --secondary-peer-subnet 105.0.0.0/30 --advertised-public-prefixes 104.0.0.0/30 --customer-asn 10000 --routing-registry-name level3
network express-route peering update -g {rg} --circuit-name {er} -n MicrosoftPeering --ip-version ipv6 --primary-peer-subnet 2001:db00::/126 --secondary-peer-subnet 2002:db00::/126 --advertised-public-prefixes 2001:db00::/126 --customer-asn 100001 --routing-registry-name level3
network express-route peering show -g {rg} --circuit-name {er} -n MicrosoftPeering
network express-route peering get-stats -g {rg} --circuit-name {er} -n MicrosoftPeering
network express-route create -g {rg} -n {er} --bandwidth 50 --provider "Ibiza Test Provider" --peering-location Area51 --sku-tier Premium
network express-route peering create -g {rg} --circuit-name {er} --peering-type AzurePrivatePeering --peer-asn 10002 --vlan-id 103 --ip-version ipv6 --primary-peer-subnet 2002:db00::/126 --secondary-peer-subnet 2003:db00::/126
network express-route create -g {rg} -n {er1} --allow-global-reach --bandwidth 50 --peering-location Area51 --provider "Microsoft ER Test" --sku-tier Premium
network express-route peering create -g {rg} --circuit-name {er1} --peering-type AzurePrivatePeering --peer-asn 10001 --vlan-id 101 --primary-peer-subnet 102.0.0.0/30 --secondary-peer-subnet 103.0.0.0/30
network express-route create -g {rg} -n {er2} --allow-global-reach --bandwidth 50 --peering-location "Denver Test" --provider "Test Provider NW" --sku-tier Premium
network express-route peering create -g {rg} --circuit-name {er2} --peering-type AzurePrivatePeering --peer-asn 10002 --vlan-id 102 --primary-peer-subnet 104.0.0.0/30 --secondary-peer-subnet 105.0.0.0/30
network express-route peering connection create -g {rg} --circuit-name {er1} --peering-name AzurePrivatePeering -n {conn12} --peer-circuit {er2} --address-prefix 104.0.0.0/29
network express-route peering connection show -g {rg} --circuit-name {er1} --peering-name AzurePrivatePeering -n {conn12}
network express-route peering connection list -g {rg} --circuit-name {er1} --peering-name AzurePrivatePeering
network express-route peering connection delete -g {rg} --circuit-name {er1} --peering-name AzurePrivatePeering -n {conn12}
network express-route create -g {rg} -n {er1} --allow-global-reach --bandwidth 50 --peering-location Area51 --provider "Microsoft ER Test" --sku-tier Premium
network express-route peering create -g {rg} --circuit-name {er1} --peering-type AzurePrivatePeering --peer-asn 10001 --vlan-id 101 --primary-peer-subnet 102.0.0.0/30 --secondary-peer-subnet 103.0.0.0/30
network express-route create -g {rg} -n {er2} --allow-global-reach --bandwidth 50 --peering-location "Denver Test" --provider "Test Provider NW" --sku-tier Premium
network express-route peering create -g {rg} --circuit-name {er2} --peering-type AzurePrivatePeering --peer-asn 10002 --vlan-id 102 --primary-peer-subnet 104.0.0.0/30 --secondary-peer-subnet 105.0.0.0/30
network express-route peering connection create -g {rg} --circuit-name {er1} --peering-name AzurePrivatePeering -n {conn12} --peer-circuit {er2} --address-prefix 104.0.0.0/29
network express-route peering connection ipv6-config set -g {rg} --circuit-name {er1} --peering-name AzurePrivatePeering -n {conn12} --address-prefix .../125
network express-route peering connection ipv6-config remove -g {rg} --circuit-name {er1} --peering-name AzurePrivatePeering -n {conn12}
network express-route peering connection delete -g {rg} --circuit-name {er1} --peering-name AzurePrivatePeering -n {conn12}
network express-route create -g {rg} -n {er1} --allow-global-reach --bandwidth 50 --peering-location Area51 --provider "Microsoft ER Test" --sku-tier Premium
network express-route peering create -g {rg} --circuit-name {er1} --peering-type AzurePrivatePeering --peer-asn 10001 --vlan-id 101 --primary-peer-subnet 102.0.0.0/30 --secondary-peer-subnet 103.0.0.0/30
network express-route create -g {rg} -n {er2} --allow-global-reach --bandwidth 50 --peering-location "Denver Test" --provider "Test Provider NW" --sku-tier Premium
network express-route peering create -g {rg} --circuit-name {er2} --peering-type AzurePrivatePeering --peer-asn 10002 --vlan-id 102 --primary-peer-subnet 104.0.0.0/30 --secondary-peer-subnet 105.0.0.0/30
network express-route peering peer-connection show -g {rg} --circuit-name {er1} --peering-name AzurePrivatePeering -n {peconn12}
network express-route peering peer-connection list -g {rg} --circuit-name {er1} --peering-name AzurePrivatePeering
network cross-region-lb create -n {lb}1 -g {rg}
network cross-region-lb create -n {lb}2 -g {rg} --public-ip-address-allocation static --tags foo=doo
network public-ip show -g {rg} -n PublicIP{lb}2
network public-ip create -n {pub_ip} -g {rg} --sku Standard --tier Global
network cross-region-lb create -n {lb}3 -g {rg} --public-ip-address {pub_ip}
network cross-region-lb list
network cross-region-lb list --resource-group {rg}
network cross-region-lb show --resource-group {rg} --name {lb}1
network cross-region-lb delete --resource-group {rg} --name {lb}1
network cross-region-lb list --resource-group {rg}
network cross-region-lb create -g {rg} -n {lb}
network cross-region-lb address-pool create -g {rg} --lb-name {lb} -n bap1
network cross-region-lb address-pool create -g {rg} --lb-name {lb} -n bap2
network cross-region-lb address-pool create -g {rg} --lb-name {lb} -n bap3
network lb address-pool list -g {rg} --lb-name {lb}
network lb address-pool show -g {rg} --lb-name {lb} -n bap1
network lb address-pool delete -g {rg} --lb-name {lb} -n bap1
network lb address-pool list -g {rg} --lb-name {lb}
network lb create -n {regional_lb1} -g {rg} --sku Standard
network lb create -n {regional_lb2} -g {rg} --sku Standard
network cross-region-lb create -g {rg} -n {lb}
network cross-region-lb address-pool create -g {rg} --lb-name {lb} -n {address_pool} --backend-address name={backend_address1} frontend-ip-address={regional_lb_frontend_ip_address1} 
network cross-region-lb address-pool address add -g {rg} --lb-name {lb} --pool-name {address_pool} --name {backend_address2} --frontend-ip-address {regional_lb_frontend_ip_address2}
network cross-region-lb address-pool address remove -g {rg} --lb-name {lb} --pool-name {address_pool} --name {backend_address2}
network cross-region-lb address-pool address list -g {rg} --lb-name {lb} --pool-name {address_pool}
network cross-region-lb address-pool list -g {rg} --lb-name {lb}
network cross-region-lb address-pool show -g {rg} --lb-name {lb} -n {address_pool}
network cross-region-lb address-pool delete -g {rg} --lb-name {lb} -n {address_pool}
network cross-region-lb address-pool list -g {rg} --lb-name {lb}
network cross-region-lb create -g {rg} -n {lb}
network cross-region-lb probe create -g {rg} --lb-name {lb} -n probe1 --port 1 --protocol http --path "/test1"
network cross-region-lb probe create -g {rg} --lb-name {lb} -n probe2 --port 2 --protocol http --path "/test2"
network cross-region-lb probe create -g {rg} --lb-name {lb} -n probe3 --port 3 --protocol http --path "/test3"
network lb probe list -g {rg} --lb-name {lb}
network cross-region-lb probe update -g {rg} --lb-name {lb} -n probe1 --interval 20 --threshold 5
network cross-region-lb probe update -g {rg} --lb-name {lb} -n probe2 --protocol tcp --path ""
network cross-region-lb probe show -g {rg} --lb-name {lb} -n probe1
network cross-region-lb probe update -g {rg} --lb-name {lb} -n probe1 --set intervalInSeconds=15 --set numberOfProbes=3
network cross-region-lb probe show -g {rg} --lb-name {lb} -n probe2
network cross-region-lb probe delete -g {rg} --lb-name {lb} -n probe3
network cross-region-lb probe list -g {rg} --lb-name {lb}
network cross-region-lb create -g {rg} -n {lb2}
network cross-region-lb probe create -g {rg} --lb-name {lb2} -n probe1 --port 443 --protocol https --path "/test1"
network cross-region-lb probe list -g {rg} --lb-name {lb2}
network cross-region-lb create -g {rg} -n {lb}
network cross-region-lb rule create -g {rg} --lb-name {lb} -n rule2 --frontend-port 60 --backend-port 60 --protocol tcp
network cross-region-lb address-pool create -g {rg} --lb-name {lb} -n bap1
network cross-region-lb address-pool create -g {rg} --lb-name {lb} -n bap2
network cross-region-lb rule create -g {rg} --lb-name {lb} -n rule1 --frontend-ip-name LoadBalancerFrontEnd --frontend-port 40 --backend-pool-name bap1 --backend-port 40 --protocol tcp
network cross-region-lb rule list -g {rg} --lb-name {lb}
network cross-region-lb rule update -g {rg} --lb-name {lb} -n rule1 --floating-ip true --idle-timeout 20 --load-distribution sourceip --protocol udp
network cross-region-lb rule update -g {rg} --lb-name {lb} -n rule2 --backend-pool-name bap2 --load-distribution sourceipprotocol
network cross-region-lb rule show -g {rg} --lb-name {lb} -n rule1
network cross-region-lb rule update -g {rg} --lb-name {lb} -n rule1 --set idleTimeoutInMinutes=5
network cross-region-lb rule show -g {rg} --lb-name {lb} -n rule2
network cross-region-lb rule delete -g {rg} --lb-name {lb} -n rule1
network cross-region-lb rule delete -g {rg} --lb-name {lb} -n rule2
network cross-region-lb rule list -g {rg} --lb-name {lb}
network public-ip create -g {rg} -n publicip1 --sku Standard
network public-ip create -g {rg} -n publicip2 --sku Standard
network public-ip create -g {rg} -n publicip3 --sku Standard
network cross-region-lb create -g {rg} -n lb1 --public-ip-address publicip1
network cross-region-lb frontend-ip create -g {rg} --lb-name lb1 -n ipconfig1 --public-ip-address publicip2
network cross-region-lb frontend-ip list -g {rg} --lb-name lb1
network cross-region-lb frontend-ip update -g {rg} --lb-name lb1 -n ipconfig1 --public-ip-address publicip3
network cross-region-lb frontend-ip show -g {rg} --lb-name lb1 -n ipconfig1
network cross-region-lb frontend-ip update -g {rg} --lb-name lb1 -n ipconfig1 --set publicIpAddress.id="{ip2_id}"
network cross-region-lb frontend-ip delete -g {rg} --lb-name lb1 -n ipconfig1
network cross-region-lb frontend-ip list -g {rg} --lb-name lb1
network lb create -n {lb}1 -g {rg}
network lb create -n {lb}2 -g {rg} --public-ip-address-allocation static --tags foo=doo
network public-ip show -g {rg} -n PublicIP{lb}2
network vnet create -n {vnet} -g {rg} --subnet-name default
network lb create -n {lb}3 -g {rg} --subnet {subnet_id} --private-ip-address {pri_ip}
network public-ip create -n {pub_ip} -g {rg}
network lb create -n {lb}4 -g {rg} --public-ip-address {pub_ip}
network lb list
network lb list --resource-group {rg}
network lb show --resource-group {rg} --name {lb}1
network lb delete --resource-group {rg} --name {lb}1
network lb list --resource-group {rg}
network public-ip create -g {rg} -n publicip1
network public-ip create -g {rg} -n publicip2
network public-ip create -g {rg} -n publicip3
network lb create -g {rg} -n lb1 --public-ip-address publicip1
network vnet create -g {rg} -n vnet1 --subnet-name subnet1
network vnet subnet create -g {rg} --vnet-name vnet1 -n subnet2 --address-prefix 10.0.1.0/24
network lb create -g {rg} -n lb2 --subnet subnet1 --vnet-name vnet1
network lb frontend-ip create -g {rg} --lb-name lb1 -n ipconfig1 --public-ip-address publicip2
network lb frontend-ip list -g {rg} --lb-name lb1
network lb frontend-ip update -g {rg} --lb-name lb1 -n ipconfig1 --public-ip-address publicip3
network lb frontend-ip show -g {rg} --lb-name lb1 -n ipconfig1
network lb frontend-ip update -g {rg} --lb-name lb1 -n ipconfig1 --set publicIpAddress.id="{ip2_id}"
network lb frontend-ip delete -g {rg} --lb-name lb1 -n ipconfig1
network lb frontend-ip list -g {rg} --lb-name lb1
network lb frontend-ip create -g {rg} --lb-name lb2 -n ipconfig2 --vnet-name vnet1 --subnet subnet1 --private-ip-address 10.0.0.99
network lb frontend-ip list -g {rg} --lb-name lb2
network lb frontend-ip update -g {rg} --lb-name lb2 -n ipconfig2 --subnet subnet2 --vnet-name vnet1 --private-ip-address 10.0.1.100
network lb frontend-ip show -g {rg} --lb-name lb2 -n ipconfig2
network lb create -g {rg} -n {lb} --sku Standard
network public-ip prefix create -g {rg} -n {prefix} --length 30
network lb frontend-ip create -g {rg} --lb-name {lb} -n {frontend2} --public-ip-prefix {prefix}
network lb outbound-rule create -g {rg} --lb-name {lb} -n {rule1} --address-pool {backend} --enable-tcp-reset --frontend-ip-configs {frontend1} --outbound-ports 512 --protocol Tcp
network lb outbound-rule create -g {rg} --lb-name {lb} -n {rule2} --address-pool {backend} --frontend-ip-configs {frontend2} --idle-timeout 20 --protocol all
network lb outbound-rule update -g {rg} --lb-name {lb} -n {rule2} --idle-timeout 25
network lb outbound-rule list -g {rg} --lb-name {lb}
network lb outbound-rule show -g {rg} --lb-name {lb} -n {rule1}
network lb outbound-rule delete -g {rg} --lb-name {lb} -n {rule1}
network lb outbound-rule list -g {rg} --lb-name {lb}
network lb create -g {rg} -n {lb}
network lb address-pool create -g {rg} --lb-name {lb} -n bap1
network lb address-pool create -g {rg} --lb-name {lb} -n bap2
network lb address-pool create -g {rg} --lb-name {lb} -n bap3
network lb address-pool list -g {rg} --lb-name {lb}
network lb address-pool show -g {rg} --lb-name {lb} -n bap1
network lb address-pool delete -g {rg} --lb-name {lb} -n bap1
network lb address-pool list -g {rg} --lb-name {lb}
network vnet create -g {rg} -n {vnet} --subnet-name subnet1
network vnet subnet create -g {rg} -n {subnet_name} --vnet-name {vnet} --address-prefixes 10.0.1.0/24
network nic create -g {rg} -n {nic} --subnet subnet1 --vnet-name {vnet}
network lb create -g {rg} -n {lb} --sku Standard
network vnet show -g {rg} -n {vnet}
network lb address-pool create -g {rg} --lb-name {lb} -n bap1 --vnet {vnet} --backend-address name=addr1 ip-address=10.0.0.1 --backend-address name=addr2 ip-address=10.0.0.2 --backend-address name=addr3 ip-address=10.0.0.3
network lb address-pool create -g {rg} --lb-name {lb} -n bap2 --vnet {vnet} --backend-address name=addr1 ip-address=10.0.0.1 subnet={subnet} --backend-address name=addr2 ip-address=10.0.0.2 subnet={subnet_name} --backend-address name=addr3 ip-address=10.0.0.3 subnet={subnet}
network lb address-pool update -g {rg} --lb-name {lb} -n bap2 --vnet {vnet} --backend-address name=addr1 ip-address=10.0.0.3 subnet={subnet} --backend-address name=addr2 ip-address=10.0.0.4 subnet={subnet_name} --backend-address name=addr3 ip-address=10.0.0.5 subnet={subnet}
network lb address-pool delete -g {rg} --lb-name {lb} -n bap2 
network lb address-pool address add -g {rg} --lb-name {lb} --pool-name bap1 --name addr6 --vnet {vnet} --ip-address 10.0.0.6
network lb address-pool address remove -g {rg} --lb-name {lb} --pool-name bap1 --name addr2
network lb address-pool address list -g {rg} --lb-name {lb} --pool-name bap1
network lb address-pool list -g {rg} --lb-name {lb}
network lb address-pool show -g {rg} --lb-name {lb} -n bap1
network lb address-pool delete -g {rg} --lb-name {lb} -n bap1
network lb address-pool list -g {rg} --lb-name {lb}
network lb address-pool create -g {rg} --lb-name {lb} -n bap1 --vnet {vnet} --backend-addresses-config-file @"{lb_address_pool_file_path}"
network lb address-pool address list -g {rg} --lb-name {lb} --pool-name bap1
network lb address-pool delete -g {rg} --lb-name {lb} -n bap1
network lb address-pool list -g {rg} --lb-name {lb}
network lb address-pool create -g {rg} --lb-name {lb} -n bap1 --vnet {vnet}
network lb address-pool address add -g {rg} --lb-name {lb} --pool-name bap1 --name addr6 --vnet {vnet} --ip-address 10.0.0.6
network lb address-pool address list -g {rg} --lb-name {lb} --pool-name bap1
network lb address-pool address add -g {rg} --lb-name {lb} --pool-name bap1 --name addr7 --subnet {subnet} --ip-address 10.0.0.7
network lb address-pool address add -g {rg} --lb-name {lb} --pool-name bap1 --name addr8 --vnet {vnet} --subnet {subnet_name} --ip-address 10.0.0.8
network lb address-pool address list -g {rg} --lb-name {lb} --pool-name bap1
network lb create -g {rg} -n {lb}
network lb inbound-nat-pool create -g {rg} --lb-name {lb} -n rule1000 --protocol tcp --frontend-port-range-start 1000  --frontend-port-range-end 1999 --backend-port 1000
network lb inbound-nat-pool create -g {rg} --lb-name {lb} -n rule2000 --protocol tcp --frontend-port-range-start 2000  --frontend-port-range-end 2999 --backend-port 2000
network lb inbound-nat-pool create -g {rg} --lb-name {lb} -n rule3000 --protocol tcp --frontend-port-range-start 3000  --frontend-port-range-end 3999 --backend-port 3000
network lb inbound-nat-pool list -g {rg} --lb-name {lb}
network lb inbound-nat-pool update -g {rg} --lb-name {lb} -n rule1000 --protocol udp --backend-port 50 --floating-ip --idle-timeout 20
network lb inbound-nat-pool show -g {rg} --lb-name {lb} -n rule1000
network lb inbound-nat-pool update -g {rg} --lb-name {lb} -n rule1000 --set protocol=Tcp
network lb inbound-nat-pool delete -g {rg} --lb-name {lb} -n rule1000
network lb inbound-nat-pool delete -g {rg} --lb-name {lb} -n rule2000
network lb inbound-nat-pool delete -g {rg} --lb-name {lb} -n rule3000
network lb inbound-nat-pool list -g {rg} --lb-name {lb}
network lb create -g {rg} -n {lb}
network lb inbound-nat-rule create -g {rg} --lb-name {lb} -n rule1 --protocol tcp --frontend-port 1 --backend-port 1 --frontend-ip-name LoadBalancerFrontEnd
network lb inbound-nat-rule create -g {rg} --lb-name {lb} -n rule2 --protocol tcp --frontend-port 2 --backend-port 2 --frontend-ip-name LoadBalancerFrontEnd
network lb inbound-nat-rule create -g {rg} --lb-name {lb} -n rule3 --protocol tcp --frontend-port 3 --backend-port 3
network lb inbound-nat-rule list -g {rg} --lb-name {lb}
network lb inbound-nat-rule update -g {rg} --lb-name {lb} -n rule1 --floating-ip true --idle-timeout 10
network lb inbound-nat-rule show -g {rg} --lb-name {lb} -n rule1
network lb inbound-nat-rule update -g {rg} --lb-name {lb} -n rule1 --set idleTimeoutInMinutes=5
network lb inbound-nat-rule delete -g {rg} --lb-name {lb} -n rule1
network lb inbound-nat-rule delete -g {rg} --lb-name {lb} -n rule2
network lb inbound-nat-rule delete -g {rg} --lb-name {lb} -n rule3
network lb inbound-nat-rule list -g {rg} --lb-name {lb}
network lb create -g {rg} -n {lb} --sku Standard
network lb inbound-nat-rule create -g {rg} --lb-name {lb} -n rule3 --protocol tcp  --backend-port 3 --frontend-port-range-start 0 --frontend-port-range-end 3
network lb inbound-nat-rule update -g {rg} --lb-name {lb} -n rule3 --floating-ip true --idle-timeout 10 --frontend-port-range-end 5
network lb inbound-nat-rule delete -g {rg} --lb-name {lb} -n rule3
network lb create -g {rg} -n {lb}
network lb probe create -g {rg} --lb-name {lb} -n probe1 --port 1 --protocol http --path "/test1"
network lb probe create -g {rg} --lb-name {lb} -n probe2 --port 2 --protocol http --path "/test2"
network lb probe create -g {rg} --lb-name {lb} -n probe3 --port 3 --protocol http --path "/test3"
network lb probe list -g {rg} --lb-name {lb}
network lb probe update -g {rg} --lb-name {lb} -n probe1 --interval 20 --threshold 5
network lb probe update -g {rg} --lb-name {lb} -n probe2 --protocol tcp --path ""
network lb probe show -g {rg} --lb-name {lb} -n probe1
network lb probe update -g {rg} --lb-name {lb} -n probe1 --set intervalInSeconds=15 --set numberOfProbes=3
network lb probe show -g {rg} --lb-name {lb} -n probe2
network lb probe delete -g {rg} --lb-name {lb} -n probe3
network lb probe list -g {rg} --lb-name {lb}
network lb create -g {rg} -n {lb2} --sku standard
network lb probe create -g {rg} --lb-name {lb2} -n probe1 --port 443 --protocol https --path "/test1"
network lb probe list -g {rg} --lb-name {lb2}
network lb create -g {rg} -n {lb}
network lb rule create -g {rg} --lb-name {lb} -n rule2 --frontend-port 60 --backend-port 60 --protocol tcp
network lb address-pool create -g {rg} --lb-name {lb} -n bap1
network lb address-pool create -g {rg} --lb-name {lb} -n bap2
network lb rule create -g {rg} --lb-name {lb} -n rule1 --frontend-ip-name LoadBalancerFrontEnd --frontend-port 40 --backend-pool-name bap1 --backend-port 40 --protocol tcp
network lb rule list -g {rg} --lb-name {lb}
network lb rule update -g {rg} --lb-name {lb} -n rule1 --floating-ip true --idle-timeout 20 --load-distribution sourceip --protocol udp
network lb rule update -g {rg} --lb-name {lb} -n rule2 --backend-pool-name bap2 --load-distribution sourceipprotocol
network lb rule show -g {rg} --lb-name {lb} -n rule1
network lb rule update -g {rg} --lb-name {lb} -n rule1 --set idleTimeoutInMinutes=5
network lb rule show -g {rg} --lb-name {lb} -n rule2
network lb rule delete -g {rg} --lb-name {lb} -n rule1
network lb rule delete -g {rg} --lb-name {lb} -n rule2
network lb rule list -g {rg} --lb-name {lb}
network local-gateway create --resource-group {rg} --name {lgw1} --gateway-ip-address 10.1.1.1 --tags foo=doo
network local-gateway update --resource-group {rg} --name {lgw1} --tags foo=boo
network local-gateway show --resource-group {rg} --name {lgw1}
network local-gateway create --resource-group {rg} --name {lgw2} --gateway-ip-address 10.1.1.2 --local-address-prefixes 10.0.1.0/24
network local-gateway list --resource-group {rg}
network local-gateway delete --resource-group {rg} --name {lgw1}
network local-gateway list --resource-group {rg}
network vnet create -g {rg} -n {vnet} --subnet-name {subnet}
network nsg create -g {rg} -n {nsg1}
network nsg show -g {rg} -n {nsg1}
network nsg create -g {rg} -n {nsg2}
network public-ip create -g {rg} -n {pub_ip}
network public-ip show -g {rg} -n {pub_ip}
network lb create -g {rg} -n {lb}
network lb inbound-nat-rule create -g {rg} --lb-name {lb} -n rule1 --protocol tcp --frontend-port 100 --backend-port 100 --frontend-ip-name LoadBalancerFrontEnd
network lb inbound-nat-rule create -g {rg} --lb-name {lb} -n rule2 --protocol tcp --frontend-port 200 --backend-port 200 --frontend-ip-name LoadBalancerFrontEnd
network lb inbound-nat-rule list -g {rg} --lb-name {lb} --query "[].id"
network lb address-pool create -g {rg} --lb-name {lb} -n bap1
network lb address-pool create -g {rg} --lb-name {lb} -n bap2
network lb address-pool list -g {rg} --lb-name {lb} --query "[].id"
network nic create -g {rg} -n {nic} --subnet {subnet} --vnet-name {vnet}
network nic create -g {rg} -n {nic} --subnet {subnet_id} --ip-forwarding --private-ip-address {pri_ip} --public-ip-address {pub_ip} --internal-dns-name test --dns-servers 100.1.2.3 --lb-address-pools {address_pool_ids} --lb-inbound-nat-rules {rule_ids} --accelerated-networking --tags foo=doo
network lb list-nic -g {rg} -n {lb}
network nic create -g {rg} -n {nic} --subnet {subnet} --vnet-name {vnet} --network-security-group {nsg1}
network nic create -g {rg} -n {nic} --subnet {subnet} --vnet-name {vnet} --network-security-group {nsg_id} --public-ip-address {pub_ip_id}
network nic list
network nic list --resource-group {rg}
network nic show --resource-group {rg} --name {nic}
network nic update -g {rg} -n {nic} --internal-dns-name noodle --ip-forwarding true --accelerated-networking false --dns-servers "" --network-security-group {nsg2}
network nic update -g {rg} -n {nic} --set dnsSettings.internalDnsNameLabel=doodle --set enableIpForwarding=false
network nic delete --resource-group {rg} --name {nic}
network nic list -g {rg}
network vnet create -g {rg} -n {vnet} --subnet-name {subnet1} --defer
network vnet subnet create -g {rg} --vnet-name {vnet} -n {subnet2} --address-prefix 10.0.1.0/24
network application-gateway create -g {rg} -n {ag} --vnet-name {vnet} --subnet {subnet1} --no-wait
network application-gateway wait -g {rg} -n {ag} --exists --timeout 120
network application-gateway address-pool update -g {rg} --gateway-name {ag} -n {pool1} --add backendAddresses '{ipaddres}'
network application-gateway address-pool update -g {rg} --gateway-name {ag} -n {pool1} --add backendAddresses '{ipaddres}'
network application-gateway address-pool create -g {rg} --gateway-name {ag} -n {pool2} --no-wait
network lb create -g {rg} -n {lb}
network lb address-pool create -g {rg} --lb-name {lb} -n {bap}
network nic create -g {rg} -n {nic} --subnet {subnet2} --vnet-name {vnet} --gateway-name {ag} --app-gateway-address-pools {pool1}
network nic ip-config create -g {rg} --nic-name {nic} -n {config2} --subnet {subnet2} --vnet-name {vnet} --gateway-name {ag} --app-gateway-address-pools {pool2}
network nic ip-config update -g {rg} --nic-name {nic} -n {config1} --gateway-name {ag} --app-gateway-address-pools {pool1} {pool2}
network nic ip-config address-pool add -g {rg} --nic-name {nic} --lb-name {lb} --address-pool {bap} --ip-config-name {config1}
network vnet create -g {rg} -n {vnet} --subnet-name {subnet1} --defer
network vnet subnet create -g {rg} --vnet-name {vnet} -n {subnet2} --address-prefix 10.0.1.0/24
network application-gateway create -g {rg} -n {ag} --vnet-name {vnet} --subnet {subnet1} --no-wait
network application-gateway wait -g {rg} -n {ag} --exists --timeout 120
network application-gateway address-pool create -g {rg} --gateway-name {ag} -n {pool} --no-wait
network application-gateway address-pool show -g {rg} --gateway-name {ag} -n {pool}
network nic create -g {rg} -n {nic} --subnet {subnet2} --vnet-name {vnet}
network nic ip-config address-pool add -g {rg} --gateway-name {ag} --nic-name {nic} --ip-config-name {config} --address-pool {pool}
network nic ip-config address-pool remove -g {rg} --gateway-name {ag} --nic-name {nic} --ip-config-name {config} --address-pool {pool}
network nic ip-config address-pool add -g {rg} --nic-name {nic} --ip-config-name {config} --address-pool {ag_pool_id}
network nic ip-config address-pool remove -g {rg} --nic-name {nic} --ip-config-name {config} --address-pool {ag_pool_id}
network vnet create -g {rg} -n vnet1 --subnet-name subnet1
network nic create -g {rg} -n {nic} --subnet subnet1 --vnet-name vnet1
network lb create -g {rg} -n {lb}
network lb address-pool create -g {rg} --lb-name {lb} -n {pool}
network lb address-pool show -g {rg} --lb-name {lb} -n {pool}
network nic ip-config address-pool add -g {rg} --lb-name {lb} --nic-name {nic} --ip-config-name {config} --address-pool {pool}
network nic ip-config address-pool remove -g {rg} --lb-name {lb} --nic-name {nic} --ip-config-name {config} --address-pool {pool}
network nic ip-config address-pool add -g {rg} --nic-name {nic} --ip-config-name {config} --address-pool {lb_pool_id}
network nic ip-config address-pool remove -g {rg} --nic-name {nic} --ip-config-name {config} --address-pool {lb_pool_id}
network vnet create -g {rg} -n vnet1 --subnet-name subnet1
network nic create -g {rg} -n {nic} --subnet subnet1 --vnet-name vnet1
network nic ip-config list -g {rg} --nic-name {nic}
network nic ip-config show -g {rg} --nic-name {nic} -n ipconfig1
network nic ip-config create -g {rg} --nic-name {nic} -n ipconfig2 --make-primary
network nic ip-config update -g {rg} --nic-name {nic} -n ipconfig1 --make-primary
network nic ip-config delete -g {rg} --nic-name {nic} -n ipconfig2
network vnet create -g {rg} -n {vnet} --subnet-name {subnet}
network public-ip create -g {rg} -n {ip}
network public-ip show -g {rg} -n {ip}
network lb create -g {rg} -n {lb}
network lb inbound-nat-rule create -g {rg} --lb-name {lb} -n rule1 --protocol tcp --frontend-port 100 --backend-port 100 --frontend-ip-name LoadBalancerFrontEnd
network lb inbound-nat-rule create -g {rg} --lb-name {lb} -n rule2 --protocol tcp --frontend-port 200 --backend-port 200 --frontend-ip-name LoadBalancerFrontEnd
network lb inbound-nat-rule show -g {rg} --lb-name {lb} -n rule1
network lb address-pool create -g {rg} --lb-name {lb} -n bap1
network lb address-pool create -g {rg} --lb-name {lb} -n bap2
network lb address-pool show -g {rg} --lb-name {lb} -n bap1
network nic ip-config update -g {rg} --nic-name {nic} -n {config} --lb-name {lb} --lb-address-pools {bap1_id} bap2 --lb-inbound-nat-rules {rule1_id} rule2 --private-ip-address {private_ip}
network nic ip-config update -g {rg} --nic-name {nic} -n {config} --set privateIpAddress=10.0.0.50
network nic ip-config inbound-nat-rule remove -g {rg} --lb-name {lb} --nic-name {nic} --ip-config-name {config} --inbound-nat-rule rule1
network nic ip-config inbound-nat-rule add -g {rg} --lb-name {lb} --nic-name {nic} --ip-config-name {config} --inbound-nat-rule rule1
network nic ip-config address-pool remove -g {rg} --lb-name {lb} --nic-name {nic} --ip-config-name {config} --address-pool bap1
network nic ip-config address-pool add -g {rg} --lb-name {lb} --nic-name {nic} --ip-config-name {config} --address-pool bap1
network nic ip-config update -g {rg} --nic-name {nic} -n {config} --private-ip-address "" --public-ip-address {ip_id}
network nic ip-config update -g {rg} --nic-name {nic} -n {config} --subnet {subnet} --vnet-name {vnet}
vm create -g {rg} -n {vm} --image UbuntuLTS --admin-username myusername --admin-password aBcD1234!@#$ --authentication-type password --nsg-rule None
vm show -g {rg} -n {vm} --query "networkProfile.networkInterfaces[0].id"
network nic list-effective-nsg --ids {nic_id}
network nic show-effective-route-table --ids {nic_id}
network nsg create --name {nsg} -g {rg}
network nsg rule create --access allow --destination-address-prefixes 10.0.0.0/24 11.0.0.0/24 --direction inbound --nsg-name {nsg} --protocol * -g {rg} --source-address-prefix * -n {rule} --source-port-range 700-900 1000-1100 --destination-port-range 4444 --priority 1000
network nsg rule update --destination-address-prefixes Internet --nsg-name {nsg} -g {rg} --source-address-prefix 10.0.0.0/24 11.0.0.0/24 -n {rule} --source-port-range * --destination-port-range 500-1000 2000 3000
network nsg create --name {nsg} -g {rg} --tags foo=doo
network nsg rule create --access allow --destination-address-prefix 1234 --direction inbound --nsg-name {nsg} --protocol * -g {rg} --source-address-prefix 789 -n {rule} --source-port-range * --destination-port-range 4444 --priority 1000
network nsg list
network nsg list --resource-group {rg}
network nsg show --resource-group {rg} --name {nsg}
network nsg rule list --resource-group {rg} --nsg-name {nsg}
network nsg rule show --resource-group {rg} --nsg-name {nsg} --name {rule}
network nsg rule update -g {rg} --nsg-name {nsg} -n {rule} --direction {dir} --access {access} --destination-address-prefix {prefix} --protocol {protocol} --source-address-prefix {prefix} --source-port-range {ports} --destination-port-range {ports} --priority {priority} --description {desc}
network nsg rule update -g {rg} --nsg-name {nsg} -n {rule} --set description="cool"
network nsg rule delete --resource-group {rg} --nsg-name {nsg} --name {rule}
network nsg delete --resource-group {rg} --name {nsg}
network nsg list --resource-group {rg}
network route-table create -n {table} -g {rg} --tags foo=doo
network route-table update -n {table} -g {rg} --tags foo=boo --disable-bgp-route-propagation
network route-table route create --address-prefix 10.0.5.0/24 -n {route} -g {rg} --next-hop-type None --route-table-name {table}
network route-table list
network route-table list --resource-group {rg}
network route-table show --resource-group {rg} --name {table}
network route-table route list --resource-group {rg} --route-table-name {table}
network route-table route show --resource-group {rg} --route-table-name {table} --name {route}
network route-table route delete --resource-group {rg} --route-table-name {table} --name {route}
network route-table route list --resource-group {rg} --route-table-name {table}
network route-table delete --resource-group {rg} --name {table}
network route-table list --resource-group {rg}
network vnet create --resource-group {rg} --name {vnet} --subnet-name default
network vnet check-ip-address -g {rg} -n {vnet} --ip-address 10.0.0.50
network vnet check-ip-address -g {rg} -n {vnet} --ip-address 10.0.0.0
network vnet list
network vnet list --resource-group {rg}
network vnet show --resource-group {rg} --name {vnet}
network vnet update --resource-group {rg} --name {vnet} --address-prefixes {prefixes} --dns-servers 1.2.3.4
network vnet update -g {rg} -n {vnet} --dns-servers ""
network vnet update --resource-group {rg} --name {vnet} --set addressSpace.addressPrefixes[0]="20.0.0.0/24"
network vnet subnet create --resource-group {rg} --vnet-name {vnet} --name {subnet} --address-prefix 20.0.0.0/24
network vnet subnet list --resource-group {rg} --vnet-name {vnet}
network vnet subnet show --resource-group {rg} --vnet-name {vnet} --name {subnet}
network vnet subnet delete --resource-group {rg} --vnet-name {vnet} --name {subnet}
network vnet subnet list --resource-group {rg} --vnet-name {vnet}
network vnet list --resource-group {rg}
network vnet delete --resource-group {rg} --name {vnet}
network vnet list --resource-group {rg}
network vnet create --resource-group {rg} --name {vnet} --subnet-name default
network vnet update --resource-group {rg} --name {vnet} --address-prefixes {prefixes} --dns-servers 1.2.3.4
network vnet subnet create --resource-group {rg} --vnet-name {vnet} --name {subnet} --address-prefix 20.0.0.0/24
network vnet list-available-ips -g {rg} --name {vnet}
network vnet create --resource-group {rg} --name {vnet} --subnet-name default --bgp-community "12076:20000"
network vnet update --resource-group {rg} --name {vnet} --bgp-community "12076:20001"
network vnet create --address-prefixes 10.0.0.0/16 -n MyVnet1 -g {rg} --subnet-name Mysubnet --subnet-prefixes 10.0.0.0/24 --enable-encryption true --encryption-enforcement-policy allowUnencrypted
network vnet create --address-prefixes 10.1.0.0/16 -n MyVnet2 -g {rg} --subnet-name MySubnet --subnet-prefixes 10.1.0.0/24 --enable-encryption true --encryption-enforcement-policy dropUnencrypted
network vnet show -n MyVnet1 -g {rg}
network vnet show -n MyVnet2 -g {rg}
network vnet create --address-prefixes 10.2.0.0/16 --name MyVnet3 --resource-group {rg} --subnet-name Mysubnet --subnet-prefixes 10.2.0.0/24 --enable-encryption false
network vnet create --address-prefixes 10.3.0.0/16 --name MyVnet4 --resource-group {rg} --subnet-name MySubnet --subnet-prefixes 10.3.0.0/24 --enable-encryption true
network vnet update --name MyVnet3 --resource-group {rg} --enable-encryption true --encryption-enforcement-policy allowUnencrypted
network vnet update --name MyVnet3 --resource-group {rg} --enable-encryption true --encryption-enforcement-policy dropUnencrypted
network vnet create --address-prefixes 10.4.0.0/16 --name MyVnet5 --resource-group {rg} --subnet-name Mysubnet --subnet-prefixes 10.4.0.0/24 --encryption-enforcement-policy allowUnencrypted
network vnet create --address-prefixes 10.5.0.0/16 --name MyVnet6 --resource-group {rg} --subnet-name Mysubnet --subnet-prefixes 10.5.0.0/24
network vnet create --address-prefixes 10.6.0.0/16 --name MyVnet7 --resource-group {rg} --subnet-name Mysubnet --subnet-prefixes 10.6.0.0/24
network vnet create --address-prefixes 10.7.0.0/16 --name MyVnet8 --resource-group {rg} --subnet-name Mysubnet --subnet-prefixes 10.7.0.0/24
network vnet update --name MyVnet6 --resource-group {rg} --enable-encryption true
network vnet update --name MyVnet7 --resource-group {rg} --encryption-enforcement-policy dropUnencrypted
network vnet update --name MyVnet8 --resource-group {rg} --enable-encryption true --encryption-enforcement-policy dropUnencrypted
network vnet peering create --name MyVnet1ToMyVnet2 --remote-vnet MyVnet2 --resource-group {rg} --vnet-name MyVnet1
network vnet peering show --name MyVnet1ToMyVnet2 --vnet-name MyVnet1 -g {rg}
network nsg create --resource-group {rg} --name {nsg}
network vnet create --resource-group {rg} --name {vnet} --address-prefixes {prefixes} --subnet-name {subnet} --subnet-prefixes 20.0.0.0/24 --nsg {nsg}
network vnet subnet list --resource-group {rg} --vnet-name {vnet}
network vnet subnet show --resource-group {rg} --vnet-name {vnet} --name {subnet}
network vnet subnet delete --resource-group {rg} --vnet-name {vnet} --name {subnet}
network vnet create -g {rg} -n {vnet} --address-prefix 10.0.0.0/16 --defer
network vnet subnet create -g {rg} --vnet-name {vnet} -n subnet1 --address-prefix 10.0.0.0/24 --defer
network vnet subnet create -g {rg} --vnet-name {vnet} -n subnet2 --address-prefix 10.0.1.0/24 --defer
network vnet show -g {rg} -n {vnet}
cache show -g {rg} -n {vnet} -t VirtualNetwork
network vnet subnet create -g {rg} --vnet-name {vnet} -n subnet3 --address-prefix 10.0.2.0/24
network vnet show -g {rg} -n {vnet}
cache show -g {rg} -n {vnet} -t VirtualNetwork
network vnet update -g {rg} -n {vnet} --set tags.a=1 --defer
network vnet update -g {rg} -n {vnet} --set tags.b=2
network vnet show -g {rg} -n {vnet}
network vnet create -g {rg} -n vnet --flowtimeout {time}
network vnet update -g {rg} -n vnet --flowtimeout {time1}
network vnet create -g {rg} -n vnet1
network vnet create -g {rg} -n vnet2 --subnet-name GatewaySubnet --address-prefix 11.0.0.0/16 --subnet-prefix 11.0.0.0/24
network public-ip create -g {rg} -n ip1
network public-ip show -g {rg} -n ip1 --query id
network vnet show -g {rg} -n vnet2 --query id
network vnet-gateway create -g {rg} -n gateway1 --public-ip-address {ip_id} --vnet {vnet_id} --tags foo=doo
network vnet show -g {rg} -n vnet1 --query id
network vnet show -g {rg} -n vnet2 --query id
network vnet peering create -g {rg} -n peering2 --vnet-name vnet2 --remote-vnet {vnet1_id} --allow-gateway-transit
network vnet peering create -g {rg} -n peering1 --vnet-name vnet1 --remote-vnet vnet2 --use-remote-gateways --allow-forwarded-traffic
network vnet peering show -g {rg} -n peering1 --vnet-name vnet1
network vnet peering list -g {rg} --vnet-name vnet2
network vnet peering update -g {rg} -n peering1 --vnet-name vnet1 --set useRemoteGateways=false
network vnet peering delete -g {rg} -n peering1 --vnet-name vnet1
network vnet peering list -g {rg} --vnet-name vnet1
network vnet peering delete -g {rg} -n peering2 --vnet-name vnet2
network vnet-gateway delete -g {rg} -n gateway1
network vnet create -g {rg} -n {vnet1} --address-prefix {vnet_prefix1} {vnet_prefix2}
network vnet subnet create -g {rg} --vnet-name {vnet1} -n {fe_sub1} --address-prefix {fe_sub_prefix1}
network vnet subnet create -g {rg} --vnet-name {vnet1} -n {be_sub1} --address-prefix {be_sub_prefix1}
network vnet subnet create -g {rg} --vnet-name {vnet1} -n {gw_sub1} --address-prefix {gw_sub_prefix1}
network public-ip create -g {rg} -n {gw1ip}
network vnet-gateway create -g {rg} -n {gw1} --public-ip-address {gw1ip} --vnet {vnet1} --sku {gw1_sku}
network local-gateway create -g {rg} -n {lgw1} --gateway-ip-address {lgw1ip} --local-address-prefixes {lgw1_prefix1} {lgw1_prefix2}
network vpn-connection create -g {rg} -n {conn1} --vnet-gateway1 {gw1} --local-gateway2 {lgw1} --shared-key AzureA1b2C3
network vpn-connection list -g {rg}
network vpn-connection list -g {rg} --vnet-gateway {gw1}
network vpn-connection ipsec-policy add -g {rg} --connection-name {conn1} --ike-encryption AES256 --ike-integrity SHA384 --dh-group DHGroup24 --ipsec-encryption GCMAES256 --ipsec-integrity GCMAES256 --pfs-group PFS24 --sa-lifetime 7200 --sa-max-size 2048
network vpn-connection ipsec-policy list -g {rg} --connection-name {conn1}
network vpn-connection ipsec-policy clear -g {rg} --connection-name {conn1}
network vpn-connection ipsec-policy list -g {rg} --connection-name {conn1}
network vnet create -g {rg} -n {vnet} --subnet-name {subnet}
network public-ip create -g {rg} -n {ip}
network vnet-gateway create -g {rg} -n {vg} --vnet {vnet} --public-ip-address {ip} --sku {sku} --nat-rule name={nat} mode=IngressSnat internal-mappings={i_map} external-mappings={e_map} --nat-rule name={nat1} mode=EgressSnat internal-mappings={i_map1} external-mappings={e_map1}
network local-gateway create -g {rg} -n {lgw1} --gateway-ip-address {lgw1ip} --local-address-prefixes {lgw1_prefix1} {lgw1_prefix2}
network vpn-connection create -g {rg} -n {conn1} --vnet-gateway1 {vg} --local-gateway2 {lgw1} --shared-key AzureA1b2C3 --ingress-nat-rule {id}
network vpn-connection delete -g {rg} -n {conn1}
network vpn-connection create -g {rg} -n {conn1} --vnet-gateway1 {vg} --local-gateway2 {lgw1} --shared-key AzureA1b2C3 --egress-nat-rule {id1}
network vnet create -g {rg} -n {vnet} --subnet-name GatewaySubnet
network public-ip create -g {rg} -n {ip}
network vnet-gateway create -g {rg} -n {gw} --public-ip-address {ip} --vnet {vnet} --sku {gw_sku} --gateway-type Vpn --vpn-type RouteBased --address-prefix 40.1.0.0/24 --client-protocol IkeV2 SSTP --radius-secret 111_aaa --radius-server 30.1.1.15
network vnet-gateway ipsec-policy add -g {rg} --gateway-name {gw} --ike-encryption AES256 --ike-integrity SHA384 --dh-group DHGroup24 --ipsec-encryption GCMAES256 --ipsec-integrity GCMAES256 --pfs-group PFS24 --sa-lifetime 7200 --sa-max-size 2048
network vnet-gateway ipsec-policy list -g {rg} --gateway-name {gw}
network vnet-gateway ipsec-policy clear -g {rg} --gateway-name {gw}
network vnet-gateway ipsec-policy list -g {rg} --gateway-name {gw}
network vnet-gateway vpn-client show-health -g {rg} -n {gw}
network vnet-gateway show-supported-devices -g {rg} -n {gw} -o tsv
network vnet create -g {rg} -n {vnet} --subnet-name GatewaySubnet
network public-ip create -g {rg} -n {ip}
network vnet-gateway create -g {rg} -n {gw} --public-ip-address {ip} --vnet {vnet} --sku {gw_sku} --gateway-type Vpn --vpn-type RouteBased --address-prefix 40.1.0.0/24 --client-protocol OpenVPN --aad-audience {aad_audience} --aad-issuer {aad_issuer} --aad-tenant {aad_tenant} --root-cert-name {root_cert_name} --root-cert-data "{root_cert_data}" --radius-secret 111_aaa --radius-server 30.1.1.15 --vpn-auth-type AAD Certificate Radius
network vnet create -g {rg} -n {vnet} --subnet-name GatewaySubnet
network public-ip create -g {rg} -n {ip}
network vnet-gateway create -g {rg} -n {gw} --public-ip-address {ip} --vnet {vnet} --sku {gw_sku} --gateway-type Vpn --vpn-type RouteBased --address-prefix 40.1.0.0/24 --client-protocol OpenVPN
network vnet-gateway update -g {rg} -n {gw} --vpn-auth-type AAD Certificate Radius --aad-audience {aad_audience} --aad-issuer {aad_issuer} --aad-tenant {aad_tenant} --root-cert-name {root_cert_name} --root-cert-data "{root_cert_data}" --radius-secret 111_aaa --radius-server 30.1.1.15 
network vnet create -g {rg} -n {vnet} --location {location} --subnet-name {subnet1} --address-prefix 10.0.0.0/24
network vnet subnet update -g {rg} --vnet-name {vnet} -n {subnet1} --remove networkSecurityGroup
network vnet show -g {rg} -n {vnet}
network public-ip create -g {rg} -n {vhr_ip1}
network routeserver create -g {rg} -l {location} -n {vrouter} --hosted-subnet {subnet1_id} --public-ip-address {vhr_ip1}
network routeserver update -g {rg} --name {vrouter}  --allow-b2b-traffic
network routeserver list -g {rg}
network routeserver show -g {rg} -n {vrouter}
network routeserver peering create -g {rg} --routeserver {vrouter} -n {peer} --peer-asn 11000 --peer-ip 10.0.0.120
network routeserver peering list -g {rg} --routeserver {vrouter}
network routeserver peering show -g {rg} --routeserver {vrouter} -n {peer}
network routeserver peering list-advertised-routes -g {rg} --routeserver {vrouter} -n {peer}
network routeserver peering list-learned-routes -g {rg} --routeserver {vrouter} -n {peer}
network routeserver peering delete -g {rg} --routeserver {vrouter} -n {peer} -y
network routeserver delete -g {rg} -n {vrouter} -y
network vnet subnet list-available-delegations -l westcentralus
network vnet subnet list-available-delegations -g {rg}
network vnet create -g {rg} -n {vnet} -l westcentralus
network vnet subnet create -g {rg} --vnet-name {vnet} -n {subnet} --address-prefix 10.0.0.0/24 --delegations Microsoft.Web.serverFarms
network vnet subnet update -g {rg} --vnet-name {vnet} -n {subnet} --delegations Microsoft.Sql/managedInstances
network vnet list-endpoint-services -l westus
network vnet create -g {rg} -n {vnet}
network vnet subnet create -g {rg} --vnet-name {vnet} -n {subnet} --address-prefix 10.0.1.0/24 --service-endpoints Microsoft.Storage
network vnet subnet update -g {rg} --vnet-name {vnet} -n {subnet} --service-endpoints ""
network vnet create --resource-group {rg} --name {vnet} --address-prefix {vnet_prefix} --subnet-name {subnet} --subnet-prefix {subnet_prefix}
network nsg create --resource-group {rg} --name {nsg}
network vnet subnet update --resource-group {rg} --vnet-name {vnet} --name {subnet} --address-prefix {subnet_prefix2} --network-security-group {nsg}
network vnet subnet update -g {rg} --vnet-name {vnet} -n {subnet} --set addressPrefix=123.0.0.0/24
network vnet subnet update --resource-group {rg} --vnet-name {vnet} --name {subnet} --address-prefix {subnet_prefix2} --network-security-group ""
network vnet delete --resource-group {rg} --name {vnet}
network nsg delete --resource-group {rg} --name {nsg}
network vnet create -g {rg} -n {vnet}
network vnet subnet create -g {rg} --vnet-name {vnet} --address-prefixes 10.0.1.0/24 --name {subnet1} --disable-private-endpoint-network-policies true
network vnet subnet create -g {rg} --vnet-name {vnet} --address-prefixes 10.0.2.0/24 --name {subnet2} --disable-private-link-service-network-policies true
network vnet subnet create -g {rg} --vnet-name {vnet} --address-prefixes 10.0.3.0/24 --name {subnet3} --disable-private-endpoint-network-policies true --disable-private-link-service-network-policies true
network vnet create -g {rg} -n {vnet1} --address-prefix {vnet_prefix1} {vnet_prefix2} --subnet-name {gw_subnet} --subnet-prefix {gw_subnet_prefix}
network public-ip create -g {rg} -n {gw_ip1}
network public-ip create -g {rg} -n {gw_ip2}
network vnet-gateway create -g {rg} -n {gw1} --vnet {vnet1} --sku HighPerformance --asn {vnet1_asn} --public-ip-addresses {gw_ip1} {gw_ip2} --tags foo=doo
network vnet-gateway update -g {rg} -n {gw1} --vnet {vnet1} --sku HighPerformance --asn {vnet1_asn} --public-ip-addresses {gw_ip1} --no-wait --tags foo=boo
network local-gateway create -g {rg} -n {lgw2} -l {lgw_loc} --gateway-ip-address {lgw_ip} --local-address-prefixes {lgw_prefix} --asn {lgw_asn} --bgp-peering-address {bgp_peer1}
network vpn-connection create -g {rg} -n {conn_151} --vnet-gateway1 {gw1} --local-gateway2 {lgw2} --shared-key {shared_key} --enable-bgp
network vpn-connection shared-key reset -g {rg} --connection-name {conn_151} --key-length 128
network vpn-connection shared-key show -g {rg} --connection-name {conn_151}
network vpn-connection shared-key update -g {rg} --connection-name {conn_151} --value {shared_key2}
network vpn-connection shared-key show -g {rg} --connection-name {conn_151}
network local-gateway create -g {rg} -n {lgw3} -l {lgw_loc} --gateway-ip-address {lgw3_ip} --local-address-prefixes {lgw3_prefix} --asn {lgw_asn} --bgp-peering-address {bgp_peer2}
network vpn-connection create -g {rg} -n {conn_152} --vnet-gateway1 {gw1} --local-gateway2 {lgw3} --shared-key {shared_key} --enable-bgp
storage container create --account-name {storage_account} --name {ctn}
storage blob generate-sas -n src --account-name {storage_account} -c {ctn} --permissions acrwd --expiry {expiry} -otsv
network vnet create -g {rg} -n {vnet1} --address-prefix {vnet1_prefix} --subnet-name {subnet} --subnet-prefix {gw1_prefix}
network public-ip create -g {rg} -n {gw1_ip1}
network public-ip create -g {rg} -n {gw1_ip2}
network vnet create -g {rg} -n {vnet2} --address-prefix {vnet2_prefix} --subnet-name {subnet} --subnet-prefix {gw2_prefix}
network public-ip create -g {rg} -n {gw2_ip1}
network public-ip create -g {rg} -n {gw2_ip2}
network vnet-gateway create -g {rg} -n {gw1} --vnet {vnet1} --sku HighPerformance --asn {vnet1_asn} --public-ip-addresses {gw1_ip1} {gw1_ip2} --bgp-peering-address {bgp_peer1} --no-wait
network vnet-gateway create -g {rg} -n {gw2} --vnet {vnet2} --sku HighPerformance --asn {vnet2_asn} --public-ip-addresses {gw2_ip1} {gw2_ip2} --bgp-peering-address {bgp_peer2} --no-wait
network vnet-gateway wait -g {rg} -n {gw1} --created
network vnet-gateway wait -g {rg} -n {gw2} --created
network vpn-connection create -g {rg} -n {conn12} --vnet-gateway1 {gw1} --vnet-gateway2 {gw2} --shared-key {key} --enable-bgp
network vpn-connection create -g {rg} -n {conn21} --vnet-gateway1 {gw2} --vnet-gateway2 {gw1} --shared-key {key} --enable-bgp
network vpn-connection list-ike-sas -g {rg} -n {conn12}
network vpn-connection packet-capture start -g {rg} -n {conn12}
network vpn-connection packet-capture stop -g {rg} -n {conn12} --sas-url {sas_url}
network public-ip create -n {ip1} -g {rg}
network public-ip create -n {ip2} -g {rg}
network public-ip create -n {ip3} -g {rg}
network vnet create -g {rg} -n {vnet1} --subnet-name GatewaySubnet --address-prefix 10.0.0.0/16 --subnet-prefix 10.0.0.0/24
network vnet create -g {rg} -n {vnet2} --subnet-name GatewaySubnet --address-prefix 10.1.0.0/16
network vnet create -g {rg} -n {vnet3} --subnet-name GatewaySubnet --address-prefix 10.2.0.0/16
network vnet-gateway create -g {rg} -n {gw1} --vnet {vnet1_id} --public-ip-address {ip1} --gateway-type ExpressRoute --vpn-gateway-generation Generation1
network vnet-gateway create -g {rg} -n {gw1} --vnet {vnet1_id} --public-ip-address {ip1} --vpn-gateway-generation Generation1 --custom-routes {custom_routes1} --no-wait
network vnet-gateway create -g {rg} -n {gw2} --vnet {vnet2_id} --public-ip-address {ip2} --no-wait
network vnet-gateway create -g {rg} -n {gw3} --vnet {vnet3} --public-ip-address {ip3} --no-wait --sku standard --asn 12345 --bgp-peering-address 10.2.250.250 --peer-weight 50
network vnet-gateway wait -g {rg} -n {gw1} --created
network vnet-gateway wait -g {rg} -n {gw2} --created
network vnet-gateway wait -g {rg} -n {gw3} --created
network vnet-gateway show -g {rg} -n {gw1}
network vnet-gateway update -g {rg} -n {gw1} --sku Standard --custom-routes {custom_routes1} {custom_routes2}
network vnet-gateway show -g {rg} -n {gw2}
network vnet-gateway show -g {rg} -n {gw3}
network vpn-connection create -n {conn12} -g {rg} --shared-key 123 --vnet-gateway1 {gw1_id} --vnet-gateway2 {gw2} --tags foo=doo
network vpn-connection update -n {conn12} -g {rg} --routing-weight 25 --tags foo=boo
network vpn-connection create -n {conn21} -g {rg} --shared-key 123 --vnet-gateway2 {gw1_id} --vnet-gateway1 {gw2}
network vnet-gateway list-learned-routes -g {rg} -n {gw1}
network vnet-gateway list-advertised-routes -g {rg} -n {gw1} --peer 10.1.1.1
network vnet-gateway list-bgp-peer-status -g {rg} -n {gw1} --peer 10.1.1.1
network vpn-connection list -g {rg} --vnet-gateway {gw1}
network public-ip create -g {rg} -n {ip} 
network vnet create -g {rg} -n {vnet} --subnet-name GatewaySubnet
network vnet-gateway create -g {rg} -n {gw} --vnet {vnet} --public-ip-address {ip} --gateway-type Vpn --vpn-type RouteBased --sku VpnGw1 --client-protocol OpenVPN --address-prefixes 201.169.0.0/16 
network vnet-gateway show -g {rg} -n {gw}
network vnet-gateway aad assign -g {rg} --gateway-name {gw} --tenant {aad_tenant} --audience {aad_audience} --issuer {aad_issuer} 
network vnet-gateway show -g {rg} -n {gw}
network vnet-gateway aad show -g {rg} --gateway-name {gw}
network vnet-gateway aad remove -g {rg} --gateway-name {gw}
network vnet-gateway aad show -g {rg} --gateway-name {gw}
network public-ip create -n {ip1} -g {rg}
network public-ip create -n {ip2} -g {rg}
network vnet create -g {rg} -n {vnet1} --subnet-name GatewaySubnet --address-prefix 10.0.0.0/16
network vnet create -g {rg} -n {vnet2} --subnet-name GatewaySubnet --address-prefix 10.1.0.0/16
network vnet-gateway create -g {rg} -n {gw1} --vnet {vnet1} --public-ip-address {ip1} --vpn-gateway-generation Generation1 --address-prefixes 201.169.0.0/16 --no-wait
network vnet-gateway create -g {rg} -n {gw2} --vnet {vnet2} --public-ip-address {ip2} --vpn-gateway-generation Generation1 --no-wait
network vnet-gateway wait -g {rg} -n {gw1} --created
network vnet-gateway wait -g {rg} -n {gw2} --created
network vpn-connection create -n {conn12} -g {rg} --shared-key 123 --vnet-gateway1 {gw1} --vnet-gateway2 {gw2}
network vpn-connection create -n {conn21} -g {rg} --shared-key 123 --vnet-gateway2 {gw1} --vnet-gateway1 {gw2}
network vnet-gateway disconnect-vpn-connections -g {rg} -n {gw1} --vpn-connections {conn12}
storage container create --account-name {storage_account} --name {ctn}
storage blob generate-sas -n src --account-name {storage_account} -c {ctn} --permissions acrwd --expiry {expiry} -otsv
network public-ip create -n {ip1} -g {rg}
network vnet create -g {rg} -n {vnet1} --subnet-name GatewaySubnet --address-prefix 10.0.0.0/16 --subnet-prefix 10.0.0.0/24
network vnet-gateway create -g {rg} -n {gw1} --vnet {vnet1} --public-ip-address {ip1} --sku {gw1_sku}
network vnet-gateway packet-capture start -g {rg} -n {gw1}
network vnet-gateway packet-capture stop -g {rg} -n {gw1} --sas-url {sas_url}
network traffic-manager profile check-dns -n myfoobar1
network traffic-manager profile create -n {tm} -g {rg} --routing-method priority --unique-dns-name {dns} --tags foo=doo
network traffic-manager profile show -g {rg} -n {tm}
network traffic-manager profile update -n {tm} -g {rg} --routing-method weighted --tags foo=boo
network traffic-manager profile list -g {rg}
network traffic-manager endpoint create -n {endpoint} --profile-name {tm} -g {rg} --type externalEndpoints --weight 50 --target www.microsoft.com
network traffic-manager endpoint update -n {endpoint} --profile-name {tm} -g {rg} --type externalEndpoints --weight 25 --target www.contoso.com
network traffic-manager endpoint show -g {rg} --profile-name {tm} -t externalEndpoints -n {endpoint}
network traffic-manager endpoint list -g {rg} --profile-name {tm} -t externalEndpoints
network traffic-manager profile update -n {tm} -g {rg}
network traffic-manager endpoint delete -g {rg} --profile-name {tm} -t externalEndpoints -n {endpoint}
network traffic-manager endpoint list -g {rg} --profile-name {tm} -t externalEndpoints
network traffic-manager profile delete -g {rg} -n {tm}
network traffic-manager profile create -n {tm} -g {rg} --routing-method Multivalue --unique-dns-name {dns} --max-return 3 --tags foo=doo
network traffic-manager profile update -n {tm} -g {rg} --routing-method MultiValue  --max-return 4 --tags foo=boo
network traffic-manager profile create -n {tm} -g {rg} --routing-method subnet --unique-dns-name {dns} --custom-headers foo=bar --status-code-ranges 200-202
network public-ip create -g {rg} -n {pip} --dns-name {ip_dns} --query publicIp.id
network traffic-manager profile update -n {tm} -g {rg} --status-code-ranges 200-204 --custom-headers foo=doo test=best
network traffic-manager endpoint create -n {endpoint} --profile-name {tm} -g {rg} --type azureEndpoints --target-resource-id {ip_id} --subnets 10.0.0.0 --custom-headers test=best
network traffic-manager endpoint update -n {endpoint} --type azureEndpoints --profile-name {tm} -g {rg} --subnets 10.0.0.0:24
network traffic-manager endpoint update -n {endpoint} --type azureEndpoints --profile-name {tm} -g {rg} --subnets 10.0.0.0-11.0.0.0
network nsg create -g {rg} -n {nsg}
network watcher flow-log configure -g {rg} --nsg {nsg} --enabled --retention 5 --storage-account {sa}
network watcher flow-log configure -g {rg} --nsg {nsg} --retention 0
network watcher flow-log show -g {rg} --nsg {nsg}
resource create -g {rg} -n {ws} --resource-type Microsoft.OperationalInsights/workspaces -p @"{la_prop_path}"
network watcher flow-log configure -g {rg} --nsg {nsg} --workspace {ws} --interval 10
network watcher flow-log show -g {rg} --nsg {nsg}
network watcher flow-log configure -g {rg} --nsg {nsg} --workspace {ws} --interval 60
network watcher flow-log show -g {rg} --nsg {nsg}
network watcher flow-log configure -g {rg} --nsg {nsg} --traffic-analytics false
network watcher flow-log show -g {rg} --nsg {nsg}
network watcher flow-log configure -g {rg} --nsg {nsg} --workspace ""
network watcher flow-log show -g {rg} --nsg {nsg}
network watcher configure -g {rg} --locations westus westus2 westcentralus eastus canadaeast --enabled
network nsg create -g {rg} -n {nsg}
network watcher flow-log configure -g {rg} --nsg {nsg} --enabled --retention 5 --storage-account {sa}
vm create -g {rg} -n {vm} --image UbuntuLTS --authentication-type password --admin-username deploy --admin-password PassPass10!) --nsg {vm} --nsg-rule None
vm extension set -g {rg} --vm-name {vm} -n NetworkWatcherAgentLinux --publisher Microsoft.Azure.NetworkWatcher
network watcher packet-capture create -g {rg} --vm {vm} -n {capture} --file-path capture/capture.cap
network watcher packet-capture show -l {loc} -n {capture}
network watcher packet-capture stop -l {loc} -n {capture}
network watcher packet-capture show-status -l {loc} -n {capture}
network watcher packet-capture list -l {loc}
network watcher packet-capture delete -l {loc} -n {capture}
network watcher packet-capture list -l {loc}
storage container create -n troubleshooting --account-name {sa}
storage account show -g {rg} -n {sa}
network vnet create -g {rg} -n vnet1 --subnet-name GatewaySubnet
network public-ip create -g {rg} -n vgw1-pip
network vnet-gateway create -g {rg} -n vgw1 --vnet vnet1 --public-ip-address vgw1-pip --no-wait
network vnet-gateway wait -g {rg} -n vgw1 --created
network watcher troubleshooting start --resource vgw1 -t vnetGateway -g {rg} --storage-account {sa} --storage-path {storage_path}
network watcher troubleshooting show --resource vgw1 -t vnetGateway -g {rg}
vm create -g {rg} -n {vm} --image UbuntuLTS --authentication-type password --admin-username deploy --admin-password PassPass10!) --nsg {nsg} --nsg-rule None --private-ip-address {private-ip}
vm extension set -g {rg} --vm-name {vm} -n NetworkWatcherAgentLinux --publisher Microsoft.Azure.NetworkWatcher
network watcher test-connectivity -g {rg} --source-resource {vm} --dest-address www.microsoft.com --dest-port 80 --valid-status-codes 200 202
network watcher run-configuration-diagnostic --resource {vm_id} --direction Inbound --protocol TCP --source 12.11.12.14 --destination 10.1.1.4 --port 12100
network watcher show-topology -g {rg}
network watcher test-ip-flow -g {rg} --vm {vm} --direction inbound --local {private-ip}:22 --protocol tcp --remote 100.1.2.3:*
network watcher test-ip-flow -g {rg} --vm {vm} --direction outbound --local {private-ip}:* --protocol tcp --remote 100.1.2.3:80
network watcher show-security-group-view -g {rg} --vm {vm}
network watcher show-next-hop -g {rg} --vm {vm} --source-ip 10.0.0.9 --dest-ip 10.0.0.6
network service-endpoint list -l {loc}
network service-endpoint policy create -g {rg} -n {policy} --tags test=best
network service-endpoint policy update -g {rg} -n {policy} --tags test=nest
network service-endpoint policy list -g {rg}
network service-endpoint policy show -g {rg} -n {policy}
network service-endpoint policy delete -g {rg} -n {policy}
network service-endpoint policy list -g {rg}
network service-endpoint policy create -g {rg} -n {policy} --tags test=best
network service-endpoint policy-definition create -g {rg} --policy-name {policy} -n {pd_name} --service Microsoft.Storage --description "Test Def" --service-resources /subscriptions/{sub}
network service-endpoint policy-definition update -g {rg} --policy-name {policy} -n {pd_name} --description "Better description"
network service-endpoint policy-definition list -g {rg} --policy-name {policy}
network service-endpoint policy-definition show -g {rg} --policy-name {policy} -n {pd_name}
network service-endpoint policy-definition delete -g {rg} --policy-name {policy} -n {pd_name}
network service-endpoint policy-definition list -g {rg} --policy-name {policy}
network service-endpoint policy-definition create -g {rg} --policy-name {policy} -n {pd_name} --service Microsoft.Storage --service-resources /subscriptions/{sub}
network vnet create -g {rg} -n {vnet}
network vnet subnet create -g {rg} --vnet-name {vnet} -n {subnet} --address-prefix 10.0.0.0/24 --service-endpoints Microsoft.Storage --service-endpoint-policy {policy}
network profile list
network profile list -g {rg}
network profile show -g {rg} -n dummy
network profile delete -g {rg} -n dummy -y
network list-service-aliases -l centralus
network list-service-aliases -l centralus -g {rg}
network vnet create -g {rg} -n {vnet} --subnet-name {subnet1}
network vnet subnet create -g {rg} -n {subnet2} --vnet-name {vnet} --address-prefixes 10.0.2.0/24
network public-ip create -g {rg} -n {ip1} --sku Standard
vm create -g {rg} -n {vm} --image UbuntuLTS --vnet-name {vnet} --subnet {subnet2} --admin-password TestPassword11!! --admin-username testadmin --authentication-type password --nsg-rule None
network bastion create -g {rg} -n {bastion} --vnet-name {vnet} --public-ip-address {ip1} --scale-units {num} --tags a=b
network bastion list
network bastion list -g {rg}
network bastion show -g {rg} -n {bastion}
network bastion delete -g {rg} -n {bastion}
local-context on
network vnet create -g {rg} -n {vnet} --subnet-name {subnet}
network vnet show
network vnet subnet show
network vnet delete
network vnet subnet delete
network vnet subnet delete -n {subnet}
network vnet delete -n {vnet}
local-context off
local-context delete --all --purge -y
network public-ip create -g {rg} -n {ip}
network vnet create -g {rg} -n {vnet} --subnet-name {subnet}
network vnet-gateway create -g {rg} -n {vg} --vnet {vnet} --public-ip-address {ip}  --sku {sku} --nat-rule name=nat internal-mappings=10.4.0.0/24 external-mappings=192.168.21.0/24 
network public-ip create -g {rg} -n {ip1}
network vnet create -g {rg} -n {vnet1} --subnet-name {subnet}
network vnet-gateway create -g {rg} -n {vg1} --vnet {vnet1} --public-ip-address {ip1}  --sku {sku} --nat-rule name=nat type=Static mode=EgressSnat internal-mappings=10.4.0.0/24 external-mappings=192.168.21.0/24
network public-ip create -g {rg} -n {ip}
network vnet create -g {rg} -n {vnet} --subnet-name {subnet}
network vnet-gateway create -g {rg} -n {vg} --vnet {vnet} --public-ip-address {ip}  --sku {sku}
network vnet-gateway nat-rule add -g {rg} --gateway-name {vg} --name {nat} --internal-mappings 10.4.0.0/24 --external-mappings 192.168.21.0/24
network vnet-gateway nat-rule add -g {rg} --gateway-name {vg} --name {nat1} --internal-mappings 10.3.0.0/24 --external-mappings 192.168.22.0/24
network vnet-gateway nat-rule list -g {rg} --gateway-name {vg} 
network vnet-gateway nat-rule remove -g {rg} --gateway-name {vg} --name {nat}
extension add -n virtual-wan
network vwan create -n {vwan} -g {rg} --type Standard
network vhub create -g {rg} -n {vhub} --vwan {vwan}  --address-prefix 10.5.0.0/16 -l westus --sku Standard
network vpn-gateway create -g {rg} -n {gateway} --vhub {vhub}
network security-partner-provider create -n {name} -g {rg} --vhub {vhub} --provider Checkpoint
network security-partner-provider show -n {name} -g {rg}
network security-partner-provider update -n {name} -g {rg} --tag a=b
network security-partner-provider list -g {rg}
network security-partner-provider list
network security-partner-provider delete -n {name} -g {rg}
extension add -n virtual-wan
network vwan create -n {vwan} -g {rg} --type Standard
network vhub create -g {rg} -n {vhub} --vwan {vwan}  --address-prefix 10.5.0.0/16 --sku Standard
network virtual-appliance create -n {name} -g {rg} --vhub {vhub} --vendor "barracudasdwanrelease" --scale-unit 2 -v latest --asn 10000 --init-config "echo $abc" --boot-blobs {blob} {blob} --cloud-blobs {blob} {blob}
network virtual-appliance update -n {name} -g {rg} --asn 20000 --init-config "echo $abcd"
network virtual-appliance show -n {name} -g {rg}
network virtual-appliance list -g {rg}
network virtual-appliance list
network virtual-appliance sku list
network virtual-appliance sku show --name "barracudasdwanrelease"
network virtual-appliance site create -n {site} -g {rg} --appliance-name {name} --address-prefix 10.0.0.0/24 --allow --default --optimize
network virtual-appliance site update -n {site} -g {rg} --appliance-name {name} --address-prefix 10.0.0.1/24 --allow false --default false --optimize false
network virtual-appliance site show -n {site} -g {rg} --appliance-name {name}
network virtual-appliance site list -g {rg} --appliance-name {name}
network virtual-appliance site delete -n {site} -g {rg} --appliance-name {name} -y
network virtual-appliance delete -n {name} -g {rg} -y
network lb create -g {rg} -n {lb} --sku {sku} --public-ip-address {ip} --edge-zone {edge_name}
network lb show -g {rg} -n {lb}
network lb create -g {rg} -n {lb1} --vnet-name vnet1 --subnet subnet1 --edge-zone {edge_name}
network vnet create -g {rg} -n {vnet} --subnet-name subnet1 --edge-zone {edge_name}
network nic create -g {rg} -n {nic} --subnet subnet1 --vnet-name {vnet} --edge-zone {edge_name}
network lb create -g {rg} -n {lb} --public-ip-address ip --sku Standard
network vnet create -g {rg} -n {vnet} --subnet-name {subnet1} --edge-zone {edge_name}
network vnet subnet update -g {rg} -n {subnet1} --vnet-name {vnet} --disable-private-link-service-network-policies
network vnet subnet create -g {rg} -n {subnet2} --vnet-name {vnet} --address-prefixes 10.0.2.0/24
network vnet subnet update -g {rg} -n {subnet2} --vnet-name {vnet} --disable-private-endpoint-network-policies
network private-link-service create -g {rg} -n pls --vnet-name {vnet} --subnet {subnet1} --lb-name {lb} --lb-frontend-ip-configs LoadBalancerFrontEnd --edge-zone {edge_name}
network private-endpoint create -g {rg} -n pe --vnet-name {vnet} --subnet {subnet2} --private-connection-resource-id {pls_id} --connection-name cn --edge-zone {edge_name}
network public-ip create -g {rg} -n {ip1} --edge-zone {edge_name}
network public-ip prefix create -g {rg} -n {ip1} --length 30 --edge-zone {edge_name}
network public-ip create -g {rg} -n {ip1}
network vnet create -g {rg} -n {vnet} --subnet-name GatewaySubnet
network vnet-gateway create -g {rg} -n vnet-gateway --vnet {vnet} --public-ip-address {ip1} --edge-zone {edge_name}
network lb create -g {rg} -n {lb} --sku Standard --public-ip-address {ip}
network lb create -g {rg} -n {lb1} --sku Gateway --vnet-name {vnet} --subnet {subnet} 
network public-ip create -g {rg} -n {ip1} --sku standard
network lb frontend-ip create -g {rg} --lb-name {lb} -n {fip} --public-ip-address {ip1}
network lb frontend-ip create -g {rg} --lb-name {lb1} -n {fip} --vnet-name {vnet} --subnet {subnet}
network lb frontend-ip update -g {rg} --lb-name {lb} -n {fip} --gateway-lb {id}
network lb frontend-ip update -g {rg} --lb-name {lb} -n {fip} --gateway-lb ''
network lb create -g {rg} -n {lb} --sku Gateway --vnet-name vnet --subnet subnet
network lb address-pool create -g {rg} --lb-name {lb} -n {bap1}
network lb address-pool create -g {rg} --lb-name {lb} -n {bap2}
network lb address-pool create -g {rg} --lb-name {lb} -n {bap3}
network lb address-pool tunnel-interface add -g {rg} --lb-name {lb} --address-pool {bap1} --type {type}  --protocol {protocol} --identifier {identifier}
network lb address-pool tunnel-interface update -g {rg} --lb-name {lb} --address-pool {bap2} --type {type} --index 0
network lb address-pool tunnel-interface update -g {rg} --lb-name {lb} --address-pool {bap3} --port {port} --identifier {identifier1} --index 0
network lb rule create -g {rg} --lb-name {lb} -n rule1 --frontend-ip-name {fip} --frontend-port {fport}  --protocol tcp --backend-port {bport} --backend-pool-name {bap1} 
network lb rule create -g {rg} --lb-name {lb} -n rule2 --frontend-ip-name {fip} --frontend-port {fport1} --backend-pools-name {bap3} {bap2} --protocol tcp  --backend-port {bport1}
network lb rule update -g {rg} --lb-name {lb} -n rule2 --frontend-ip-name {fip} --backend-pools-name {bap1} 
network lb create -g {rg} -n {lb} --sku {sku} --vnet-name {vnet} --subnet {subnet}
network lb address-pool create -g {rg} --lb-name {lb} -n {bap} --vnet {vnet}
network lb address-pool tunnel-interface add -g {rg} --lb-name {lb} --address-pool {bap} --type {type} --protocol {protocol} --identifier {identifier} --port 15000
network lb address-pool tunnel-interface list -g {rg} --lb-name {lb} --address-pool {bap}
network lb address-pool tunnel-interface remove -g {rg} --lb-name {lb} --address-pool {bap} --index 0
network lb address-pool tunnel-interface update -g {rg} --lb-name {lb} --address-pool {bap} --type {type1} --protocol {protocol} --identifier {identifier1} --port 10000 --index 0
network public-ip create -g {rg} -n {ip} --sku standard
network public-ip create -g {rg} -n {ip1} --sku standard
network vnet create -g {rg} -n {vnet} --subnet-name {subnet}
network nic create -g {rg} -n {nic} --public-ip-address {ip} --vnet-name {vnet} --subnet {subnet}
network lb create -g {rg} -n {lb} --sku Gateway --vnet-name {vnet1} --subnet {subnet1} 
network lb frontend-ip create -g {rg} --lb-name {lb} -n {fip} --vnet-name {vnet1} --subnet {subnet1}
network nic ip-config create -g {rg} --nic-name {nic} -n {nip} --make-primary --public-ip-address {ip1}
network nic ip-config update -g {rg} --nic-name {nic} -n {nip} --gateway-lb {id}
vm create -g connection_monitor_v2_test_000001 --name vm1 --image UbuntuLTS --authentication-type password --admin-username deploy --admin-password PassPass10!) --nsg vm1 --nsg-rule None 
vm extension set -g connection_monitor_v2_test_000001 --vm-name vm1 --name NetworkWatcherAgentLinux --publisher Microsoft.Azure.NetworkWatcher 
vm create -g connection_monitor_v2_test_000001 --name vm2 --image UbuntuLTS --authentication-type password --admin-username deploy --admin-password PassPass10!) --nsg vm2 --nsg-rule None 
vm extension set -g connection_monitor_v2_test_000001 --vm-name vm2 --name NetworkWatcherAgentLinux --publisher Microsoft.Azure.NetworkWatcher 
network watcher connection-monitor create --location {location} --name {cmv2} --endpoint-source-name vm1 --endpoint-source-resource-id {vm1_id} --endpoint-dest-name bing --endpoint-dest-address bing.com --test-config-name DefaultTestConfig --protocol Tcp --tcp-port 2048 
monitor log-analytics workspace create -g {rg} --location {location} --workspace-name {workspace_name} 
network watcher connection-monitor output list --location {location} --connection-monitor {cmv2} 
vm create -g {rg} -n {vm2} --image UbuntuLTS --authentication-type password --admin-username deploy --admin-password PassPass10!) --nsg {vm2} --nsg-rule None
vm extension set -g {rg} --vm-name {vm2} -n NetworkWatcherAgentLinux --publisher Microsoft.Azure.NetworkWatcher
vm create -g {rg} -n {vm3} --image UbuntuLTS --authentication-type password --admin-username deploy --admin-password PassPass10!) --nsg {vm3} --nsg-rule None
vm extension set -g {rg} --vm-name {vm3} -n NetworkWatcherAgentLinux --publisher Microsoft.Azure.NetworkWatcher
network watcher connection-monitor create -n {cm} --source-resource {vm2} -g {rg} --dest-resource {vm3} --dest-port 80 --tags foo=doo
network watcher connection-monitor list -l {loc}
network watcher connection-monitor show -l {loc} -n {cm}
network watcher connection-monitor stop -l {loc} -n {cm}
network watcher connection-monitor start -l {loc} -n {cm}
network watcher connection-monitor query -l {loc} -n {cm}
network watcher connection-monitor delete -l {loc} -n {cm}
vm create -g connection_monitor_v2_test_000001 --name vm1 --image UbuntuLTS --authentication-type password --admin-username deploy --admin-password PassPass10!) --nsg vm1 --nsg-rule None 
vm extension set -g connection_monitor_v2_test_000001 --vm-name vm1 --name NetworkWatcherAgentLinux --publisher Microsoft.Azure.NetworkWatcher 
vm create -g connection_monitor_v2_test_000001 --name vm2 --image UbuntuLTS --authentication-type password --admin-username deploy --admin-password PassPass10!) --nsg vm2 --nsg-rule None 
vm extension set -g connection_monitor_v2_test_000001 --vm-name vm2 --name NetworkWatcherAgentLinux --publisher Microsoft.Azure.NetworkWatcher 
network watcher connection-monitor create --location {location} --name {cmv2} --endpoint-source-name vm1 --endpoint-source-resource-id {vm1_id} --endpoint-dest-name bing --endpoint-dest-address bing.com --test-config-name DefaultTestConfig --protocol Tcp --tcp-port 2048 
network watcher connection-monitor create --name cmv2-01 --endpoint-source-name vm2 --endpoint-source-resource-id {vm2_id} --endpoint-dest-name bing --endpoint-dest-address bing.com --test-config-name DefaultIcmp --protocol Icmp 
vm create -g connection_monitor_v2_test_000001 --name vm1 --image UbuntuLTS --authentication-type password --admin-username deploy --admin-password PassPass10!) --nsg vm1 --nsg-rule None 
vm extension set -g connection_monitor_v2_test_000001 --vm-name vm1 --name NetworkWatcherAgentLinux --publisher Microsoft.Azure.NetworkWatcher 
vm create -g connection_monitor_v2_test_000001 --name vm2 --image UbuntuLTS --authentication-type password --admin-username deploy --admin-password PassPass10!) --nsg vm2 --nsg-rule None 
vm extension set -g connection_monitor_v2_test_000001 --vm-name vm2 --name NetworkWatcherAgentLinux --publisher Microsoft.Azure.NetworkWatcher 
network watcher connection-monitor create --location {location} --name {cmv2} --endpoint-source-name vm1 --endpoint-source-resource-id {vm1_id} --endpoint-dest-name bing --endpoint-dest-address bing.com --test-config-name DefaultTestConfig --protocol Tcp --tcp-port 2048 
network vnet create -g {rg} --name cmv2-vnet --subnet-name subnet1 --address-prefix 10.0.0.0/24
network vnet subnet show -g {rg} --vnet-name cmv2-vnet --name subnet1
network watcher connection-monitor endpoint add --connection-monitor {cmv2} --location {location} --source-test-groups {test_group} --name {cm_subnet_endpoint} --resource-id {subnet_id} --type AzureSubnet --address-exclude 10.0.0.25 --coverage-level BelowAverage
network watcher connection-monitor endpoint add --connection-monitor {cmv2} --location {location} --dest-test-groups {test_group} --name Github --address github.com --type ExternalAddress
network watcher connection-monitor endpoint list --connection-monitor {cmv2} --location {location}
network watcher connection-monitor endpoint show --connection-monitor {cmv2} --location {location} --name Github
network watcher connection-monitor endpoint remove --connection-monitor {cmv2} --location {location} --name {cm_subnet_endpoint} --test-groups DefaultTestGroup 
network watcher connection-monitor endpoint list --connection-monitor {cmv2} --location {location}
network nsg create -g {rg} -n {nsg}
monitor log-analytics workspace create --resource-group {rg} --location {location} --workspace-name {workspace} 
network watcher flow-log create --location {location} --resource-group {rg} --nsg {nsg} --storage-account {storage_account} --workspace {workspace_id} --name {flow_log} 
network watcher flow-log list --location {location}
network watcher flow-log show --location {location} --name {flow_log}
network nsg create -g {rg} -n {nsg}
monitor log-analytics workspace create --resource-group {rg} --location {location} --workspace-name {workspace} 
network watcher flow-log create --location {location} --resource-group {rg} --nsg {nsg} --storage-account {storage_account} --workspace {workspace_id} --name {flow_log} 
network watcher flow-log show --location {location} --name {flow_log}
network watcher flow-log delete --location {location} --name {flow_log}
network watcher flow-log show --location {location} --name {flow_log}
network nsg create -g {rg} -n {nsg}
monitor log-analytics workspace create --resource-group {rg} --location {location} --workspace-name {workspace} 
network watcher flow-log create --location {location} --resource-group {rg} --nsg {nsg} --storage-account {storage_account} --workspace {workspace_id} --name {flow_log} 
network watcher flow-log show --location {location} --name {flow_log}
network watcher flow-log show --nsg {nsg_id}
network nsg create -g {rg} -n {nsg}
storage account create --resource-group {rg} --name {storage_account_2} --https-only
monitor log-analytics workspace create --resource-group {rg} --location {location} --workspace-name {workspace} 
network watcher flow-log create --location {location} --resource-group {rg} --nsg {nsg} --storage-account {storage_account} --workspace {workspace_id} --name {flow_log} 
network watcher flow-log show --location {location} --name {flow_log}
network watcher flow-log update --location {location} --name {flow_log} --retention 2 --storage-account {another_storage} --tags foo=bar 
keyvault create --hsm-name {hsm} -g {rg} -l {loc} --administrators "3707fb2f-ac10-4591-a04f-8b0d786ea37d"
network vnet create -n {vnet} -g {rg} -l {loc} --subnet-name {subnet}
network vnet subnet update -n {subnet} --vnet-name {vnet} -g {rg} --disable-private-endpoint-network-policies true
network private-endpoint create -g {rg} -n {pe} --vnet-name {vnet} --subnet {subnet} -l {loc} --connection-name {pe_connection} --private-connection-resource-id {hsm_id} --group-id managedhsm
keyvault show --hsm-name {hsm}
network private-endpoint-connection show --id {hsm_pe_id}
network private-endpoint-connection show  --resource-name {hsm} -g {rg} --name {hsm_pe_name} --type Microsoft.KeyVault/managedHSMs
network private-endpoint-connection approve --resource-name {hsm} --name {hsm_pe_name} -g {rg} --type Microsoft.KeyVault/managedHSMs --description "{approval_desc}"
network private-endpoint-connection show --id {hsm_pe_id}
network private-endpoint-connection reject --id {hsm_pe_id} --description "{rejection_desc}"
network private-endpoint-connection show --id {hsm_pe_id}
network private-endpoint-connection list --id {hsm_id}
network private-endpoint-connection delete --id {hsm_pe_id} -y
network private-endpoint delete -g {rg} -n {pe}
keyvault delete --hsm-name {hsm} -g {rg}
keyvault purge --hsm-name {hsm} -l {loc}
keyvault create --hsm-name {hsm} -g {rg} -l {loc} --administrators "3707fb2f-ac10-4591-a04f-8b0d786ea37d"
network private-link-resource list --name {hsm} -g {rg} --type microsoft.keyvault/managedHSMs
keyvault delete --hsm-name {hsm} -g {rg}
keyvault purge --hsm-name {hsm} -l {loc}
keyvault show -n {kv} -g {rg} --query "id" -otsv
network vnet create -n {vnet} -g {rg} -l {loc} --subnet-name {subnet}
network vnet subnet update -n {subnet} --vnet-name {vnet} -g {rg} --disable-private-endpoint-network-policies true
network private-endpoint create -g {rg} -n {pe} --vnet-name {vnet} --subnet {subnet} -l {loc} --connection-name {pe_connection} --private-connection-resource-id {kv_id} --group-id vault
keyvault show -n {kv}
network private-endpoint-connection show --id {kv_pe_id}
network private-endpoint-connection show  --resource-name {kv} -g {rg} --name {kv_pe_name} --type microsoft.keyvault/vaults
network private-endpoint-connection show  --resource-name {kv} -g {rg} -n {kv_pe_name} --type microsoft.keyvault/vaults
keyvault set-policy -g {rg} -n {kv} --object-id {policy_id} --certificate-permissions get list
network private-endpoint-connection reject --id {kv_pe_id} --description "{rejection_desc}"
network private-endpoint-connection show --id {kv_pe_id}
network private-endpoint-connection approve --resource-name {kv} --name {kv_pe_name} -g {rg} --type microsoft.keyvault/vaults --description "{approval_desc}"
network private-endpoint-connection show --id {kv_pe_id}
network private-endpoint-connection list --id {kv_id}
network private-endpoint-connection delete --id {kv_pe_id} -y
network private-link-resource list --name {kv} -g {rg} --type microsoft.keyvault/vaults
network vnet create -n {vnet} -g {rg} -l {loc} --subnet-name {subnet}
network vnet subnet update -n {subnet} --vnet-name {vnet} -g {rg} --disable-private-endpoint-network-policies true
storage account private-link-resource list --account-name {sa} -g {rg}
storage account show -n {sa} -g {rg}
network private-endpoint create -g {rg} -n {pe} --vnet-name {vnet} --subnet {subnet} -l {loc} --connection-name {pe_connection} --private-connection-resource-id {sa_id} --group-id blob
storage account show -n {sa} -g {rg}
network private-endpoint-connection show --name {sa_pec_name} -g {rg} --resource-name {sa} --type Microsoft.Storage/storageAccounts
network private-endpoint-connection reject --name {sa_pec_name} -g {rg} --resource-name {sa} --type Microsoft.Storage/storageAccounts
network private-endpoint-connection list --id {sa_pec_id}
network private-endpoint-connection delete --id {sa_pec_id} -y
network private-link-resource list --name {sa} -g {rg} --type Microsoft.Storage/storageAccounts
network vnet create -g {rg} -n {vnet_name} --subnet-name {subnet_name}
network vnet subnet update -g {rg} --vnet-name {vnet_name} --name {subnet_name} --disable-private-endpoint-network-policies true
acr create --name {registry_name} --resource-group {rg} --sku premium
network private-endpoint create -n {endpoint_name} -g {rg} --subnet {subnet_name} --vnet-name {vnet_name}  --private-connection-resource-id {registry_id} --group-id registry --connection-name {endpoint_conn_name} --manual-request
network private-endpoint-connection list -g {rg} --name {registry_name} --type Microsoft.ContainerRegistry/registries
network private-endpoint-connection approve -g {rg} --resource-name {registry_name} -n {endpoint_request} --description {description_msg} --type Microsoft.ContainerRegistry/registries
network private-endpoint create -n {second_endpoint_name} -g {rg} --subnet {subnet_name} --vnet-name {vnet_name} --private-connection-resource-id {registry_id} --group-id registry --connection-name {second_endpoint_conn_name} --manual-request
network private-endpoint-connection list -g {rg} --name {registry_name} --type Microsoft.ContainerRegistry/registries
network private-endpoint-connection reject -g {rg} --resource-name {registry_name} -n {second_endpoint_request} --description {description_msg} --type Microsoft.ContainerRegistry/registries
network private-endpoint-connection list -g {rg} -n {registry_name} --type Microsoft.ContainerRegistry/registries
network private-endpoint-connection delete -g {rg} --resource-name {registry_name} -n {second_endpoint_request} --type Microsoft.ContainerRegistry/registries -y
network private-endpoint-connection list -g {rg} -n {registry_name} --type Microsoft.ContainerRegistry/registries
network private-endpoint-connection show -g {rg} --resource-name {registry_name} -n {endpoint_request} --type Microsoft.ContainerRegistry/registries
network private-endpoint-connection delete -g {rg} --resource-name {registry_name} -n {endpoint_request} --type Microsoft.ContainerRegistry/registries -y
acr create --name {registry_name} --resource-group {rg} --sku premium
network private-link-resource list --id {registry_id}
network private-link-resource list -g clitest.rg000001 --name azuredbclitest000002 --type Microsoft.DBforMariaDB/servers
network vnet create -n cli-vnet-000003 -g clitest.rg000001 -l westus --subnet-name cli-subnet-000004
network vnet subnet update -n cli-subnet-000004 --vnet-name cli-vnet-000003 -g clitest.rg000001 --disable-private-endpoint-network-policies true
mariadb server show -g clitest.rg000001 -n azuredbclitest000002
network private-link-resource list -g clitest.rg000001 -n azuredbclitest000002 --type Microsoft.DBforMariaDB/servers
network private-endpoint create -g clitest.rg000001 -n cli-pe-000005 --vnet-name cli-vnet-000003 --subnet cli-subnet-000004 -l westus --connection-name cli-pec-000008 --private-connection-resource-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforMariaDB/servers/azuredbclitest000002 --group-id mariadbServer
mariadb server show -g clitest.rg000001 -n azuredbclitest000002
network private-endpoint-connection show --resource-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000005-35be1cf1-835f-4ba9-a1b1-4f702c112bff --type Microsoft.DBforMariaDB/servers
network private-endpoint-connection approve --resource-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000005-35be1cf1-835f-4ba9-a1b1-4f702c112bff --description "You are approved!" --type Microsoft.DBforMariaDB/servers
network private-endpoint-connection reject --resource-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000005-35be1cf1-835f-4ba9-a1b1-4f702c112bff --description "You are rejected!" --type Microsoft.DBforMariaDB/servers
network private-endpoint-connection delete --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforMariaDB/servers/azuredbclitest000002/privateEndpointConnections/cli-pe-000005-35be1cf1-835f-4ba9-a1b1-4f702c112bff -y
network private-endpoint create -g clitest.rg000001 -n cli-pe-000006 --vnet-name cli-vnet-000003 --subnet cli-subnet-000004 -l westus --connection-name cli-pec-000009 --private-connection-resource-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforMariaDB/servers/azuredbclitest000002 --group-id mariadbServer --manual-request
mariadb server show -g clitest.rg000001 -n azuredbclitest000002
network private-endpoint-connection show --resource-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000006-2b9755ba-69d4-4453-b348-d4548f70f54f --type Microsoft.DBforMariaDB/servers
network private-endpoint-connection approve --resource-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000006-2b9755ba-69d4-4453-b348-d4548f70f54f --description "You are approved!" --type Microsoft.DBforMariaDB/servers
network private-endpoint-connection reject --resource-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000006-2b9755ba-69d4-4453-b348-d4548f70f54f --description "You are rejected!" --type Microsoft.DBforMariaDB/servers
network private-endpoint-connection delete --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforMariaDB/servers/azuredbclitest000002/privateEndpointConnections/cli-pe-000006-2b9755ba-69d4-4453-b348-d4548f70f54f -y
network private-endpoint create -g clitest.rg000001 -n cli-pe-000007 --vnet-name cli-vnet-000003 --subnet cli-subnet-000004 -l westus --connection-name cli-pec-000010 --private-connection-resource-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforMariaDB/servers/azuredbclitest000002 --group-id mariadbServer --manual-request true
mariadb server show -g clitest.rg000001 -n azuredbclitest000002
network private-endpoint-connection show --resource-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000007-f66a670b-5236-4b0f-939e-86f797613a36 --type Microsoft.DBforMariaDB/servers
network private-endpoint-connection reject --resource-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000007-f66a670b-5236-4b0f-939e-86f797613a36 --description "You are rejected!" --type Microsoft.DBforMariaDB/servers
network private-endpoint-connection approve --resource-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000007-f66a670b-5236-4b0f-939e-86f797613a36 --description "You are approved!" --type Microsoft.DBforMariaDB/servers
network private-endpoint-connection list --name azuredbclitest000002 -g clitest.rg000001 --type Microsoft.DBforMariaDB/servers
network private-endpoint-connection delete --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforMariaDB/servers/azuredbclitest000002/privateEndpointConnections/cli-pe-000007-f66a670b-5236-4b0f-939e-86f797613a36 -y
network private-link-resource list -g clitest.rg000001 --name azuredbclitest000002 --type Microsoft.DBforMySQL/servers
network vnet create -n cli-vnet-000003 -g clitest.rg000001 -l westus --subnet-name cli-subnet-000004
network vnet subnet update -n cli-subnet-000004 --vnet-name cli-vnet-000003 -g clitest.rg000001 --disable-private-endpoint-network-policies true
mysql server show -g clitest.rg000001 -n azuredbclitest000002
network private-link-resource list -g clitest.rg000001 -n azuredbclitest000002 --type Microsoft.DBforMySQL/servers
network private-endpoint create -g clitest.rg000001 -n cli-pe-000005 --vnet-name cli-vnet-000003 --subnet cli-subnet-000004 -l westus --connection-name cli-pec-000008 --private-connection-resource-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforMySQL/servers/azuredbclitest000002 --group-id mysqlServer
mysql server show -g clitest.rg000001 -n azuredbclitest000002
network private-endpoint-connection show --resource-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000005-a69aef3a-51e5-4ea4-8511-44c809f5d615 --type Microsoft.DBforMySQL/servers
network private-endpoint-connection approve --resource-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000005-a69aef3a-51e5-4ea4-8511-44c809f5d615 --description "You are approved!" --type Microsoft.DBforMySQL/servers
network private-endpoint-connection reject --resource-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000005-a69aef3a-51e5-4ea4-8511-44c809f5d615 --description "You are rejected!" --type Microsoft.DBforMySQL/servers
network private-endpoint-connection delete --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforMySQL/servers/azuredbclitest000002/privateEndpointConnections/cli-pe-000005-a69aef3a-51e5-4ea4-8511-44c809f5d615 -y
network private-endpoint create -g clitest.rg000001 -n cli-pe-000006 --vnet-name cli-vnet-000003 --subnet cli-subnet-000004 -l westus --connection-name cli-pec-000009 --private-connection-resource-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforMySQL/servers/azuredbclitest000002 --group-id mysqlServer --manual-request
mysql server show -g clitest.rg000001 -n azuredbclitest000002
network private-endpoint-connection show --resource-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000006-f0cad45b-624b-4623-adf5-4cb88dc47025 --type Microsoft.DBforMySQL/servers
network private-endpoint-connection approve --resource-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000006-f0cad45b-624b-4623-adf5-4cb88dc47025 --description "You are approved!" --type Microsoft.DBforMySQL/servers
network private-endpoint-connection reject --resource-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000006-f0cad45b-624b-4623-adf5-4cb88dc47025 --description "You are rejected!" --type Microsoft.DBforMySQL/servers
network private-endpoint-connection delete --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforMySQL/servers/azuredbclitest000002/privateEndpointConnections/cli-pe-000006-f0cad45b-624b-4623-adf5-4cb88dc47025 -y
network private-endpoint create -g clitest.rg000001 -n cli-pe-000007 --vnet-name cli-vnet-000003 --subnet cli-subnet-000004 -l westus --connection-name cli-pec-000010 --private-connection-resource-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforMySQL/servers/azuredbclitest000002 --group-id mysqlServer --manual-request true
mysql server show -g clitest.rg000001 -n azuredbclitest000002
network private-endpoint-connection show --resource-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000007-c0291705-440d-4cee-bd7a-6a5edc908b84 --type Microsoft.DBforMySQL/servers
network private-endpoint-connection reject --resource-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000007-c0291705-440d-4cee-bd7a-6a5edc908b84 --description "You are rejected!" --type Microsoft.DBforMySQL/servers
network private-endpoint-connection approve --resource-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000007-c0291705-440d-4cee-bd7a-6a5edc908b84 --description "You are approved!" --type Microsoft.DBforMySQL/servers
network private-endpoint-connection list --name azuredbclitest000002 -g clitest.rg000001 --type Microsoft.DBforMySQL/servers
network private-endpoint-connection delete --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforMySQL/servers/azuredbclitest000002/privateEndpointConnections/cli-pe-000007-c0291705-440d-4cee-bd7a-6a5edc908b84 -y
network private-link-resource list -g clitest.rg000001 --name azuredbclitest000002 --type Microsoft.DBforPostgreSQL/servers
network vnet create -n cli-vnet-000003 -g clitest.rg000001 -l westus --subnet-name cli-subnet-000004
network vnet subnet update -n cli-subnet-000004 --vnet-name cli-vnet-000003 -g clitest.rg000001 --disable-private-endpoint-network-policies true
postgres server show -g clitest.rg000001 -n azuredbclitest000002
network private-link-resource list -g clitest.rg000001 -n azuredbclitest000002 --type Microsoft.DBforPostgreSQL/servers
network private-endpoint create -g clitest.rg000001 -n cli-pe-000005 --vnet-name cli-vnet-000003 --subnet cli-subnet-000004 -l westus --connection-name cli-pec-000008 --private-connection-resource-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforPostgreSQL/servers/azuredbclitest000002 --group-id postgresqlServer
postgres server show -g clitest.rg000001 -n azuredbclitest000002
network private-endpoint-connection show --resource-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000005-7b7c2d5c-6ad7-4239-b514-89d2a7540a5e --type Microsoft.DBforPostgreSQL/servers
network private-endpoint-connection approve --resource-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000005-7b7c2d5c-6ad7-4239-b514-89d2a7540a5e --description "You are approved!" --type Microsoft.DBforPostgreSQL/servers
network private-endpoint-connection reject --resource-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000005-7b7c2d5c-6ad7-4239-b514-89d2a7540a5e --description "You are rejected!" --type Microsoft.DBforPostgreSQL/servers
network private-endpoint-connection delete --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforPostgreSQL/servers/azuredbclitest000002/privateEndpointConnections/cli-pe-000005-7b7c2d5c-6ad7-4239-b514-89d2a7540a5e -y
network private-endpoint create -g clitest.rg000001 -n cli-pe-000006 --vnet-name cli-vnet-000003 --subnet cli-subnet-000004 -l westus --connection-name cli-pec-000009 --private-connection-resource-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforPostgreSQL/servers/azuredbclitest000002 --group-id postgresqlServer --manual-request
postgres server show -g clitest.rg000001 -n azuredbclitest000002
network private-endpoint-connection show --resource-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000006-facb72e5-61d2-49b5-bee2-1cb3650e1ffa --type Microsoft.DBforPostgreSQL/servers
network private-endpoint-connection approve --resource-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000006-facb72e5-61d2-49b5-bee2-1cb3650e1ffa --description "You are approved!" --type Microsoft.DBforPostgreSQL/servers
network private-endpoint-connection reject --resource-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000006-facb72e5-61d2-49b5-bee2-1cb3650e1ffa --description "You are rejected!" --type Microsoft.DBforPostgreSQL/servers
network private-endpoint-connection delete --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforPostgreSQL/servers/azuredbclitest000002/privateEndpointConnections/cli-pe-000006-facb72e5-61d2-49b5-bee2-1cb3650e1ffa -y
network private-endpoint create -g clitest.rg000001 -n cli-pe-000007 --vnet-name cli-vnet-000003 --subnet cli-subnet-000004 -l westus --connection-name cli-pec-000010 --private-connection-resource-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforPostgreSQL/servers/azuredbclitest000002 --group-id postgresqlServer --manual-request true
postgres server show -g clitest.rg000001 -n azuredbclitest000002
network private-endpoint-connection show --resource-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000007-b60881c9-67c9-4da1-930e-a7393ba45d32 --type Microsoft.DBforPostgreSQL/servers
network private-endpoint-connection reject --resource-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000007-b60881c9-67c9-4da1-930e-a7393ba45d32 --description "You are rejected!" --type Microsoft.DBforPostgreSQL/servers
network private-endpoint-connection approve --resource-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000007-b60881c9-67c9-4da1-930e-a7393ba45d32 --description "You are approved!" --type Microsoft.DBforPostgreSQL/servers
network private-endpoint-connection list --name azuredbclitest000002 -g clitest.rg000001 --type Microsoft.DBforPostgreSQL/servers
network private-endpoint-connection delete --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforPostgreSQL/servers/azuredbclitest000002/privateEndpointConnections/cli-pe-000007-b60881c9-67c9-4da1-930e-a7393ba45d32 -y
network vnet create -n {vnet} -g {rg} -l {loc} --subnet-name {subnet}
network vnet subnet update -n {subnet} --vnet-name {vnet} -g {rg} --disable-private-endpoint-network-policies true
rest --method "PUT"                         --url "https://management.azure.com/subscriptions/{sub}/resourcegroups/{rg}/providers/Microsoft.Authorization/resourceManagementPrivateLinks/{rmplname}?api-version=2020-05-01"                         --body "{body}"
network private-endpoint create -g {rg} -n {pename} --vnet-name {vnet} --subnet {subnet} -l {loc} --connection-name {pe_connection} --private-connection-resource-id {rmpl_id} --group-id ResourceManagement
network private-endpoint-connection list -g {rg} -n {rmplname} --type Microsoft.Authorization/resourceManagementPrivateLinks
network private-endpoint-connection show --resource-name {rmplname} --name {pe} --resource-group {rg} --type Microsoft.Authorization/resourceManagementPrivateLinks
network private-endpoint-connection approve -g {rg} --resource-name {rmplname} --name {pe} --type Microsoft.Authorization/resourceManagementPrivateLinks
network private-endpoint-connection reject -g {rg} --resource-name {rmplname} --name {pe} --type Microsoft.Authorization/resourceManagementPrivateLinks
network private-endpoint-connection delete -g {rg} --resource-name {rmplname} -n {pe} --type Microsoft.Authorization/resourceManagementPrivateLinks -y
rest --method PUT                  --url "https://management.azure.com/subscriptions/{sub}/resourcegroups/{rg}/providers/Microsoft.Authorization/resourceManagementPrivateLinks/{rmplname}?api-version=2020-05-01"                  --body {body}
network private-link-resource list --name {rmplname} --resource-group {rg} --type Microsoft.Authorization/resourceManagementPrivateLinks
cosmosdb create -n {acc} -g {rg} --enable-public-network false
network vnet create -n {vnet} -g {rg} -l {loc} --subnet-name {subnet}
network vnet subnet update -n {subnet} --vnet-name {vnet} -g {rg} --disable-private-endpoint-network-policies true
network private-endpoint create -g {rg} -n {pe} --vnet-name {vnet} --subnet {subnet} -l {loc} --connection-name {pe_connection} --private-connection-resource-id {acc_id} --group-id Sql
network private-endpoint-connection show --id {pec_id}
network private-endpoint-connection show --resource-name {acc} --name {pe_name} --resource-group {rg} --type Microsoft.DocumentDB/databaseAccounts
network private-endpoint-connection show --resource-name {acc} -n {pe_name} -g {rg} --type Microsoft.DocumentDB/databaseAccounts
network private-endpoint-connection approve --resource-name {acc} --resource-group {rg} --name {pe_name} --type Microsoft.DocumentDB/databaseAccounts --description "{approval_desc}"
network private-endpoint-connection reject --id {pec_id} --description "{rejection_desc}"
network private-endpoint-connection list --name {acc} --resource-group {rg} --type Microsoft.DocumentDB/databaseAccounts
network private-endpoint-connection delete --id {pec_id} -y
cosmosdb create -n {acc} -g {rg}
network private-link-resource list --name {acc} --resource-group {rg} --type Microsoft.DocumentDB/databaseAccounts
appservice plan create -g {resource_group} -n {plan_name} --sku P1V2
webapp create -g {resource_group} -n {webapp_name} --plan {plan_name}
network private-link-resource list --id {webapp_id}
network vnet create --resource-group {resource_group_net} --location {location} --name {vnet_name} --address-prefix 10.0.0.0/16
network vnet subnet create --resource-group {resource_group_net} --vnet-name {vnet_name} --name {subnet_name} --address-prefixes 10.0.0.0/24
network vnet subnet update --resource-group {resource_group_net} --vnet-name {vnet_name} --name {subnet_name} --disable-private-endpoint-network-policies true
eventgrid domain create --name {domain_name} --resource-group {rg} --location {location} --public-network-access disabled
network private-endpoint create --resource-group {resource_group_net} --name {private_endpoint_name} --vnet-name {vnet_name} --subnet {subnet_name} --private-connection-resource-id {scope} --location {location} --group-ids domain --connection-name {connection_name}
eventgrid domain show --name {domain_name} --resource-group {rg}
network private-endpoint-connection list --resource-group {rg} --name {domain_name} --type Microsoft.EventGrid/domains
network private-endpoint-connection show --resource-group {rg} --resource-name {domain_name} --name {server_pec_name} --type Microsoft.EventGrid/domains
network private-endpoint-connection approve --resource-group {rg} --resource-name {domain_name} --name {server_pec_name} --type Microsoft.EventGrid/domains --description "{approval_description}"
network private-endpoint-connection reject --resource-group {rg} --resource-name {domain_name} --name {server_pec_name} --type Microsoft.EventGrid/domains --description "{rejection_description}"
network private-endpoint-connection delete --resource-group {rg} --resource-name {domain_name} --name {server_pec_name} --type Microsoft.EventGrid/domains -y
network private-endpoint delete --resource-group {resource_group_net} --name {private_endpoint_name}
network vnet subnet delete --resource-group {resource_group_net} --vnet-name {vnet_name} --name {subnet_name}
network vnet delete --resource-group {resource_group_net} --name {vnet_name}
eventgrid domain delete --name {domain_name} --resource-group {rg}
network vnet create --resource-group {resource_group_net} --location {location} --name {vnet_name} --address-prefix 10.0.0.0/16
network vnet subnet create --resource-group {resource_group_net} --vnet-name {vnet_name} --name {subnet_name} --address-prefixes 10.0.0.0/24
network vnet subnet update --resource-group {resource_group_net} --vnet-name {vnet_name} --name {subnet_name} --disable-private-endpoint-network-policies true
eventgrid topic create --name {topic_name} --resource-group {rg} --location {location} --public-network-access disabled
network private-endpoint create --resource-group {resource_group_net} --name {private_endpoint_name} --vnet-name {vnet_name} --subnet {subnet_name} --private-connection-resource-id {scope} --location {location} --group-ids topic --connection-name {connection_name}
eventgrid topic show --name {topic_name} --resource-group {rg}
network private-endpoint-connection list --resource-group {rg} --name {topic_name} --type Microsoft.EventGrid/topics
network private-endpoint-connection show --resource-group {rg} --resource-name {topic_name} --name {server_pec_name} --type Microsoft.EventGrid/topics
network private-endpoint-connection approve --resource-group {rg} --resource-name {topic_name} --name {server_pec_name} --type Microsoft.EventGrid/topics --description "{approval_description}"
network private-endpoint-connection reject --resource-group {rg} --resource-name {topic_name} --name {server_pec_name} --type Microsoft.EventGrid/topics --description "{rejection_description}"
network private-endpoint-connection delete --resource-group {rg} --resource-name {topic_name} --name {server_pec_name} --type Microsoft.EventGrid/topics -y
network private-endpoint delete --resource-group {resource_group_net} --name {private_endpoint_name}
network vnet subnet delete --resource-group {resource_group_net} --vnet-name {vnet_name} --name {subnet_name}
network vnet delete --resource-group {resource_group_net} --name {vnet_name}
eventgrid topic delete --name {topic_name} --resource-group {rg}
eventgrid topic create --name {topic_name} --resource-group {rg} --location {location} --public-network-access disabled
network private-link-resource list --id {scope_id}
eventgrid domain create --name {domain_name} --resource-group {rg} --location {location} --public-network-access disabled
network private-link-resource list --id {domain_id}
network public-ip create -g {rg} -n {appgw_ip} --sku Standard
network vnet create -g {rg} -n {appgw_pe_vnet} --subnet-name {appgw_pe_subnet}
network vnet subnet update -g {rg} -n {appgw_pe_subnet} --vnet-name {appgw_pe_vnet} --disable-private-endpoint-network-policies true
network application-gateway create -g {rg} -n {appgw} --sku Standard_v2 --public-ip-address {appgw_ip} --enable-private-link
network application-gateway show -g {rg} -n {appgw}
network vnet show -g {rg} -n "{appgw}Vnet"
network private-link-resource list --id {appgw_id}
network private-endpoint create -g {rg} -n {appgw_pe} --connection-name {appgw_pec} --vnet-name {appgw_pe_vnet} --subnet {appgw_pe_subnet} --private-connection-resource-id {appgw_id} --group-id {private_link_group_id}
network private-endpoint-connection list --id {appgw_id} 
network private-endpoint-connection reject --id {private_endpoint_conn_id}
network private-endpoint-connection show --id {private_endpoint_conn_id}
network private-endpoint delete -g {rg} -n {appgw_pe}
network public-ip create -g {rg} -n {appgw_ip} --sku Standard
network vnet create -g {rg} -n {appgw_pe_vnet} --subnet-name {appgw_pe_subnet}
network vnet subnet update -g {rg} -n {appgw_pe_subnet} --vnet-name {appgw_pe_vnet} --disable-private-endpoint-network-policies true
network application-gateway create -g {rg} -n {appgw} --sku Standard_v2 --public-ip-address {appgw_ip} --enable-private-link --private-link-subnet YetAnotherSubnetName --private-link-primary true --private-link-subnet-prefix 10.0.2.0/24
network application-gateway show -g {rg} -n {appgw}
network vnet show -g {rg} -n "{appgw}Vnet"
network private-link-resource list --id {appgw_id}
network private-endpoint create -g {rg} -n {appgw_pe} --connection-name {appgw_pec} --vnet-name {appgw_pe_vnet} --subnet {appgw_pe_subnet} --private-connection-resource-id {appgw_id} --group-id {private_link_group_id}
network private-endpoint-connection list --id {appgw_id} 
network private-endpoint-connection reject --id {private_endpoint_conn_id}
network private-endpoint-connection show --id {private_endpoint_conn_id}
network private-endpoint delete -g {rg} -n {appgw_pe}
disk-access create -g {rg} -l {loc} -n {disk_access}
network private-link-resource list -g {rg} -n {disk_access} --type Microsoft.Compute/diskAccesses
network vnet create -g {rg} -n {pe_vnet} --subnet-name {pe_subnet}
network vnet subnet update -g {rg} -n {pe_subnet} --vnet-name {pe_vnet} --disable-private-endpoint-network-policies true
network private-endpoint create -g {rg} -n {pe_name} --vnet-name {pe_vnet} --subnet {pe_subnet} --private-connection-resource-id {disk_access_id} --group-ids disks --connection-name {pe_connection}
network private-endpoint-connection list -g {rg} -n {disk_access} --type Microsoft.Compute/diskAccesses
deployment group create -g {rg} -p "@{param_path}" target_resource_name={target_resource_name} -f "{template_path}"
network vnet create -n {vnet} -g {rg} --subnet-name {subnet}
network vnet subnet update -n {subnet} --vnet-name {vnet} -g {rg} --disable-private-endpoint-network-policies true
network private-link-resource list --name {target_resource_name} --resource-group {rg} --type {resource_type}
network private-endpoint create -g {rg} -n {pe} --vnet-name {vnet} --subnet {subnet} --connection-name {pe_connection} --private-connection-resource-id {target_resource_id} --group-id {group_id}
network private-endpoint-connection list --name {target_resource_name} --resource-group {rg} --type {resource_type}
network private-endpoint-connection show --id {pec_id}
network private-endpoint-connection show --resource-name {target_resource_name} --name {pec_name} --resource-group {rg} --type {resource_type}
network private-endpoint-connection show --resource-name {target_resource_name} -n {pec_name} -g {rg} --type {resource_type}
network private-endpoint-connection approve --resource-name {target_resource_name} --resource-group {rg} --name {pec_name} --type {resource_type} --description "{approval_desc}"
network private-endpoint-connection reject --id {pec_id} --description "{rejection_desc}"
network private-endpoint-connection list --name {target_resource_name} --resource-group {rg} --type {resource_type}
network private-endpoint-connection delete --id {pec_id} -y
deployment group create --name {deployment_name} -g {dt_rg} --template-file "{dt_template}" --parameters name={dt_name} --parameters location={dt_loc}
network private-link-resource list --name {dt_name} --resource-group {dt_rg} --type {dt_type}
network vnet create -n {vnet} -g {dt_rg} --subnet-name {subnet}
network vnet subnet update -n {subnet} --vnet-name {vnet} -g {dt_rg} --disable-private-endpoint-network-policies true
network private-endpoint create -g {dt_rg} -n {pe} --vnet-name {vnet} --subnet {subnet} --connection-name {pe_connection} --private-connection-resource-id {target_resource_id} --group-id {group_id} --manual-request
network private-endpoint-connection list --name {dt_name} --resource-group {dt_rg} --type {dt_type}
network private-endpoint-connection show --id {pec_id}
network private-endpoint-connection show --resource-name {dt_name} --name {pec_name} --resource-group {dt_rg} --type {dt_type}
network private-endpoint-connection approve --resource-name {dt_name} --resource-group {dt_rg} --name {pec_name} --type {dt_type} --description "{approval_desc}"
network private-endpoint-connection reject --id {pec_id} --description "{rejection_desc}"
network private-endpoint-connection approve --resource-name {dt_name} --resource-group {dt_rg} --name {pec_name} --type {dt_type} --description "{approval_desc}"
network private-endpoint-connection list --name {dt_name} --resource-group {dt_rg} --type {dt_type}
network private-endpoint-connection delete --id {pec_id} -y
deployment group create --name {deployment_name} -g {azs_rg} --template-file "{azs_template}" --parameters name={azs_name} --parameters location={azs_loc}
network private-link-resource list --name {azs_name} --resource-group {azs_rg} --type {azs_type}
network vnet create -n {vnet} -g {azs_rg} --subnet-name {subnet}
network vnet subnet update -n {subnet} --vnet-name {vnet} -g {azs_rg} --disable-private-endpoint-network-policies true
network private-endpoint create -g {azs_rg} -n {pe} --vnet-name {vnet} --subnet {subnet} --connection-name {pe_connection} --private-connection-resource-id {target_resource_id} --group-id {group_id} --manual-request
network private-endpoint-connection list --name {azs_name} --resource-group {azs_rg} --type {azs_type}
network private-endpoint-connection show --id {pec_id}
network private-endpoint-connection show --resource-name {azs_name} --name {pec_name} --resource-group {azs_rg} --type {azs_type}
network private-endpoint-connection approve --resource-name {azs_name} --resource-group {azs_rg} --name {pec_name} --type {azs_type} --description "{approval_desc}"
network private-endpoint-connection reject --id {pec_id} --description "{rejection_desc}"
network private-endpoint-connection approve --resource-name {azs_name} --resource-group {azs_rg} --name {pec_name} --type {azs_type} --description "{approval_desc}"
network private-endpoint-connection list --name {azs_name} --resource-group {azs_rg} --type {azs_type}
network private-endpoint-connection delete --id {pec_id} -y
{cmd} create -g {rg} {create_name} {resource} {extra_create}
{cmd} show -g {rg} {show_name} {resource}
network private-link-resource list --name {resource} -g {rg} --type {type}
network vnet create -n {vnet} -g {rg} --subnet-name {subnet}
network vnet subnet update -n {subnet} --vnet-name {vnet} -g {rg} --disable-private-endpoint-network-policies true
network private-endpoint create -g {rg} -n {pe} --vnet-name {vnet} --subnet {subnet} --connection-name {pe_connection}  --private-connection-resource-id {id} --group-id {group_id}
network private-endpoint-connection list --name {resource} -g {rg} --type {type}
network private-endpoint-connection show --name {name} -g {rg} --resource-name {resource} --type {type}
{cmd} create -g {rg} {create_name} {resource} {extra_create}
{cmd} show -g {rg} {show_name} {resource}
network private-link-resource list --name {resource} -g {rg} --type {type}
network vnet create -n {vnet} -g {rg} --subnet-name {subnet}
network vnet subnet update -n {subnet} --vnet-name {vnet} -g {rg} --disable-private-endpoint-network-policies true
network private-endpoint create -g {rg} -n {pe} --vnet-name {vnet} --subnet {subnet} --connection-name {pe_connection}  --private-connection-resource-id {id} --group-id {group_id}
network private-endpoint-connection list --name {resource} -g {rg} --type {type}
network private-endpoint-connection approve --name {name} -g {rg} --resource-name {resource} --type {type}
network private-endpoint-connection show --name {name} -g {rg} --resource-name {resource} --type {type}
network private-endpoint-connection reject --name {name} -g {rg} --resource-name {resource} --type {type}
network private-endpoint-connection delete --name {name} -g {rg} --resource-name {resource} --type {type} -y
{cmd} create -g {rg} {create_name} {resource} {extra_create}
{cmd} show -g {rg} {show_name} {resource}
network private-link-resource list --name {resource} -g {rg} --type {type}
network vnet create -n {vnet} -g {rg} --subnet-name {subnet}
network vnet subnet update -n {subnet} --vnet-name {vnet} -g {rg} --disable-private-endpoint-network-policies true
network private-endpoint create -g {rg} -n {pe} --vnet-name {vnet} --subnet {subnet} --connection-name {pe_connection}  --private-connection-resource-id {id} --group-id {group_id}
network private-endpoint-connection list --name {resource} -g {rg} --type {type}
network private-endpoint-connection show --name {name} -g {rg} --resource-name {resource} --type {type}
network private-endpoint-connection reject --name {name} -g {rg} --resource-name {resource} --type {type}
network private-endpoint-connection delete --name {name} -g {rg} --resource-name {resource} --type {type} -y
{cmd} create -g {rg} {create_name} {resource} {extra_create}
{cmd} show -g {rg} {show_name} {resource}
network private-link-resource list --name {resource} -g {rg} --type {type}
network vnet create -n {vnet} -g {rg} --subnet-name {subnet}
network vnet subnet update -n {subnet} --vnet-name {vnet} -g {rg} --disable-private-endpoint-network-policies true
network private-endpoint create -g {rg} -n {pe} --vnet-name {vnet} --subnet {subnet} --connection-name {pe_connection}  --private-connection-resource-id {id} --group-id {group_id}
network private-endpoint-connection list --name {resource} -g {rg} --type {type}
network private-endpoint-connection show --name {name} -g {rg} --resource-name {resource} --type {type}
network private-endpoint-connection delete --name {name} -g {rg} --resource-name {resource} --type {type} -y
{cmd} create -g {rg} {create_name} {resource} {extra_create}
{cmd} show -g {rg} {show_name} {resource}
network private-link-resource list --name {resource} -g {rg} --type {type}
network vnet create -n {vnet} -g {rg} --subnet-name {subnet}
network vnet subnet update -n {subnet} --vnet-name {vnet} -g {rg} --disable-private-endpoint-network-policies true
network private-endpoint create -g {rg} -n {pe} --vnet-name {vnet} --subnet {subnet} --connection-name {pe_connection}  --private-connection-resource-id {id} --group-id {group_id}
network private-endpoint-connection list --name {resource} -g {rg} --type {type}
network private-endpoint-connection show --name {name} -g {rg} --resource-name {resource} --type {type}
network private-endpoint-connection delete --name {name} -g {rg} --resource-name {resource} --type {type} -y
{cmd} create -g {rg} {create_name} {resource} {extra_create}
{cmd} show -g {rg} {show_name} {resource}
network private-link-resource list --name {resource} -g {rg} --type {type}
network vnet create -n {vnet} -g {rg} --subnet-name {subnet}
network vnet subnet update -n {subnet} --vnet-name {vnet} -g {rg} --disable-private-endpoint-network-policies true
network private-endpoint create -g {rg} -n {pe} --vnet-name {vnet} --subnet {subnet} --connection-name {pe_connection}  --private-connection-resource-id {id} --group-id {group_id}
network private-endpoint-connection list --name {resource} -g {rg} --type {type}
network private-endpoint-connection show --name {name} -g {rg} --resource-name {resource} --type {type}
network private-endpoint-connection delete --name {name} -g {rg} --resource-name {resource} --type {type} -y
{cmd} create -g {rg} {create_name} {resource} {extra_create}
{cmd} show -g {rg} {show_name} {resource}
network private-link-resource list --name {resource} -g {rg} --type {type}
network vnet create -n {vnet} -g {rg} --subnet-name {subnet}
network vnet subnet update -n {subnet} --vnet-name {vnet} -g {rg} --disable-private-endpoint-network-policies true
network private-endpoint create -g {rg} -n {pe} --vnet-name {vnet} --subnet {subnet} --connection-name {pe_connection}  --private-connection-resource-id {id} --group-id {group_id}
network private-endpoint-connection list --name {resource} -g {rg} --type {type}
network private-endpoint-connection approve --name {name} -g {rg} --resource-name {resource} --type {type}
network private-endpoint-connection show --name {name} -g {rg} --resource-name {resource} --type {type}
network private-endpoint-connection reject --name {name} -g {rg} --resource-name {resource} --type {type}
network private-endpoint-connection delete --name {name} -g {rg} --resource-name {resource} --type {type} -y
network vnet create -g {rg} -n {web_vnet} --address-prefixes 10.1.0.0/16 --subnet-name {web_subnet} --subnet-prefixes 10.1.0.0/24
{cmd} create -g {rg} {create_name} {resource} {extra_create}
{cmd} show -g {rg} {show_name} {resource}
network private-link-resource list --name {resource} -g {rg} --type {type}
network vnet create -n {vnet} -g {rg} --subnet-name {subnet}
network vnet subnet update -n {subnet} --vnet-name {vnet} -g {rg} --disable-private-endpoint-network-policies true
network private-endpoint create -g {rg} -n {pe} --vnet-name {vnet} --subnet {subnet} --connection-name {pe_connection}  --private-connection-resource-id {id} --group-id {group_id}
network private-endpoint-connection list --name {resource} -g {rg} --type {type}
network private-endpoint-connection show --name {name} -g {rg} --resource-name {resource} --type {type}
network private-endpoint-connection delete --name {name} -g {rg} --resource-name {resource} --type {type} -y
account list --query "[?isDefault].tenantId" -o tsv
deployment group create -g {rg} -p "@{param_path}" powerbi_resource_name={powerbi_resource_name} tenant_object_id={tenant_id} -f "{template_path}"
network vnet create -n {vnet} -g {rg} -l {loc} --address-prefixes 10.5.0.0/16 --subnet-name {subnet} --subnet-prefixes 10.5.0.0/24
network vnet subnet update -n {subnet} --vnet-name {vnet} -g {rg} --disable-private-endpoint-network-policies true
network private-link-resource list --name {powerbi_resource_name} --resource-group {rg} --type {resource_type}
network private-endpoint create -g {rg} -n {pe} -l {loc} --vnet-name {vnet} --subnet {subnet} --connection-name {pe_connection} --private-connection-resource-id {powerbi_resource_id} --group-ids {group_ids}
network private-endpoint-connection list --name {powerbi_resource_name} --resource-group {rg} --type {resource_type}
network private-endpoint-connection show --id {pec_id}
network private-endpoint-connection show --resource-name {powerbi_resource_name} --name {pec_name} --resource-group {rg} --type {resource_type}
network private-endpoint-connection approve --resource-name {powerbi_resource_name} --resource-group {rg} --name {pec_name} --type {resource_type} --description "{approval_desc}"
network private-endpoint-connection list --name {powerbi_resource_name} --resource-group {rg} --type {resource_type}
network private-endpoint-connection delete --id {pec_id} -y
network vnet create -g {rg} -n {vnet_name} --subnet-name {subnet_name}
network vnet subnet update -g {rg} --vnet-name {vnet_name} --name {subnet_name} --disable-private-endpoint-network-policies true
bot create -g {rg} -n {bot_name} -k registration --appid {app_id}
network private-endpoint create -g {rg} -n {endpoint_name} --vnet-name {vnet_name} --subnet {subnet_name} --private-connection-resource-id {bot_id} --connection-name {endpoint_conn_name} --group-id bot
network private-endpoint create -g {rg} -n {second_endpoint_name} --vnet-name {vnet_name} --subnet {subnet_name} --private-connection-resource-id {bot_id} --connection-name {second_endpoint_conn_name} --group-id bot --manual-request
network private-endpoint-connection approve -g {rg} -n {second_endpoint_name} --resource-name {bot_name} --type Microsoft.BotService/botServices --description {desc}
network private-endpoint-connection reject -g {rg} -n {second_endpoint_name} --resource-name {bot_name} --type Microsoft.BotService/botServices --description {desc}
network private-endpoint-connection list -g {rg} --name {bot_name} --type Microsoft.BotService/botServices
network private-endpoint-connection delete -g {rg} --resource-name {bot_name} -n {second_endpoint_name} --type Microsoft.BotService/botServices -y
network private-endpoint-connection list -g {rg} --name {bot_name} --type Microsoft.BotService/botServices
network private-endpoint-connection show -g {rg} --type Microsoft.BotService/botServices --resource-name {bot_name} -n {endpoint_name}
network private-endpoint-connection delete -g {rg} --resource-name {bot_name} -n {endpoint_name} --type Microsoft.BotService/botServices -y
network vnet create -g {rg} -n {vnet_name} --subnet-name {subnet_name}
network vnet subnet update -g {rg} --vnet-name {vnet_name} --name {subnet_name} --disable-private-endpoint-network-policies true
network private-link-resource list --id {cluster_id}
network private-endpoint create -g {rg} -n {endpoint_name} --vnet-name {vnet_name} --subnet {subnet_name} --private-connection-resource-id {cluster_id} --connection-name {endpoint_connection_name} --group-id {group_id} --manual-request
network private-endpoint-connection list --id {cluster_id}
network private-endpoint-connection approve --id {private-endpoint-connection-id} --description {approve_description_msg}
network private-endpoint-connection reject --id {private-endpoint-connection-id} --description {reject_description_msg}
network private-endpoint-connection delete --id {private-endpoint-connection-id} --yes
network private-endpoint-connection show --id {private-endpoint-connection-id}
redis create --location {loc} --name {cache_name} --resource-group {rg} --sku Standard --vm-size c1
network vnet create -n {vnet} -g {rg} -l {loc} --subnet-name {subnet}
network vnet subnet update -n {subnet} --vnet-name {vnet} -g {rg} --disable-private-endpoint-network-policies true
network private-endpoint create -g {rg} -n {pe} --vnet-name {vnet} --subnet {subnet} -l {loc} --connection-name {pe_connection} --private-connection-resource-id {acfr_id} --group-id redisCache
network private-endpoint show --id {pec_id}
network private-endpoint show --resource-group {rg} --name {pe_name}
redis show -n {cache_name} -g {rg}
network private-endpoint-connection list --id {red_pec_id}
network private-endpoint-connection show --id {red_pec_id}
network private-endpoint-connection reject --id {red_pec_id}
network private-endpoint-connection delete --id {red_pec_id} -y
network private-endpoint-connection list --id {red_pec_id}
redis create --location {loc} --name {cache_name} --resource-group {rg} --sku Basic --vm-size c0
network private-link-resource list --name {cache_name} -g {rg} --type Microsoft.Cache/Redis
policy event list -m "azgovtest5" --from "2021-07-01T00:00:00Z" --to "2021-07-03T01:30:00Z" --filter "isCompliant eq false" --apply "groupby((policyAssignmentId, resourceId), aggregate($count as numRecords))" --select "policyAssignmentId, resourceId, numRecords" --order-by "numRecords desc" --top 2
policy state list -m "azgovtest5" --from "2021-07-01T00:00:00Z" --to "2021-07-03T01:30:00Z" --filter "isCompliant eq false" --apply "groupby((policyAssignmentId, resourceId), aggregate($count as numRecords))" --select "policyAssignmentId, resourceId, numRecords" --order-by "numRecords desc" --top 2
policy state summarize -m "azgovtest5" --from "2021-07-01T00:00:00Z" --to "2021-07-03T01:30:00Z" --filter "isCompliant eq false" --top 2
policy event list  --from "2021-07-01T00:00:00Z" --to "2021-07-03T01:30:00Z" --filter "isCompliant eq false" --apply "groupby((policyAssignmentId, resourceId), aggregate($count as numRecords))" --select "policyAssignmentId, resourceId, numRecords" --order-by "numRecords desc" --top 2
policy state list  --from "2021-07-01T00:00:00Z" --to "2021-07-03T01:30:00Z" --filter "isCompliant eq false" --apply "groupby((policyAssignmentId, resourceId), aggregate($count as numRecords))" --select "policyAssignmentId, resourceId, numRecords" --order-by "numRecords desc" --top 2
policy state summarize  --from "2021-07-01T00:00:00Z" --to "2021-07-03T01:30:00Z" --filter "isCompliant eq false" --top 2
policy event list -g "defaultresourcegroup-eus" --from "2021-07-01T00:00:00Z" --to "2021-07-03T01:30:00Z" --filter "isCompliant eq false" --apply "groupby((policyAssignmentId, resourceId), aggregate($count as numRecords))" --select "policyAssignmentId, resourceId, numRecords" --order-by "numRecords desc" --top 2
policy state list -g "defaultresourcegroup-eus" --from "2021-07-01T00:00:00Z" --to "2021-07-03T01:30:00Z" --filter "isCompliant eq false" --apply "groupby((policyAssignmentId, resourceId), aggregate($count as numRecords))" --select "policyAssignmentId, resourceId, numRecords" --order-by "numRecords desc" --top 2
policy state summarize -g "defaultresourcegroup-eus" --from "2021-07-01T00:00:00Z" --to "2021-07-03T01:30:00Z" --filter "isCompliant eq false" --top 2
policy event list --resource "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/cheggpolicy/providers/microsoft.keyvault/vaults/cheggtmpkv" --from "2021-07-01T00:00:00Z" --to "2021-07-03T01:30:00Z" --filter "isCompliant eq false" --apply "groupby((policyAssignmentId, resourceId), aggregate($count as numRecords))" --select "policyAssignmentId, resourceId, numRecords" --order-by "numRecords desc" --top 2
policy state list --resource "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/cheggpolicy/providers/microsoft.keyvault/vaults/cheggtmpkv" --from "2021-07-01T00:00:00Z" --to "2021-07-03T01:30:00Z" --filter "isCompliant eq false" --apply "groupby((policyAssignmentId, resourceId), aggregate($count as numRecords))" --select "policyAssignmentId, resourceId, numRecords" --order-by "numRecords desc" --top 2
policy state summarize --resource "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/cheggpolicy/providers/microsoft.keyvault/vaults/cheggtmpkv" --from "2021-07-01T00:00:00Z" --to "2021-07-03T01:30:00Z" --filter "isCompliant eq false" --top 2
policy event list --resource "cheggkv" --namespace "microsoft.keyvault" --resource-type "vaults" -g "cheggpolicy" --from "2021-07-01T00:00:00Z" --to "2021-07-03T01:30:00Z" --filter "isCompliant eq false" --apply "groupby((policyAssignmentId, resourceId), aggregate($count as numRecords))" --select "policyAssignmentId, resourceId, numRecords" --order-by "numRecords desc" --top 2
policy state list --resource "cheggkv" --namespace "microsoft.keyvault" --resource-type "vaults" -g "cheggpolicy" --from "2021-07-01T00:00:00Z" --to "2021-07-03T01:30:00Z" --filter "isCompliant eq false" --apply "groupby((policyAssignmentId, resourceId), aggregate($count as numRecords))" --select "policyAssignmentId, resourceId, numRecords" --order-by "numRecords desc" --top 2
policy state summarize --resource "cheggkv" --namespace "microsoft.keyvault" --resource-type "vaults" -g "cheggpolicy" --from "2021-07-01T00:00:00Z" --to "2021-07-03T01:30:00Z" --filter "isCompliant eq false" --top 2
policy event list --resource "subnet2" --namespace "microsoft.network" --resource-type "subnets" --parent "virtualnetworks/cheggvnet" -g "cheggpolicy" --from "2021-07-01T00:00:00Z" --to "2021-07-03T01:30:00Z" --filter "isCompliant eq false" --apply "groupby((policyAssignmentId, resourceId), aggregate($count as numRecords))" --select "policyAssignmentId, resourceId, numRecords" --order-by "numRecords desc" --top 2
policy state list --resource "subnet2" --namespace "microsoft.network" --resource-type "subnets" --parent "virtualnetworks/cheggvnet" -g "cheggpolicy" --from "2021-07-01T00:00:00Z" --to "2021-07-03T01:30:00Z" --filter "isCompliant eq false" --apply "groupby((policyAssignmentId, resourceId), aggregate($count as numRecords))" --select "policyAssignmentId, resourceId, numRecords" --order-by "numRecords desc" --top 2
policy state summarize --resource "subnet2" --namespace "microsoft.network" --resource-type "subnets" --parent "virtualnetworks/cheggvnet" -g "cheggpolicy" --from "2021-07-01T00:00:00Z" --to "2021-07-03T01:30:00Z" --filter "isCompliant eq false" --top 2
policy event list -s "1f3afdf9-d0c9-4c3d-847f-89da613e70a8" --from "2021-07-01T00:00:00Z" --to "2021-07-03T01:30:00Z" --filter "isCompliant eq false" --apply "groupby((policyAssignmentId, resourceId), aggregate($count as numRecords))" --select "policyAssignmentId, resourceId, numRecords" --order-by "numRecords desc" --top 2
policy state list -s "1f3afdf9-d0c9-4c3d-847f-89da613e70a8" --from "2021-07-01T00:00:00Z" --to "2021-07-03T01:30:00Z" --filter "isCompliant eq false" --apply "groupby((policyAssignmentId, resourceId), aggregate($count as numRecords))" --select "policyAssignmentId, resourceId, numRecords" --order-by "numRecords desc" --top 2
policy state summarize -s "1f3afdf9-d0c9-4c3d-847f-89da613e70a8" --from "2021-07-01T00:00:00Z" --to "2021-07-03T01:30:00Z" --filter "isCompliant eq false" --top 2
policy event list -d "34c877ad-507e-4c82-993e-3452a6e0ad3c" --from "2021-07-01T00:00:00Z" --to "2021-07-03T01:30:00Z" --filter "isCompliant eq false" --apply "groupby((policyAssignmentId, resourceId), aggregate($count as numRecords))" --select "policyAssignmentId, resourceId, numRecords" --order-by "numRecords desc" --top 2
policy state list -d "34c877ad-507e-4c82-993e-3452a6e0ad3c" --from "2021-07-01T00:00:00Z" --to "2021-07-03T01:30:00Z" --filter "isCompliant eq false" --apply "groupby((policyAssignmentId, resourceId), aggregate($count as numRecords))" --select "policyAssignmentId, resourceId, numRecords" --order-by "numRecords desc" --top 2
policy state summarize -d "34c877ad-507e-4c82-993e-3452a6e0ad3c" --from "2021-07-01T00:00:00Z" --to "2021-07-03T01:30:00Z" --filter "isCompliant eq false" --top 2
policy event list -a "4d31128e32d04a0098fd536e" --from "2021-07-01T00:00:00Z" --to "2021-07-03T01:30:00Z" --filter "isCompliant eq false" --apply "groupby((policyAssignmentId, resourceId), aggregate($count as numRecords))" --select "policyAssignmentId, resourceId, numRecords" --order-by "numRecords desc" --top 2
policy state list -a "4d31128e32d04a0098fd536e" --from "2021-07-01T00:00:00Z" --to "2021-07-03T01:30:00Z" --filter "isCompliant eq false" --apply "groupby((policyAssignmentId, resourceId), aggregate($count as numRecords))" --select "policyAssignmentId, resourceId, numRecords" --order-by "numRecords desc" --top 2
policy state summarize -a "4d31128e32d04a0098fd536e" --from "2021-07-01T00:00:00Z" --to "2021-07-03T01:30:00Z" --filter "isCompliant eq false" --top 2
policy event list -a "f32eeddfc32345b585f9a70b" -g "cheggpolicy"  --from "2021-07-01T00:00:00Z" --to "2021-07-03T01:30:00Z" --filter "isCompliant eq false" --apply "groupby((policyAssignmentId, resourceId), aggregate($count as numRecords))" --select "policyAssignmentId, resourceId, numRecords" --order-by "numRecords desc" --top 2
policy state list -a "f32eeddfc32345b585f9a70b" -g "cheggpolicy"  --from "2021-07-01T00:00:00Z" --to "2021-07-03T01:30:00Z" --filter "isCompliant eq false" --apply "groupby((policyAssignmentId, resourceId), aggregate($count as numRecords))" --select "policyAssignmentId, resourceId, numRecords" --order-by "numRecords desc" --top 2
policy state summarize -a "f32eeddfc32345b585f9a70b" -g "cheggpolicy"  --from "2021-07-01T00:00:00Z" --to "2021-07-03T01:30:00Z" --filter "isCompliant eq false" --top 2
policy state list --resource "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/cheggpolicy/providers/microsoft.keyvault/vaults/cheggtmpkv" --expand PolicyEvaluationDetails --top 2
policy metadata list
policy metadata list --top 0
policy metadata list --top 4267
policy metadata list --top 4265
policy metadata show --name ACF1000
policy metadata show -n ACF1000
policy assignment create --policy {bip} -n {pan}
policy remediation create -n {rn} -g {rg} -a {pan}
policy remediation show -n {rn} -g {rg}
policy remediation list -g {rg}
policy remediation deployment list -n {rn} -g {rg}
policy remediation delete -n {rn} -g {rg}
policy remediation list -g {rg}
policy remediation create -n {rn} -a {pan} --location-filters {location}
policy remediation show -n {rn}
policy remediation list
policy remediation deployment list -n {rn}
policy remediation delete -n {rn}
policy remediation list
policy remediation create -n {rn} -a {pan} -g {rg} --namespace "Microsoft.Storage" --resource-type storageAccounts --resource {sa}
policy remediation show -n {rn} -g {rg} --namespace "Microsoft.Storage" --resource-type storageAccounts --resource {sa}
policy remediation list -g {rg} --namespace "Microsoft.Storage" --resource-type storageAccounts --resource {sa}
policy remediation deployment list -n {rn} -g {rg} --namespace "Microsoft.Storage" --resource-type storageAccounts --resource {sa}
policy remediation delete -n {rn} -g {rg} --namespace "Microsoft.Storage" --resource-type storageAccounts --resource {sa}
policy remediation list -g {rg} --namespace "Microsoft.Storage" --resource-type storageAccounts --resource {sa}
policy assignment delete -n {pan}
policy assignment show -g {rg} -n {pan}
policy remediation create -n {rn} -g {rg} -a {pan}
policy remediation show -n {rn} -g {rg}
policy remediation show -n {rn} -g {rg}
policy remediation show -n {rn} -g {rg}
policy remediation show -n {rn} -g {rg}
policy remediation list -g {rg}
policy remediation deployment list -n {rn} -g {rg}
policy remediation cancel -n {rn} -g {rg}
account management-group create -n {mg}
policy assignment create --scope {mgid} --policy {bip} -n {pan}
policy remediation create -n {rn} -m {mg} -a {pid}
policy remediation show -n {rn} -m {mg}
policy remediation list -m {mg}
policy remediation deployment list -n {rn} -m {mg}
policy remediation delete -n {rn} -m {mg}
policy remediation list -m {mg}
policy assignment delete -n {pan} --scope {mgid}
account management-group delete -n {mg}
policy set-definition create -n {psn} --definitions "[{{ \"policyDefinitionId\": \"{bip}\", \"policyDefinitionReferenceId\": \"{drid}\" }}]"
policy assignment create --policy-set-definition {psn} -n {pan}
policy remediation create -n {rn} -a {pan} --definition-reference-id {drid}
policy remediation show -n {rn}
policy remediation list
policy remediation deployment list -n {rn}
policy remediation delete -n {rn}
policy remediation list
policy assignment delete -n {pan}
policy set-definition delete -n {psn}
policy assignment create --policy {bip} -g {rg} -n {pan} --location {location} --assign-identity -p '{{"tagName": {{ "value": "cliTagKey" }}, "tagValue": {{ "value": "cliTagValue" }} }}'
policy remediation create -n {rn} -g {rg} -a {pan} --resource-discovery-mode ReEvaluateCompliance
policy remediation show -n {rn} -g {rg}
policy remediation list -g {rg}
policy remediation deployment list -n {rn} -g {rg}
policy remediation cancel -n {rn} -g {rg}
policy assignment create --policy {bip} -n {pan} --resource-group {rg} -p '{{ "tagName": {{ "value": "notThere" }} }}'
policy state trigger-scan --no-wait
policy state trigger-scan -g {rg}
policy state list -g {rg} -a {pan} --filter "isCompliant eq false"
network private-dns zone create -g {rg} -n {zone}
network private-dns zone delete -g {rg} -n {zone} -y
network private-dns zone delete -g {rg} -n {zone} -y
network private-dns zone create -g {rg} -n {zone}
network private-dns zone show -g {rg} -n {zone}
network private-dns zone show -g {rg} -n {zone}
network private-dns zone create -g {rg} -n {zone}
network private-dns zone create -g {rg} -n {zone}
network private-dns zone list -g {rg}
network private-dns zone list -g {rg}
network private-dns zone create -g {rg} -n {zone}
network private-dns zone create -g {rg} -n {zone}
network private-dns zone list
network private-dns zone create -g {rg} -n {zone}
network private-dns zone update -g {rg} -n {zone} --tags {tags}
network private-dns zone create -g {rg} -n {zone} --tags {tags}
network private-dns zone update -g {rg} -n {zone} --tags {tags}
network private-dns zone create -g {rg} -n {zone}
network private-dns zone update -g {rg} -n {zone}
network private-dns zone create -g {rg} -n {zone}
network private-dns zone update -g {rg} -n {zone} --if-match {etag}
network private-dns zone create -g {rg} -n {zone}
network private-dns zone update -g {rg} -n {zone} --if-match {etag}
network private-dns zone create -g {rg} -n {zone} --tags {tags}
network private-dns zone update -g {rg} -n {zone} --tags ""
network private-dns zone update -g {rg} -n {zone}
network private-dns zone create -g {rg} -n {zone}
network private-dns zone create -g {rg} -n {zone}
network private-dns zone create -g {rg} -n {zone} --tags {tags}
network private-dns zone create -g {rg} -n {zone}
network private-dns zone create -g {rg} -n {zone}
network vnet create -g {rg} -n {vnet}
network private-dns link vnet create -g {rg} -n {link} -z {zone} -v {vnet} -e {registrationEnabled}
network private-dns link vnet delete -g {rg} -n {link} -z {zone} -y
network private-dns zone create -g {rg} -n {zone}
network private-dns link vnet delete -g {rg} -n {link} -z {zone} -y
network private-dns link vnet delete -g {rg} -n {link} -z {zone} -y
network private-dns zone create -g {rg} -n {zone}
network vnet create -g {rg} -n {vnet}
network private-dns link vnet create -g {rg} -n {link} -z {zone} -v {vnet} -e {registrationEnabled}
network private-dns link vnet show -g {rg} -n {link} -z {zone}
network private-dns zone create -g {rg} -n {zone}
network private-dns link vnet show -g {rg} -n {link} -z {zone}
network private-dns link vnet show -g {rg} -n {link} -z {zone}
network private-dns zone create -g {rg} -n {zone}
network vnet create -g {rg} -n {vnet}
network private-dns link vnet create -g {rg} -n {link} -z {zone} -v {vnet} -e {registrationEnabled}
network vnet create -g {rg} -n {vnet}
network private-dns link vnet create -g {rg} -n {link} -z {zone} -v {vnet} -e {registrationEnabled}
network private-dns link vnet list -g {rg} -z {zone}
network private-dns zone create -g {rg} -n {zone}
network private-dns link vnet list -g {rg} -z {zone}
network private-dns zone create -g {rg} -n {zone}
network private-dns link vnet update -g {rg} -n {link} -z {zone}
network private-dns link vnet update -g {rg} -n {link} -z {zone}
network private-dns zone create -g {rg} -n {zone}
network vnet create -g {rg} -n {vnet}
network private-dns link vnet create -g {rg} -n {link} -z {zone} -v {vnet} -e {registrationEnabled}
network private-dns link vnet create -g {rg} -n {link} -z {zone} -v {vnet} -e {registrationEnabled}
network private-dns zone create -g {rg} -n {zone}
network vnet create -g {rg} -n {vnet}
network private-dns link vnet create -g {rg} -n {link} -z {zone} -v {vnet} -e {registrationEnabled}
network private-dns zone create -g {rg} -n {zone}
network vnet create -g {rg} -n {vnet}
network private-dns link vnet create -g {rg} -n {link} -z {zone} -v {vnet} -e {registrationEnabled}
network private-dns zone create -g {rg} -n {zone}
network private-dns record-set {recordType} create -g {rg} -n {recordset} -z {zone}
network private-dns record-set aaaa add-record -g {rg} -n {recordset} -z {zone} -a {aaaarecord}
network private-dns record-set {recordType} update -g {rg} -n {recordset} -z {zone} --metadata {tags}
network private-dns record-set aaaa add-record -g {rg} -n {recordset} -z {zone} -a {aaaarecord}
network private-dns record-set {recordType} show -g {rg} -n {recordset} -z {zone}
network private-dns record-set aaaa remove-record -g {rg} -n {recordset} -z {zone} -a {aaaarecord} --keep-empty-record-set
network private-dns record-set aaaa remove-record -g {rg} -n {recordset} -z {zone} -a {aaaarecord} --keep-empty-record-set
network private-dns record-set {recordType} delete -g {rg} -n {recordset} -z {zone} -y
network private-dns zone create -g {rg} -n {zone}
network private-dns record-set {recordType} create -g {rg} -n {recordset} -z {zone}
network private-dns record-set a add-record -g {rg} -n {recordset} -z {zone} -a {arecord}
network private-dns record-set {recordType} update -g {rg} -n {recordset} -z {zone} --metadata {tags}
network private-dns record-set a add-record -g {rg} -n {recordset} -z {zone} -a {arecord}
network private-dns record-set {recordType} show -g {rg} -n {recordset} -z {zone}
network private-dns record-set a remove-record -g {rg} -n {recordset} -z {zone} -a {arecord} --keep-empty-record-set
network private-dns record-set a remove-record -g {rg} -n {recordset} -z {zone} -a {arecord} --keep-empty-record-set
network private-dns record-set {recordType} delete -g {rg} -n {recordset} -z {zone} -y
network private-dns zone create -g {rg} -n {zone}
network private-dns record-set {recordType} create -g {rg} -n {recordset} -z {zone}
network private-dns record-set cname set-record -g {rg} -n {recordset} -z {zone} -c {cname}
network private-dns record-set {recordType} update -g {rg} -n {recordset} -z {zone} --metadata {tags}
network private-dns record-set cname set-record -g {rg} -n {recordset} -z {zone} -c {cname}
network private-dns record-set {recordType} show -g {rg} -n {recordset} -z {zone}
network private-dns record-set cname remove-record -g {rg} -n {recordset} -z {zone} -c {cname} --keep-empty-record-set
network private-dns record-set cname remove-record -g {rg} -n {recordset} -z {zone} -c {cname} --keep-empty-record-set
network private-dns record-set {recordType} delete -g {rg} -n {recordset} -z {zone} -y
network private-dns zone create -g {rg} -n {zone}
network private-dns record-set {recordType} create -g {rg} -n {recordset} -z {zone}
network private-dns record-set mx add-record -g {rg} -n {recordset} -z {zone} -e {exchange} -p {preference}
network private-dns record-set {recordType} update -g {rg} -n {recordset} -z {zone} --metadata {tags}
network private-dns record-set mx add-record -g {rg} -n {recordset} -z {zone} -e {exchange} -p {preference}
network private-dns record-set {recordType} show -g {rg} -n {recordset} -z {zone}
network private-dns record-set mx remove-record -g {rg} -n {recordset} -z {zone} -e {exchange} -p {preference} --keep-empty-record-set
network private-dns record-set mx remove-record -g {rg} -n {recordset} -z {zone} -e {exchange} -p {preference} --keep-empty-record-set
network private-dns record-set {recordType} delete -g {rg} -n {recordset} -z {zone} -y
network private-dns zone create -g {rg} -n {zone}
network private-dns record-set {recordType} create -g {rg} -n {recordset} -z {zone}
network private-dns record-set ptr add-record -g {rg} -n {recordset} -z {zone} -d {ptrdname}
network private-dns record-set {recordType} update -g {rg} -n {recordset} -z {zone} --metadata {tags}
network private-dns record-set ptr add-record -g {rg} -n {recordset} -z {zone} -d {ptrdname}
network private-dns record-set {recordType} show -g {rg} -n {recordset} -z {zone}
network private-dns record-set ptr remove-record -g {rg} -n {recordset} -z {zone} -d {ptrdname} --keep-empty-record-set
network private-dns record-set ptr remove-record -g {rg} -n {recordset} -z {zone} -d {ptrdname} --keep-empty-record-set
network private-dns record-set {recordType} delete -g {rg} -n {recordset} -z {zone} -y
network private-dns zone create -g {rg} -n {zone}
network private-dns record-set {recordType} create -g {rg} -n {recordset} -z {zone}
network private-dns record-set srv add-record -g {rg} -n {recordset} -z {zone} -r {port} -p {priority} -t {target} -w {weight}
network private-dns record-set {recordType} update -g {rg} -n {recordset} -z {zone} --metadata {tags}
network private-dns record-set srv add-record -g {rg} -n {recordset} -z {zone} -r {port} -p {priority} -t {target} -w {weight}
network private-dns record-set {recordType} show -g {rg} -n {recordset} -z {zone}
network private-dns record-set srv remove-record -g {rg} -n {recordset} -z {zone} -r {port} -p {priority} -t {target} -w {weight} --keep-empty-record-set
network private-dns record-set srv remove-record -g {rg} -n {recordset} -z {zone} -r {port} -p {priority} -t {target} -w {weight} --keep-empty-record-set
network private-dns record-set {recordType} delete -g {rg} -n {recordset} -z {zone} -y
network private-dns zone create -g {rg} -n {zone}
network private-dns record-set {recordType} create -g {rg} -n {recordset} -z {zone}
network private-dns record-set txt add-record -g {rg} -n {recordset} -z {zone} -v "{txtrecord}"
network private-dns record-set {recordType} update -g {rg} -n {recordset} -z {zone} --metadata {tags}
network private-dns record-set txt add-record -g {rg} -n {recordset} -z {zone} -v "{txtrecord}"
network private-dns record-set {recordType} show -g {rg} -n {recordset} -z {zone}
network private-dns record-set txt remove-record -g {rg} -n {recordset} -z {zone} -v "{txtrecord}" --keep-empty-record-set
network private-dns record-set txt remove-record -g {rg} -n {recordset} -z {zone} -v "{txtrecord}" --keep-empty-record-set
network private-dns record-set {recordType} delete -g {rg} -n {recordset} -z {zone} -y
network private-dns zone create -g {rg} -n {zone}
network private-dns record-set soa show -g {rg} -z {zone}
network private-dns zone create -g {rg} -n {zone}
network private-dns record-set list -g {rg} -z {zone}
network private-dns zone create -g {rg} -n {zone}
network private-dns record-set {recordType} create -g {rg} -n {recordset} -z {zone}
network private-dns record-set a add-record -g {rg} -n {recordset} -z {zone} -a {arecord}
network private-dns record-set {recordType} create -g {rg} -n {recordset} -z {zone}
network private-dns record-set aaaa add-record -g {rg} -n {recordset} -z {zone} -a {aaaarecord}
network private-dns record-set {recordType} create -g {rg} -n {recordset} -z {zone}
network private-dns record-set txt add-record -g {rg} -n {recordset} -z {zone} -v "{txtrecord}"
network private-dns record-set {recordType} create -g {rg} -n {recordset} -z {zone}
network private-dns record-set cname set-record -g {rg} -n {recordset} -z {zone} -c {cname}
network private-dns record-set {recordType} create -g {rg} -n {recordset} -z {zone}
network private-dns record-set srv add-record -g {rg} -n {recordset} -z {zone} -r {port} -p {priority} -t {target} -w {weight}
network private-dns record-set {recordType} create -g {rg} -n {recordset} -z {zone}
network private-dns record-set mx add-record -g {rg} -n {recordset} -z {zone} -e {exchange} -p {preference}
network private-dns record-set {recordType} create -g {rg} -n {recordset} -z {zone}
network private-dns record-set ptr add-record -g {rg} -n {recordset} -z {zone} -d {ptrdname}
network private-dns record-set soa show -g {rg} -z {zone}
network private-dns record-set list -g {rg} -z {zone}
network private-dns zone create -g {rg} -n {zone}
network private-dns record-set {recordType} create -g {rg} -n {recordset} -z {zone}
network private-dns record-set a add-record -g {rg} -n {recordset} -z {zone} -a {arecord}
network private-dns record-set {recordType} create -g {rg} -n {recordset} -z {zone}
network private-dns record-set a add-record -g {rg} -n {recordset} -z {zone} -a {arecord}
network private-dns record-set {recordType} create -g {rg} -n {recordset} -z {zone}
network private-dns record-set a add-record -g {rg} -n {recordset} -z {zone} -a {arecord}
network private-dns record-set {recordType} create -g {rg} -n {recordset} -z {zone}
network private-dns record-set a add-record -g {rg} -n {recordset} -z {zone} -a {arecord}
network private-dns record-set a list -g {rg} -z {zone}
network private-dns zone create -g {rg} -n {zone}
network private-dns record-set a list -g {rg} -z {zone}
network private-dns zone create -g {rg} -n {zone}
network private-dns record-set {recordType} create -g {rg} -n {recordset} -z {zone}
network private-dns record-set a add-record -g {rg} -n {recordset} -z {zone} -a {arecord}
network private-dns record-set a update -g {rg} -n {recordset} -z {zone} --metadata {tags}
network private-dns zone create -g {rg} -n {zone}
network private-dns record-set {recordType} create -g {rg} -n {recordset} -z {zone}
network private-dns record-set a add-record -g {rg} -n {recordset} -z {zone} -a {arecord}
network private-dns record-set a update -g {rg} -n {recordset} -z {zone} --metadata {tags}
network private-dns record-set a update -g {rg} -n {recordset} -z {zone} --metadata {tags}
network private-dns zone create -g {rg} -n {zone}
network private-dns record-set {recordType} create -g {rg} -n {recordset} -z {zone}
network private-dns record-set a add-record -g {rg} -n {recordset} -z {zone} -a {arecord}
network private-dns record-set {recordType} update -g {rg} -n {recordset} -z {zone} --metadata {tags} --if-match {etag}
network private-dns zone create -g {rg} -n {zone}
network private-dns record-set {recordType} create -g {rg} -n {recordset} -z {zone}
network private-dns record-set a add-record -g {rg} -n {recordset} -z {zone} -a {arecord}
network private-dns record-set {recordType} update -g {rg} -n {recordset} -z {zone} --metadata {tags} --if-match {etag}
network private-dns zone create -g {rg} -n {zone}
network private-dns record-set {recordType} create -g {rg} -n {recordset} -z {zone}
network private-dns record-set a add-record -g {rg} -n {recordset} -z {zone} -a {arecord}
network private-dns record-set a update -g {rg} -n {recordset} -z {zone} --metadata {tags}
network private-dns record-set a update -g {rg} -n {recordset} -z {zone} --metadata ""
network private-dns zone create -g {rg} -n {zone}
network private-dns record-set soa update -g {rg} -z {zone}             -e {email} -x {expireTime} -m {minimumTtl} -f {refreshTime} -r {retryTime} -s {serialNumber}
network private-dns zone create -g {rg} -n {zone}
network private-dns record-set {recordType} create -g {rg} -n {recordset} -z {zone}
network private-dns record-set a add-record -g {rg} -n {recordset} -z {zone} -a {arecord}
network private-dns record-set {recordType} create -g {rg} -n {recordset} -z {zone}
network private-dns record-set a create -g {rg} -n {recordset} -z {zone}
mariadb server create -g clitest.rg000001 --name azuredbclitest000003 -l westus2 --admin-user cloudsa --admin-password SecretPassword123 --sku-name GP_Gen5_2 --tags key=1 --geo-redundant-backup Enabled --backup-retention 10
mariadb server show -g clitest.rg000001 --name azuredbclitest000003
mariadb server update -g clitest.rg000001 --name azuredbclitest000003 --admin-password SecretPassword456 --ssl-enforcement Disabled --tags key=2
mariadb server update -g clitest.rg000001 --name azuredbclitest000003 --public-network-access Disabled
mariadb server update -g clitest.rg000001 --name azuredbclitest000003 --sku-name GP_Gen5_4
mariadb server show -g clitest.rg000001 --name azuredbclitest000003
mariadb server update -g clitest.rg000001 --name azuredbclitest000003 --sku-name GP_Gen5_2
mariadb server update -g clitest.rg000001 --name azuredbclitest000003 --ssl-enforcement Enabled
mariadb server update -g clitest.rg000001 --name azuredbclitest000003 --tags key=3
mariadb server restore -g clitest.rg000002 --name azuredbclirestore000004 --source-server /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforMariaDB/servers/azuredbclitest000003 --restore-point-in-time 2021-03-03T22:31:19.360000+00:00
mariadb server georestore -g clitest.rg000002 --name azuredbcligeorestore000005 --source-server /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforMariaDB/servers/azuredbclitest000003 -l eastus --geo-redundant-backup Disabled --backup-retention 20
mariadb server list -g clitest.rg000002
mariadb server list
mariadb server show-connection-string -s azuredbclitest000003
mariadb server delete -g clitest.rg000001 --name azuredbclitest000003 --yes
mariadb server delete -g clitest.rg000002 -n azuredbclirestore000004 --yes
mariadb server list -g clitest.rg000001
mariadb server list -g clitest.rg000002
mariadb server list-skus -l westus2
mysql server create -g clitest.rg000001 --name azuredbclitest000003 -l westus2 --admin-user cloudsa --admin-password SecretPassword123 --sku-name GP_Gen5_2 --tags key=1 --geo-redundant-backup Enabled --backup-retention 10
mysql server show -g clitest.rg000001 --name azuredbclitest000003
mysql server update -g clitest.rg000001 --name azuredbclitest000003 --minimal-tls-version TLS1_2
mysql server update -g clitest.rg000001 --name azuredbclitest000003 --admin-password SecretPassword456 --ssl-enforcement Disabled --tags key=2
mysql server update -g clitest.rg000001 --name azuredbclitest000003 --public-network-access Disabled
mysql server update -g clitest.rg000001 --name azuredbclitest000003 --sku-name GP_Gen5_4
mysql server show -g clitest.rg000001 --name azuredbclitest000003
mysql server update -g clitest.rg000001 --name azuredbclitest000003 --sku-name GP_Gen5_2
mysql server update -g clitest.rg000001 --name azuredbclitest000003 --ssl-enforcement Enabled
mysql server update -g clitest.rg000001 --name azuredbclitest000003 --tags key=3
mysql server restore -g clitest.rg000002 --name azuredbclirestore000004 --source-server /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforMySQL/servers/azuredbclitest000003 --restore-point-in-time 2021-02-08T18:13:51.757000+00:00
mysql server georestore -g clitest.rg000002 --name azuredbcligeorestore000005 --source-server /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforMySQL/servers/azuredbclitest000003 -l eastus --geo-redundant-backup Disabled --backup-retention 20
mysql server create -g clitest.rg000001 --name azuredbcliinfraencrypt000006 -l westus2 --admin-user cloudsa --admin-password SecretPassword123 --sku-name GP_Gen5_2 --tags key=1 --geo-redundant-backup Enabled --backup-retention 10 --infrastructure-encryption Enabled
mysql server list -g clitest.rg000002
mysql server list
mysql server show-connection-string -s azuredbclitest000003
mysql server create -g clitest.rg000001 --name azuredbcliupgrade000007 -l westus2 --admin-user cloudsa --admin-password SecretPassword123 --sku-name GP_Gen5_2 --tags key=1 --geo-redundant-backup Enabled --backup-retention 10 --version 5.6
mysql server upgrade -g clitest.rg000001 --name azuredbcliupgrade000007 --target-server-version 5.7
mysql server show -g clitest.rg000001 -n azuredbcliupgrade000007
mysql server delete -g clitest.rg000001 --name azuredbclitest000003 --yes
mysql server delete -g clitest.rg000002 -n azuredbclirestore000004 --yes
mysql server delete -g clitest.rg000001 -n azuredbcliinfraencrypt000006 --yes
mysql server delete -g clitest.rg000001 -n azuredbcliupgrade000007 --yes
mysql server list -g clitest.rg000001
mysql server list -g clitest.rg000002
mysql server list-skus -l westus2
postgres server create -g clitest.rg000001 --name azuredbclitest000003 -l westus2 --admin-user cloudsa --admin-password SecretPassword123 --sku-name GP_Gen5_2 --tags key=1 --geo-redundant-backup Enabled --backup-retention 10
postgres server show -g clitest.rg000001 --name azuredbclitest000003
postgres server update -g clitest.rg000001 --name azuredbclitest000003 --minimal-tls-version TLS1_2
postgres server update -g clitest.rg000001 --name azuredbclitest000003 --admin-password SecretPassword456 --ssl-enforcement Disabled --tags key=2
postgres server update -g clitest.rg000001 --name azuredbclitest000003 --public-network-access Disabled
postgres server update -g clitest.rg000001 --name azuredbclitest000003 --sku-name GP_Gen5_4
postgres server show -g clitest.rg000001 --name azuredbclitest000003
postgres server update -g clitest.rg000001 --name azuredbclitest000003 --sku-name GP_Gen5_2
postgres server update -g clitest.rg000001 --name azuredbclitest000003 --ssl-enforcement Enabled
postgres server update -g clitest.rg000001 --name azuredbclitest000003 --tags key=3
postgres server restore -g clitest.rg000002 --name azuredbclirestore000004 --source-server /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforPostgreSQL/servers/azuredbclitest000003 --restore-point-in-time 2021-02-08T18:12:48.680000+00:00
postgres server georestore -g clitest.rg000002 --name azuredbcligeorestore000005 --source-server /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforPostgreSQL/servers/azuredbclitest000003 -l eastus --geo-redundant-backup Disabled --backup-retention 20
postgres server create -g clitest.rg000001 --name azuredbcliinfraencrypt000006 -l westus2 --admin-user cloudsa --admin-password SecretPassword123 --sku-name GP_Gen5_2 --tags key=1 --geo-redundant-backup Enabled --backup-retention 10 --infrastructure-encryption Enabled
postgres server list -g clitest.rg000002
postgres server list
postgres server show-connection-string -s azuredbclitest000003
postgres server delete -g clitest.rg000001 --name azuredbclitest000003 --yes
postgres server delete -g clitest.rg000002 -n azuredbclirestore000004 --yes
postgres server delete -g clitest.rg000001 -n azuredbcliinfraencrypt000006 --yes
postgres server list -g clitest.rg000001
postgres server list -g clitest.rg000002
postgres server list-skus -l westus2
mariadb server firewall-rule create -n rule1 -g clitest.rg000001 -s azuredbclitest000002 --start-ip-address 0.0.0.0 --end-ip-address 255.255.255.255
mariadb server firewall-rule show --name rule1 -g clitest.rg000001 --server azuredbclitest000002
mariadb server firewall-rule update -n rule1 -g clitest.rg000001 -s azuredbclitest000002 --start-ip-address 123.123.123.123 --end-ip-address 123.123.123.124
mariadb server firewall-rule update --name rule1 -g clitest.rg000001 --server azuredbclitest000002 --start-ip-address 0.0.0.0
mariadb server firewall-rule update -n rule1 -g clitest.rg000001 -s azuredbclitest000002 --end-ip-address 255.255.255.255
mariadb server firewall-rule create --name rule2 -g clitest.rg000001 --server azuredbclitest000002 --start-ip-address 123.123.123.123 --end-ip-address 123.123.123.124
mariadb server firewall-rule list -g clitest.rg000001 -s azuredbclitest000002
mariadb server firewall-rule delete --name rule1 -g clitest.rg000001 --server azuredbclitest000002 --yes
mariadb server firewall-rule list -g clitest.rg000001 --server azuredbclitest000002
mariadb server firewall-rule delete -n rule2 -g clitest.rg000001 -s azuredbclitest000002 --yes
mariadb server firewall-rule list -g clitest.rg000001 --server azuredbclitest000002
network vnet create -n clitestvnet -g clitest.rg000001 -l westus --address-prefix 10.0.0.0/16 --subnet-name clitestsubnet1 --subnet-prefix 10.0.0.0/24
network vnet subnet create --vnet-name clitestvnet -g clitest.rg000001 --address-prefix 10.0.1.0/24 -n clitestsubnet2
mariadb server vnet-rule create -n vnet_rule1 -g clitest.rg000001 -s azuredbclitest000002 --vnet-name clitestvnet --subnet clitestsubnet1 --ignore-missing-endpoint true
mariadb server vnet-rule show -n vnet_rule1 -g clitest.rg000001 -s azuredbclitest000002
mariadb server vnet-rule create -n vnet_rule2 -g clitest.rg000001 -s azuredbclitest000002 --vnet-name clitestvnet --subnet clitestsubnet2 --ignore-missing-endpoint true
network vnet subnet create --vnet-name clitestvnet -g clitest.rg000001 --address-prefix 10.0.3.0/24 -n clitestsubnet3
mariadb server vnet-rule update -n vnet_rule2 -g clitest.rg000001 -s azuredbclitest000002 --vnet-name clitestvnet --subnet clitestsubnet3 --ignore-missing-endpoint true
mariadb server vnet-rule list -g clitest.rg000001 -s azuredbclitest000002
mariadb server vnet-rule delete --name vnet_rule1 -g clitest.rg000001 --server azuredbclitest000002
mariadb server vnet-rule list -g clitest.rg000001 --server azuredbclitest000002
mariadb server vnet-rule delete -n vnet_rule2 -g clitest.rg000001 -s azuredbclitest000002
mariadb server vnet-rule list -g clitest.rg000001 --server azuredbclitest000002
network vnet delete -n clitestvnet -g clitest.rg000001
mariadb db list -g clitest.rg000001 -s azuredbclitest000002
mariadb server configuration show --name log_slow_admin_statements -g clitest.rg000001 --server azuredbclitest000002
mariadb server configuration set -n log_slow_admin_statements -g clitest.rg000001 -s azuredbclitest000002 --value ON
mariadb server configuration set -n log_slow_admin_statements -g clitest.rg000001 -s azuredbclitest000002
mariadb server configuration list -g clitest.rg000001 -s azuredbclitest000002
mariadb server configuration set -n slow_query_log -g clitest.rg000001 -s azuredbclitest000002 --value ON
mariadb server-logs list -g clitest.rg000001 -s azuredbclitest000002 --file-last-written 43800
mariadb server private-link-resource list -g clitest.rg000001 -s azuredbclitest000002
network vnet create -n cli-vnet-000003 -g clitest.rg000001 -l westus --subnet-name cli-subnet-000004
network vnet subnet update -n cli-subnet-000004 --vnet-name cli-vnet-000003 -g clitest.rg000001 --disable-private-endpoint-network-policies true
mariadb server show -g clitest.rg000001 -n azuredbclitest000002
mariadb server private-link-resource list -g clitest.rg000001 -s azuredbclitest000002
network private-endpoint create -g clitest.rg000001 -n cli-pe-000005 --vnet-name cli-vnet-000003 --subnet cli-subnet-000004 -l westus --connection-name cli-pec-000008 --private-connection-resource-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforMariaDB/servers/azuredbclitest000002 --group-id mariadbServer
mariadb server show -g clitest.rg000001 -n azuredbclitest000002
mariadb server private-endpoint-connection show --server-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000005-2e9429d3-41ff-452f-b00e-db95351214e2
mariadb server private-endpoint-connection approve --server-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000005-2e9429d3-41ff-452f-b00e-db95351214e2 --description "You are approved!"
mariadb server private-endpoint-connection reject --server-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000005-2e9429d3-41ff-452f-b00e-db95351214e2 --description "You are rejected!"
mariadb server private-endpoint-connection delete --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforMariaDB/servers/azuredbclitest000002/privateEndpointConnections/cli-pe-000005-2e9429d3-41ff-452f-b00e-db95351214e2
network private-endpoint create -g clitest.rg000001 -n cli-pe-000006 --vnet-name cli-vnet-000003 --subnet cli-subnet-000004 -l westus --connection-name cli-pec-000009 --private-connection-resource-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforMariaDB/servers/azuredbclitest000002 --group-id mariadbServer --manual-request
mariadb server show -g clitest.rg000001 -n azuredbclitest000002
mariadb server private-endpoint-connection show --server-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000006-09130543-0ad9-49c6-b2c3-5aab59be86d7
mariadb server private-endpoint-connection approve --server-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000006-09130543-0ad9-49c6-b2c3-5aab59be86d7 --description "You are approved!"
mariadb server private-endpoint-connection reject --server-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000006-09130543-0ad9-49c6-b2c3-5aab59be86d7 --description "You are rejected!"
mariadb server private-endpoint-connection delete --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforMariaDB/servers/azuredbclitest000002/privateEndpointConnections/cli-pe-000006-09130543-0ad9-49c6-b2c3-5aab59be86d7
network private-endpoint create -g clitest.rg000001 -n cli-pe-000007 --vnet-name cli-vnet-000003 --subnet cli-subnet-000004 -l westus --connection-name cli-pec-000010 --private-connection-resource-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforMariaDB/servers/azuredbclitest000002 --group-id mariadbServer --manual-request true
mariadb server show -g clitest.rg000001 -n azuredbclitest000002
mariadb server private-endpoint-connection show --server-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000007-6975d7d3-761b-452c-b294-367ee4c5c586
mariadb server private-endpoint-connection reject --server-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000007-6975d7d3-761b-452c-b294-367ee4c5c586 --description "You are rejected!"
mariadb server private-endpoint-connection approve --server-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000007-6975d7d3-761b-452c-b294-367ee4c5c586 --description "You are approved!"
mariadb server private-endpoint-connection delete --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforMariaDB/servers/azuredbclitest000002/privateEndpointConnections/cli-pe-000007-6975d7d3-761b-452c-b294-367ee4c5c586
mysql server firewall-rule create -n rule1 -g clitest.rg000001 -s azuredbclitest000002 --start-ip-address 0.0.0.0 --end-ip-address 255.255.255.255
mysql server firewall-rule show --name rule1 -g clitest.rg000001 --server azuredbclitest000002
mysql server firewall-rule update -n rule1 -g clitest.rg000001 -s azuredbclitest000002 --start-ip-address 123.123.123.123 --end-ip-address 123.123.123.124
mysql server firewall-rule update --name rule1 -g clitest.rg000001 --server azuredbclitest000002 --start-ip-address 0.0.0.0
mysql server firewall-rule update -n rule1 -g clitest.rg000001 -s azuredbclitest000002 --end-ip-address 255.255.255.255
mysql server firewall-rule create --name rule2 -g clitest.rg000001 --server azuredbclitest000002 --start-ip-address 123.123.123.123 --end-ip-address 123.123.123.124
mysql server firewall-rule list -g clitest.rg000001 -s azuredbclitest000002
mysql server firewall-rule delete --name rule1 -g clitest.rg000001 --server azuredbclitest000002 --yes
mysql server firewall-rule list -g clitest.rg000001 --server azuredbclitest000002
mysql server firewall-rule delete -n rule2 -g clitest.rg000001 -s azuredbclitest000002 --yes
mysql server firewall-rule list -g clitest.rg000001 --server azuredbclitest000002
network vnet create -n clitestvnet -g clitest.rg000001 -l westus --address-prefix 10.0.0.0/16 --subnet-name clitestsubnet1 --subnet-prefix 10.0.0.0/24
network vnet subnet create --vnet-name clitestvnet -g clitest.rg000001 --address-prefix 10.0.1.0/24 -n clitestsubnet2
mysql server vnet-rule create -n vnet_rule1 -g clitest.rg000001 -s azuredbclitest000002 --vnet-name clitestvnet --subnet clitestsubnet1 --ignore-missing-endpoint true
mysql server vnet-rule show -n vnet_rule1 -g clitest.rg000001 -s azuredbclitest000002
mysql server vnet-rule create -n vnet_rule2 -g clitest.rg000001 -s azuredbclitest000002 --vnet-name clitestvnet --subnet clitestsubnet2 --ignore-missing-endpoint true
network vnet subnet create --vnet-name clitestvnet -g clitest.rg000001 --address-prefix 10.0.3.0/24 -n clitestsubnet3
mysql server vnet-rule update -n vnet_rule2 -g clitest.rg000001 -s azuredbclitest000002 --vnet-name clitestvnet --subnet clitestsubnet3 --ignore-missing-endpoint true
mysql server vnet-rule list -g clitest.rg000001 -s azuredbclitest000002
mysql server vnet-rule delete --name vnet_rule1 -g clitest.rg000001 --server azuredbclitest000002
mysql server vnet-rule list -g clitest.rg000001 --server azuredbclitest000002
mysql server vnet-rule delete -n vnet_rule2 -g clitest.rg000001 -s azuredbclitest000002
mysql server vnet-rule list -g clitest.rg000001 --server azuredbclitest000002
network vnet delete -n clitestvnet -g clitest.rg000001
mysql db list -g clitest.rg000001 -s azuredbclitest000002
mysql server configuration show --name log_slow_admin_statements -g clitest.rg000001 --server azuredbclitest000002
mysql server configuration set -n log_slow_admin_statements -g clitest.rg000001 -s azuredbclitest000002 --value ON
mysql server configuration set -n log_slow_admin_statements -g clitest.rg000001 -s azuredbclitest000002
mysql server configuration list -g clitest.rg000001 -s azuredbclitest000002
mysql server configuration set -n slow_query_log -g clitest.rg000001 -s azuredbclitest000002 --value ON
mysql server-logs list -g clitest.rg000001 -s azuredbclitest000002 --file-last-written 43800
mysql server private-link-resource list -g clitest.rg000001 -s azuredbclitest000002
network vnet create -n cli-vnet-000003 -g clitest.rg000001 -l westus --subnet-name cli-subnet-000004
network vnet subnet update -n cli-subnet-000004 --vnet-name cli-vnet-000003 -g clitest.rg000001 --disable-private-endpoint-network-policies true
mysql server show -g clitest.rg000001 -n azuredbclitest000002
mysql server private-link-resource list -g clitest.rg000001 -s azuredbclitest000002
network private-endpoint create -g clitest.rg000001 -n cli-pe-000005 --vnet-name cli-vnet-000003 --subnet cli-subnet-000004 -l westus --connection-name cli-pec-000008 --private-connection-resource-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforMySQL/servers/azuredbclitest000002 --group-id mysqlServer
mysql server show -g clitest.rg000001 -n azuredbclitest000002
mysql server private-endpoint-connection show --server-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000005-be01ca42-1f15-455f-a978-a02e1cd233e6
mysql server private-endpoint-connection approve --server-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000005-be01ca42-1f15-455f-a978-a02e1cd233e6 --description "You are approved!"
mysql server private-endpoint-connection reject --server-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000005-be01ca42-1f15-455f-a978-a02e1cd233e6 --description "You are rejected!"
mysql server private-endpoint-connection delete --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforMySQL/servers/azuredbclitest000002/privateEndpointConnections/cli-pe-000005-be01ca42-1f15-455f-a978-a02e1cd233e6
network private-endpoint create -g clitest.rg000001 -n cli-pe-000006 --vnet-name cli-vnet-000003 --subnet cli-subnet-000004 -l westus --connection-name cli-pec-000009 --private-connection-resource-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforMySQL/servers/azuredbclitest000002 --group-id mysqlServer --manual-request
mysql server show -g clitest.rg000001 -n azuredbclitest000002
mysql server private-endpoint-connection show --server-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000006-c32bc5a7-5290-4a7e-bb78-b8a8ec8c4a75
mysql server private-endpoint-connection approve --server-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000006-c32bc5a7-5290-4a7e-bb78-b8a8ec8c4a75 --description "You are approved!"
mysql server private-endpoint-connection reject --server-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000006-c32bc5a7-5290-4a7e-bb78-b8a8ec8c4a75 --description "You are rejected!"
mysql server private-endpoint-connection delete --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforMySQL/servers/azuredbclitest000002/privateEndpointConnections/cli-pe-000006-c32bc5a7-5290-4a7e-bb78-b8a8ec8c4a75
network private-endpoint create -g clitest.rg000001 -n cli-pe-000007 --vnet-name cli-vnet-000003 --subnet cli-subnet-000004 -l westus --connection-name cli-pec-000010 --private-connection-resource-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforMySQL/servers/azuredbclitest000002 --group-id mysqlServer --manual-request true
mysql server show -g clitest.rg000001 -n azuredbclitest000002
mysql server private-endpoint-connection show --server-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000007-f35ea28d-4f02-4ebd-a357-f2cf319fef70
mysql server private-endpoint-connection reject --server-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000007-f35ea28d-4f02-4ebd-a357-f2cf319fef70 --description "You are rejected!"
mysql server private-endpoint-connection approve --server-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000007-f35ea28d-4f02-4ebd-a357-f2cf319fef70 --description "You are approved!"
mysql server private-endpoint-connection delete --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforMySQL/servers/azuredbclitest000002/privateEndpointConnections/cli-pe-000007-f35ea28d-4f02-4ebd-a357-f2cf319fef70
mysql server ad-admin create --server-name azuredbclitest000002 -g clitest.rg000001 -i 5e90ef3b-9b42-4777-819b-25c36961ea4d -u DSEngAll
mysql server ad-admin show --server-name azuredbclitest000002 -g clitest.rg000001
mysql server ad-admin list --server-name azuredbclitest000002 -g clitest.rg000001
mysql server ad-admin create --server-name azuredbclitest000002 -g clitest.rg000001 -i e4d43337-d52c-4a0c-b581-09055e0359a0 -u TestUser --no-wait
mysql server ad-admin wait --server-name azuredbclitest000002 -g clitest.rg000001 --created
mysql server ad-admin delete --server-name azuredbclitest000002 -g clitest.rg000001 --yes
mysql server ad-admin list --server-name azuredbclitest000002 -g clitest.rg000001
postgres server firewall-rule create -n rule1 -g clitest.rg000001 -s azuredbclitest000002 --start-ip-address 0.0.0.0 --end-ip-address 255.255.255.255
postgres server firewall-rule show --name rule1 -g clitest.rg000001 --server azuredbclitest000002
postgres server firewall-rule update -n rule1 -g clitest.rg000001 -s azuredbclitest000002 --start-ip-address 123.123.123.123 --end-ip-address 123.123.123.124
postgres server firewall-rule update --name rule1 -g clitest.rg000001 --server azuredbclitest000002 --start-ip-address 0.0.0.0
postgres server firewall-rule update -n rule1 -g clitest.rg000001 -s azuredbclitest000002 --end-ip-address 255.255.255.255
postgres server firewall-rule create --name rule2 -g clitest.rg000001 --server azuredbclitest000002 --start-ip-address 123.123.123.123 --end-ip-address 123.123.123.124
postgres server firewall-rule list -g clitest.rg000001 -s azuredbclitest000002
postgres server firewall-rule delete --name rule1 -g clitest.rg000001 --server azuredbclitest000002 --yes
postgres server firewall-rule list -g clitest.rg000001 --server azuredbclitest000002
postgres server firewall-rule delete -n rule2 -g clitest.rg000001 -s azuredbclitest000002 --yes
postgres server firewall-rule list -g clitest.rg000001 --server azuredbclitest000002
network vnet create -n clitestvnet -g clitest.rg000001 -l westus --address-prefix 10.0.0.0/16 --subnet-name clitestsubnet1 --subnet-prefix 10.0.0.0/24
network vnet subnet create --vnet-name clitestvnet -g clitest.rg000001 --address-prefix 10.0.1.0/24 -n clitestsubnet2
postgres server vnet-rule create -n vnet_rule1 -g clitest.rg000001 -s azuredbclitest000002 --vnet-name clitestvnet --subnet clitestsubnet1 --ignore-missing-endpoint true
postgres server vnet-rule show -n vnet_rule1 -g clitest.rg000001 -s azuredbclitest000002
postgres server vnet-rule create -n vnet_rule2 -g clitest.rg000001 -s azuredbclitest000002 --vnet-name clitestvnet --subnet clitestsubnet2 --ignore-missing-endpoint true
network vnet subnet create --vnet-name clitestvnet -g clitest.rg000001 --address-prefix 10.0.3.0/24 -n clitestsubnet3
postgres server vnet-rule update -n vnet_rule2 -g clitest.rg000001 -s azuredbclitest000002 --vnet-name clitestvnet --subnet clitestsubnet3 --ignore-missing-endpoint true
postgres server vnet-rule list -g clitest.rg000001 -s azuredbclitest000002
postgres server vnet-rule delete --name vnet_rule1 -g clitest.rg000001 --server azuredbclitest000002
postgres server vnet-rule list -g clitest.rg000001 --server azuredbclitest000002
postgres server vnet-rule delete -n vnet_rule2 -g clitest.rg000001 -s azuredbclitest000002
postgres server vnet-rule list -g clitest.rg000001 --server azuredbclitest000002
network vnet delete -n clitestvnet -g clitest.rg000001
postgres db list -g clitest.rg000001 -s azuredbclitest000002
postgres server configuration show --name array_nulls -g clitest.rg000001 --server azuredbclitest000002
postgres server configuration set -n array_nulls -g clitest.rg000001 -s azuredbclitest000002 --value off
postgres server configuration set -n array_nulls -g clitest.rg000001 -s azuredbclitest000002
postgres server configuration list -g clitest.rg000001 -s azuredbclitest000002
postgres server-logs list -g clitest.rg000001 -s azuredbclitest000002 --file-last-written 43800
postgres server private-link-resource list -g clitest.rg000001 -s azuredbclitest000002
network vnet create -n cli-vnet-000003 -g clitest.rg000001 -l westus --subnet-name cli-subnet-000004
network vnet subnet update -n cli-subnet-000004 --vnet-name cli-vnet-000003 -g clitest.rg000001 --disable-private-endpoint-network-policies true
postgres server show -g clitest.rg000001 -n azuredbclitest000002
postgres server private-link-resource list -g clitest.rg000001 -s azuredbclitest000002
network private-endpoint create -g clitest.rg000001 -n cli-pe-000005 --vnet-name cli-vnet-000003 --subnet cli-subnet-000004 -l westus --connection-name cli-pec-000008 --private-connection-resource-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforPostgreSQL/servers/azuredbclitest000002 --group-id postgresqlServer
postgres server show -g clitest.rg000001 -n azuredbclitest000002
postgres server private-endpoint-connection show --server-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000005-03f039d7-6194-4a73-b637-374609f90cbe
postgres server private-endpoint-connection approve --server-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000005-03f039d7-6194-4a73-b637-374609f90cbe --description "You are approved!"
postgres server private-endpoint-connection reject --server-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000005-03f039d7-6194-4a73-b637-374609f90cbe --description "You are rejected!"
postgres server private-endpoint-connection delete --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforPostgreSQL/servers/azuredbclitest000002/privateEndpointConnections/cli-pe-000005-03f039d7-6194-4a73-b637-374609f90cbe
network private-endpoint create -g clitest.rg000001 -n cli-pe-000006 --vnet-name cli-vnet-000003 --subnet cli-subnet-000004 -l westus --connection-name cli-pec-000009 --private-connection-resource-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforPostgreSQL/servers/azuredbclitest000002 --group-id postgresqlServer --manual-request
postgres server show -g clitest.rg000001 -n azuredbclitest000002
postgres server private-endpoint-connection show --server-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000006-29ef92d4-3ea7-4af8-a03f-a700c2c2bd6e
postgres server private-endpoint-connection approve --server-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000006-29ef92d4-3ea7-4af8-a03f-a700c2c2bd6e --description "You are approved!"
postgres server private-endpoint-connection reject --server-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000006-29ef92d4-3ea7-4af8-a03f-a700c2c2bd6e --description "You are rejected!"
postgres server private-endpoint-connection delete --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforPostgreSQL/servers/azuredbclitest000002/privateEndpointConnections/cli-pe-000006-29ef92d4-3ea7-4af8-a03f-a700c2c2bd6e
network private-endpoint create -g clitest.rg000001 -n cli-pe-000007 --vnet-name cli-vnet-000003 --subnet cli-subnet-000004 -l westus --connection-name cli-pec-000010 --private-connection-resource-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforPostgreSQL/servers/azuredbclitest000002 --group-id postgresqlServer --manual-request true
postgres server show -g clitest.rg000001 -n azuredbclitest000002
postgres server private-endpoint-connection show --server-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000007-8414e825-5c5b-41fa-9111-429d35d5207e
postgres server private-endpoint-connection reject --server-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000007-8414e825-5c5b-41fa-9111-429d35d5207e --description "You are rejected!"
postgres server private-endpoint-connection approve --server-name azuredbclitest000002 -g clitest.rg000001 --name cli-pe-000007-8414e825-5c5b-41fa-9111-429d35d5207e --description "You are approved!"
postgres server private-endpoint-connection delete --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforPostgreSQL/servers/azuredbclitest000002/privateEndpointConnections/cli-pe-000007-8414e825-5c5b-41fa-9111-429d35d5207e
postgres server ad-admin create --server-name azuredbclitest000002 -g clitest.rg000001 -i 5e90ef3b-9b42-4777-819b-25c36961ea4d -u DSEngAll
postgres server ad-admin show --server-name azuredbclitest000002 -g clitest.rg000001
postgres server ad-admin list --server-name azuredbclitest000002 -g clitest.rg000001
postgres server ad-admin create --server-name azuredbclitest000002 -g clitest.rg000001 -i e4d43337-d52c-4a0c-b581-09055e0359a0 -u TestUser --no-wait
postgres server ad-admin wait --server-name azuredbclitest000002 -g clitest.rg000001 --created
postgres server ad-admin delete --server-name azuredbclitest000002 -g clitest.rg000001 --yes
postgres server ad-admin list --server-name azuredbclitest000002 -g clitest.rg000001
mysql server create -g clitest.rg000001 --name azuredbclitest000002 -l westus --admin-user cloudsa --admin-password SecretPassword123 --sku-name GP_Gen5_2
mysql server replica create -g clitest.rg000001 -n azuredbclirep1000003 -l westus --sku-name GP_Gen5_4 --source-server /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforMySQL/servers/azuredbclitest000002
mysql server show -g clitest.rg000001 --name azuredbclitest000002
mysql server replica list -g clitest.rg000001 -s azuredbclitest000002
mysql server replica stop -g clitest.rg000001 -n azuredbclirep1000003 --yes
mysql server show -g clitest.rg000001 --name azuredbclitest000002
mysql server replica create -g clitest.rg000001 -n azuredbclirep2000004 --source-server /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforMySQL/servers/azuredbclitest000002
mysql server delete -g clitest.rg000001 --name azuredbclitest000002 --yes
mysql server show -g clitest.rg000001 --name azuredbclirep2000004
mysql server delete -g clitest.rg000001 --name azuredbclirep1000003 --yes
mysql server delete -g clitest.rg000001 --name azuredbclirep2000004 --yes
postgres server create -g clitest.rg000001 --name azuredbclitest000003 -l westus --admin-user cloudsa --admin-password SecretPassword123 --sku-name B_Gen5_2
postgres server replica create -g clitest.rg000001 -n azuredbclirep1000004 -l westus --sku-name B_Gen5_2 --source-server /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforPostgreSQL/servers/azuredbclitest000003
postgres server show -g clitest.rg000001 --name azuredbclitest000003
postgres server replica list -g clitest.rg000001 -s azuredbclitest000003
postgres server delete -g clitest.rg000001 --name azuredbclirep1000004 --yes
postgres server show -g clitest.rg000001 --name azuredbclitest000003
postgres server replica create -g clitest.rg000001 -n azuredbclirep2000005 --source-server /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforPostgreSQL/servers/azuredbclitest000003
postgres server delete -g clitest.rg000001 --name azuredbclitest000003 --yes
postgres server delete -g clitest.rg000001 --name azuredbclirep1000004 --yes
postgres server delete -g clitest.rg000001 --name azuredbclirep2000005 --yes
postgres server create -g clitest.rg000001 --name azuredbclitest000003 -l westus --admin-user cloudsa --admin-password SecretPassword123 --sku-name GP_Gen5_2
postgres server configuration set -g clitest.rg000001 -s azuredbclitest000003 -n azure.replication_support --value REPLICA
postgres server restart -g clitest.rg000001 --name azuredbclitest000003
postgres server replica create -g clitest.rg000001 -n azuredbclirep1000004 -l westus --sku-name GP_Gen5_4 --source-server /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforPostgreSQL/servers/azuredbclitest000003
postgres server show -g clitest.rg000001 --name azuredbclitest000003
postgres server replica list -g clitest.rg000001 -s azuredbclitest000003
postgres server delete -g clitest.rg000001 --name azuredbclirep1000004 --yes
postgres server show -g clitest.rg000001 --name azuredbclitest000003
postgres server replica create -g clitest.rg000001 -n azuredbclirep2000005 --source-server /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforPostgreSQL/servers/azuredbclitest000003
postgres server delete -g clitest.rg000001 --name azuredbclitest000003 --yes
postgres server delete -g clitest.rg000001 --name azuredbclirep1000004 --yes
postgres server delete -g clitest.rg000001 --name azuredbclirep2000005 --yes
mysql flexible-server create -g clitest.rg000001 -n azuredbclitest-000002 --vnet VNET000009 --subnet SUBNET000010 -l eastus2euap --geo-redundant-backup Enabled --yes
mysql flexible-server show -g clitest.rg000001 -n azuredbclitest-000002
mysql flexible-server create -g clitest.rg000001 -n azuredbclitest-000003 --public-access None -l eastus2euap --geo-redundant-backup Enabled
mysql flexible-server show -g clitest.rg000001 -n azuredbclitest-000003
mysql flexible-server geo-restore -g clitest.rg000001 -l centraluseuap --name azuredbclitest-000004 --source-server azuredbclitest-000002 
mysql flexible-server geo-restore -g clitest.rg000001 -l centraluseuap --name azuredbclitest-000007 --source-server azuredbclitest-000002 --public-access enabled
network vnet create -g clitest.rg000001 -l centraluseuap -n VNET000011 --address-prefixes 172.1.0.0/16
network vnet subnet create -g clitest.rg000001 -n SUBNET000012 --vnet-name VNET000011 --address-prefixes 172.1.0.0/24
mysql flexible-server geo-restore -g clitest.rg000001 -l centraluseuap -n azuredbclitest-000005 --source-server azuredbclitest-000002 --subnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/VNET000011/subnets/SUBNET000012 --yes
network vnet create -g clitest.rg000001 -l centraluseuap -n VNET000013 --address-prefixes 172.1.0.0/16
network vnet subnet create -g clitest.rg000001 -n SUBNET000014 --vnet-name VNET000013 --address-prefixes 172.1.0.0/24
network private-dns zone create -g clitest.rg000001 --name azuredbclitest-000006.private.mysql.database.azure.com
mysql flexible-server geo-restore -g clitest.rg000001 -l centraluseuap -n azuredbclitest-000006 --source-server azuredbclitest-000003 --subnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/VNET000013/subnets/SUBNET000014 --private-dns-zone azuredbclitest-000006.private.mysql.database.azure.com --public-access disabled --yes
mysql flexible-server geo-restore -g clitest.rg000001 -l centraluseuap --name azuredbclitest-000008 --source-server azuredbclitest-000003
mysql flexible-server delete -g clitest.rg000001 -n azuredbclitest-000002 --yes
mysql flexible-server delete -g clitest.rg000001 -n azuredbclitest-000005 --yes
mysql flexible-server delete -g clitest.rg000001 -n azuredbclitest-000006 --yes
mysql flexible-server delete -g clitest.rg000001 -n azuredbclitest-000007 --yes
mysql flexible-server delete -g clitest.rg000001 -n azuredbclitest-000008 --yes
mysql flexible-server create --public-access none -g clitest.rg000001 -n azuredbclitest-000002 -l westus2 --iops 50 --storage-size 200 --tier Burstable --sku-name Standard_B1s
mysql flexible-server show -g clitest.rg000001 -n azuredbclitest-000002
mysql flexible-server create --public-access none -g clitest.rg000001 -n azuredbclitest-2000003 -l westus2 --iops 50 --storage-size 30 --tier Burstable --sku-name Standard_B1s
mysql flexible-server show -g clitest.rg000001 -n azuredbclitest-2000003
mysql flexible-server create --public-access none -g clitest.rg000001 -n azuredbclitest-3000004 -l westus2 --iops 50 --storage-size 40 --tier Burstable --sku-name Standard_B1s
mysql flexible-server show -g clitest.rg000001 -n azuredbclitest-3000004
mysql flexible-server create -g clitest.rg000001 -n azuredbclitest-000002 --backup-retention 7 --sku-name Standard_D2ds_v4 --tier GeneralPurpose                   --storage-size 32 -u dbadmin --version 5.7 --tags keys=3 --database-name testdb --high-availability ZoneRedundant                   --zone 1 --public-access None
mysql flexible-server create -g clitest.rg000001 -n azuredbclitest-000002 --vnet VNET000007 --subnet SUBNET000008 -l westus2 --yes
mysql flexible-server show -g clitest.rg000001 -n azuredbclitest-000002
mysql flexible-server restore -g clitest.rg000001 --name azuredbclitest-000003 --source-server azuredbclitest-000002 
mysql flexible-server restore -g clitest.rg000001 --name azuredbclitest-000006 --source-server azuredbclitest-000002 --public-access Enabled
network vnet create -g clitest.rg000001 -l westus2 -n VNET000009 --address-prefixes 172.1.0.0/16
network vnet subnet create -g clitest.rg000001 -n SUBNET000010 --vnet-name VNET000009 --address-prefixes 172.1.0.0/24
network private-dns zone create -g clitest.rg000001 --name azuredbclitest-000004.private.mysql.database.azure.com
mysql flexible-server restore -g clitest.rg000001 -n azuredbclitest-000004 --source-server azuredbclitest-000002 --subnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/VNET000009/subnets/SUBNET000010 --private-dns-zone azuredbclitest-000004.private.mysql.database.azure.com
network vnet create -g clitest.rg000001 -l westus2 -n VNET000011 --address-prefixes 172.1.0.0/16
network vnet subnet create -g clitest.rg000001 -n SUBNET000012 --vnet-name VNET000011 --address-prefixes 172.1.0.0/24
network private-dns zone create -g clitest.rg000001 --name azuredbclitest-000005.private.mysql.database.azure.com
mysql flexible-server restore -g clitest.rg000001 -n azuredbclitest-000005 --source-server azuredbclitest-000006 --subnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/VNET000011/subnets/SUBNET000012 --private-dns-zone azuredbclitest-000005.private.mysql.database.azure.com
mysql flexible-server delete -g clitest.rg000001 -n azuredbclitest-000002 --yes
mysql flexible-server delete -g clitest.rg000001 -n azuredbclitest-000003 --yes
mysql flexible-server delete -g clitest.rg000001 -n azuredbclitest-000004 --yes
mysql flexible-server delete -g clitest.rg000001 -n azuredbclitest-000005 --yes
mysql flexible-server delete -g clitest.rg000001 -n azuredbclitest-000006 --yes
postgres flexible-server create -g clitest.rg000001 -n azuredbclitest-000002 --backup-retention 7 --sku-name Standard_D2s_v3 --tier GeneralPurpose                   --storage-size 128 -u dbadmin --version 12 --tags keys=3 --database-name testdb --high-availability Enabled                   --zone 1 --public-access None
postgres flexible-server create -g clitest.rg000001 -n azuredbclitest-000002 --vnet VNET000007 --subnet SUBNET000008 -l eastus --yes
postgres flexible-server show -g clitest.rg000001 -n azuredbclitest-000002
postgres flexible-server restore -g clitest.rg000001 --name azuredbclitest-000003 --source-server azuredbclitest-000002 
network vnet create -g clitest.rg000001 -l eastus -n VNET000009 --address-prefixes 172.1.0.0/16
network vnet subnet create -g clitest.rg000001 -n SUBNET000010 --vnet-name VNET000009 --address-prefixes 172.1.0.0/24
network private-dns zone create -g clitest.rg000001 --name azuredbclitest-000004.private.postgres.database.azure.com
postgres flexible-server restore -g clitest.rg000001 -n azuredbclitest-000004 --source-server azuredbclitest-000002 --subnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/VNET000009/subnets/SUBNET000010 --private-dns-zone azuredbclitest-000004.private.postgres.database.azure.com
postgres flexible-server delete -g clitest.rg000001 -n azuredbclitest-000002 --yes
postgres flexible-server delete -g clitest.rg000001 -n azuredbclitest-000003 --yes
postgres flexible-server delete -g clitest.rg000001 -n azuredbclitest-000004 --yes
postgres flexible-server delete -g clitest.rg000001 -n azuredbclitest-000005 --yes
postgres flexible-server delete -g clitest.rg000001 -n azuredbclitest-000006 --yes
mysql flexible-server firewall-rule create -g clitest.rg000001 --name azuredbclitest-000002 --rule-name firewall_test_rule --start-ip-address 10.10.10.10 --end-ip-address 12.12.12.12 
mysql flexible-server firewall-rule show -g clitest.rg000001 --name azuredbclitest-000002 --rule-name firewall_test_rule 
mysql flexible-server firewall-rule update -g clitest.rg000001 --name azuredbclitest-000002 --rule-name firewall_test_rule --start-ip-address 9.9.9.9
mysql flexible-server firewall-rule update -g clitest.rg000001 --name azuredbclitest-000002 --rule-name firewall_test_rule --end-ip-address 13.13.13.13
mysql flexible-server firewall-rule create -g clitest.rg000001 -n azuredbclitest-000002 --rule-name firewall_test_rule2 --start-ip-address 10.10.10.10 --end-ip-address 12.12.12.12 
mysql flexible-server firewall-rule list -g clitest.rg000001 -n azuredbclitest-000002
mysql flexible-server firewall-rule delete --rule-name firewall_test_rule -g clitest.rg000001 --name azuredbclitest-000002 --yes
mysql flexible-server firewall-rule list -g clitest.rg000001 --name azuredbclitest-000002
mysql flexible-server firewall-rule delete -g clitest.rg000001 -n azuredbclitest-000002 --rule-name firewall_test_rule2 --yes
mysql flexible-server firewall-rule list -g clitest.rg000001 -n azuredbclitest-000002
mysql flexible-server parameter list -g clitest.rg000001 -s azuredbclitest-000002
mysql flexible-server parameter show --name wait_timeout -g clitest.rg000001 -s azuredbclitest-000002
mysql flexible-server parameter set --name wait_timeout -v 30000 --source user-override -s azuredbclitest-000002 -g clitest.rg000001
mysql flexible-server db create -g clitest.rg000001 -s azuredbclitest-000002 -d database000003
mysql flexible-server db show -g clitest.rg000001 -s azuredbclitest-000002 -d database000003
mysql flexible-server db list -g clitest.rg000001 -s azuredbclitest-000002 
mysql flexible-server db delete -g clitest.rg000001 -s azuredbclitest-000002 -d database000003 --yes
postgres flexible-server firewall-rule create -g clitest.rg000001 --name azuredbclitest-000002 --rule-name firewall_test_rule --start-ip-address 10.10.10.10 --end-ip-address 12.12.12.12 
postgres flexible-server firewall-rule show -g clitest.rg000001 --name azuredbclitest-000002 --rule-name firewall_test_rule 
postgres flexible-server firewall-rule update -g clitest.rg000001 --name azuredbclitest-000002 --rule-name firewall_test_rule --start-ip-address 9.9.9.9
postgres flexible-server firewall-rule update -g clitest.rg000001 --name azuredbclitest-000002 --rule-name firewall_test_rule --end-ip-address 13.13.13.13
postgres flexible-server firewall-rule create -g clitest.rg000001 -n azuredbclitest-000002 --rule-name firewall_test_rule2 --start-ip-address 10.10.10.10 --end-ip-address 12.12.12.12 
postgres flexible-server firewall-rule list -g clitest.rg000001 -n azuredbclitest-000002
postgres flexible-server firewall-rule delete --rule-name firewall_test_rule -g clitest.rg000001 --name azuredbclitest-000002 --yes
postgres flexible-server firewall-rule list -g clitest.rg000001 --name azuredbclitest-000002
postgres flexible-server firewall-rule delete -g clitest.rg000001 -n azuredbclitest-000002 --rule-name firewall_test_rule2 --yes
postgres flexible-server firewall-rule list -g clitest.rg000001 -n azuredbclitest-000002
postgres flexible-server parameter list -g clitest.rg000001 -s azuredbclitest-000002
postgres flexible-server parameter show --name lock_timeout -g clitest.rg000001 -s azuredbclitest-000002
postgres flexible-server parameter set --name lock_timeout -v 2000 --source user-override -s azuredbclitest-000002 -g clitest.rg000001
postgres flexible-server db create -g clitest.rg000001 -s azuredbclitest-000002 -d database000003
postgres flexible-server db show -g clitest.rg000001 -s azuredbclitest-000002 -d database000003
postgres flexible-server db list -g clitest.rg000001 -s azuredbclitest-000002 
postgres flexible-server db delete -g clitest.rg000001 -s azuredbclitest-000002 -d database000003 --yes
mysql flexible-server create -g clitest.rg000001 -n azuredbclitest-000002 -l westus2 --tier tier000005
mysql flexible-server create -g clitest.rg000001 -n azuredbclitest-000002 -l westus2 --version version000003
mysql flexible-server create -g clitest.rg000001 -n azuredbclitest-000002 -l westus2 --tier GeneralPurpose --sku-name sku_name000004
mysql flexible-server create -g clitest.rg000001 -n azuredbclitest-000002 -l westus2 --backup-retention 40
mysql flexible-server create -g clitest.rg000001 -n azuredbclitest-000002 -l centraluseuap --high-availability ZoneRedundant 
mysql flexible-server create -g clitest.rg000001 -n azuredbclitest-000002 -l westus2 --tier Burstable --sku-name Standard_B1ms --high-availability ZoneRedundant
mysql flexible-server create -g clitest.rg000001 -n azuredbclitest-000002 -l centraluseuap --tier GeneralPurpose --sku-name Standard_D2s_v3 --high-availability ZoneRedundant
mysql flexible-server create -g clitest.rg000001 -n azuredbclitest-000002 -l westus2 --tier GeneralPurpose --sku-name Standard_D2s_v3 --high-availability ZoneRedundant --zone 1 --standby-zone 1
mysql flexible-server create -g clitest.rg000001 -n azuredbclitest-000002 -l westus2 --tier GeneralPurpose --sku-name Standard_D2s_v3 --high-availability ZoneRedundant --storage-auto-grow Disabled
mysql flexible-server create -g clitest.rg000001 -n azuredbclitest-000002 -l westus2 --vnet testvnet --subnet testsubnet --public-access All
mysql flexible-server create -g clitest.rg000001 -n azuredbclitest-000002 -l westus2 --subnet testsubnet
mysql flexible-server create -g clitest.rg000001 -n azuredbclitest-000002 -l westus2 --public-access 12.0.0.0-10.0.0.0.0
mysql flexible-server create -g clitest.rg000001 -l westus2 --storage-size 10 --public-access none
mysql flexible-server create -g clitest.rg000001 -n azuredbclitest-000002 -l westus2 --tier Burstable --version 5.7 --sku-name Standard_B1ms --storage-size 32 --backup-retention 10 --public-access none
mysql flexible-server show -g clitest.rg000001 -n azuredbclitest-000002
mysql flexible-server update -g clitest.rg000001 -n azuredbclitest-000002 --tier GeneralPurpose
mysql flexible-server update -g clitest.rg000001 -n azuredbclitest-000002 --tier GeneralPurpose --sku-name sku_name000004
mysql flexible-server update -g clitest.rg000001 -n azuredbclitest-000002 --storage-size 30
mysql flexible-server update -g clitest.rg000001 -n azuredbclitest-000002 --backup-retention 40
mysql flexible-server update -g clitest.rg000001 -n azuredbclitest-000002 --high-availability ZoneRedundant
mysql flexible-server delete -g clitest.rg000001 -n azuredbclitest-000002 --yes
postgres flexible-server create -g clitest.rg000001 -n Wrongserver.Name -l eastus2euap
postgres flexible-server create -g clitest.rg000001 -n azuredbclitest-000002 -l eastus2euap --tier tier000005
postgres flexible-server create -g clitest.rg000001 -n azuredbclitest-000002 -l eastus2euap --version version000003
postgres flexible-server create -g clitest.rg000001 -n azuredbclitest-000002 -l eastus2euap --tier GeneralPurpose --sku-name sku_name000004
postgres flexible-server create -g clitest.rg000001 -n azuredbclitest-000002 -l eastus2euap --backup-retention 40
postgres flexible-server create -g clitest.rg000001 -n azuredbclitest-000002 -l centraluseuap --high-availability Enabled 
postgres flexible-server create -g clitest.rg000001 -n azuredbclitest-000002 -l eastus2euap --tier Burstable --sku-name Standard_B1ms --high-availability Enabled
postgres flexible-server create -g clitest.rg000001 -n azuredbclitest-000002 -l centraluseuap --tier GeneralPurpose --sku-name Standard_D2s_v3 --high-availability Enabled
postgres flexible-server create -g clitest.rg000001 -n azuredbclitest-000002 -l eastus2euap --tier GeneralPurpose --sku-name Standard_D2s_v3 --high-availability Enabled --zone 1 --standby-zone 1
postgres flexible-server create -g clitest.rg000001 -n azuredbclitest-000002 -l eastus2euap --vnet testvnet --subnet testsubnet --public-access All
postgres flexible-server create -g clitest.rg000001 -n azuredbclitest-000002 -l eastus2euap --subnet testsubnet
postgres flexible-server create -g clitest.rg000001 -n azuredbclitest-000002 -l eastus2euap --public-access 12.0.0.0-10.0.0.0.0
postgres flexible-server create -g clitest.rg000001 -l eastus2euap --storage-size 60 --public-access none
postgres flexible-server create -g clitest.rg000001 -n azuredbclitest-000002 -l eastus2euap --tier Burstable --version 12 --sku-name Standard_B1ms --storage-size 128 --backup-retention 10 --public-access none
postgres flexible-server show -g clitest.rg000001 -n azuredbclitest-000002
postgres flexible-server update -g clitest.rg000001 -n azuredbclitest-000002 --tier GeneralPurpose
postgres flexible-server update -g clitest.rg000001 -n azuredbclitest-000002 --tier GeneralPurpose --sku-name sku_name000004
postgres flexible-server update -g clitest.rg000001 -n azuredbclitest-000002 --storage-size 64
postgres flexible-server update -g clitest.rg000001 -n azuredbclitest-000002 --backup-retention 40
postgres flexible-server update -g clitest.rg000001 -n azuredbclitest-000002 --high-availability Enabled
postgres flexible-server delete -g clitest.rg000001 -n azuredbclitest-000002 --yes
mysql flexible-server create -g clitest.rg000001 --name azuredbclitest-000002 -l westus2 --storage-size 256 --public-access none --tier GeneralPurpose --sku-name Standard_D2ds_v4
mysql flexible-server show -g clitest.rg000001 --name azuredbclitest-000002 
mysql flexible-server replica create -g clitest.rg000001 --replica-name azuredbclirep1000003 --source-server /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforMySQL/flexibleServers/azuredbclitest-000002 --zone 2
mysql flexible-server replica list -g clitest.rg000001 --name azuredbclitest-000002
mysql flexible-server update -g clitest.rg000001 -n azuredbclitest-000002 --storage-auto-grow Disabled
mysql flexible-server replica stop-replication -g clitest.rg000001 --name azuredbclirep1000003 --yes
mysql flexible-server show -g clitest.rg000001 --name azuredbclitest-000002
mysql flexible-server replica create -g clitest.rg000001 --replica-name azuredbclirep2000004 --source-server /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.DBforMySQL/flexibleServers/azuredbclitest-000002
mysql flexible-server delete -g clitest.rg000001 --name azuredbclitest-000002 --yes
mysql flexible-server show -g clitest.rg000001 --name azuredbclirep2000004
mysql flexible-server delete -g clitest.rg000001 --name azuredbclirep1000003 --yes
mysql flexible-server delete -g clitest.rg000001 --name azuredbclirep2000004 --yes
network vnet show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/testvnet
network vnet subnet show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/testvnet/subnets/testsubnet
network vnet subnet create -g clitest.rg000001 -n testsubnet2 --address-prefixes 172.1.1.0/24 --vnet-name testvnet
network vnet show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/testvnet
network vnet subnet show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/testvnet/subnets/testsubnet2
network vnet show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/testvnet1
network vnet subnet show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/testvnet1/subnets/testsubnet1
network vnet show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/testvnet1
network vnet subnet show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/testvnet1/subnets/testsubnet2
network vnet show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/testvnet1
network vnet subnet show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/testvnet1/subnets/testsubnet3
network vnet show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/testvnet1
network vnet subnet show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/testvnet1/subnets/testsubnet1
network vnet show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/testvnet1
network vnet subnet show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/testvnet1/subnets/testsubnet1
network vnet show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/testvnet1
network vnet subnet show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/testvnet1/subnets/Subnetvnet-preparer-server
network vnet show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000002/providers/Microsoft.Network/virtualNetworks/testvnet2
network vnet subnet show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000002/providers/Microsoft.Network/virtualNetworks/testvnet2/subnets/Subnetvnet-preparer-server
network vnet create -n testvnet3 -g clitest.rg000001 -l eastus2euap --address-prefix 172.0.0.0/16
network vnet show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/testvnet3
network vnet subnet show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/testvnet3/subnets/Subnetvnet-preparer-server
network vnet create -n testvnet4 -g clitest.rg000002 -l eastus2euap --address-prefix 173.1.0.0/16
network vnet show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000002/providers/Microsoft.Network/virtualNetworks/testvnet4
network vnet subnet show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000002/providers/Microsoft.Network/virtualNetworks/testvnet4/subnets/Subnetvnet-preparer-server
network vnet create -g clitest.rg000001 -l eastus2euap -n testvnet --address-prefixes 172.1.0.0/16
postgres flexible-server create -g clitest.rg000001 -l eastus --vnet testvnet --yes
network vnet subnet create -g clitest.rg000001 -n testsubnet --vnet-name testvnet --address-prefixes 172.1.0.0/24 --delegations Microsoft.DBforMySQL/flexibleServers
postgres flexible-server create -g clitest.rg000001 -l eastus --subnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/testvnet/subnets/testsubnet --yes
network vnet create -n clitestvnet5 -g clitest.rg000001 -l westus2 --address-prefix 10.10.0.0/16 --subnet-name clitestsubnet5 --subnet-prefix 10.10.0.0/24
mysql flexible-server create -g clitest.rg000002 -n azuredbclitest-000003 --subnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/clitestvnet5/subnets/clitestsubnet5 -l westus2 --private-dns-zone testdnszone5.private.mysql.database.azure.com --yes
mysql flexible-server show -g clitest.rg000002 -n azuredbclitest-000003
mysql flexible-server delete -g clitest.rg000002 -n azuredbclitest-000003 --yes
network vnet subnet update -g clitest.rg000001 --name clitestsubnet5 --vnet-name clitestvnet5 --remove delegations
network vnet delete -g clitest.rg000001 -n clitestvnet5
network vnet create -g clitest.rg000001 -l westus2 -n testvnet --address-prefixes 172.1.0.0/16 --subnet-name testsubnet --subnet-prefixes 172.1.0.0/24
network vnet subnet show -g clitest.rg000001 -n testsubnet --vnet-name testvnet
mysql flexible-server create -g clitest.rg000001 -n azuredbclitest-000002 --subnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/testvnet/subnets/testsubnet -l westus2 --private-dns-zone testdnszone0.private.mysql.database.azure.com --yes
mysql flexible-server show -g clitest.rg000001 -n azuredbclitest-000002
mysql flexible-server delete -g clitest.rg000001 -n azuredbclitest-000002 --yes
network vnet create -n clitestvnet3 -g clitest.rg000001 -l westus2 --address-prefix 13.0.0.0/16
mysql flexible-server create -g clitest.rg000001 -n testvnetserver3mysql --vnet clitestvnet3 -l westus2 --subnet clitestsubnet3 --private-dns-zone testdnszone3.private.mysql.database.azure.com --yes
mysql flexible-server create -g clitest.rg000001 -n testvnetserver4mysql -l westus2 --vnet clitestvnet4 --private-dns-zone testdnszone4.private.mysql.database.azure.com --yes
mysql flexible-server show -g clitest.rg000001 -n testvnetserver3mysql
mysql flexible-server show -g clitest.rg000001 -n testvnetserver4mysql
mysql flexible-server delete -g clitest.rg000001 -n testvnetserver3mysql --yes
mysql flexible-server delete -g clitest.rg000001 -n testvnetserver4mysql --yes
network vnet create -n clitestvnet5 -g clitest.rg000001 -l eastus2euap --address-prefix 10.10.0.0/16 --subnet-name clitestsubnet5 --subnet-prefix 10.10.0.0/24
postgres flexible-server create -g clitest.rg000002 -n azuredbclitest-000003 --subnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/clitestvnet5/subnets/clitestsubnet5 -l eastus2euap --private-dns-zone testdnszone5.private.postgres.database.azure.com --yes
postgres flexible-server show -g clitest.rg000002 -n azuredbclitest-000003
postgres flexible-server delete -g clitest.rg000002 -n azuredbclitest-000003 --yes
network vnet subnet update -g clitest.rg000001 --name clitestsubnet5 --vnet-name clitestvnet5 --remove delegations
network vnet delete -g clitest.rg000001 -n clitestvnet5
network vnet create -g clitest.rg000001 -l eastus2euap -n testvnet --address-prefixes 172.1.0.0/16 --subnet-name testsubnet --subnet-prefixes 172.1.0.0/24
network vnet subnet show -g clitest.rg000001 -n testsubnet --vnet-name testvnet
postgres flexible-server create -g clitest.rg000001 -n azuredbclitest-000002 --subnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/testvnet/subnets/testsubnet -l eastus2euap --private-dns-zone testdnszone0.private.postgres.database.azure.com --yes
postgres flexible-server show -g clitest.rg000001 -n azuredbclitest-000002
postgres flexible-server delete -g clitest.rg000001 -n azuredbclitest-000002 --yes
network vnet create -n clitestvnet3 -g clitest.rg000001 -l eastus2euap --address-prefix 13.0.0.0/16
postgres flexible-server create -g clitest.rg000001 -n testvnetserver3postgres --vnet clitestvnet3 -l eastus2euap --subnet clitestsubnet3 --private-dns-zone testdnszone3.private.postgres.database.azure.com --yes
postgres flexible-server create -g clitest.rg000001 -n testvnetserver4postgres -l eastus2euap --vnet clitestvnet4 --private-dns-zone testdnszone4.private.postgres.database.azure.com --yes
postgres flexible-server show -g clitest.rg000001 -n testvnetserver3postgres
postgres flexible-server show -g clitest.rg000001 -n testvnetserver4postgres
postgres flexible-server delete -g clitest.rg000001 -n testvnetserver3postgres --yes
postgres flexible-server delete -g clitest.rg000001 -n testvnetserver4postgres --yes
network vnet create -g clitest.rg000001 -l westus2 -n servergrouptestvnet --address-prefixes 172.1.0.0/16 --subnet-name servergrouptestsubnet --subnet-prefixes 172.1.0.0/24
network vnet show -g clitest.rg000001 -n servergrouptestvnet
network vnet subnet show -g clitest.rg000001 -n servergrouptestsubnet --vnet-name servergrouptestvnet
network vnet create -g clitest.rg000002 -l westus2 -n vnetgrouptestvnet --address-prefixes 172.1.0.0/16 --subnet-name vnetgrouptestsubnet --subnet-prefixes 172.1.0.0/24
network vnet show -g clitest.rg000002 -n vnetgrouptestvnet
network vnet subnet show -g clitest.rg000002 -n vnetgrouptestsubnet --vnet-name vnetgrouptestvnet
mysql flexible-server create -g clitest.rg000001 -n azuredbclitest-000003 -l westus2 --private-dns-zone azuredbclitest-000003.mysql.database.azure.com --vnet servergrouptestvnet --subnet servergrouptestsubnet --yes
mysql flexible-server create -g clitest.rg000001 -n azuredbclitest-000003 -l westus2 --private-dns-zone clitestincorrectsuffix.database.mysql.azure.com --subnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/servergrouptestvnet/subnets/servergrouptestsubnet --yes
network private-dns zone create -g clitest.rg000001 --name clitestunlinked.mysql.database.azure.com
mysql flexible-server create -g clitest.rg000001 -n azuredbclitest-000003 -l westus2 --private-dns-zone clitestunlinked.mysql.database.azure.com --subnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/servergrouptestvnet/subnets/servergrouptestsubnet --yes
mysql flexible-server show -g clitest.rg000001 -n azuredbclitest-000003
network vnet show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/servergrouptestvnet
network vnet subnet show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/servergrouptestvnet/subnets/servergrouptestsubnet
network private-dns zone create -g clitest.rg000002 --name clitestvnetgroup.mysql.database.azure.com
network private-dns link vnet create -g clitest.rg000002 -n MyLinkName -z clitestvnetgroup.mysql.database.azure.com -v /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000002/providers/Microsoft.Network/virtualNetworks/vnetgrouptestvnet -e False
mysql flexible-server create -g clitest.rg000001 -n azuredbclitest-000004 -l westus2 --private-dns-zone clitestvnetgroup.mysql.database.azure.com --subnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000002/providers/Microsoft.Network/virtualNetworks/vnetgrouptestvnet/subnets/vnetgrouptestsubnet --yes
mysql flexible-server show -g clitest.rg000001 -n azuredbclitest-000004
network vnet show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000002/providers/Microsoft.Network/virtualNetworks/vnetgrouptestvnet
network vnet subnet show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000002/providers/Microsoft.Network/virtualNetworks/vnetgrouptestvnet/subnets/vnetgrouptestsubnet
mysql flexible-server delete -g clitest.rg000001 -n azuredbclitest-000003 --yes
mysql flexible-server delete -g clitest.rg000001 -n azuredbclitest-000004 --yes
network vnet create -g clitest.rg000001 -l westus2 -n servergrouptestvnet --address-prefixes 172.1.0.0/16 --subnet-name servergrouptestsubnet --subnet-prefixes 172.1.0.0/24
network vnet show -g clitest.rg000001 -n servergrouptestvnet
network vnet subnet show -g clitest.rg000001 -n servergrouptestsubnet --vnet-name servergrouptestvnet
network vnet create -g clitest.rg000002 -l westus2 -n vnetgrouptestvnet --address-prefixes 172.1.0.0/16 --subnet-name vnetgrouptestsubnet --subnet-prefixes 172.1.0.0/24
network vnet show -g clitest.rg000002 -n vnetgrouptestvnet
network vnet subnet show -g clitest.rg000002 -n vnetgrouptestsubnet --vnet-name vnetgrouptestvnet
mysql flexible-server create -g clitest.rg000001 -n azuredbclitest-000005 -l westus2 --private-dns-zone /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000003/providers/Microsoft.Network/privateDnsZones/clitestdnszone2.private.mysql.database.azure.com --subnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000002/providers/Microsoft.Network/virtualNetworks/vnetgrouptestvnet/subnets/vnetgrouptestsubnet --yes
mysql flexible-server show -g clitest.rg000001 -n azuredbclitest-000005
mysql flexible-server create -g clitest.rg000001 -n azuredbclitest-000006 -l westus2 --private-dns-zone /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000003/providers/Microsoft.Network/privateDnsZones/clitestdnszone3.private.mysql.database.azure.com --subnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/servergrouptestvnet/subnets/servergrouptestsubnet --yes
mysql flexible-server show -g clitest.rg000001 -n azuredbclitest-000006
mysql flexible-server delete -g clitest.rg000001 -n azuredbclitest-000005 --yes
mysql flexible-server delete -g clitest.rg000001 -n azuredbclitest-000006 --yes
network vnet create -g clitest.rg000001 -l eastus2euap -n servergrouptestvnet --address-prefixes 172.1.0.0/16 --subnet-name servergrouptestsubnet --subnet-prefixes 172.1.0.0/24
network vnet show -g clitest.rg000001 -n servergrouptestvnet
network vnet subnet show -g clitest.rg000001 -n servergrouptestsubnet --vnet-name servergrouptestvnet
network vnet create -g clitest.rg000002 -l eastus2euap -n vnetgrouptestvnet --address-prefixes 172.1.0.0/16 --subnet-name vnetgrouptestsubnet --subnet-prefixes 172.1.0.0/24
network vnet show -g clitest.rg000002 -n vnetgrouptestvnet
network vnet subnet show -g clitest.rg000002 -n vnetgrouptestsubnet --vnet-name vnetgrouptestvnet
postgres flexible-server create -g clitest.rg000001 -n azuredbclitest-000003 -l eastus2euap --private-dns-zone azuredbclitest-000003.postgres.database.azure.com --vnet servergrouptestvnet --subnet servergrouptestsubnet --yes
postgres flexible-server create -g clitest.rg000001 -n azuredbclitest-000003 -l eastus2euap --private-dns-zone clitestincorrectsuffix.database.postgres.azure.com --subnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/servergrouptestvnet/subnets/servergrouptestsubnet --yes
network private-dns zone create -g clitest.rg000001 --name clitestunlinked.postgres.database.azure.com
postgres flexible-server create -g clitest.rg000001 -n azuredbclitest-000003 -l eastus2euap --private-dns-zone clitestunlinked.postgres.database.azure.com --subnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/servergrouptestvnet/subnets/servergrouptestsubnet --yes
postgres flexible-server show -g clitest.rg000001 -n azuredbclitest-000003
network vnet show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/servergrouptestvnet
network vnet subnet show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/servergrouptestvnet/subnets/servergrouptestsubnet
network private-dns zone create -g clitest.rg000002 --name clitestvnetgroup.postgres.database.azure.com
network private-dns link vnet create -g clitest.rg000002 -n MyLinkName -z clitestvnetgroup.postgres.database.azure.com -v /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000002/providers/Microsoft.Network/virtualNetworks/vnetgrouptestvnet -e False
postgres flexible-server create -g clitest.rg000001 -n azuredbclitest-000004 -l eastus2euap --private-dns-zone clitestvnetgroup.postgres.database.azure.com --subnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000002/providers/Microsoft.Network/virtualNetworks/vnetgrouptestvnet/subnets/vnetgrouptestsubnet --yes
postgres flexible-server show -g clitest.rg000001 -n azuredbclitest-000004
network vnet show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000002/providers/Microsoft.Network/virtualNetworks/vnetgrouptestvnet
network vnet subnet show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000002/providers/Microsoft.Network/virtualNetworks/vnetgrouptestvnet/subnets/vnetgrouptestsubnet
postgres flexible-server delete -g clitest.rg000001 -n azuredbclitest-000003 --yes
postgres flexible-server delete -g clitest.rg000001 -n azuredbclitest-000004 --yes
network vnet create -g clitest.rg000001 -l eastus2euap -n servergrouptestvnet --address-prefixes 172.1.0.0/16 --subnet-name servergrouptestsubnet --subnet-prefixes 172.1.0.0/24
network vnet show -g clitest.rg000001 -n servergrouptestvnet
network vnet subnet show -g clitest.rg000001 -n servergrouptestsubnet --vnet-name servergrouptestvnet
network vnet create -g clitest.rg000002 -l eastus2euap -n vnetgrouptestvnet --address-prefixes 172.1.0.0/16 --subnet-name vnetgrouptestsubnet --subnet-prefixes 172.1.0.0/24
network vnet show -g clitest.rg000002 -n vnetgrouptestvnet
network vnet subnet show -g clitest.rg000002 -n vnetgrouptestsubnet --vnet-name vnetgrouptestvnet
postgres flexible-server create -g clitest.rg000001 -n azuredbclitest-000005 -l eastus2euap --private-dns-zone /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000003/providers/Microsoft.Network/privateDnsZones/clitestdnszone2.private.postgres.database.azure.com --subnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000002/providers/Microsoft.Network/virtualNetworks/vnetgrouptestvnet/subnets/vnetgrouptestsubnet --yes
postgres flexible-server show -g clitest.rg000001 -n azuredbclitest-000005
postgres flexible-server create -g clitest.rg000001 -n azuredbclitest-000006 -l eastus2euap --private-dns-zone /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000003/providers/Microsoft.Network/privateDnsZones/clitestdnszone3.private.postgres.database.azure.com --subnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/servergrouptestvnet/subnets/servergrouptestsubnet --yes
postgres flexible-server show -g clitest.rg000001 -n azuredbclitest-000006
postgres flexible-server delete -g clitest.rg000001 -n azuredbclitest-000005 --yes
postgres flexible-server delete -g clitest.rg000001 -n azuredbclitest-000006 --yes
postgres flexible-server migration check-name-availability --subscription 00000000-0000-0000-0000-000000000000 --resource-group raganesa-t-m-pg-1 --name raganesa-t-m-pg-1-vnet --migration-name 00000000-0000-0000-0000-000000000000 
postgres flexible-server migration create --subscription 00000000-0000-0000-0000-000000000000 --resource-group raganesa-t-m-pg-1 --name raganesa-t-m-pg-1-vnet --migration-name 00000000-0000-0000-0000-000000000000 --properties C:\\Code\\azure-cli\\src\\azure-cli\\azure\\cli\\command_modules\\rdbms\\tests\\latest\\migrationVNet.json 
postgres flexible-server migration list --subscription 00000000-0000-0000-0000-000000000000 --resource-group raganesa-t-m-pg-1 --name raganesa-t-m-pg-1-vnet --filter Active
postgres flexible-server migration list --subscription 00000000-0000-0000-0000-000000000000 --resource-group raganesa-t-m-pg-1 --name raganesa-t-m-pg-1-vnet
postgres flexible-server migration show --subscription 00000000-0000-0000-0000-000000000000 --resource-group raganesa-t-m-pg-1 --name raganesa-t-m-pg-1-vnet --migration-name 00000000-0000-0000-0000-000000000000
postgres flexible-server migration update --subscription 00000000-0000-0000-0000-000000000000 --resource-group raganesa-t-m-pg-1 --name raganesa-t-m-pg-1-vnet --migration-name 00000000-0000-0000-0000-000000000000
postgres flexible-server migration delete --subscription 00000000-0000-0000-0000-000000000000 --resource-group raganesa-t-m-pg-1 --name raganesa-t-m-pg-1-vnet --migration-name 00000000-0000-0000-0000-000000000000 --yes
redis create -n {name} -g {rg} -l {location} --sku {sku} --vm-size {size}
redis export -n {name} -g {rg} --prefix {prefix} --container "{containersasURL}"
redis import-method -n {name} -g {rg} --files "{filesasURL}"
redis import -n {name} -g {rg} --files "{filesasURL}"
redis delete -n {name} -g {rg} -y
redis create -n {name} -g {rg} -l {location} --sku {sku} --vm-size {size}
redis firewall-rules create -n {name} -g {rg} --start-ip 127.0.0.1 --end-ip 127.0.0.1 --rule-name {rulename}
redis firewall-rules update -n {name} -g {rg} --start-ip 127.0.0.0 --end-ip 127.0.0.1 --rule-name {rulename}
redis firewall-rules list -n {name} -g {rg}
redis firewall-rules show -n {name} -g {rg} --rule-name {rulename}
redis firewall-rules delete -n {name} -g {rg} --rule-name {rulename}
redis delete -n {name} -g {rg} -y
redis create -n {name} -g {rg} -l {location} --sku {sku} --vm-size {size}
redis firewall-rules list -n {name} -g {rg}
redis server-link list -n {name} -g {rg}
redis create -n {name} -g {rg} -l {location} --sku {sku} --vm-size {size}
redis list-keys -n {name} -g {rg}
redis list
redis list -g {rg}
redis create -n {name} -g {rg} -l {location} --sku {sku} --vm-size {size}
redis patch-schedule create -n {name} -g {rg} --schedule-entries {schedule_entries_one}
redis patch-schedule update -n {name} -g {rg} --schedule-entries {schedule_entries_two}
redis patch-schedule show -n {name} -g {rg}
redis patch-schedule delete -n {name} -g {rg}
redis create -n {name} -g {rg} -l {location} --sku {sku} --vm-size {size}
redis force-reboot -n {name} -g {rg} --reboot-type AllNodes
redis force-reboot -n {name} -g {rg} --reboot-type PrimaryNode
redis force-reboot -n {name} -g {rg} --reboot-type SecondaryNode
redis delete -n {name} -g {rg} -y
redis create -n {name} -g {rg} -l {location} --sku {sku} --vm-size {size}
redis regenerate-keys -n {name} -g {rg} --key-type Primary
redis regenerate-keys -n {name} -g {rg} --key-type Secondary
redis update -n {name} -g {rg} --set "tags.mytag=mytagval"
redis delete -n {name} -g {rg} -y
redis create -n {name} -g {rg} -l {location} --sku {sku} --vm-size {size}
redis create -n {secname} -g {rg} -l {seclocation} --sku {sku} --vm-size {size}
redis server-link create -n {name} -g {rg} --replication-role Secondary --server-to-link {secname}
redis server-link list -n {name} -g {rg}
redis server-link show -n {name} -g {rg} --linked-server-name {secname}
redis server-link delete -n {name} -g {rg} --linked-server-name {secname}
redis delete -n {name} -g {rg} -y
redis delete -n {secname} -g {rg} -y
redis create -n {name} -g {rg} -l {location} --sku {sku} --vm-size {size}
redis show -n {name} -g {rg}
redis create -n {name} -g {rg} -l {location} --sku {sku} --vm-size {size} --redis-version {redis_version}
redis show -n {name} -g {rg}
redis create -n {name} -g {rg} -l {location} --sku {sku} --vm-size {size} --tags {tags} --zones {zones}
redis show -n {name} -g {rg}
redis create -n {name} -g {rg} -l {location} --sku {sku} --vm-size {size} --minimum-tls-version {tls_version}  --tenant-settings {tenant_settings}
redis show -n {name} -g {rg}
relay namespace create --resource-group {rg} --name {namespacename} --location {loc} --tags {tags}
relay namespace show --resource-group {rg} --name {namespacename}
relay hyco create --resource-group {rg} --namespace-name {namespacename} --name {hyconame}
relay hyco show --resource-group {rg} --namespace-name {namespacename} --name {hyconame}
relay hyco update --resource-group {rg} --namespace-name {namespacename} --name {hyconame}
relay hyco list --resource-group {rg} --namespace-name {namespacename}
relay hyco authorization-rule create --resource-group {rg} --namespace-name {namespacename} --hybrid-connection-name {hyconame} --name {authoname} --rights {accessrights}
relay hyco authorization-rule show --resource-group {rg} --namespace-name {namespacename} --hybrid-connection-name {hyconame} --name {authoname}
relay hyco authorization-rule update --resource-group {rg} --namespace-name {namespacename} --hybrid-connection-name {hyconame} --name {authoname} --rights {accessrights1}
relay hyco authorization-rule keys list --resource-group {rg} --namespace-name {namespacename} --hybrid-connection-name {hyconame} --name {authoname}
relay hyco authorization-rule keys renew --resource-group {rg} --namespace-name {namespacename} --hybrid-connection-name {hyconame} --name {authoname} --key {primary}
relay hyco authorization-rule keys renew --resource-group {rg} --namespace-name {namespacename} --hybrid-connection-name {hyconame} --name {authoname} --key {secondary}
relay hyco authorization-rule delete --resource-group {rg} --namespace-name {namespacename} --hybrid-connection-name {hyconame} --name {authoname}
relay hyco delete --resource-group {rg} --namespace-name {namespacename} --name {hyconame}
relay namespace delete --resource-group {rg} --name {namespacename}
relay namespace exists --name {namespacename}
relay namespace create --resource-group {rg} --name {namespacename} --location {loc} --tags {tags}
relay namespace show --resource-group {rg} --name {namespacename}
relay namespace update --resource-group {rg} --name {namespacename} --tags {tags}
relay namespace list
relay namespace list --resource-group {rg}
relay namespace authorization-rule create --resource-group {rg} --namespace-name {namespacename} --name {authoname} --rights {accessrights}
relay namespace authorization-rule show --resource-group {rg} --namespace-name {namespacename} --name {authoname}
relay namespace authorization-rule create --resource-group {rg} --namespace-name {namespacename} --name {authoname} --rights {accessrights1}
relay namespace authorization-rule show --resource-group {rg} --namespace-name {namespacename} --name {defaultauthorizationrule}
relay namespace authorization-rule keys list --resource-group {rg} --namespace-name {namespacename} --name {authoname}
relay namespace authorization-rule keys renew --resource-group {rg} --namespace-name {namespacename} --name {authoname} --key {primary}
relay namespace authorization-rule keys renew --resource-group {rg} --namespace-name {namespacename} --name {authoname} --key {secondary}
relay namespace authorization-rule delete --resource-group {rg} --namespace-name {namespacename} --name {authoname}
relay namespace delete --resource-group {rg} --name {namespacename}
relay namespace create --resource-group {rg} --name {namespacename} --location {loc} --tags {tags}
relay namespace show --resource-group {rg} --name {namespacename}
relay wcfrelay create --resource-group {rg} --namespace-name {namespacename} --name {wcfrelayname} --relay-type {relaytype} --requires-transport-security false --requires-client-authorization false
relay wcfrelay show --resource-group {rg} --namespace-name {namespacename} --name {wcfrelayname}
relay wcfrelay update --resource-group {rg} --namespace-name {namespacename} --name {wcfrelayname} --relay-type {relaytype}
relay wcfrelay list --resource-group {rg} --namespace-name {namespacename}
relay wcfrelay authorization-rule create --resource-group {rg} --namespace-name {namespacename} --relay-name {wcfrelayname} --name {authoname} --rights {accessrights}
relay wcfrelay authorization-rule show --resource-group {rg} --namespace-name {namespacename} --relay-name {wcfrelayname} --name {authoname}
relay wcfrelay authorization-rule update --resource-group {rg} --namespace-name {namespacename} --relay-name {wcfrelayname} --name {authoname} --rights {accessrights1}
relay wcfrelay authorization-rule keys list --resource-group {rg} --namespace-name {namespacename} --relay-name {wcfrelayname} --name {authoname}
relay wcfrelay authorization-rule keys renew --resource-group {rg} --namespace-name {namespacename} --relay-name {wcfrelayname} --name {authoname} --key {primary}
relay wcfrelay authorization-rule keys renew --resource-group {rg} --namespace-name {namespacename} --relay-name {wcfrelayname} --name {authoname} --key {secondary}
relay wcfrelay authorization-rule delete --resource-group {rg} --namespace-name {namespacename} --relay-name {wcfrelayname} --name {authoname}
relay wcfrelay delete --resource-group {rg} --namespace-name {namespacename} --name {wcfrelayname}
reservations reservation-order calculate --sku {sku} --location {location} --reserved-resource-type {reservedResourceType} --billing-scope {subid} --term {term} --billing-plan {billingPlan} --display-name {displayName} --quantity {quantity} --applied-scope-type {appliedScopeType}
reservations reservation-order-id list --subscription-id {subscription}
reservations catalog show --subscription-id {subscription} --reserved-resource-type {type} --location {location}
reservations reservation show  --reservation-order-id {reservation_order_id} --reservation-id {reservation_id}
reservations reservation-order show --reservation-order-id {reservation_order_id}
reservations reservation list --reservation-order-id {reservation_order_id}
reservations reservation list-history --reservation-order-id {reservation_order_id} --reservation-id {reservation_id}
reservations reservation-order list
reservations reservation-order purchase --reservation-order-id {roid} --sku {sku} --location {location} --reserved-resource-type {reservedResourceType} --billing-scope {subid} --term {term} --billing-plan {billingPlan} --display-name {displayName} --quantity {quantity} --applied-scope-type {appliedScopeType}
reservations reservation show  --reservation-order-id {reservation_order_id} --reservation-id {reservation_id}
reservations reservation split --reservation-order-id {reservation_order_id} --reservation-id {reservation_id} -1 {quantity1} -2 {quantity2}
reservations reservation merge --reservation-order-id {reservation_order_id} -1 {split_id1} -2 {split_id2}
reservations reservation update --reservation-order-id {reservation_order_id} --reservation-id {reservation_id} -t Single -s {scope} --instance-flexibility {instance_flexibility}
reservations reservation update --reservation-order-id {reservation_order_id} --reservation-id {reservation_id} -t Shared --instance-flexibility {instance_flexibility}
lock create -n {lock} -g {rg} --lock-type {type}
lock show -g {rg} -n {lock}
lock list -g {rg} --query '[].name'
lock update -n {lock} -g {rg} --notes {notes} --lock-type {new_lvl}
lock delete -g {rg} -n {lock}
network vnet create -n cli.lock.rsrc000002 -g cli_test_cannotdelete_resource_lock000001
lock create -n cli-test-lock000003 -g cli_test_cannotdelete_resource_lock000001 --resource-type Microsoft.Network/virtualNetworks --resource-name cli.lock.rsrc000002 --lock-type CanNotDelete
lock show --name cli-test-lock000003 -g cli_test_cannotdelete_resource_lock000001 --resource-type Microsoft.Network/virtualNetworks --resource-name cli.lock.rsrc000002
lock list --query '[].name' -ojson
lock update -n cli-test-lock000003 -g cli_test_cannotdelete_resource_lock000001 --resource-type Microsoft.Network/virtualNetworks --resource-name cli.lock.rsrc000002 --notes notes000004 --lock-type ReadOnly
lock delete --name cli-test-lock000003 -g cli_test_cannotdelete_resource_lock000001 --resource-name cli.lock.rsrc000002 --resource-type Microsoft.Network/virtualNetworks
lock create -n cli-test-lock000001 --lock-type ReadOnly
lock list
lock show -n cli-test-lock000001
lock show --ids /subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/locks/cli-test-lock000001
lock update -n cli-test-lock000001 --notes notes000002 --lock-type CanNotDelete
lock update --ids /subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/locks/cli-test-lock000001 --lock-type ReadOnly
lock delete -n cli-test-lock000001
lock create -n cli-test-lock000003 --lock-type CanNotDelete
lock list
lock show -n cli-test-lock000003
lock show --ids /subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/locks/cli-test-lock000003
lock update -n cli-test-lock000003 --notes notes000004 --lock-type ReadOnly
lock update --ids /subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/locks/cli-test-lock000003 --lock-type CanNotDelete
lock delete -n cli-test-lock000003
group lock create -n {lock} -g {rg} --lock-type CanNotDelete
group lock show -g {rg} -n {lock}
group lock list -g {rg} --query [].name
group lock update -n {lock} -g {rg} --notes {notes} --lock-type ReadOnly
group lock delete -g {rg} -n {lock}
lock list
network vnet create -n cli-lock-vnet000002 -g cli_test_lock_commands_with_ids000001
network vnet subnet create -n cli-lock-subnet000003 --address-prefix 10.0.0.0/16 --vnet-name cli-lock-vnet000002 -g cli_test_lock_commands_with_ids000001
lock create -n cli-test-lock000004 -g cli_test_lock_commands_with_ids000001 --lock-type CanNotDelete
lock create -n cli-test-lock000005 -g cli_test_lock_commands_with_ids000001 --resource-type Microsoft.Network/virtualNetworks --resource-name cli-lock-vnet000002 --lock-type CanNotDelete
lock create -n cli-test-lock000006 -g cli_test_lock_commands_with_ids000001 --resource-name cli-lock-subnet000003 --resource-type subnets --namespace Microsoft.Network --parent virtualNetworks/cli-lock-vnet000002 --lock-type CanNotDelete
lock show --ids /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_lock_commands_with_ids000001/providers/Microsoft.Authorization/locks/cli-test-lock000004 /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/cli_test_lock_commands_with_ids000001/providers/Microsoft.Network/virtualNetworks/cli-lock-vnet000002/providers/Microsoft.Authorization/locks/cli-test-lock000005 /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/cli_test_lock_commands_with_ids000001/providers/Microsoft.Network/virtualNetworks/cli-lock-vnet000002/subnets/cli-lock-subnet000003/providers/Microsoft.Authorization/locks/cli-test-lock000006 --query [].name
lock update --ids /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_lock_commands_with_ids000001/providers/Microsoft.Authorization/locks/cli-test-lock000004 /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/cli_test_lock_commands_with_ids000001/providers/Microsoft.Network/virtualNetworks/cli-lock-vnet000002/providers/Microsoft.Authorization/locks/cli-test-lock000005 /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/cli_test_lock_commands_with_ids000001/providers/Microsoft.Network/virtualNetworks/cli-lock-vnet000002/subnets/cli-lock-subnet000003/providers/Microsoft.Authorization/locks/cli-test-lock000006 --notes somenotes --lock-type ReadOnly
lock delete --ids /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_lock_commands_with_ids000001/providers/Microsoft.Authorization/locks/cli-test-lock000004 /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/cli_test_lock_commands_with_ids000001/providers/Microsoft.Network/virtualNetworks/cli-lock-vnet000002/providers/Microsoft.Authorization/locks/cli-test-lock000005 /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/cli_test_lock_commands_with_ids000001/providers/Microsoft.Network/virtualNetworks/cli-lock-vnet000002/subnets/cli-lock-subnet000003/providers/Microsoft.Authorization/locks/cli-test-lock000006
lock list -g cli_test_lock_commands_with_ids000001 -ojson
network vnet create -n cli-lock-vnet000002 -g cli_test_lock_with_resource_id000001
network vnet subnet create -n cli-lock-subnet000003 --address-prefix 10.0.0.0/16 --vnet-name cli-lock-vnet000002 -g cli_test_lock_with_resource_id000001
resource lock create -n cli-test-lock000004 --resource /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_lock_with_resource_id000001/providers/Microsoft.Network/virtualNetworks/cli-lock-vnet000002 --lock-type CanNotDelete
lock create -n cli-test-lock000005 --resource /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_lock_with_resource_id000001/providers/Microsoft.Network/virtualNetworks/cli-lock-vnet000002/subnets/cli-lock-subnet000003 --lock-type CanNotDelete
resource lock show --name cli-test-lock000004 --resource /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_lock_with_resource_id000001/providers/Microsoft.Network/virtualNetworks/cli-lock-vnet000002
lock show --name cli-test-lock000005 --resource /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_lock_with_resource_id000001/providers/Microsoft.Network/virtualNetworks/cli-lock-vnet000002/subnets/cli-lock-subnet000003
resource lock delete --name cli-test-lock000004 --resource /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_lock_with_resource_id000001/providers/Microsoft.Network/virtualNetworks/cli-lock-vnet000002
lock delete --name cli-test-lock000005 --resource /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_lock_with_resource_id000001/providers/Microsoft.Network/virtualNetworks/cli-lock-vnet000002/subnets/cli-lock-subnet000003
lock create -n {lock} -g {rg} --lock-type {type}
lock show -g {rg} -n {lock}
lock list -g {rg} --query '[].name'
lock update -n {lock} -g {rg} --notes {notes} --lock-type {new_lvl}
lock delete -g {rg} -n {lock}
network vnet create -n cli.lock.rsrc000002 -g cli_test_readonly_resource_lock000001
lock create -n cli-test-lock000003 -g cli_test_readonly_resource_lock000001 --resource-type Microsoft.Network/virtualNetworks --resource-name cli.lock.rsrc000002 --lock-type ReadOnly
lock show --name cli-test-lock000003 -g cli_test_readonly_resource_lock000001 --resource-type Microsoft.Network/virtualNetworks --resource-name cli.lock.rsrc000002
lock list --query '[].name' -ojson
lock update -n cli-test-lock000003 -g cli_test_readonly_resource_lock000001 --resource-type Microsoft.Network/virtualNetworks --resource-name cli.lock.rsrc000002 --notes notes000004 --lock-type CanNotDelete
lock delete --name cli-test-lock000003 -g cli_test_readonly_resource_lock000001 --resource-name cli.lock.rsrc000002 --resource-type Microsoft.Network/virtualNetworks
network vnet create -n cli.lock.rsrc000002 -g cli_test_resource_lock000001
resource lock create -n cli-test-lock000003 -g cli_test_resource_lock000001 --resource-type Microsoft.Network/virtualNetworks --resource-name cli.lock.rsrc000002 --lock-type CanNotDelete
resource lock show --name cli-test-lock000003 -g cli_test_resource_lock000001 --resource-type Microsoft.Network/virtualNetworks --resource-name cli.lock.rsrc000002
resource lock list -g cli_test_resource_lock000001 --resource-type Microsoft.Network/virtualNetworks --resource-name cli.lock.rsrc000002 --query [].name -ojson
resource lock update -n cli-test-lock000003 -g cli_test_resource_lock000001 --resource-type Microsoft.Network/virtualNetworks --resource-name cli.lock.rsrc000002 --notes notes000004 --lock-type ReadOnly
resource lock delete --name cli-test-lock000003 -g cli_test_resource_lock000001 --resource-name cli.lock.rsrc000002 --resource-type Microsoft.Network/virtualNetworks
account lock create -n cli-test-lock000001 --lock-type CanNotDelete
account lock list --query [].name
account lock show -n cli-test-lock000001
account lock show --ids /subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/locks/cli-test-lock000001
account lock update -n cli-test-lock000001 --notes notes000002 --lock-type ReadOnly
account lock update --ids /subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/locks/cli-test-lock000001 --lock-type CanNotDelete
account lock delete -n cli-test-lock000001
account management-group create --name testcligroup
account management-group delete --name testcligroup
account management-group create --name testcligroup
account management-group delete --name testcligroup
account management-group create --name testcligroup --display-name TestCliDisplayName
account management-group delete --name testcligroup
account management-group create --name testcligroup
account management-group create --name testcligroupchild --display-name testcligroupchildDisplayName --parent testcligroup
account management-group delete --name testcligroupchild
account management-group delete --name testcligroup
account management-group create --name testcligroup
account management-group create --name testcligroupchild --parent /providers/Microsoft.Management/managementGroups/testcligroup
account management-group delete --name testcligroupchild
account management-group delete --name testcligroup
account management-group list
account management-group create --name testcligetgroup1
account management-group create --name testcligetgroup2 --parent /providers/Microsoft.Management/managementGroups/testcligetgroup1
account management-group show --name testcligetgroup2
account management-group delete --name testcligetgroup2
account management-group delete --name testcligetgroup1
account management-group create --name testcligetgroup1
account management-group create --name testcligetgroup2 --parent testcligetgroup1
account management-group create --name testcligetgroup3 --parent /providers/Microsoft.Management/managementGroups/testcligetgroup2
account management-group show --name testcligetgroup2 --expand
account management-group delete --name testcligetgroup3
account management-group delete --name testcligetgroup2
account management-group delete --name testcligetgroup1
account management-group create --name testcligetgroup1
account management-group create --name testcligetgroup2 --parent /providers/Microsoft.Management/managementGroups/testcligetgroup1
account management-group create --name testcligetgroup3 --parent testcligetgroup2
account management-group create --name testcligetgroup4 --parent /providers/Microsoft.Management/managementGroups/testcligetgroup3
account management-group show --name testcligetgroup2 --expand --recurse
account management-group delete --name testcligetgroup4
account management-group delete --name testcligetgroup3
account management-group delete --name testcligetgroup2
account management-group delete --name testcligetgroup1
account management-group create --name testcligroup
account management-group update --name testcligroup --display-name testcligroupDisplayName
account management-group delete --name testcligroup
account management-group create --name testcligroup
account management-group create --name testcligroupchild
account management-group update --name testcligroupchild --display-name testcligroupchild --parent testcligroup
account management-group delete --name testcligroupchild
account management-group delete --name testcligroup
account management-group create --name testcligroup
account management-group create --name testcligroupchild
account management-group update --name testcligroupchild --parent /providers/Microsoft.Management/managementGroups/testcligroup
account management-group delete --name testcligroupchild
account management-group delete --name testcligroup
group delete -n {rg} --yes
group exists -n {rg}
group create -n {rg} -l westus --tag a=b c --managed-by test_admin
group exists -n {rg}
group show -n {rg}
group list --tag a=b
group list --tag a
group update -g {rg} --tags ""
group update -g {rg} --set tags.a={tag}
group update -g {rg} --set tags.b={tag} --force-string
group export --name {rg} --query "contentVersion"
network vnet create -g {rg} -n {vnet}
network vnet show -g {rg} -n {vnet}
group export --name {rg} --resource-ids "{vnet_id}" --skip-all-params --query "parameters"
network vnet create -g {rg} -n {vnet}
network vnet show -g {rg} -n {vnet}
group export --name {rg} --resource-ids "{vnet_id}" --skip-resource-name-params --query "parameters"
group delete -n {rg} --no-wait --yes
group wait --deleted -n {rg}
group exists -n {rg}
group create -n {rg} -l westus --managed-by test_admin
group exists -n {rg}
group wait --exists -n {rg}
network vnet create -g {rg} -n {vnet}
network vnet show -g {rg} -n {vnet}
group show -g {rg}
resource link create --link {link_id} --target {vnet_id} --notes "blah notes"
resource link show --link {link_id}
resource link update --link {link_id} --target {vnet_id} --notes "group to vnet"
resource link list --query length(@) -o tsv
resource link show --link {link_id}
resource link delete --link {link_id}
resource link list
resource list --query "length([?name=='{vnet}'])"
network vnet create -g {rg} -n {vnet} --subnet-name {subnet}
resource tag --id {vnet_id} --tags tag-vnet
resource show --id {vnet_id}
resource show --id {subnet_id}
resource update --id {subnet_id} --set properties.addressPrefix=10.0.0.0/22
resource delete --id {subnet_id}
resource delete --id {vnet_id}
resource create -g {rg} -n {plan} --resource-type Microsoft.web/serverFarms --is-full-object --properties "{{\"location\":\"{loc}\",\"sku\":{{\"name\":\"B1\",\"tier\":\"BASIC\"}}}}"
resource create -g {rg} -n {app} --resource-type Microsoft.web/sites --properties "{{\"serverFarmId\":\"{plan}\"}}"
resource create --id {app_settings_id} --properties "{{\"key2\":\"value12\"}}"
resource show --id {app_config_id}
resource show --id {app_config_id} --include-response-body
resource create -g {rg} -n {vault} --resource-type Microsoft.RecoveryServices/vaults --is-full-object -p "{{\"properties\":{{}},\"location\":\"{loc}\",\"sku\":{{\"name\":\"Standard\"}}}}"
tag create --resource-id {resource_id} --tags
tag create --resource-id {resource_id} --tags {expected_tags1}
tag create --resource-id {resource_id} --tags {expected_tags2}
tag delete --resource-id {resource_id} -y
tag create --resource-id {resource_id} --tags
tag create --resource-id {resource_id} --tags {expected_tags1}
tag create --resource-id {resource_id} --tags {expected_tags2}
tag delete --resource-id {resource_id} -y
tag create --resource-id {resource_id} --tags
tag create --resource-id {resource_id} --tags {expected_tags1}
tag create --resource-id {resource_id} --tags {expected_tags2}
tag delete --resource-id {resource_id} -y
resource create -g {rg} -n {vault} --resource-type Microsoft.RecoveryServices/vaults --is-full-object -p "{{\"properties\":{{}},\"location\":\"{loc}\",\"sku\":{{\"name\":\"Standard\"}}}}"
resource tag --ids {vault_id} --tags {tag}
configure --defaults location={loc}
resource list --tag {tag}
resource list --tag {tag} -l westus
resource list --tag {tag} --l westus
resource list --tag {tag} --location westus
configure --defaults location=""
resource list --tag {tag}
resource create -g {rg} -n {vault} --resource-type Microsoft.RecoveryServices/vaults --is-full-object -p "{{\"properties\":{{}},\"location\":\"{loc}\",\"sku\":{{\"name\":\"Standard\"}}}}"
tag create --resource-id {resource_id} --tags {original_tags}
tag list --resource-id {resource_id}
tag delete --resource-id {resource_id} -y
tag create --resource-id {resource_id} --tags {original_tags}
tag list --resource-id {resource_id}
tag delete --resource-id {resource_id} -y
tag create --resource-id {resource_id} --tags {original_tags}
tag list --resource-id {resource_id}
tag delete --resource-id {resource_id} -y
resource create -g {rg} -n {vault} --resource-type Microsoft.RecoveryServices/vaults --is-full-object -p "{{\"properties\":{{}},\"location\":\"{loc}\",\"sku\":{{\"name\":\"Standard\"}}}}"
resource tag --ids {vault_id} --tags cli-test=test cli-test2=test2
resource tag --ids {vault_id} --tags cli-test3=test3 cli-test4=test4
resource tag --ids {vault_id} --tags cli-test4=test4a cli-test5=test5 -i
resource tag --ids {vault_id} --tags -i 
resource tag --ids {vault_id} --tags "" -i 
resource tag --ids {vault_id} --tags
resource delete --id {vault_id}
tag list --query "[?tagName == '{tag}'].values[].tagValue"
tag delete -n {tag} -y
tag list --query "[?tagName == '{tag}']"
tag create -n {tag}
tag add-value -n {tag} --value test
tag add-value -n {tag} --value test2
tag list --query "[?tagName == '{tag}']"
tag remove-value -n {tag} --value test
tag list --query "[?tagName == '{tag}']"
tag remove-value -n {tag} --value test2
tag list --query "[?tagName == '{tag}']"
tag delete -n {tag} -y
tag list --query "[?tagName == '{tag}']"
resource create -g {rg} -n {vault} --resource-type Microsoft.RecoveryServices/vaults --is-full-object -p "{{\"properties\":{{}},\"location\":\"{loc}\",\"sku\":{{\"name\":\"Standard\"}}}}"
resource tag --ids {vault_id} --tags {tag}
resource tag --ids {vault_id} --tags
resource tag --ids {resource_group_id} --tags {tag}
acr create -n {registry_name} -g {rg} -l {rg_loc} --sku {sku}
acr webhook create -n {webhook_name} -r {registry_name} --uri {uri} --actions {actions}
resource tag --ids {webhook_id} --tags {tag}
resource tag --ids {webhook_id} --tags
container create -g {rg} -n {container_group_name} --image {image}
resource tag --ids {container_id} --tags {tag}
resource tag --ids {container_id} --tags
resource tag --ids {vault_id} {webhook_id} {container_id} --tags {tag}
network public-ip create -g {rg} -n {ip_name} --location {loc} --sku Standard 
resource tag --ids {public_ip_id} --tags {tag}
resource delete --id {vault_id}
resource delete --id {webhook_id}
resource delete --id {public_ip_id}
resource create -g {rg} -n {vault} --resource-type Microsoft.RecoveryServices/vaults --is-full-object -p "{{\"properties\":{{}},\"location\":\"{loc}\",\"sku\":{{\"name\":\"Standard\"}}}}"
tag create --resource-id {resource_id} --tags {original_tags}
tag update --resource-id {resource_id} --operation {merge_operation} --tags {merge_tags}
tag update --resource-id {resource_id} --operation {replace_operation} --tags {replace_tags}
tag update --resource-id {resource_id} --operation {delete_operation} --tags {delete_tags}
tag delete --resource-id {resource_id} -y
tag create --resource-id {resource_id} --tags {original_tags}
tag update --resource-id {resource_id} --operation {merge_operation} --tags {merge_tags}
tag update --resource-id {resource_id} --operation {replace_operation} --tags {replace_tags}
tag update --resource-id {resource_id} --operation {delete_operation} --tags {delete_tags}
tag delete --resource-id {resource_id} -y
tag create --resource-id {resource_id} --tags {original_tags}
tag update --resource-id {resource_id} --operation {merge_operation} --tags {merge_tags}
tag update --resource-id {resource_id} --operation {replace_operation} --tags {replace_tags}
tag update --resource-id {resource_id} --operation {delete_operation} --tags {delete_tags}
tag delete --resource-id {resource_id} -y
provider show -n {prov}
provider register -n {prov}
provider show -n {prov}
provider unregister -n {prov}
provider show -n {prov}
provider register -n {prov} --m testmg
provider show -n {prov}
provider register -n {prov} --accept-terms
provider show -n {prov}
provider unregister -n {prov}
provider show -n {prov}
provider show -n {prov}
provider register -n {prov}
provider show -n {prov}
provider unregister -n {prov}
provider show -n {prov}
provider show -n {prov}
provider register -n {prov} --consent-to-permissions
provider show -n {prov}
provider permission list -n {prov}
provider unregister -n {prov}
provider operation show --namespace microsoft.compute
provider operation show --namespace microsoft.compute
provider operation show --namespace microsoft.storage
ts create -g {rg} -n {template_spec_name} -v 1.0 -l {resource_group_location} -f "{tf}" --description {description} --version-description {version_description}
ts create --name {template_spec_name} -g {rg} -l {resource_group_location} --template-file "{tf}"
ts delete --template-spec {template_spec_id} --yes
ts create -g {rg} -n {template_spec_name} -v 1.0 -l {resource_group_location} -f "{tf}" --ui-form-definition "{uf}" -d {display_name} --description {description} --version-description {version_description}
ts create -g {rg} -n {template_spec_name} -v 1.0 -f "{tf}" --yes
ts delete --template-spec {template_spec_id} --yes
ts create -g {rg} -n {template_spec_name} -v 1.0 -l {resource_group_location} -f "{tf}"
ts show --template-spec {template_spec_version_id}
ts show --template-spec {template_spec_id}
ts delete --template-spec {template_spec_version_id} --yes
ts list -g {rg}
ts delete --template-spec {template_spec_id} --yes
ts list -g {rg}
ts create -g {rg} -n {template_spec_name} -v 1.0 -l {resource_group_location} -f "{tf}"
ts create -g {rg1} -n {template_spec_name} -v 2.0 -l {resource_group_location} -f "{tf}"
ts create -g {rg1} -n {template_spec_name} -v 3.0 -l {resource_group_location} -f "{tf}"
ts list -g {rg1}
ts list -g {rg}
ts list -g {rg1} -n {template_spec_name}
ts list
ts delete --template-spec {template_spec_id_rg} --yes
ts delete --template-spec {template_spec_id_rg1} --yes
ts create -g {rg} -n {template_spec_name} -v 1.0 -l {resource_group_location} -f "{tf}"
ts show -g {rg} --name {template_spec_name}
ts show --template-spec {template_spec_id}
ts show -g {rg} --name {template_spec_name} --version 1.0
ts show --template-spec {template_spec_version_id}
ts delete --template-spec {template_spec_id} --yes
ts create -g {rg} -n {template_spec_name} -v 1.0 -l {resource_group_location} -f "{tf}" --tags cli-test=test
ts show --template-spec {template_spec_version_one_id}
ts show --template-spec {template_spec_id}
ts create -g {rg} -n {template_spec_name} -v 2.0 -l {resource_group_location} -f "{tf}"
ts show --template-spec {template_spec_version_two_id}
ts create -g {rg} -n {template_spec_name} -v 3.0 -l {resource_group_location} -f "{tf}" --tags cliName1=cliValue1 cliName4=cliValue4
ts show --template-spec {template_spec_version_three_id}
ts show --template-spec {template_spec_id}
ts update -g {rg} -n {template_spec_name} -v 1.0 -f "{tf}" --yes
ts show --template-spec {template_spec_version_one_id}
ts update -g {rg} -n {template_spec_name} -v 1.0 -f "{tf}" --tags "" --yes
ts show --template-spec {template_spec_version_one_id}
ts update -g {rg} -n {template_spec_name} -v 2.0 -f "{tf}" --tags --yes
ts show --template-spec {template_spec_version_two_id}
ts create -g {rg} -n {template_spec_name} -v 3.0 -f "{tf}" --tags --yes
ts show --template-spec {template_spec_version_three_id}
ts show --template-spec {template_spec_id}
ts create -g {rg} -n {template_spec_name} --yes
ts show --template-spec {template_spec_id}
ts delete --template-spec {template_spec_id} --yes
ts create -g {rg} -n {template_spec_name} -v 1.0 -l {resource_group_location} -f "{tf}"
ts update -s {template_spec_id} --display-name {display_name} --description {description} --yes
ts update -s {template_spec_version_id} --version-description {version_description} --yes
ts update -g {rg} -n {template_spec_name} -v 1.0 -f "{tf1}" --ui-form-definition "{uf1}" --yes
ts delete --template-spec {template_spec_id} --yes
deployment sub validate --location WestUS --template-file "{tf}" --parameters @"{params}" --parameters storageAccountName="{storage-account-name}"
deployment sub validate --location WestUS --template-file "{tf}" --parameters "{params_uri}"
deployment sub create -n {dn} --location WestUS --template-file "{tf}" --parameters @"{params}" --parameters storageAccountName="{storage-account-name}"
deployment sub list
deployment sub list --filter "provisioningState eq 'Succeeded'"
deployment sub show -n {dn}
deployment sub export -n {dn}
deployment operation sub list -n {dn}
deployment sub create -n {dn2} --location WestUS --template-file "{tf}" --parameters @"{params}" --parameters storageAccountName="{storage-account-name}" --no-wait
deployment sub cancel -n {dn2}
deployment sub wait -n {dn2} --custom "provisioningState==Canceled"
deployment sub show -n {dn2}
policy assignment delete -n location-lock
policy definition delete -n policy2
group delete -n cli_test_subscription_level_deployment --yes
deployment validate --location WestUS --template-file "{tf}" --parameters @"{params}" --parameters storageAccountName="{storage-account-name}" 
deployment validate --location WestUS --template-file "{tf}" --parameters "{params_uri}"
deployment create -n {dn} --location WestUS --template-file "{tf}" --parameters @"{params}" --parameters storageAccountName="{storage-account-name}" 
deployment list --query "[?name == 'azure-cli-subscription_level_deployment000001']"
deployment list --filter "provisioningState eq 'Succeeded'" --query "[?name == 'azure-cli-subscription_level_deployment000001']"
deployment show -n {dn}
deployment export -n {dn}
deployment operation list -n {dn}
deployment create -n {dn2} --location WestUS --template-file "{tf}" --parameters @"{params}" --parameters storageAccountName="{storage-account-name}" --no-wait
deployment cancel -n {dn2}
deployment show -n {dn2}
policy assignment delete -n location-lock
policy definition delete -n policy2
group delete -n cli_test_subscription_level_deployment --yes
deployment group validate --resource-group {rg} --template-file "{tf}" --parameters @"{params}"
deployment group validate --resource-group {rg} --template-file "{Japanese-characters-tf}"
deployment group validate --resource-group {rg} --template-file "{tf_multiline}" --parameters @"{params}"
deployment group validate --resource-group {rg} --template-file "{extra_param_tf}" --parameters @"{params}" --no-prompt true
deployment group validate --resource-group {rg} --template-file "{extra_param_tf}" --parameters @"{params}"
deployment group validate --resource-group {rg} --template-file "{extra_param_tf}" --parameters @"{params}" --no-prompt false
deployment group create --resource-group {rg} -n {dn} --template-file "{tf}" --parameters @"{params}"
deployment group create --resource-group {rg} -n {dn} --template-file "{tf_multiline}" --parameters @"{params}"
deployment group create --resource-group {rg} -n {dn2} --template-file "{extra_param_tf}" --parameters @"{params}" --no-prompt true
deployment group create --resource-group {rg} -n {dn2} --template-file "{extra_param_tf}" --parameters @"{params}"
deployment group create --resource-group {rg} -n {dn2} --template-file "{extra_param_tf}" --parameters @"{params}" --no-prompt false
deployment group validate -g {rg} -f "{tf_invalid}" -p @"{params}"
deployment group validate -g {rg} -f "{tf}" -p @"{params_invalid}"
deployment group create -g {rg} -n {dn} -f "{tf_invalid}" -p @"{params}"
deployment group create -g {rg} -n {dn} -f "{tf}" -p @"{params_invalid}"
deployment group list --resource-group {rg}
deployment group list --resource-group {rg} --filter "provisioningState eq 'Succeeded'"
deployment group show --resource-group {rg} -n {dn}
deployment group export --resource-group {rg} -n {dn}
deployment operation group list --resource-group {rg} -n {dn}
deployment group create --resource-group {rg} -n {dn2} --template-file "{tf}" --parameters @"{params}" --no-wait
deployment group cancel -n {dn2} -g {rg}
deployment group wait -n {dn2} -g {rg} --custom "provisioningState==Canceled"
deployment group show -n {dn2} -g {rg}
account management-group create --name {mg}
deployment mg validate --management-group-id {mg} --location WestUS --template-file "{tf}" --parameters @"{params}" --parameters targetMG="{mg}" --parameters nestedRG="{sub-rg}" --parameters storageAccountName="{storage-account-name}"
deployment mg create --management-group-id {mg} --location WestUS -n {dn} --template-file "{tf}" --parameters @"{params}" --parameters targetMG="{mg}" --parameters nestedRG="{sub-rg}" --parameters storageAccountName="{storage-account-name}"
deployment mg list --management-group-id {mg}
deployment mg list --management-group-id {mg} --filter "provisioningState eq 'Succeeded'"
deployment mg show --management-group-id {mg} -n {dn}
deployment mg export --management-group-id {mg} -n {dn}
deployment operation mg list --management-group-id {mg} -n {dn}
deployment mg create --management-group-id {mg} --location WestUS -n {dn2} --template-file "{tf}" --parameters @"{params}" --parameters targetMG="{mg}" --parameters nestedRG="{sub-rg}" --parameters storageAccountName="{storage-account-name}" --no-wait
deployment mg cancel -n {dn2} --management-group-id {mg}
deployment mg wait -n {dn2} --management-group-id {mg} --custom "provisioningState==Canceled"
deployment mg show -n {dn2} --management-group-id {mg}
account management-group delete -n {mg}
account management-group create --name {mg}
deployment tenant validate --location WestUS --template-file "{tf}" --parameters targetMG="{mg}"
deployment tenant create --location WestUS -n {dn} --template-file "{tf}" --parameters targetMG="{mg}"
deployment tenant list
deployment tenant list --filter "provisioningState eq 'Succeeded'"
deployment tenant show -n {dn}
deployment tenant export -n {dn}
deployment operation tenant list -n {dn}
deployment tenant create --location WestUS -n {dn2} --template-file "{tf}" --parameters targetMG="{mg}" --no-wait
deployment tenant cancel -n {dn2}
deployment tenant show -n {dn2}
group delete -n cli_tenant_level_deployment --yes
account management-group delete -n {mg}
network vnet create -g {rg} -n vnet1 --subnet-name subnet1
group deployment validate -g {rg} --template-file "{tf}" --parameters @"{params}" --parameters subnetId="{subnet_id}" --parameters backendAddressPools=@"{of}"
group deployment validate -g {rg} --template-file "{tf}" --parameters "{params_uri}" --parameters subnetId="{subnet_id}" --parameters backendAddressPools=@"{of}"
group deployment validate -g {rg} --template-file "{tf}" --parameters @"{error_params}" --parameters subnetId="{subnet_id}" --parameters backendAddressPools=@"{of}"
group deployment create -g {rg} -n {dn} --template-file "{tf}" --parameters @"{params}" --parameters subnetId="{subnet_id}" --parameters backendAddressPools=@"{of}"
network lb show -g {rg} -n test-lb
group deployment list -g {rg}
group deployment list -g {rg} --filter "provisioningState eq 'Succeeded'"
group deployment show -g {rg} -n {dn}
group deployment operation list -g {rg} -n {dn}
group deployment validate -g {rg} -f "{tf_invalid}" -p @"{params}"
group deployment validate -g {rg} -f "{tf}" -p @"{params_invalid}"
group deployment create -g {rg} -n {dn} -f "{tf_invalid}" -p @"{params}"
group deployment create -g {rg} -n {dn} -f "{tf}" -p @"{params_invalid}"
group deployment create -g {rg} -n {dn2} --template-file "{tf}" --parameters @"{params}" --parameters subnetId="{subnet_id}" --parameters backendAddressPools=@"{of}" --no-wait
group deployment cancel -n {dn2} -g {rg}
group deployment show -n {dn2} -g {rg}
group deployment create -g {rg} -n {dn} --template-file "{tf}"
group deployment validate -g {rg} --template-file "{large_tf}" --parameters @"{large_params}"
group deployment validate -g {rg} --template-file "{large_tf}" --parameters "{large_params}"
group deployment create -g {rg} --template-file "{large_tf}" --parameters @"{large_params}" --parameters function-app-name="{app_name}"
group deployment create -g {rg} --template-file "{large_tf}" --parameters "{large_params}" --parameters function-app-name="{app_name}"
group deployment create -g {rg} -n {dn} --template-file "{tf}"
group deployment create -g {rg} -n {sdn} --template-file "{tf}" --rollback-on-error
group deployment create -g {rg} -n {dn} --template-file "{tf}"
group deployment create -g {rg} -n {sdn} --template-file "{tf}" --rollback-on-error {dn}
group deployment create -g {rg} -n {dn} --template-file "{tf}" --parameters @"{params}" --no-wait
group deployment wait -g {rg} -n {dn} --created
group deployment show -g {rg} -n {dn}
group deployment create -g {rg} --template-uri "{tf}" --parameters @"{params}"
group deployment show -g {rg} -n {dn}
group deployment delete -g {rg} -n {dn}
group deployment list -g {rg}
deployment group create -g {rg} --template-uri "{tf}" --parameters @"{params}"
deployment group show -g {rg} -n {dn}
deployment group delete -g {rg} -n {dn}
deployment group list -g {rg}
deployment group create --resource-group {rg} --template-file "{tf}"
deployment group what-if --resource-group {rg} --template-file "{tf}" --parameters "{params}" --no-pretty-print
deployment sub create --location westus --template-file "{tf}"
deployment sub what-if --location westus --template-file "{tf}" --parameters "{params}"
deployment sub what-if --location westus --template-file "{tf}" --parameters "{params}" --no-pretty-print
account management-group create --name {mg}
deployment mg what-if --management-group-id {mg} --location WestUS --template-file "{tf}" --no-pretty-print --parameters @"{params}" --parameters targetMG="{mg}" --parameters nestedRG="{sub-rg}" --parameters storageAccountName="{storage-account-name}"
account management-group create --name {mg}
deployment tenant what-if --location WestUS --template-file "{tf}" --parameters targetMG="{mg}" --no-pretty-print
ts create -g {rg} -n {template_spec_name} -v 1.0 -l {resource_group_location} -f "{tf}"
deployment group create --resource-group {rg} --template-spec "{template_spec_version_id}"
deployment group what-if --resource-group {rg} --template-spec "{template_spec_version_id}" --parameters "{params}" --no-pretty-print
ts create -g {rg} -n {template_spec_name} -v 1.0 -l {resource_group_location} -f "{tf}"
deployment sub create --location westus --template-spec {template_spec_version_id}
deployment sub what-if --location westus --template-spec {template_spec_version_id} --parameters "{params}" --no-pretty-print
deployment group create -g {resource_group} -n {deployment_name} --template-file "{template_file}" --parameters scriptName={deployment_script_name}
deployment-scripts show --resource-group {resource_group} --name {deployment_script_name}
deployment-scripts delete --resource-group {resource_group} --name {deployment_script_name} --yes
deployment-scripts list
deployment-scripts list
deployment group create -g {resource_group} -n {deployment_name} --template-file "{template_file}" --parameters scriptName={deployment_script_name}
deployment-scripts list
deployment group create -g {resource_group} -n {deployment_name} --template-file "{template_file}" --parameters scriptName={deployment_script_name}
deployment-scripts show --resource-group {resource_group} --name {deployment_script_name}
deployment group create -g {resource_group} -n {deployment_name} --template-file "{template_file}" --parameters scriptName={deployment_script_name}
deployment-scripts show-log --resource-group {resource_group} --name {deployment_script_name}
ts create -g {rg} -n {template_spec_name} -v 1.0 -l {resource_group_location} -f "{tf}"
deployment sub validate --location WestUS --template-spec {template_spec_version_id} --parameters "{params_uri}"  --parameters storageAccountName="{storage-account-name}"
deployment sub create -n {dn} --location WestUS --template-spec {template_spec_version_id} --parameters @"{params}" --parameters storageAccountName="{storage-account-name}"
deployment sub show -n {dn}
deployment sub export -n {dn}
deployment operation sub list -n {dn}
deployment sub create -n {dn2} --location WestUS --template-spec "{template_spec_version_id}" --parameters @"{params}" --no-wait
deployment sub cancel -n {dn2}
deployment sub show -n {dn2}
ts delete --template-spec {template_spec_id} --yes
ts create -g {rg} -n {template_spec_name} -v 1.0 -l {resource_group_location} -f "{tf}"
deployment group validate --resource-group {rg} --template-spec "{template_spec_version_id}" --parameters @"{params}"
deployment group create --resource-group {rg} -n {dn} --template-spec "{template_spec_version_id}" --parameters @"{params}"
deployment group list --resource-group {rg}
deployment group list --resource-group {rg} --filter "provisioningState eq 'Succeeded'"
deployment group show --resource-group {rg} -n {dn}
deployment group export --resource-group {rg} -n {dn}
deployment operation group list --resource-group {rg} -n {dn}
deployment group create --resource-group {rg} -n {dn2} --template-spec "{template_spec_version_id}" --parameters @"{params}" --no-wait
deployment group cancel -n {dn2} -g {rg}
deployment group show -n {dn2} -g {rg}
network nsg create -n {nsg1} -g {rg1}
network nsg create -n {nsg2} -g {rg1}
resource move --ids {nsg1_id} {nsg2_id} --destination-group {rg2}
network nsg show -g {rg2} -n {nsg1}
network nsg show -g {rg2} -n {nsg2}
feature list
feature list --namespace Microsoft.Network
feature show --namespace Microsoft.Network -n AllowLBPreview
feature registration create --namespace Microsoft.Network --name AllowLBPreview
feature registration delete --namespace Microsoft.Network --name AllowLBPreview --yes
feature registration list
feature registration show --provider-namespace Microsoft.Network -n AllowLBPreview
feature unregister --namespace Microsoft.Network --name AllowLBPreview
policy definition create -n {pn} --rules "{rf}" --params "{pdf}" --display-name {pdn} --description {desc} --mode {mode} --metadata category={metadata}
policy definition update -n {pn} --description {desc} --display-name {pdn} --metadata category={updated_metadata}
policy definition update -n {pn} --description {desc} --display-name {pdn} --metadata category=test2 --params "{pdf}" --rules "{rf}"
policy definition list
policy definition show -n {pn}
policy assignment create --policy {pn} -n {pan} --display-name {padn} -g {rg} --params "{params}" --description "Policy description" --not-scopes "invalid"
policy assignment create --policy {pn} -n {pan} --display-name {padn} -g {rg} --params "{params}" --description "Policy description"
policy assignment create --policy {pn} -n {pan} --display-name {padn} -g {rg} --not-scopes {notscope} --params "{params}"
policy assignment update -n {pan} -g {rg} --not-scopes "{notscope} {notscope2}" --params "{params}"
policy assignment create --policy {bip} -n {pan2} --display-name {padn} -g {rg}
policy assignment delete -n {pan2} -g {rg}
policy assignment list
policy assignment list --disable-scope-strict-match
policy assignment delete -n {pan} -g {rg}
policy assignment list --disable-scope-strict-match
policy definition delete -n {pn}
policy definition list
policy assignment create --policy 'test/error_policy' -n {pan} -g {rg} --location {location} --assign-identity --enforcement-mode {em}
policy assignment create --policy {bip} -n {pan} -g {rg} --location {location} --assign-identity --enforcement-mode {em}
policy assignment identity show -n {pan} -g {rg}
policy assignment update -n {pan} -g {rg} --description "New description"
policy assignment identity remove -n {pan} -g {rg}
policy assignment show -n {pan} -g {rg}
policy assignment identity assign -n {pan} -g {rg}
policy assignment show -n {pan} -g {rg}
policy assignment identity remove -n {pan} -g {rg}
policy assignment create --policy {bip} -n {pan} -g {rg} --location {location} --assign-identity --identity-scope {idScope} --role {idRole}
role assignment list --resource-group {rg} --role {idRole}
policy assignment identity remove -n {pan} -g {rg}
policy assignment identity assign -n {pan} -g {rg} --identity-scope {idScope} --role {idRole}
role assignment list --resource-group {rg} --role {idRole}
policy assignment delete -n {pan} -g {rg}
policy assignment create --policy {bip} -n {pan} -g {rg} --location {location} --mi-system-assigned --enforcement-mode {em}
policy assignment identity show -n {pan} -g {rg}
policy assignment update -n {pan} -g {rg} --description "New description"
policy assignment identity remove -n {pan} -g {rg}
policy assignment show -n {pan} -g {rg}
policy assignment identity assign --system-assigned -n {pan} -g {rg}
policy assignment show -n {pan} -g {rg}
policy assignment identity remove -n {pan} -g {rg}
policy assignment create --policy {bip} -n {pan} -g {rg} --location {location} --mi-system-assigned --identity-scope {idScope} --role {idRole}
role assignment list --resource-group {rg} --role {idRole}
policy assignment identity remove -n {pan} -g {rg}
policy assignment identity assign -n {pan} -g {rg} --system-assigned --identity-scope {idScope} --role {idRole}
role assignment list --resource-group {rg} --role {idRole}
policy assignment delete -n {pan} -g {rg}
identity create -g {rg} -n {msi} --tags tag1=d1
policy assignment create --policy {bip} -n {pan} -g {rg} --location {location} --mi-user-assigned {msi} --enforcement-mode {em}
policy assignment identity show -n {pan} -g {rg}
policy assignment update -n {pan} -g {rg} --description "New description"
policy assignment identity remove -n {pan} -g {rg}
policy assignment show -n {pan} -g {rg}
policy assignment identity assign --user-assigned {fullQualifiedMsi} -n {pan} -g {rg}
policy assignment show -n {pan} -g {rg}
policy assignment identity assign --system-assigned -n {pan} -g {rg}
policy assignment show -n {pan} -g {rg}
policy assignment identity remove -n {pan} -g {rg}
policy assignment delete -n {pan} -g {rg}
account management-group create -n cli-test-mgmt-group000002
policy definition create -n {pn} --rules "{rf}" --params "{pdf}" --display-name {pdn} --description {desc} --mode {mode} --metadata category={metadata} --management-group {mg}
policy definition update -n {pn} --description {desc} --display-name {pdn} --metadata category={updated_metadata} --management-group {mg}
policy definition update -n {pn} --description {desc} --display-name {pdn} --metadata category=test2 --params "{pdf}" --rules "{rf}" --management-group {mg}
policy definition list --management-group {mg}
policy definition show -n {pn} --management-group {mg}
policy assignment create --policy {pol} -n {pan} --display-name {padn} --params "{params}" --scope {scope} --enforcement-mode {em}
policy assignment list --scope {scope}
policy assignment delete -n {pan} --scope {scope}
policy assignment list --disable-scope-strict-match
policy definition delete -n {pn} --management-group {mg}
policy definition list --management-group {mg}
policy definition show -n "/providers/microsoft.management/managementgroups/myMg/providers/microsoft.authorization/missingsegment"
account management-group delete -n cli-test-mgmt-group000002
policy assignment create -d {bip} -n {pan} -g {rg} --enforcement-mode {em}
policy assignment non-compliance-message list -n {pan} -g {rg}
policy assignment non-compliance-message create -n {pan} -g {rg} -m "General message"
policy assignment non-compliance-message create -n {pan} -g {rg} -m "Specific message" -r {drid}
policy assignment non-compliance-message list -n {pan} -g {rg}
policy assignment show -n {pan} -g {rg}
policy assignment update -n {pan} -g {rg} --description "New description"
policy assignment non-compliance-message delete -n {pan} -g {rg} -m "Unknown message"
policy assignment non-compliance-message delete -n {pan} -g {rg} -m "Specific message"
policy assignment non-compliance-message delete -n {pan} -g {rg} -m "General message"
policy assignment non-compliance-message delete -n {pan} -g {rg} -m "Specific message" -r {drid}
policy assignment non-compliance-message list -n {pan} -g {rg}
policy assignment delete -n {pan} -g {rg}
policy definition create -n {pn} --rules "{rf}" --params "{pdf}" --display-name {pdn} --description {desc}
policy definition create -n {dpn} --rules "{dprf}" --mode {dp_mode} --display-name {dpdn} --description {dp_desc}
policy set-definition create -n {psn} --definitions @"{psf}" --display-name {psdn}
policy assignment create -d clitest000006 -n clitest000008 -g cli_test_policyexemption000001 --display-name clitest000009
policy assignment list --resource-group {rg}
policy exemption create -n clitest000010 -a /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_policyexemption000001/providers/Microsoft.Authorization/policyAssignments/clitest000008 -e waiver -g cli_test_policyexemption000001 --display-name clitest000011 --description desc_for_clitest_policyexemption_123 --metadata category=test
policy exemption list --resource-group {rg}
policy exemption update -n clitest000010 -e mitigated -g cli_test_policyexemption000001 -r 3567663991096992642 --expires-on 3021-04-05T00:45:13+00:00 --display-name clitest000011_new --description desc_for_clitest_policyexemption_123_new --metadata category=test2
policy exemption show -n clitest000010 -g cli_test_policyexemption000001
policy exemption delete -n clitest000010 -g cli_test_policyexemption000001
policy assignment delete -n clitest000008 -g cli_test_policyexemption000001
policy exemption list
policy set-definition list
policy set-definition show -n {psn}
policy set-definition delete -n {psn}
policy set-definition list
policy definition delete -n {pn}
policy definition delete -n {dpn}
policy definition list
policy definition list
account management-group create -n cli-test-mgmt-group000002
policy definition create -n {pn} --rules "{rf}" --params "{pdf}" --display-name {pdn} --description {desc} --management-group {mg}
policy definition create -n {dpn} --rules "{dprf}" --mode {dp_mode} --display-name {dpdn} --description {dp_desc} --management-group {mg}
policy set-definition create -n {psn} --definitions @"{psf}" --display-name {psdn} --management-group {mg}
policy assignment create -d /providers/Microsoft.Management/managementGroups/cli-test-mgmt-group000002/providers/Microsoft.Authorization/policySetDefinitions/clitest000007 -n clitest000009 --scope /providers/Microsoft.Management/managementGroups/cli-test-mgmt-group000002 --display-name clitest000010
policy exemption create -n clitest000011 -a /providers/Microsoft.Management/managementGroups/cli-test-mgmt-group000002/providers/Microsoft.Authorization/policyAssignments/clitest000009 -e waiver --scope /providers/Microsoft.Management/managementGroups/cli-test-mgmt-group000002 --display-name clitest000012 --description desc_for_clitest_policyexemption_123 --metadata category=test
policy exemption list --scope /providers/Microsoft.Management/managementGroups/cli-test-mgmt-group000002
policy exemption update -n clitest000011 -e mitigated --scope /providers/Microsoft.Management/managementGroups/cli-test-mgmt-group000002 -r 13661170549606573459 --expires-on 3021-04-05T00:45:13+00:00 --display-name clitest000012_new --description desc_for_clitest_policyexemption_123_new --metadata category=test2
policy exemption show -n clitest000011 --scope /providers/Microsoft.Management/managementGroups/cli-test-mgmt-group000002
policy exemption delete -n clitest000011 --scope /providers/Microsoft.Management/managementGroups/cli-test-mgmt-group000002
policy assignment delete -n clitest000009 --scope /providers/Microsoft.Management/managementGroups/cli-test-mgmt-group000002
policy exemption list --disable-scope-strict-match
policy assignment list --disable-scope-strict-match
policy set-definition list --management-group {mg}
policy set-definition show -n {psn} --management-group {mg}
policy set-definition delete -n {psn} --management-group {mg}
policy set-definition list --management-group {mg}
policy definition delete -n {pn} --management-group {mg}
policy definition delete -n {dpn} --management-group {mg}
policy definition list --management-group {mg}
policy definition list --management-group {mg}
account management-group delete -n cli-test-mgmt-group000002
policy definition create -n {pn} --rules "{rf}" --params "{pdf}" --display-name {pdn} --description {desc}
policy definition create -n {dpn} --rules "{dprf}" --mode {dp_mode} --display-name {dpdn} --description {dp_desc}
policy set-definition create -n {psn} --definitions @"{psf}" --display-name {psdn} --description {ps_desc} --metadata category={metadata}
policy set-definition update -n {psn} --display-name {psdn} --description {ps_desc} --metadata category={updated_metadata}
policy set-definition list
policy set-definition show -n {psn}
policy assignment create -d {psn} -n {pan} --display-name {padn} -g {rg}
policy assignment list --resource-group {rg}
policy assignment delete -n {pan} -g {rg}
policy assignment list --disable-scope-strict-match
policy set-definition delete -n {psn}
policy set-definition list
policy set-definition create -n {psn} --definitions @"{psf}" --display-name {psdn} --description {ps_desc} --params "{pdf}" --metadata category={updated_metadata}
policy set-definition update -n {psn} --params "{pdf}" --metadata category={updated_metadata}
policy set-definition delete -n {psn}
policy set-definition list
policy definition delete -n {pn}
policy definition delete -n {dpn}
policy definition list
policy definition list
policy definition create -n {pn} --rules "{rf}" --params "{pdf}" --display-name {pdn}
policy set-definition create -n {psn} --definitions @"{psf}" --display-name {psdn} --definition-groups @"{pgf}"
policy set-definition update -n {psn} --definition-groups @"{pgf2}"
policy set-definition show -n {psn}
policy set-definition delete -n {psn}
policy set-definition list
policy definition delete -n {pn}
account management-group create -n cli-test-mgmt-group000002
policy definition create -n {pn} --rules "{rf}" --params "{pdf}" --display-name {pdn} --description {desc} --management-group {mg}
policy definition create -n {dpn} --rules "{dprf}" --mode {dp_mode} --display-name {dpdn} --description {dp_desc} --management-group {mg}
policy set-definition create -n {psn} --definitions @"{psf}" --display-name {psdn} --description {ps_desc} --metadata category={metadata} --management-group {mg}
policy set-definition update -n {psn} --display-name {psdn} --description {ps_desc} --metadata category={updated_metadata} --management-group {mg}
policy set-definition list --management-group {mg}
policy set-definition show -n {psn} --management-group {mg}
policy set-definition delete -n {psn} --management-group {mg}
policy set-definition list --management-group {mg}
policy set-definition create -n {psn} --definitions @"{psf}" --display-name {psdn} --description {ps_desc} --params "{pdf}" --metadata category={updated_metadata} --management-group {mg}
policy set-definition update -n {psn} --params "{pdf}" --metadata category={updated_metadata} --management-group {mg}
policy set-definition delete -n {psn} --management-group {mg}
policy set-definition list --management-group {mg}
policy definition delete -n {pn} --management-group {mg}
policy definition delete -n {dpn} --management-group {mg}
policy definition list --management-group {mg}
policy definition list --management-group {mg}
account management-group delete -n cli-test-mgmt-group000002
policy definition create -n {pn} --rules "{rf}" --params "{pdf}" --display-name {pdn} --description {desc} --subscription {sub}
policy definition create -n {dpn} --rules "{dprf}" --mode {dp_mode} --display-name {dpdn} --description {dp_desc} --subscription {sub}
policy set-definition create -n {psn} --definitions @"{psf}" --display-name {psdn} --description {ps_desc} --metadata category={metadata} --subscription {sub}
policy set-definition update -n {psn} --display-name {psdn} --description {ps_desc} --metadata category={updated_metadata} --subscription {sub}
policy set-definition list --subscription {sub}
policy set-definition show -n {psn} --subscription {sub}
policy set-definition delete -n {psn} --subscription {sub}
policy set-definition list --subscription {sub}
policy set-definition create -n {psn} --definitions @"{psf}" --display-name {psdn} --description {ps_desc} --params "{pdf}" --metadata category={updated_metadata} --subscription {sub}
policy set-definition update -n {psn} --params "{pdf}" --metadata category={updated_metadata} --subscription {sub}
policy set-definition delete -n {psn} --subscription {sub}
policy set-definition list --subscription {sub}
policy definition delete -n {pn} --subscription {sub}
policy definition delete -n {dpn} --subscription {sub}
policy definition list --subscription {sub}
policy definition list --subscription {sub}
policy definition list --query "[?policyType=='BuiltIn']"
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
policy definition show -n {pn}
ad user create --display-name tester123 --password Test123456789 --user-principal-name {upn}
role assignment create --assignee {upn} --role contributor --scope "/subscriptions/{sub}" 
managedapp definition create -n {adn} --package-file-uri {uri} --display-name {addn} --description {ad_desc} -l {loc} -a {auth} --lock-level {lock} -g {rg}
managedapp definition update -n {adn} --package-file-uri {uri} --display-name {addn} --description {new_ad_desc} -l {loc} -a {auth} --lock-level {lock} -g {rg}
managedapp definition list -g {rg}
managedapp definition show --ids {ad_id}
managedapp definition delete -g {rg} -n {adn}
managedapp definition list -g {rg}
role assignment delete --assignee {upn} --role contributor 
ad user delete --upn-or-object-id {upn}
ad user create --display-name tester123 --password Test123456789 --user-principal-name {upn}
role assignment create --assignee {upn} --role contributor --scope "/subscriptions/{sub}" 
managedapp definition create -n {adn} --create-ui-definition @"{ui_file}" --main-template @"{main_file}" --display-name {addn} --description {ad_desc} -l {loc} -a {auth} --lock-level {lock} -g {rg}
managedapp definition list -g {rg}
managedapp definition show --ids {ad_id}
managedapp definition delete -g {rg} -n {adn}
managedapp definition list -g {rg}
role assignment delete --assignee {upn} --role contributor 
ad user delete --upn-or-object-id {upn}
ad user create --display-name tester123 --password Test123456789 --user-principal-name {upn}
role assignment create --assignee {upn} --role contributor --scope "/subscriptions/{sub}" 
managedapp definition create -n {adn} --package-file-uri {uri} --display-name {addn} --description {ad_desc} -l {loc} -a {auth} --lock-level {lock} -g {rg}
managedapp create -n {man} -g {rg} -l {ma_loc} --kind {ma_kind} -m {ma_rg_id} -d {ad_id} --parameters {param} --tags "key=val" 
managedapp list -g {rg}
managedapp show --ids {ma_id}
managedapp delete -g {rg} -n {man}
managedapp list -g {rg}
role assignment delete --assignee {upn} --role contributor 
ad user delete --upn-or-object-id {upn}
group deployment validate -g {rg1} --template-file "{tf}" --parameters CrossRg={rg2} StorageAccountName1={sa1} StorageAccountName2={sa2}
group deployment validate -g {rg1} --template-file "{tf}" --parameters CrossRg=SomeRandomRG StorageAccountName1={sa1} StorageAccountName2={sa2}
group deployment create -g {rg1} -n {dn} --template-file "{tf}" --parameters CrossRg={rg2}
group deployment list -g {rg1}
group deployment show -g {rg1} -n {dn}
group deployment operation list -g {rg1} -n {dn}
vm create -g {rg} -n {vm} --use-unmanaged-disk --image UbuntuLTS --admin-username {user} --admin-password {pass} --authentication-type password --nsg-rule None
resource invoke-action --action powerOff --ids {vm_id}
resource invoke-action --action generalize --ids {vm_id}
resource invoke-action --action deallocate --ids {vm_id}
resource invoke-action --action capture --ids {vm_id} --request-body {request_body}
network vnet create -g {rg} -n {vnet}
network vnet show --subscription fakesub --resource-group fakerg -n fakevnet --ids {vnet_id}
local-context on
group create -n {group1} -l {location}
group show
group delete
group delete -n {group1} -y
group create -n {group2}
group delete -n {group2} -y
local-context off
local-context delete --all --purge -y
bicep list-versions
ad app create --display-name {display_name} --available-to-other-tenants true
ad app create --display-name {display_name} --available-to-other-tenants false
ad app delete --id 4c7aa4b1-654c-4e69-adc5-f8f7cf4a6b1f
ad app create --display-name {native_app_name} --native-app --required-resource-accesses '{required_access}'
ad app create --display-name {native_app_name} --key-value {cert_file}
ad app update --id {id} --required-resource-accesses '{required_access2}'
ad app show --id {id}
ad sp create-for-rbac -n {display_name} --skip-assignment
ad app show --id {app_id}
ad app list --app-id {app_id}
ad app list
ad app list --show-mine
ad sp show --id {app_id}
ad sp list --spn {app_id}
ad sp credential reset -n {app_id}
ad sp delete --id {app_id}
ad sp list --spn {app_id}
ad app list --app-id {app_id}
ad sp list
ad sp list --show-mine
ad sp show --id non-exist-sp-name
ad app create --display-name {web_app_name} --available-to-other-tenants true
ad app show --id non-exist-identifierUris
ad app create --display-name {name1} --optional-claims '{optional_claims}'
ad app create --display-name {name2}
ad app update --id {app_id} --optional-claims '{optional_claims}'
ad app show --id {app_id}
ad app create --display-name {name} --homepage {app} --identifier-uris {app}
ad app credential reset --id {app} --append --password "test" --years 2
ad app show --id {app}
ad app show --id {app_id}
ad app list --display-name {name}
ad app update --id {app} --reply-urls {reply_uri}
ad app show --id {app}
ad app update --id {app} --add replyUrls {reply_uri2}
ad app show --id {app}
ad app update --id {app} --remove replyUrls 1
ad app show --id {app}
ad app update --id {app} --display-name {name2}
ad app show --id {app}
ad app update --id {app} --homepage {homepage2}
ad app show --id {app}
ad app update --id {app} --set oauth2AllowUrlPathMatching=true
ad app show --id {app}
ad app update --id {app} --app-roles '{app_roles}'
ad app show --id {app}
ad app delete --id {app}
ad app list --identifier-uri {app}
ad sp create-for-rbac -n {display_name}
ad sp create-for-rbac -n {display_name}
ad sp list --spn {app_id}
role assignment list --assignee {app_id}
ad sp delete --id {app_id}
ad sp create-for-rbac -n {display_name}
ad sp list --spn {app_id}
ad app list --app-id {app_id}
role assignment list --assignee {app_id}
ad sp delete --id {app_id}
role assignment list --all
ad sp list --spn {app_id}
ad app list --app-id {app_id}
account show
ad group create --display-name {group} --mail-nickname {group}
ad group create --display-name {group} --mail-nickname {group}
ad group list
ad group delete -g {group}
ad user create --display-name {user1} --password {pass} --user-principal-name {user1}@{domain}
ad user update --display-name {user1}_new --account-enabled false --id {user1}@{domain} --mail-nickname {new_mail_nick_name}
ad user show --upn-or-object-id {user1}@{domain}
ad user update --id {user1}@{domain} --password {pass}
ad user update --id {user1}@{domain} --password {pass} --force-change-password-next-login true
ad user update --id {user1}@{domain} --force-change-password-next-login false
ad user create --display-name {user2} --password {pass} --user-principal-name {user2}@{domain}
ad group create --display-name {group} --mail-nickname {group} --description {group}
ad group member add -g {group} --member-id {user1_id}
ad group member add -g {group} --member-id {user2_id}
ad user get-member-groups --upn-or-object-id {user1_id}
ad group show -g {group}
ad group show -g {group}
ad group list --display-name {group}
ad group get-member-groups -g {group}
ad group member check -g {group} --member-id {user1_id}
ad group member check -g {group} --member-id {user2_id}
ad group member list -g {group}
ad group member remove -g {group} --member-id {user1_id}
ad group member check -g {group} --member-id {user1_id}
ad group delete -g {group}
ad group list
ad user delete --upn-or-object-id {user1_id}
ad user delete --upn-or-object-id {user2_id}
ad group delete -g {group}
account show
ad group create --display-name {group1} --mail-nickname {group1}
ad group create --display-name {group11} --mail-nickname {group11}
ad group create --display-name {prefix_group} --mail-nickname {prefix_group}
ad group show --group {group1}
ad group show --group {group11}
ad group show --group {prefix}
ad group delete -g {group1}
ad group delete -g {group11}
ad group delete -g {prefix}
ad user show --upn-or-object-id {owner}
ad sp create-for-rbac -n {display_name} --skip-assignment
ad app owner add --owner-object-id {owner_object_id} --id {app_id}
ad app owner add --owner-object-id {owner_object_id} --id {app_id}
ad app owner list --id {app_id}
ad app owner remove --owner-object-id {owner_object_id} --id {app_id}
ad app owner list --id {app_id}
ad sp delete --id {app_id}
ad user show --upn-or-object-id {owner}
ad group create --display-name {group} --mail-nickname {group}
ad group owner add -g {group_object_id} --owner-object-id {owner_object_id}
ad group owner add -g {group_object_id} --owner-object-id {owner_object_id}
ad group owner list -g {group_object_id}
ad group delete -g 973e7589-b9e7-49b7-a41a-f9a7e054d41d
ad sp create-for-rbac --name {display_name} --skip-assignment
ad sp credential list --id {app_id}
ad sp credential reset -n {app_id} --password {test_pwd} --append --credential-description newCred1
ad sp credential list --id {app_id}
ad sp credential delete --id {app_id} --key-id 7aeb1555-b9f3-44c1-b264-42b517a46e95
ad sp credential list --id {app_id}
ad app credential list --id {app_id}
ad app credential reset --id {app_id} --password {test_pwd} --append --credential-description newCred2
ad app credential list --id {app_id}
ad app credential delete --id {app_id} --key-id d121d5a6-770c-41d8-a256-bb4ff99f5625
ad app credential list --id {app_id}
ad sp credential reset -n {app_id} --password {test_pwd} --end-date "2100-12-31T11:59:59+00:00" --credential-description newCred3
ad app credential reset --id {app_id} --password {test_pwd} --end-date "2100-12-31" --credential-description newCred4
ad app update --id {app_id} --set groupMembershipClaims=All
ad app show --id {app_id}
ad sp update --id {app_id} --set appRoleAssignmentRequired=true
ad sp show --id {app_id}
ad sp create-for-rbac --name {display_name2} --skip-assignment --years 10
ad sp credential list --id {app_id2}
ad app delete --id {app_id}
ad app delete --id {app_id2}
ad sp create-for-rbac --name {display_name} --skip-assignment
ad app permission add --id {app_id} --api {ad_graph_resource} --api-permissions {ad_target_api}=Scope {ad_target_api2}=Scope
ad app permission add --id {app_id} --api {ms_graph_resource} --api-permissions {ms_target_api}=Scope {ms_target_api2}=Scope
ad app permission list --id {app_id}
ad app permission delete --id {app_id} --api {ms_graph_resource} --api-permissions {ms_target_api}
ad app permission list --id {app_id}
ad app permission delete --id {app_id} --api {ms_graph_resource} --api-permissions {ms_target_api2}
ad app permission list --id {app_id}
ad app permission add --id {app_id} --api {ms_graph_resource} --api-permissions {ms_target_api}=Scope {ms_target_api2}=Scope
ad app permission delete --id {app_id} --api {ms_graph_resource} --api-permissions {ms_target_api} {ms_target_api2}
ad app permission list --id {app_id}
ad app permission delete --id {app_id} --api {ad_graph_resource}
ad app permission list --id {app_id}
ad app permission delete --id {app_id} --api 11111111-0000-0000-c000-000000000000
ad app permission list --id {app_id}
ad app permission delete --id {app_id} --api 11111111-0000-0000-c000-000000000000 --api-permissions {ms_target_api} {ms_target_api2}
ad app permission list --id {app_id}
ad app permission add --id {app_id} --api {ms_graph_resource} --api-permissions {ms_target_api}=Scope {ms_target_api2}=Scope
ad app permission delete --id {app_id} --api {ms_graph_resource} --api-permissions 22222222-0000-0000-c000-000000000000
ad app permission list --id {app_id}
ad app delete --id 066d25bf-13d9-4e34-b031-a24f1f196f8a
ad sp create-for-rbac --name {display_name} --skip-assignment
ad app permission add --id {app_id} --api {graph_resource} --api-permissions {target_api}=Scope
ad app permission grant --id {app_id} --api {graph_resource}
ad app permission list --id {app_id}
ad app permission list-grants --id {app_id}
ad app permission list-grants --id {app_id} --show-resource-name
ad app permission add --id {app_id} --api {graph_resource} --api-permissions {target_api2}=Scope
ad app permission grant --id {app_id} --api {graph_resource}
ad app permission delete --id {app_id} --api {graph_resource}
ad app permission list --id {app_id}
ad app delete --id e2322d30-1da0-4f6a-ab73-d0233521feea
ad sp create-for-rbac -n {display_name} --skip-assignment
ad app create --display-name {display_name_new} --password {gen_password}
ad app delete --id {app_id}
ad app delete --id {sp_new}
ad sp create-for-rbac -n {display_name} --skip-assignment
ad app delete --id {app_id}
ad sp create-for-rbac -n {display_name} --scopes {scope} {scope}/resourceGroups/{rg}
role assignment list --assignee {app_id} --scope {scope}
role assignment list --assignee {app_id} -g {rg}
role assignment delete --assignee {app_id} -g {rg}
role assignment delete --assignee {app_id}
ad app delete --id {app_id}
ad sp create-for-rbac -n {display_name} --scopes {scope} {scope}/resourceGroups/{rg} --create-cert
ad sp credential reset -n {app_id} --create-cert
ad app delete --id {app_id}
ad sp create-for-rbac --scopes {scope}/resourceGroups/{rg} --create-cert --keyvault {kv} --cert {cert} -n {display_name}
keyvault certificate show --vault-name {kv} -n {cert}
ad sp credential reset -n {app_id} --create-cert --keyvault {kv} --cert {cert}
keyvault certificate show --vault-name {kv} -n {cert}
ad app delete --id {app_id}
keyvault certificate get-default-policy
keyvault certificate create --vault-name {kv} -n {cert} -p "{policy}" --validity 24
ad sp create-for-rbac -n {display_name} --keyvault {kv} --cert {cert} --scopes {scope}/resourceGroups/{rg}
ad sp credential reset -n {app_id} --keyvault {kv} --cert {cert}
ad app delete --id {app_id}
keyvault certificate create --vault-name {kv} -n {cert} -p "{policy}" --validity 6
ad sp create-for-rbac --scopes {scope}/resourceGroups/{rg} --keyvault {kv} --cert {cert} -n {display_name2}
ad sp credential reset -n {app_id2} --keyvault {kv} --cert {cert}
ad app delete --id {app_id2}
role definition create --role-definition {template}
role definition list -n {role}
role definition list -n {role}
role definition list -n {role}
role definition list -n {role}
role definition list -n {role}
role definition list -n {role}
role definition list -n {role}
role definition list -n {role}
role definition list -n {role}
role definition update --role-definition {template}
role definition delete -n {role}
role definition list -n {role}
role definition list -n {role}
account show
ad user create --display-name tester123 --password Test123456789 --user-principal-name {upn}
role assignment create --assignee {upn} --role contributor -g {rg}
role assignment list-changelogs --start-time 2020-09-17T07:35:29Z --end-time 2020-09-17T07:37:29Z
role assignment list-changelogs --start-time 2020-09-17T07:35:29Z --end-time 2020-09-17T07:37:29Z
role assignment list-changelogs --start-time 2020-09-17T07:35:29Z --end-time 2020-09-17T07:37:29Z
role assignment list-changelogs --start-time 2020-09-17T07:35:29Z --end-time 2020-09-17T07:37:29Z
role assignment list-changelogs --start-time 2020-09-17T07:35:29Z --end-time 2020-09-17T07:37:29Z
role assignment list-changelogs --start-time 2020-09-17T07:35:29Z --end-time 2020-09-17T07:37:29Z
role assignment list-changelogs --start-time 2020-09-17T07:35:29Z --end-time 2020-09-17T07:37:29Z
ad user delete --upn-or-object-id {upn}
account show
ad user create --display-name tester123 --password Test123456789 --user-principal-name {upn}
role assignment create --assignee-object-id {object_id} --assignee-principal-type User --role reader -g {rg} --description "{description}" --condition "{condition}" --condition-version {condition_version}
role assignment delete -g {rg}
role assignment create --assignee-object-id {object_id} --assignee-principal-type User --role reader -g {rg} --description "{description}" --condition "{condition}"
role assignment delete -g {rg}
role assignment create --assignee-object-id {object_id} --assignee-principal-type User --role reader -g {rg} --condition-version {condition_version}
role assignment create --assignee-object-id {object_id} --assignee-principal-type User --role reader -g {rg} --description "{description}" --condition "{condition}" --condition-version {condition_version}
role assignment update --role-assignment '{{"canDelegate": null, "condition": "@Resource[Microsoft.Storage/storageAccounts/blobServices/containers:Name] stringEquals '"'"'foo'"'"'", "conditionVersion": "2.0", "description": "Some updated description.", "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_role_assign000001/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000003", "name": "88888888-0000-0000-0000-000000000003", "principalId": "8cbeeffa-bf11-4f90-b401-311350e3cd99", "principalType": "User", "resourceGroup": "cli_role_assign000001", "roleDefinitionId": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/acdd72a7-3385-48ef-bd42-f606fba81ae7", "scope": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_role_assign000001", "type": "Microsoft.Authorization/roleAssignments"}}'
role assignment update --role-assignment '{{"canDelegate": null, "condition": "@Resource[Microsoft.Storage/storageAccounts/blobServices/containers:Name] stringEquals '"'"'foo'"'"'", "conditionVersion": "1.0", "description": "Some updated description.", "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_role_assign000001/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000003", "name": "88888888-0000-0000-0000-000000000003", "principalId": "8cbeeffa-bf11-4f90-b401-311350e3cd99", "principalType": "User", "resourceGroup": "cli_role_assign000001", "roleDefinitionId": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/acdd72a7-3385-48ef-bd42-f606fba81ae7", "scope": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_role_assign000001", "type": "Microsoft.Authorization/roleAssignments"}}'
role assignment delete -g {rg}
ad user delete --upn-or-object-id {upn}
account show
ad user create --display-name tester123 --password Test123456789 --user-principal-name {upn}
role assignment create --assignee-object-id {object_id} --assignee-principal-type {principal_type} --role Reader -g {rg}
role assignment list -g {rg}
role assignment delete -g {rg}
role assignment list -g {rg}
role assignment create --assignee-object-id {object_id} --role Reader -g {rg}
role assignment list -g {rg}
role assignment delete -g {rg}
role assignment list -g {rg}
role assignment create --assignee-object-id {object_id} --role Reader -g {rg}
role assignment list -g {rg}
role assignment delete -g {rg}
role assignment list -g {rg}
ad user delete --upn-or-object-id {upn}
ad group create --display-name {group_name} --mail-nickname {group_name}
role assignment create --assignee-object-id {object_id} --assignee-principal-type {principal_type} --role Reader -g {rg}
role assignment list -g {rg}
role assignment delete -g {rg}
role assignment list -g {rg}
role assignment create --assignee-object-id {object_id} --role Reader -g {rg}
role assignment list -g {rg}
role assignment delete -g {rg}
role assignment list -g {rg}
role assignment create --assignee-object-id {object_id} --role Reader -g {rg}
role assignment list -g {rg}
role assignment delete -g {rg}
role assignment list -g {rg}
ad group delete --group {object_id}
ad sp create-for-rbac --skip-assignment --name {sp_name}
ad sp show --id {app_id}
role assignment create --assignee-object-id {object_id} --assignee-principal-type {principal_type} --role Reader -g {rg}
role assignment list -g {rg}
role assignment delete -g {rg}
role assignment list -g {rg}
role assignment create --assignee-object-id {object_id} --role Reader -g {rg}
role assignment list -g {rg}
role assignment delete -g {rg}
role assignment list -g {rg}
role assignment create --assignee-object-id {object_id} --role Reader -g {rg}
role assignment list -g {rg}
role assignment delete -g {rg}
role assignment list -g {rg}
ad sp delete --id {object_id}
account show
ad user create --display-name tester123 --password Test123456789 --user-principal-name {upn}
ad group create --display-name group123 --mail-nickname {group}
ad group member add --group {group_id} --member-id {user_id}
network nsg create -n {nsg} -g {rg}
network nsg show -n {nsg} -g {rg}
role assignment create --assignee {upn} --role contributor -g {rg}
role assignment create --assignee {upn} --role contributor -g {rg}
role assignment list -g {rg}
role assignment list --assignee {upn} --role contributor -g {rg}
role assignment create --assignee {group_id} --role contributor -g {rg}
role assignment list --assignee {upn} --all --include-groups
role assignment list -g {rg} --include-inherited
role assignment list --all
role assignment delete --assignee {group_id} --role contributor -g {rg}
role assignment delete --assignee {upn} --role contributor -g {rg}
role assignment list -g {rg}
role assignment create --assignee {upn} --role contributor --scope {nsg_id}
role assignment list --assignee {upn} --role contributor --scope {nsg_id}
role assignment delete --assignee {upn} --role contributor --scope {nsg_id}
role assignment list --scope {nsg_id}
role assignment create --assignee {upn} --role reader
role assignment list --assignee {upn} --role reader
role assignment list --assignee {upn}
role assignment delete --assignee {upn} --role reader
role assignment create --assignee fake --role contributor
ad user delete --upn-or-object-id {upn}
role assignment delete --assignee ""
role assignment delete --scope ""
role assignment delete --role ""
role assignment delete --resource-group ""
account show
ad user create --display-name tester123 --password Test123456789 --user-principal-name {upn}
configure --default group={rg} --scope local
configure --list-defaults --scope local
group show -n {rg}
role assignment create --assignee {upn} --role reader --scope /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_role_assign000001
role assignment list --assignee {upn} --role reader --scope /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_role_assign000001
role assignment delete --assignee {upn} --role reader --scope /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_role_assign000001
role assignment list --assignee {upn} --role reader --scope /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_role_assign000001
configure --default group="" --scope local
ad user delete --upn-or-object-id {upn}
role assignment list --include-classic-administrator
role assignment list -g cli_test_assignments_for_coadmins000001
role assignment list -g cli_test_assignments_for_coadmins000001 --include-classic-administrator
search service create -n {name} -g {rg} --sku {sku_name}
search admin-key show --service-name {name} -g {rg}
search admin-key renew --service-name {name} -g {rg} --key-kind primary
search admin-key show --service-name {name} -g {rg}
search admin-key renew --service-name {name} -g {rg} --key-kind secondary
search admin-key show --service-name {name} -g {rg}
search service create -n {search_service_name} -g {rg} --sku {sku_name} --public-access {public_network_access}
network vnet create --resource-group {rg} --name {vnet_name} --address-prefix 10.0.0.0/16
network vnet subnet create --resource-group {rg} --vnet-name {vnet_name} --name {subnet_name} --address-prefixes 10.0.0.0/24
network vnet subnet update --resource-group {rg} --vnet-name {vnet_name} --name {subnet_name} --disable-private-endpoint-network-policies true
network private-endpoint create --resource-group {rg} --name {private_endpoint_name} --vnet-name {vnet_name} --subnet {subnet_name} --private-connection-resource-id {_search_service_resource_id} --connection-name {private_endpoint_connection_name} --group-id searchService
search service show -n {search_service_name} -g {rg}
search private-endpoint-connection list -g {rg} --service-name {search_service_name}
search private-endpoint-connection show --name {_private_endpoint_connection_name} -g {rg} --service-name {search_service_name}
search private-endpoint-connection update --service-name {search_service_name} -g {rg} --name {_private_endpoint_connection_name} --status {private_endpoint_connection_status_rejected} --description "{private_endpoint_connection_description_rejected}" --actions-required "No action required"
search private-endpoint-connection update --service-name {search_service_name} -g {rg} --name {_private_endpoint_connection_name} --status {private_endpoint_connection_status_pending} --description "{private_endpoint_connection_description_pending}" --actions-required "No action required"
search private-endpoint-connection update --service-name {search_service_name} -g {rg} --name {_private_endpoint_connection_name} --status {private_endpoint_connection_status_approved} --description "{private_endpoint_connection_description_approved}" --actions-required "No action required"
search private-endpoint-connection delete --service-name {search_service_name} -g {rg} --name {_private_endpoint_connection_name} -y
search private-endpoint-connection show --name {_private_endpoint_connection_name} -g {rg} --service-name {search_service_name}
search private-endpoint-connection list -g {rg} --service-name {search_service_name}
search service create -n {name} -g {rg} --sku {sku_name} --public-access {public_network_access}
search private-link-resource list --service-name {name} -g {rg}
search service create -n {name} -g {rg} --sku {sku_name}
search query-key list --service-name {name} -g {rg}
search query-key create --service-name {name} -g {rg} -n {key_name_1}
search query-key list --service-name {name} -g {rg}
search query-key create --service-name {name} -g {rg} -n {key_name_2}
search query-key list --service-name {name} -g {rg}
search query-key delete --service-name {name} -g {rg} --key-value {key_value_1}
search query-key list --service-name {name} -g {rg}
search query-key delete --service-name {name} -g {rg} --key-value {key_value_2}
search query-key list --service-name {name} -g {rg}
search service list -g {rg}
search service create -n {name1} -g {rg} --sku {sku_name}
search service list -g {rg}
search service create -n {name2} -g {rg} --sku {sku_name}
search service list -g {rg}
search service delete -n {name1} -g {rg} -y
search service list -g {rg}
search service delete -n {name2} -g {rg} -y
search service list -g {rg}
search service create -n {name} -g {rg} --sku {sku_name}
search service show -n {name} -g {rg}
search service delete -n {name} -g {rg} -y
search service show -n {name} -g {rg}
search service create -n {name} -g {rg} --sku {sku_name} --ip-rules {ip_rules}
search service create -n {name} -g {rg} --sku {sku_name} --identity-type {identity_type}
search service create -n {name} -g {rg} --sku {sku_name} --replica-count {replica_count} --partition-count {partition_count}
search service create -n {name} -g {rg} --sku {sku_name} --replica-count {replica_count} --partition-count {partition_count}
search service create -n {name} -g {rg} --sku {sku_name} --public-access {public_network_access}
search service create -n {name} -g {rg} --sku {sku_name}
search service create -n {name} -g {rg} --sku {sku_name} --replica-count {replica_count} --partition-count {partition_count}
search service create -n {name} -g {rg} --sku {sku_name}
search service update -n {name} -g {rg} --replica-count {replica_count} --partition-count {partition_count}
search service create -n {name} -g {rg} --sku {sku_name}
search service update -n {name} -g {rg} --replica-count {replica_count} --partition-count {partition_count}
search service create -n {name} -g {rg} --sku {sku_name} --ip-rules {ip_rules}
search service update -n {name} -g {rg} --ip-rules {ip_rules}
search service update -n {name} -g {rg} --ip-rules {ip_rules}
search service create -n {name} -g {rg} --sku {sku_name} --identity-type {identity_type}
search service update -n {name} -g {rg} --identity-type {identity_type}
search service update -n {name} -g {rg} --identity-type {identity_type}
search service create -n {name} -g {rg} --sku {sku_name} --public-access {public_network_access}
search service update -n {name} -g {rg} --public-access {public_network_access}
search service update -n {name} -g {rg} --public-access {public_network_access}
search service create -n {search_service_name} -g {rg} --sku {sku_name} --public-network-access {public_network_access}
storage account create -n {storage_account_name} -g {rg} --kind StorageV2
storage account show -n {storage_account_name} -g {rg}
search shared-private-link-resource create --service-name {search_service_name} -g {rg} --resource-id {_account_resource_id} --name {shared_private_link_resource_name} --group-id {shared_private_link_resource_group_id}
search shared-private-link-resource update --service-name {search_service_name} -g {rg} --resource-id {_account_resource_id} --name {shared_private_link_resource_name} --group-id {shared_private_link_resource_group_id} --request-message "{shared_private_link_resource_request_message}"
search shared-private-link-resource list --service-name {search_service_name} -g {rg}
search shared-private-link-resource show --service-name {search_service_name} -g {rg} --name {shared_private_link_resource_name}
search shared-private-link-resource delete --service-name {search_service_name} -g {rg} --name {shared_private_link_resource_name} -y
search shared-private-link-resource list --service-name {search_service_name} -g {rg}
search shared-private-link-resource show --service-name {search_service_name} -g {rg} --name {shared_private_link_resource_name}
security adaptive-application-controls list
security adaptive-application-controls show --group-name {group_name}
security adaptive_network_hardenings list --resource-group MSI-GLStandard_A1 --resource-type virtualMachines --resource-namespace Microsoft.Compute --resource-name MSI-22122
security alert list
security alert show -g Sample-RG -l centralus -n 2517956498655466228_04034174-f436-4f6d-90ed-2425247dafd1
security alert update -g Sample-RG -l centralus -n 2517956498655466228_04034174-f436-4f6d-90ed-2425247dafd1 --status Activate
security alert show -g Sample-RG -l centralus -n 2517956498655466228_04034174-f436-4f6d-90ed-2425247dafd1
security alert update -g Sample-RG -l centralus -n 2517956498655466228_04034174-f436-4f6d-90ed-2425247dafd1 --status Dismiss
security alert show -g Sample-RG -l centralus -n 2517956498655466228_04034174-f436-4f6d-90ed-2425247dafd1
security alert update -g Sample-RG -l centralus -n 2517956498655466228_04034174-f436-4f6d-90ed-2425247dafd1 --status Resolve
security alert show -g Sample-RG -l centralus -n 2517956498655466228_04034174-f436-4f6d-90ed-2425247dafd1
security alert update -l centralus -n 2517956498655466228_04034174-f436-4f6d-90ed-2425247dafd1 --status Activate
security alert show -l centralus -n 2517956498655466228_04034174-f436-4f6d-90ed-2425247dafd1
security alert update -l centralus -n 2517956498655466228_04034174-f436-4f6d-90ed-2425247dafd1 --status Dismiss
security alert show -l centralus -n 2517956498655466228_04034174-f436-4f6d-90ed-2425247dafd1
security alert update -l centralus -n 2517956498655466228_04034174-f436-4f6d-90ed-2425247dafd1 --status Resolve
security alert show -l centralus -n 2517956498655466228_04034174-f436-4f6d-90ed-2425247dafd1
security alert update -l centralus -n 2517956498655466228_04034174-f436-4f6d-90ed-2425247dafd1 --status Activate
security alert show -l centralus -n 2517956498655466228_04034174-f436-4f6d-90ed-2425247dafd1
security allowed_connections list
security assessment list
security assessment-metadata list
security assessment-metadata create -n "8f211ea8-777b-45c4-8631-776d535afd62" --display-name "test assessment" --severity "High" --description "hello world"
security assessment-metadata list
security assessment create -n 8f211ea8-777b-45c4-8631-776d535afd62 --status-code Healthy
security assessment list
security assessment-metadata delete -n "8f211ea8-777b-45c4-8631-776d535afd62"
security assessment-metadata list
security assessment list
security atp storage show --resource-group clitest.rg000001 --storage-account clitest000002
security atp storage update --resource-group clitest.rg000001 --storage-account clitest000002 --is-enabled true
security atp storage show --resource-group clitest.rg000001 --storage-account clitest000002
security atp storage update --resource-group clitest.rg000001 --storage-account clitest000002 --is-enabled false
security atp storage show --resource-group clitest.rg000001 --storage-account clitest000002
security atp storage update --resource-group clitest.rg000001 --storage-account clitest000002 --is-enabled
security atp storage show --resource-group clitest.rg000001 --storage-account clitest000002
security auto-provisioning-setting list
security auto-provisioning-setting update -n "default" --auto-provision "On"
security auto-provisioning-setting show -n "default"
security auto-provisioning-setting update -n "default" --auto-provision "Off"
security auto-provisioning-setting show -n "default"
security discovered-security-solution list
security external-security-solution list
iot hub create -n {iot_hub_name} -g {rg}
security iot-solution create --solution-name "azurecli-hub" --resource-group {rg} --iot-hubs {iot_hub_id} --display-name "Solution Default" --location "east us"
security iot-solution list --resource-group {rg}
security iot-solution update --solution-name "azurecli-hub" --resource-group {rg} --iot-hubs {iot_hub_id} --display-name "Solution Default"
security iot-solution list --resource-group {rg}
security iot-solution show --solution-name "azurecli-hub" --resource-group {rg}
security iot-solution delete --solution-name "azurecli-hub" --resource-group {rg}
security iot-solution list --resource-group {rg}
security jit-policy list
security location list
security location show -n westcentralus
security pricing list
security pricing create -n VirtualMachines --tier free
security pricing show -n VirtualMachines
security pricing create -n VirtualMachines --tier standard
security pricing show -n VirtualMachines
security regulatory-compliance-standards list
security regulatory-compliance-standards show -n "Azure-CIS-1.1.0"
security regulatory-compliance-standards show -n "Azure-CIS-1.1.0"
security regulatory-compliance-controls show --standard-name "Azure-CIS-1.1.0" -n "1.1"
security regulatory-compliance-assessments list --standard-name "Azure-CIS-1.1.0" --control-name "1.1"
security regulatory-compliance-assessments show --standard-name "Azure-CIS-1.1.0" --control-name "1.1" -n "94290b00-4d0c-d7b4-7cea-064a9554e681"
security secure-scores list
security secure-scores show --n "ascScore"
security secure-score-controls list
security secure-score-controls list_by_score --n "ascScore"
security secure-score-control-definitions list
security contact list
security contact create -n default1 --email john@contoso.com --alert-notifications off --alerts-admins off
security contact list
security contact show -n default1
security contact create -n default1 --email lisa@contoso.com --alert-notifications off --alerts-admins off
security contact show -n default1
security contact delete -n default1
security contact list
security setting list
security setting show -n MCAS
security setting update -n Sentinel --enabled true
security setting update -n Sentinel --enabled false
security task list
security task show -g {task_id} -n {task_name}
security task show -n 099f0768-eb14-0179-f5a9-8553cad54542
security topology list
servicebus namespace exists --name {namespacenameprimary}
servicebus namespace create --resource-group {rg} --name {namespacenameprimary} --location {loc_south} --tags {tags} --sku {sku}
servicebus namespace show --resource-group {rg} --name {namespacenameprimary}
servicebus namespace create --resource-group {rg} --name {namespacenamesecondary} --location {loc_north} --tags {tags} --sku {sku}
servicebus namespace show --resource-group {rg} --name {namespacenamesecondary}
servicebus namespace authorization-rule create --resource-group {rg} --namespace-name {namespacenameprimary} --name {authoname} --rights {accessrights}
servicebus namespace authorization-rule show --resource-group {rg} --namespace-name {namespacenameprimary} --name {authoname}
servicebus georecovery-alias exists --resource-group {rg} --namespace-name {namespacenameprimary} --alias {aliasname}
servicebus georecovery-alias set  --resource-group {rg} --namespace-name {namespacenameprimary} -a {aliasname} --partner-namespace {namespacenamesecondary}
servicebus georecovery-alias show  --resource-group {rg} --namespace-name {namespacenameprimary} --alias {aliasname}
servicebus georecovery-alias show  --resource-group {rg} --namespace-name {namespacenamesecondary} --alias {aliasname}
servicebus georecovery-alias show  --resource-group {rg} --namespace-name {namespacenameprimary} --alias {aliasname}
servicebus georecovery-alias show  --resource-group {rg} --namespace-name {namespacenameprimary} --alias {aliasname}
servicebus georecovery-alias show  --resource-group {rg} --namespace-name {namespacenameprimary} --alias {aliasname}
servicebus georecovery-alias show  --resource-group {rg} --namespace-name {namespacenameprimary} --alias {aliasname}
servicebus georecovery-alias authorization-rule show --resource-group {rg} --namespace-name {namespacenameprimary} --alias {aliasname} --name {authoname}
servicebus georecovery-alias authorization-rule keys list --resource-group {rg} --namespace-name {namespacenameprimary} --alias {aliasname} --name {authoname}
servicebus georecovery-alias authorization-rule list --resource-group {rg} --namespace-name {namespacenameprimary} --alias {aliasname}
servicebus georecovery-alias break-pair  --resource-group {rg} --namespace-name {namespacenameprimary} --alias {aliasname}
servicebus georecovery-alias show  --resource-group {rg} --namespace-name {namespacenameprimary} --alias {aliasname}
servicebus georecovery-alias show  --resource-group {rg} --namespace-name {namespacenameprimary} --alias {aliasname}
servicebus georecovery-alias show  --resource-group {rg} --namespace-name {namespacenameprimary} --alias {aliasname}
servicebus georecovery-alias show  --resource-group {rg} --namespace-name {namespacenameprimary} --alias {aliasname}
servicebus georecovery-alias set  --resource-group {rg} --namespace-name {namespacenameprimary} --alias {aliasname} --partner-namespace {id}
servicebus georecovery-alias show  --resource-group {rg} --namespace-name {namespacenameprimary} --alias {aliasname}
servicebus georecovery-alias show  --resource-group {rg} --namespace-name {namespacenameprimary} --alias {aliasname}
servicebus georecovery-alias show  --resource-group {rg} --namespace-name {namespacenameprimary} --alias {aliasname}
servicebus georecovery-alias show  --resource-group {rg} --namespace-name {namespacenameprimary} --alias {aliasname}
servicebus georecovery-alias fail-over  --resource-group {rg} --namespace-name {namespacenamesecondary} --alias {aliasname}
servicebus georecovery-alias show  --resource-group {rg} --namespace-name {namespacenamesecondary} --alias {aliasname}
servicebus georecovery-alias show  --resource-group {rg} --namespace-name {namespacenamesecondary} --alias {aliasname}
servicebus georecovery-alias show  --resource-group {rg} --namespace-name {namespacenamesecondary} --alias {aliasname}
servicebus georecovery-alias show  --resource-group {rg} --namespace-name {namespacenamesecondary} --alias {aliasname}
servicebus georecovery-alias delete  --resource-group {rg} --namespace-name {namespacenamesecondary} --alias {aliasname}
servicebus namespace delete --resource-group {rg} --name {namespacenameprimary}
servicebus namespace delete --resource-group {rg} --name {namespacenamesecondary}
servicebus namespace exists --name {namespacename}
servicebus namespace create --resource-group {rg} --name {namespacename} --tags {tags} --sku {sku}
servicebus namespace show --resource-group {rg} --name {namespacename}
servicebus namespace update --resource-group {rg} --name {namespacename} --tags {tags}
servicebus namespace list
servicebus namespace list --resource-group {rg}
servicebus namespace authorization-rule create --resource-group {rg} --namespace-name {namespacename} --name {authoname} --rights {accessrights}
servicebus namespace authorization-rule show --resource-group {rg} --namespace-name {namespacename} --name {authoname}
servicebus namespace authorization-rule create --resource-group {rg} --namespace-name {namespacename} --name {authoname} --rights {accessrights1}
servicebus namespace authorization-rule show --resource-group {rg} --namespace-name {namespacename} --name {defaultauthorizationrule}
servicebus namespace authorization-rule keys list --resource-group {rg} --namespace-name {namespacename} --name {authoname}
servicebus namespace authorization-rule keys renew --resource-group {rg} --namespace-name {namespacename} --name {authoname} --key {primary}
servicebus namespace authorization-rule keys renew --resource-group {rg} --namespace-name {namespacename} --name {authoname} --key {secondary}
servicebus namespace authorization-rule delete --resource-group {rg} --namespace-name {namespacename} --name {authoname}
servicebus namespace delete --resource-group {rg} --name {namespacename}
network vnet create --resource-group {rg} --name {namevnet}
network vnet create --resource-group {rg} --name {namevnet1}
network vnet subnet create --resource-group {rg} --name {namesubnet1} --vnet-name {namevnet} --address-prefixes 10.0.0.0/24
network vnet subnet create --resource-group {rg} --name {namesubnet2} --vnet-name {namevnet1} --address-prefixes 10.0.0.0/24
servicebus namespace exists --name {namespacename}
servicebus namespace create --resource-group {rg} --name {namespacename} --tags {tags} --sku {sku} --default-action Allow
servicebus namespace show --resource-group {rg} --name {namespacename}
servicebus namespace update --resource-group {rg} --name {namespacename} --tags {tags} --default-action Deny
servicebus namespace network-rule list --resource-group {rg} --name {namespacename}
servicebus namespace network-rule add --resource-group {rg} --name {namespacename} --ip-address {ipmask1} --action Allow
servicebus namespace network-rule add --resource-group {rg} --name {namespacename} --ip-address {ipmask2} --action Allow
servicebus namespace network-rule list --resource-group {rg} --name {namespacename}
servicebus namespace network-rule remove --resource-group {rg} --name {namespacename} --ip-address {ipmask2}
servicebus namespace network-rule add --resource-group {rg} --name {namespacename} --subnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_sb_network000001/providers/Microsoft.Network/virtualNetworks/sbehvnettest1/subnets/default --ignore-missing-endpoint True
servicebus namespace network-rule add --resource-group {rg} --name {namespacename} --subnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_sb_network000001/providers/Microsoft.Network/virtualNetworks/sbehvnettest2/subnets/secondvnet --ignore-missing-endpoint True
servicebus namespace network-rule list --resource-group {rg} --name {namespacename}
servicebus namespace network-rule remove --resource-group {rg} --name {namespacename} --subnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_sb_network000001/providers/Microsoft.Network/virtualNetworks/sbehvnettest2/subnets/secondvnet
servicebus namespace delete --resource-group {rg} --name {namespacename}
servicebus namespace create --resource-group {rg} --name {namespacename} --tags {tags} --sku {sku}
servicebus namespace show --resource-group {rg} --name {namespacename}
servicebus queue create --resource-group {rg} --namespace-name {namespacename} --name {queuename} --auto-delete-on-idle {lockduration} --max-size 1024 
servicebus queue show --resource-group {rg} --namespace-name {namespacename} --name {queuename}
servicebus queue update --resource-group {rg} --namespace-name {namespacename} --name {queuename} --auto-delete-on-idle {lockduration1} 
servicebus queue list --resource-group {rg} --namespace-name {namespacename}
servicebus queue authorization-rule create --resource-group {rg} --namespace-name {namespacename} --queue-name {queuename} --name {authoname} --rights {accessrights}
servicebus queue authorization-rule show --resource-group {rg} --namespace-name {namespacename} --queue-name {queuename} --name {authoname}
servicebus queue authorization-rule update --resource-group {rg} --namespace-name {namespacename} --queue-name {queuename} --name {authoname} --rights {accessrights1}
servicebus queue authorization-rule keys list --resource-group {rg} --namespace-name {namespacename} --queue-name {queuename} --name {authoname}
servicebus queue authorization-rule keys renew --resource-group {rg} --namespace-name {namespacename} --queue-name {queuename} --name {authoname} --key {primary}
servicebus queue authorization-rule keys renew --resource-group {rg} --namespace-name {namespacename} --queue-name {queuename} --name {authoname} --key {secondary}
servicebus queue authorization-rule delete --resource-group {rg} --namespace-name {namespacename} --queue-name {queuename} --name {authoname}
servicebus queue delete --resource-group {rg} --namespace-name {namespacename} --name {queuename}
servicebus namespace delete --resource-group {rg} --name {namespacename}
servicebus namespace create --resource-group {rg} --name {namespacename} --tags {tags} --sku {sku}
servicebus namespace show --resource-group {rg} --name {namespacename}
servicebus topic create --resource-group {rg} --namespace-name {namespacename} --name {topicname} 
servicebus topic show --resource-group {rg} --namespace-name {namespacename} --name {topicname} 
servicebus topic subscription create --resource-group {rg} --namespace-name {namespacename} --topic-name {topicname} --name {subscriptionname}
servicebus topic subscription show --resource-group {rg} --namespace-name {namespacename} --topic-name {topicname} --name {subscriptionname}
servicebus topic subscription rule create --resource-group {rg} --namespace-name {namespacename} --topic-name {topicname} --subscription-name {subscriptionname} --name {rulename} --filter-sql-expression {sqlexpression}
servicebus topic subscription rule show --resource-group {rg} --namespace-name {namespacename} --topic-name {topicname} --subscription-name {subscriptionname} --name {rulename}
servicebus topic subscription rule update --resource-group {rg} --namespace-name {namespacename} --topic-name {topicname} --subscription-name {subscriptionname} --name {rulename} --filter-sql-expression {sqlexpression1}
servicebus topic subscription rule list --resource-group {rg} --namespace-name {namespacename} --topic-name {topicname} --subscription-name {subscriptionname}
servicebus topic subscription rule delete --resource-group {rg} --namespace-name {namespacename} --topic-name {topicname} --subscription-name {subscriptionname} --name {rulename}
servicebus topic subscription delete --resource-group {rg} --namespace-name {namespacename} --topic-name {topicname} --name {subscriptionname}
servicebus topic delete --resource-group {rg} --namespace-name {namespacename} --name {topicname}
servicebus namespace delete --resource-group {rg} --name {namespacename}
servicebus namespace create --resource-group {rg} --name {namespacename} --tags {tags} --sku {sku}
servicebus namespace show --resource-group {rg} --name {namespacename}
servicebus topic create --resource-group {rg} --namespace-name {namespacename} --name {topicname}
servicebus topic show --resource-group {rg} --namespace-name {namespacename} --name {topicname}
servicebus topic subscription create --resource-group {rg} --namespace-name {namespacename} --topic-name {topicname} --name {subscriptionname}
servicebus topic subscription show --resource-group {rg} --namespace-name {namespacename} --topic-name {topicname} --name {subscriptionname}
servicebus topic subscription list --resource-group {rg} --namespace-name {namespacename} --topic-name {topicname}
servicebus topic subscription update --resource-group {rg} --namespace-name {namespacename} --topic-name {topicname} --name {subscriptionname} --max-delivery {maxdelivery} --default-message-time-to-live {defaultmessagetimetolive} --dead-letter-on-filter-exceptions {false} --enable-dead-lettering-on-message-expiration {false} --auto-delete-on-idle {autodeleteonidle} --default-message-time-to-live {defaultmessagetimetolive} --lock-duration {lockduration}
servicebus topic subscription delete --resource-group {rg} --namespace-name {namespacename} --topic-name {topicname} --name {subscriptionname}
servicebus topic delete --resource-group {rg} --namespace-name {namespacename} --name {topicname}
servicebus namespace delete --resource-group {rg} --name {namespacename}
servicebus namespace create --resource-group {rg} --name {namespacename} --tags {tags} --sku {sku}
servicebus namespace show --resource-group {rg} --name {namespacename}
servicebus topic create --resource-group {rg} --namespace-name {namespacename} --name {topicname}
servicebus topic show --resource-group {rg} --namespace-name {namespacename} --name {topicname}
servicebus topic update --resource-group {rg} --namespace-name {namespacename} --name {topicname} --enable-ordering True
servicebus topic list --resource-group {rg} --namespace-name {namespacename}
servicebus topic authorization-rule create --resource-group {rg} --namespace-name {namespacename} --topic-name {topicname} --name {authoname} --rights {accessrights}
servicebus topic authorization-rule show --resource-group {rg} --namespace-name {namespacename} --topic-name {topicname} --name {authoname}
servicebus topic authorization-rule update --resource-group {rg} --namespace-name {namespacename} --topic-name {topicname} --name {authoname} --rights {accessrights1}
servicebus topic authorization-rule keys list --resource-group {rg} --namespace-name {namespacename} --topic-name {topicname} --name {authoname}
servicebus topic authorization-rule keys renew --resource-group {rg} --namespace-name {namespacename} --topic-name {topicname} --name {authoname} --key {primary}
servicebus topic authorization-rule keys renew --resource-group {rg} --namespace-name {namespacename} --topic-name {topicname} --name {authoname} --key {secondary}
servicebus topic authorization-rule delete --resource-group {rg} --namespace-name {namespacename} --topic-name {topicname} --name {authoname}
servicebus topic delete --resource-group {rg} --namespace-name {namespacename} --name {topicname}
webapp connection create confluent-cloud --connection testconn --source-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-kafka-app2 --bootstrap-server xxx.eastus.azure.confluent.cloud:9092 --kafka-key Name --kafka-secret Secret --schema-registry https://xxx.eastus.azure.confluent.cloud --schema-key Name --schema-secret Secret --client-type python
webapp connection list --source-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-kafka-app2
webapp connection list-configuration --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-kafka-app2/providers/Microsoft.ServiceLinker/linkers/testconn
webapp connection validate --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-kafka-app2/providers/Microsoft.ServiceLinker/linkers/testconn
webapp connection show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-kafka-app2/providers/Microsoft.ServiceLinker/linkers/testconn
webapp connection delete --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-kafka-app2/providers/Microsoft.ServiceLinker/linkers/testconn --yes
webapp connection create cosmos-cassandra --connection testconn --source-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-win-group/providers/Microsoft.Web/sites/servicelinker-cassandra-cosmos-asp-app2 --target-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-win-group/providers/Microsoft.DocumentDB/databaseAccounts/servicelinker-cassandra-cosmos2/cassandraKeyspaces/coredb --system-identity --client-type python
webapp connection list --source-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-win-group/providers/Microsoft.Web/sites/servicelinker-cassandra-cosmos-asp-app2
webapp connection list-configuration --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-win-group/providers/Microsoft.Web/sites/servicelinker-cassandra-cosmos-asp-app2/providers/Microsoft.ServiceLinker/linkers/testconn
webapp connection validate --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-win-group/providers/Microsoft.Web/sites/servicelinker-cassandra-cosmos-asp-app2/providers/Microsoft.ServiceLinker/linkers/testconn
webapp connection show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-win-group/providers/Microsoft.Web/sites/servicelinker-cassandra-cosmos-asp-app2/providers/Microsoft.ServiceLinker/linkers/testconn
webapp connection delete --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-win-group/providers/Microsoft.Web/sites/servicelinker-cassandra-cosmos-asp-app2/providers/Microsoft.ServiceLinker/linkers/testconn --yes
webapp connection create cosmos-gremlin --connection testconn --source-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-win-group/providers/Microsoft.Web/sites/servicelinker-gremlin-cosmos-asp-app2 --target-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-win-group/providers/Microsoft.DocumentDB/databaseAccounts/servicelinker-gremlin-cosmos2/gremlinDatabases/coreDB/graphs/MyItem --system-identity --client-type python
webapp connection list --source-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-win-group/providers/Microsoft.Web/sites/servicelinker-gremlin-cosmos-asp-app2
webapp connection list-configuration --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-win-group/providers/Microsoft.Web/sites/servicelinker-gremlin-cosmos-asp-app2/providers/Microsoft.ServiceLinker/linkers/testconn
webapp connection validate --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-win-group/providers/Microsoft.Web/sites/servicelinker-gremlin-cosmos-asp-app2/providers/Microsoft.ServiceLinker/linkers/testconn
webapp connection show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-win-group/providers/Microsoft.Web/sites/servicelinker-gremlin-cosmos-asp-app2/providers/Microsoft.ServiceLinker/linkers/testconn
webapp connection delete --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-win-group/providers/Microsoft.Web/sites/servicelinker-gremlin-cosmos-asp-app2/providers/Microsoft.ServiceLinker/linkers/testconn --yes
webapp connection create cosmos-mongo --connection testconn --source-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-win-group/providers/Microsoft.Web/sites/servicelinker-mongo-cosmos-asp-app2 --target-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-win-group/providers/Microsoft.DocumentDB/databaseAccounts/servicelinker-mongo-cosmos2/mongodbDatabases/coreDB --system-identity --client-type dotnet
webapp connection list --source-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-win-group/providers/Microsoft.Web/sites/servicelinker-mongo-cosmos-asp-app2
webapp connection list-configuration --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-win-group/providers/Microsoft.Web/sites/servicelinker-mongo-cosmos-asp-app2/providers/Microsoft.ServiceLinker/linkers/testconn
webapp connection validate --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-win-group/providers/Microsoft.Web/sites/servicelinker-mongo-cosmos-asp-app2/providers/Microsoft.ServiceLinker/linkers/testconn
webapp connection show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-win-group/providers/Microsoft.Web/sites/servicelinker-mongo-cosmos-asp-app2/providers/Microsoft.ServiceLinker/linkers/testconn
webapp connection delete --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-win-group/providers/Microsoft.Web/sites/servicelinker-mongo-cosmos-asp-app2/providers/Microsoft.ServiceLinker/linkers/testconn --yes
webapp connection create cosmos-sql --connection testconn --source-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-win-group/providers/Microsoft.Web/sites/servicelinker-sql-cosmos-asp-app2 --target-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-win-group/providers/Microsoft.DocumentDB/databaseAccounts/servicelinker-sql-cosmos2/sqlDatabases/coreDB --system-identity --client-type python
webapp connection list --source-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-win-group/providers/Microsoft.Web/sites/servicelinker-sql-cosmos-asp-app2
webapp connection list-configuration --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-win-group/providers/Microsoft.Web/sites/servicelinker-sql-cosmos-asp-app2/providers/Microsoft.ServiceLinker/linkers/testconn
webapp connection validate --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-win-group/providers/Microsoft.Web/sites/servicelinker-sql-cosmos-asp-app2/providers/Microsoft.ServiceLinker/linkers/testconn
webapp connection show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-win-group/providers/Microsoft.Web/sites/servicelinker-sql-cosmos-asp-app2/providers/Microsoft.ServiceLinker/linkers/testconn
webapp connection delete --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-win-group/providers/Microsoft.Web/sites/servicelinker-sql-cosmos-asp-app2/providers/Microsoft.ServiceLinker/linkers/testconn --yes
webapp connection create cosmos-table --connection testconn --source-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-win-group/providers/Microsoft.Web/sites/servicelinker-table-cosmos-asp-app2 --target-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-win-group/providers/Microsoft.DocumentDB/databaseAccounts/servicelinker-table-cosmos2/tables/MyItem --system-identity --client-type python
webapp connection list --source-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-win-group/providers/Microsoft.Web/sites/servicelinker-table-cosmos-asp-app2
webapp connection list-configuration --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-win-group/providers/Microsoft.Web/sites/servicelinker-table-cosmos-asp-app2/providers/Microsoft.ServiceLinker/linkers/testconn
webapp connection validate --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-win-group/providers/Microsoft.Web/sites/servicelinker-table-cosmos-asp-app2/providers/Microsoft.ServiceLinker/linkers/testconn
webapp connection show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-win-group/providers/Microsoft.Web/sites/servicelinker-table-cosmos-asp-app2/providers/Microsoft.ServiceLinker/linkers/testconn
webapp connection delete --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-win-group/providers/Microsoft.Web/sites/servicelinker-table-cosmos-asp-app2/providers/Microsoft.ServiceLinker/linkers/testconn --yes
webapp connection create keyvault --connection testconn --source-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-keyvault-app2 --target-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.KeyVault/vaults/servicelinker-test-kv2 --system-identity --client-type python
webapp connection list --source-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-keyvault-app2
webapp connection list-configuration --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-keyvault-app2/providers/Microsoft.ServiceLinker/linkers/testconn
webapp connection validate --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-keyvault-app2/providers/Microsoft.ServiceLinker/linkers/testconn
webapp connection show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-keyvault-app2/providers/Microsoft.ServiceLinker/linkers/testconn
webapp connection delete --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-keyvault-app2/providers/Microsoft.ServiceLinker/linkers/testconn --yes
keyvault secret show --vault-name cupertino-kv-test -n TestDbPassword
webapp connection create mysql --connection testconn --source-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-mysql-app2 --target-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.DBForMySQL/servers/servicelinker-mysql2/databases/mysqlDB --secret name=servicelinker secret=microsoft123! --client-type python
webapp connection list --source-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-mysql-app2
webapp connection list-configuration --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-mysql-app2/providers/Microsoft.ServiceLinker/linkers/testconn
webapp connection validate --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-mysql-app2/providers/Microsoft.ServiceLinker/linkers/testconn
webapp connection show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-mysql-app2/providers/Microsoft.ServiceLinker/linkers/testconn
webapp connection delete --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-mysql-app2/providers/Microsoft.ServiceLinker/linkers/testconn --yes
keyvault secret show --vault-name cupertino-kv-test -n TestDbPassword
keyvault secret show --vault-name cupertino-kv-test -n TestDbPassword
keyvault secret show --vault-name cupertino-kv-test -n TestDbPassword
webapp connection create signalr --connection testconn --source-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-signalr-app2 --target-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.SignalRService/SignalR/servicelinker-signalr2 --system-identity --client-type dotnet
webapp connection list --source-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-signalr-app2
webapp connection list-configuration --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-signalr-app2/providers/Microsoft.ServiceLinker/linkers/testconn
webapp connection validate --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-signalr-app2/providers/Microsoft.ServiceLinker/linkers/testconn
webapp connection show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-signalr-app2/providers/Microsoft.ServiceLinker/linkers/testconn
webapp connection delete --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-signalr-app2/providers/Microsoft.ServiceLinker/linkers/testconn --yes
webapp connection create storage-blob --connection testconn --source-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-storageblob-app2 --target-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Storage/storageAccounts/servicelinkerstorage2/blobServices/default --system-identity --client-type python
webapp connection list --source-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-storageblob-app2
webapp connection list-configuration --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-storageblob-app2/providers/Microsoft.ServiceLinker/linkers/testconn
webapp connection validate --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-storageblob-app2/providers/Microsoft.ServiceLinker/linkers/testconn
webapp connection show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-storageblob-app2/providers/Microsoft.ServiceLinker/linkers/testconn
webapp connection delete --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-storageblob-app2/providers/Microsoft.ServiceLinker/linkers/testconn --yes
webapp connection create storage-file --connection testconn --source-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-storagefile-app2 --target-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Storage/storageAccounts/servicelinkerstorage2/fileServices/default --secret --client-type python
webapp connection list --source-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-storagefile-app2
webapp connection list-configuration --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-storagefile-app2/providers/Microsoft.ServiceLinker/linkers/testconn
webapp connection validate --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-storagefile-app2/providers/Microsoft.ServiceLinker/linkers/testconn
webapp connection show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-storagefile-app2/providers/Microsoft.ServiceLinker/linkers/testconn
webapp connection delete --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-storagefile-app2/providers/Microsoft.ServiceLinker/linkers/testconn --yes
webapp connection create storage-queue --connection testconn --source-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-storagequeue-app2 --target-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Storage/storageAccounts/servicelinkerstorage2/queueServices/default --secret --client-type python
webapp connection list --source-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-storagequeue-app2
webapp connection list-configuration --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-storagequeue-app2/providers/Microsoft.ServiceLinker/linkers/testconn
webapp connection validate --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-storagequeue-app2/providers/Microsoft.ServiceLinker/linkers/testconn
webapp connection show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-storagequeue-app2/providers/Microsoft.ServiceLinker/linkers/testconn
webapp connection delete --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-storagequeue-app2/providers/Microsoft.ServiceLinker/linkers/testconn --yes
webapp connection create storage-table --connection testconn --source-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-storagetable-app2 --target-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Storage/storageAccounts/servicelinkerstorage2/tableServices/default --secret --client-type python
webapp connection list --source-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-storagetable-app2
webapp connection list-configuration --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-storagetable-app2/providers/Microsoft.ServiceLinker/linkers/testconn
webapp connection validate --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-storagetable-app2/providers/Microsoft.ServiceLinker/linkers/testconn
webapp connection show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-storagetable-app2/providers/Microsoft.ServiceLinker/linkers/testconn
webapp connection delete --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/servicelinker-test-linux-group/providers/Microsoft.Web/sites/servicelinker-storagetable-app2/providers/Microsoft.ServiceLinker/linkers/testconn --yes
keyvault certificate create --vault-name {kv_name} -n {cert_name} -p @"{policy_path}"
keyvault certificate show --vault-name {kv_name} -n {cert_name}
sf cluster create -g {rg} -c {cluster_name} -l {loc} --secret-identifier {cert_secret_id} --vm-password "{vm_password}" --cluster-size 3
sf cluster show -g {rg} -c {cluster_name}
sf application-type list -g {rg} -c {cluster_name}
sf application-type create -g {rg} -c {cluster_name} --application-type-name {app_type_name}
sf application-type show -g {rg} -c {cluster_name} --application-type-name {app_type_name}
sf application-type delete -g {rg} -c {cluster_name} --application-type-name {app_type_name}
sf application-type show -g {rg} -c {cluster_name} --application-type-name {app_type_name}
sf application-type version list -g {rg} -c {cluster_name} --application-type-name {app_type_name}
sf application-type version create -g {rg} -c {cluster_name} --application-type-name {app_type_name} --version {v1} --package-url {app_package_v1}
sf application-type version show -g {rg} -c {cluster_name} --application-type-name {app_type_name} --version {v1}
sf application-type version delete -g {rg} -c {cluster_name} --application-type-name {app_type_name} --version {v1}
sf application-type version show -g {rg} -c {cluster_name} --application-type-name {app_type_name} --version {v1}
sf application list -g {rg} -c {cluster_name}
sf application create -g {rg} -c {cluster_name} --application-name {app_name} --application-type-name {app_type_name} --application-type-version {v1} --package-url {app_package_v1} --application-parameters Mode=binary
sf application show -g {rg} -c {cluster_name} --application-name {app_name}
sf service create -g {rg} -c {cluster_name} --application-name {app_name} --state stateless --instance-count -1 --service-name "{app_name}~testService" --service-type {service_type} --partition-scheme singleton
sf service show -g {rg} -c {cluster_name} --application-name {app_name} --service-name "{app_name}~testService"
sf application-type version create -g {rg} -c {cluster_name} --application-type-name {app_type_name} --version {v2} --package-url {app_package_v2}
sf application update -g {rg} -c {cluster_name} --application-name {app_name} --application-type-version {v2} --application-parameters Precision=3 --health-check-stable-duration 0 --health-check-wait-duration 0 --health-check-retry-timeout 0 --upgrade-domain-timeout 5000 --upgrade-timeout 7000 --failure-action Rollback --upgrade-replica-set-check-timeout 300 --force-restart
sf application update -g {rg} -c {cluster_name} --application-name {app_name} --minimum-nodes 1 --maximum-nodes 3
sf application show -g {rg} -c {cluster_name} --application-name {app_name}
sf application delete -g {rg} -c {cluster_name} --application-name {app_name}
sf application-type delete -g {rg} -c {cluster_name} --application-type-name {app_type_name}
sf application show -g {rg} -c {cluster_name} --application-name {app_name}
keyvault certificate create --vault-name {kv_name} -n {cert_name} -p @"{policy_path}"
sf managed-cluster create -g {rg} -c {cluster_name} -l {loc} --cert-thumbprint {cert_tp} --cert-is-admin --admin-password {vm_password}
sf managed-node-type create -g {rg} -c {cluster_name} -n pnt --instance-count 5 --primary
sf managed-cluster show -g {rg} -c {cluster_name}
sf managed-cluster show -g {rg} -c {cluster_name}
sf managed-cluster show -g {rg} -c {cluster_name}
sf managed-cluster show -g {rg} -c {cluster_name}
sf managed-cluster show -g {rg} -c {cluster_name}
sf managed-cluster show -g {rg} -c {cluster_name}
sf managed-cluster show -g {rg} -c {cluster_name}
sf managed-application-type list -g {rg} -c {cluster_name}
sf managed-application-type create -g {rg} -c {cluster_name} --application-type-name {app_type_name} --tags {tags}
sf managed-application-type show -g {rg} -c {cluster_name} --application-type-name {app_type_name}
sf managed-application-type update -g {rg} -c {cluster_name} --application-type-name {app_type_name} --tags {new_tags}
sf managed-application-type show -g {rg} -c {cluster_name} --application-type-name {app_type_name}
sf managed-application-type delete -g {rg} -c {cluster_name} --application-type-name {app_type_name}
sf managed-application-type show -g {rg} -c {cluster_name} --application-type-name {app_type_name}
sf managed-cluster create -g {rg} -c {cluster_name} -l {loc} --cert-thumbprint {cert_tp} --cert-is-admin --admin-password {vm_password}
sf managed-node-type create -g {rg} -c {cluster_name} -n pnt --instance-count 5 --primary
sf managed-cluster show -g {rg} -c {cluster_name}
sf managed-cluster show -g {rg} -c {cluster_name}
sf managed-cluster show -g {rg} -c {cluster_name}
sf managed-cluster show -g {rg} -c {cluster_name}
sf managed-cluster show -g {rg} -c {cluster_name}
sf managed-cluster show -g {rg} -c {cluster_name}
sf managed-application-type version list -g {rg} -c {cluster_name} --application-type-name {app_type_name}
sf managed-application-type version create -g {rg} -c {cluster_name} --application-type-name {app_type_name} --version {v1} --package-url {app_package_v1} --tags {tags}
sf managed-application-type version show -g {rg} -c {cluster_name} --application-type-name {app_type_name} --version {v1}
sf managed-application-type version update -g {rg} -c {cluster_name} --application-type-name {app_type_name} --version {v1} --tags {new_tags}
sf managed-application-type version show -g {rg} -c {cluster_name} --application-type-name {app_type_name} --version {v1}
sf managed-application-type version delete -g {rg} -c {cluster_name} --application-type-name {app_type_name} --version {v1}
sf managed-application-type version show -g {rg} -c {cluster_name} --application-type-name {app_type_name} --version {v1}
sf managed-cluster create -g {rg} -c {cluster_name} -l {loc} --cert-thumbprint {cert_tp} --cert-is-admin --admin-password {vm_password}
sf managed-node-type create -g {rg} -c {cluster_name} -n pnt --instance-count 5 --primary
sf managed-cluster show -g {rg} -c {cluster_name}
sf managed-cluster show -g {rg} -c {cluster_name}
sf managed-cluster show -g {rg} -c {cluster_name}
sf managed-cluster show -g {rg} -c {cluster_name}
sf managed-cluster show -g {rg} -c {cluster_name}
sf managed-cluster show -g {rg} -c {cluster_name}
sf managed-application list -g {rg} -c {cluster_name}
sf managed-application create -g {rg} -c {cluster_name} --application-name {app_name} --application-type-name {app_type_name} --application-type-version {v1} --package-url {app_package_v1}
sf managed-application show -g {rg} -c {cluster_name} --application-name {app_name}
sf managed-service create -g {rg} -c {cluster_name} --application-name {app_name} --state stateless --instance-count -1 --service-name {stateless_service_name} --service-type {stateless_service_type} --partition-scheme singleton
sf managed-service show -g {rg} -c {cluster_name} --application-name {app_name} --service-name {stateless_service_name}
sf managed-application-type version create -g {rg} -c {cluster_name} --application-type-name {app_type_name} --version {v2} --package-url {app_package_v2}
sf managed-application update -g {rg} -c {cluster_name} --application-name {app_name} --application-type-version {v2} --health-check-stable-duration 0 --health-check-wait-duration 0 --health-check-retry-timeout 0 --upgrade-domain-timeout 5000 --upgrade-timeout 7000 --failure-action Rollback --upgrade-replica-set-check-timeout 300 --force-restart
sf managed-application delete -g {rg} -c {cluster_name} --application-name {app_name}
sf managed-application-type delete -g {rg} -c {cluster_name} --application-type-name {app_type_name}
sf managed-application show -g {rg} -c {cluster_name} --application-name {app_name}
sf managed-cluster create -g {rg} -c {cluster_name} -l {loc} --cert-thumbprint {cert_tp} --cert-is-admin --admin-password {vm_password}
sf managed-node-type create -g {rg} -c {cluster_name} -n pnt --instance-count 5 --primary
sf managed-cluster show -g {rg} -c {cluster_name}
sf managed-cluster show -g {rg} -c {cluster_name}
sf managed-cluster show -g {rg} -c {cluster_name}
sf managed-cluster show -g {rg} -c {cluster_name}
sf managed-cluster show -g {rg} -c {cluster_name}
sf managed-cluster show -g {rg} -c {cluster_name}
sf managed-application create -g {rg} -c {cluster_name} --application-name {app_name} --application-type-name {app_type_name} --application-type-version {v1} --package-url {app_package_v1}
sf managed-service list -g {rg} -c {cluster_name} --application-name {app_name}
sf managed-service create -g {rg} -c {cluster_name} --application-name {app_name} --state stateful --min-replica-set-size 2 --target-replica-set-size 3 --service-name {stateful_service_name} --service-type {stateful_service_type} --has-persisted-state --partition-scheme uniformint64range --partition-count 1 --low-key 0 --high-key 25
sf managed-service show -g {rg} -c {cluster_name} --application-name {app_name} --service-name {stateful_service_name}
sf managed-service create -g {rg} -c {cluster_name} --application-name {app_name} --state stateless --instance-count -1 --service-name {stateless_service_name} --service-type {stateless_service_type} --partition-scheme singleton
sf managed-service show -g {rg} -c {cluster_name} --application-name {app_name} --service-name {stateless_service_name}
sf managed-service update -g {rg} -c {cluster_name} --application-name {app_name} --service-name {stateful_service_name} --service-placement-time-limit {service_placement_time_limit} --stand-by-replica-keep-duration {standby_replica_keep_duration} --replica-restart-wait-duration {replica_restart_wait_duration} --quorum-loss-wait-duration {quorum_loss_wait_duration}
sf managed-service update -g {rg} -c {cluster_name} --application-name {app_name} --service-name {stateless_service_name} --min-instance-count {min_instance_count} --min-instance-percentage {min_instance_percentage} 
sf managed-service delete -g {rg} -c {cluster_name} --application-name {app_name} --service-name {stateless_service_name}
sf managed-service delete -g {rg} -c {cluster_name} --application-name {app_name} --service-name {stateful_service_name}
sf managed-application delete -g {rg} -c {cluster_name} --application-name {app_name}
sf managed-application-type delete -g {rg} -c {cluster_name} --application-type-name {app_type_name}
sf managed-service show -g {rg} -c {cluster_name} --application-name {app_name} --service-name {stateful_service_name}
sf managed-service show -g {rg} -c {cluster_name} --application-name {app_name} --service-name {stateless_service_name}
sf managed-cluster create -g {rg} -c {cluster_name} -l {loc} --cert-thumbprint {cert_tp} --cert-is-admin --admin-password {vm_password}
sf managed-node-type create -g {rg} -c {cluster_name} -n pnt --instance-count 5 --primary
sf managed-node-type delete -g {rg} -c {cluster_name} -n pnt
sf managed-cluster show -g {rg} -c {cluster_name}
sf managed-cluster delete -g {rg} -c {cluster_name}
sf managed-cluster show -g {rg} -c {cluster_name}
sf managed-cluster create -g {rg} -c {cluster_name} -l {loc} --cert-thumbprint {cert_tp} --cert-is-admin --admin-password {vm_password}
sf managed-node-type create -g {rg} -c {cluster_name} -n pnt --instance-count 5 --primary
sf managed-node-type vm-extension add -g {rg} -c {cluster_name} -n pnt  --extension-name {extName} --publisher {publisher} --extension-type {extType} --type-handler-version {extVer} --auto-upgrade-minor-version
sf managed-node-type show -g {rg} -c {cluster_name} -n pnt
keyvault show -n {kv_name} -g {rg}
keyvault certificate create --vault-name {kv_name} -n {cert_name} -p @"{policy_path}"
sf managed-cluster create -g {rg} -c {cluster_name} -l {loc} --cert-thumbprint {cert_tp} --cert-is-admin --admin-password {vm_password} --sku Standard --upgrade-mode Automatic --upgrade-cadence Wave1
sf managed-node-type create -g {rg} -c {cluster_name} -n pnt --instance-count 5 --primary --disk-type Premium_LRS --vm-size Standard_DS2
sf managed-node-type list -g {rg} -c {cluster_name}
sf managed-node-type create -g {rg} -c {cluster_name} -n snt --instance-count 6 --is-stateless --multiple-placement-groups
sf managed-node-type list -g {rg} -c {cluster_name}
sf managed-node-type node restart -g {rg} -c {cluster_name} -n snt --node-name snt_0 snt_1
sf managed-node-type node restart -g {rg} -c {cluster_name} -n snt --node-name snt_0 snt_1
sf managed-node-type node delete -g {rg} -c {cluster_name} -n snt --node-name snt_1
sf managed-node-type node reimage -g {rg} -c {cluster_name} -n snt --node-name snt_3
sf managed-node-type delete -g {rg} -c {cluster_name} -n snt
sf managed-node-type show -g {rg} -c {cluster_name} -n snt
sf managed-node-type list -g {rg} -c {cluster_name}
sf managed-cluster delete -g {rg} -c {cluster_name}
sf managed-cluster show -g {rg} -c {cluster_name}
signalr create -n {signalr_name} -g {rg} --sku {sku} --unit-count {unit_count} -l {location} --tags {tags} --service-mode {service_mode} --enable-message-logs {enable_message_logs_input} --allowed-origins {allowed_origins} --default-action {default_action}
signalr show -n {signalr_name} -g {rg}
signalr list -g {rg}
signalr update -n {signalr_name} -g {rg} --sku {updated_sku} --tags {updated_tags} --service-mode {update_service_mode} --enable-message-logs {update_enable_message_logs_input}
signalr cors remove -n {signalr_name} -g {rg} --allowed-origins {allowed_origins}
signalr cors add -n {signalr_name} -g {rg} --allowed-origins {added_allowed_origins}
signalr cors update -n {signalr_name} -g {rg} --allowed-origins {added_allowed_origins}
signalr key list -n {signalr_name} -g {rg}
signalr key renew -n {signalr_name} -g {rg} --key-type secondary
signalr create -n {signalr_name} -g {rg} --sku {sku} --unit-count {unit_count} -l {location}
signalr identity assign -n {signalr_name} -g {rg} --identity [system]
signalr identity show -n {signalr_name} -g {rg}
signalr identity remove -n {signalr_name} -g {rg}
signalr create -n {signalr_name} -g {rg} --sku {sku}  -l {location}
network vnet create -g {rg} -n {vnet} -l {location} --subnet-name {subnet}
network vnet subnet update --name {subnet} --resource-group {rg} --vnet-name {vnet} --disable-private-endpoint-network-policies true
network private-endpoint create --resource-group {rg} --vnet-name {vnet} --subnet {subnet} --name {private_endpoint}  --private-connection-resource-id {signalr_id} --group-ids signalr --connection-name {private_endpoint_connection} --location {location} --manual-request
network private-link-resource list -n {signalr_name} -g {rg} --type Microsoft.SignalRService/signalr
signalr show -n {signalr_name} -g {rg}
network private-endpoint-connection show --id {private_endpoint_connection_id}
network private-endpoint-connection list --id {signalr_id}
network private-endpoint-connection approve --id {private_endpoint_connection_id}
network private-endpoint-connection reject --id {private_endpoint_connection_id}
signalr network-rule update --public-network -n {signalr_name} -g {rg} --allow RESTAPI
signalr network-rule list -n {signalr_name} -g {rg}
signalr network-rule update --connection-name {connection_name} -n {signalr_name} -g {rg} --allow RESTAPI
network private-endpoint-connection delete --id {private_endpoint_connection_id} -y
network private-endpoint-connection list --id {signalr_id}
signalr create -n {signalr_name} -g {rg} --sku {sku} --unit-count {unit_count} -l {location} --tags {tags} --service-mode {service_mode} --allowed-origins {allowed_origins} --default-action {default_action}
signalr upstream update -n {signalr_name} -g {rg} --template url-template="{url_template_1}" category-pattern="{category_pattern_1}" hub-pattern={hub_pattern_1} event-pattern={event_pattern_1} --template url-template={url_template_2} category-pattern={category_pattern_2}
signalr upstream list -n {signalr_name} -g {rg}
signalr upstream clear -n {signalr_name} -g {rg}
sql server create -g clitest.rg000001 --name clitestserver000003 --admin-user admin123 --admin-password SecretPassword123
sql server list -g clitest.rg000001
sql server update -g clitest.rg000001 --name clitestserver000003 --admin-password SecretPassword456 -i
sql server update --ids /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Sql/servers/clitestserver000003 --admin-password SecretPassword123
sql server create -g clitest.rg000002 --name clitestserver000004 -l westeurope -i --admin-user admin123 --admin-password SecretPassword123
sql server list -g clitest.rg000002
sql server list
sql server show -g clitest.rg000001 --name clitestserver000003
sql server show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Sql/servers/clitestserver000003
sql server list-usages -g clitest.rg000001 -n clitestserver000003
sql server delete --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Sql/servers/clitestserver000003 --yes
sql server delete -g clitest.rg000002 --name clitestserver000004 --yes
sql server list -g clitest.rg000001
sql server create -g clitest.rg000001 --name clitestserver000002 --admin-user admin123 --admin-password SecretPassword123
sql server create -g clitest.rg000001 --name clitestserver000003 --admin-user admin123 --admin-password SecretPassword123 --enable-public-network true
sql server create -g clitest.rg000001 --name clitestserver000004 --admin-user admin123 --admin-password SecretPassword123 -e false
sql server show -g clitest.rg000001 --name clitestserver000004
sql server create -g clitest.rg000001 --name clitestserver000002 --admin-user admin123 --admin-password SecretPassword123
sql server update -g clitest.rg000001 -n clitestserver000002 --enable-public-network false
sql server create -g clitest.rg000001 --name clitestserver000003 --admin-user admin123 --admin-password SecretPassword123 -e false
sql server update -g clitest.rg000001 -n clitestserver000003 -i
sql server update -g clitest.rg000001 -n clitestserver000003 -e true
sql server firewall-rule create --name rule1 -g clitest.rg000001 --server clitestserver000002 --start-ip-address 0.0.0.0 --end-ip-address 255.255.255.255
sql server firewall-rule show --name rule1 -g clitest.rg000001 --server clitestserver000002
sql server firewall-rule show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Sql/servers/clitestserver000002/firewallRules/rule1
sql server firewall-rule update --name rule1 -g clitest.rg000001 --server clitestserver000002 --start-ip-address 123.123.123.123 --end-ip-address 123.123.123.124
sql server firewall-rule update --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Sql/servers/clitestserver000002/firewallRules/rule1 --start-ip-address 0.0.0.0
sql server firewall-rule update --name rule1 -g clitest.rg000001 --server clitestserver000002 --end-ip-address 255.255.255.255
sql server firewall-rule create --name rule2 -g clitest.rg000001 --server clitestserver000002 --start-ip-address 123.123.123.123 --end-ip-address 123.123.123.124
sql server firewall-rule list -g clitest.rg000001 --server clitestserver000002
sql server firewall-rule delete --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Sql/servers/clitestserver000002/firewallRules/rule1
sql server firewall-rule list -g clitest.rg000001 --server clitestserver000002
sql server firewall-rule delete --name rule2 -g clitest.rg000001 --server clitestserver000002
sql server firewall-rule list -g clitest.rg000001 --server clitestserver000002
sql server outbound-firewall-rule create -g clitest.rg000001 --server clitestserver000002 --outbound-rule-fqdn testOBFR1
sql server outbound-firewall-rule show -g clitest.rg000001 --server clitestserver000002 --outbound-rule-fqdn testOBFR1
sql server outbound-firewall-rule create -g clitest.rg000001 --server clitestserver000002 --outbound-rule-fqdn testOBFR2
sql server outbound-firewall-rule list -g clitest.rg000001 --server clitestserver000002
sql server outbound-firewall-rule delete -g clitest.rg000001 --server clitestserver000002 --outbound-rule-fqdn testOBFR2
sql server outbound-firewall-rule list -g clitest.rg000001 --server clitestserver000002
sql db create -g clitest.rg000001 --server clitestserver000002 --name cliautomationdb01 --yes
sql db show -g clitest.rg000001 -s clitestserver000002 --name cliautomationdb01
sql db create -g clitest.rg000001 --server clitestserver000002 --name cliautomationdb02 --ledger-on --yes
sql db show -g clitest.rg000001 -s clitestserver000002 --name cliautomationdb02
sql db create -g clitest.rg000001 --server clitestserver000002 --name cliautomationdb01 --read-scale Disabled --backup-storage-redundancy local --yes
sql db list -g clitest.rg000001 --server clitestserver000002
sql db list-usages -g clitest.rg000001 --server clitestserver000002 --name cliautomationdb01
sql db show -g clitest.rg000001 --server clitestserver000002 --name cliautomationdb01
sql db show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Sql/servers/clitestserver000002/databases/cliautomationdb01
sql db update -g clitest.rg000001 -s clitestserver000002 -n cliautomationdb01 --service-objective P1 --max-size 10GB --read-scale Enabled --set tags.key1=value1 --backup-storage-redundancy zone
sql db update --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Sql/servers/clitestserver000002/databases/cliautomationdb01 --set tags.key2=value2
sql db rename -g clitest.rg000001 -s clitestserver000002 -n cliautomationdb01 --new-name cliautomationdb02
sql db rename --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Sql/servers/clitestserver000002/databases/cliautomationdb02 --new-name cliautomationdb03
sql db delete -g clitest.rg000001 --server clitestserver000002 --name cliautomationdb03 --yes
sql db delete --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Sql/servers/clitestserver000002/databases/cliautomationdb03 --yes
sql db create -g clitest-sql000001 --server clitest-sql000002 --name cliautomationdb01 --edition Hyperscale --family Gen5 --capacity 2 --ha-replicas 4
sql db update -g clitest-sql000001 --server clitest-sql000002 --name cliautomationdb01 --read-replicas 3
sql db update -g clitest-sql000001 --server clitest-sql000002 --name cliautomationdb01 --read-replicas 0
sql db update -g clitest-sql000001 --server clitest-sql000002 --name cliautomationdb01 --ha-replicas 2
sql db create -g clitest.rg000001 --server clitestserver000002 --name cliautomationdb01 --edition GeneralPurpose
sql db update -g clitest.rg000001 --server clitestserver000002 --name cliautomationdb01 --edition Standard --capacity 10 --max-size 250GB
sql db update -g clitest.rg000001 --server clitestserver000002 --name cliautomationdb01 -e GeneralPurpose -c 4 -f Gen5
sql db update -g clitest.rg000001 -s clitestserver000002 -n cliautomationdb01 --capacity 8
sql db update -g clitest.rg000001 -s clitestserver000002 -n cliautomationdb01 --tier BusinessCritical
sql db create -g clitest.rg000001 --server clitestserver000002 --name cliautomationdb02 -e BusinessCritical -c 8 -f Gen5
sql db create -g clitest.rg000001 --server clitestserver000002 --name cliautomationdb01 --edition GeneralPurpose
sql db update -g clitest.rg000001 --server clitestserver000002 --name cliautomationdb01 --compute-model Serverless
sql db update -g clitest.rg000001 -s clitestserver000002 -n cliautomationdb01 --auto-pause-delay 120 --min-capacity 1.0
sql db update -g clitest.rg000001 -s clitestserver000002 -n cliautomationdb01 -c 8
sql db update -g clitest.rg000001 --server clitestserver000002 --name cliautomationdb01 --compute-model Provisioned
sql db create -g clitest.rg000001 --server clitestserver000002 --name cliautomationdb02 -e GeneralPurpose -c 4 -f Gen5 --compute-model Serverless --auto-pause-delay 120 --min-capacity 1.0
sql db create -g clitest.rg000001 -s clitestserver000002 -n cliautomationdb01 --yes
sql db update -g clitest.rg000001 -s clitestserver000002 -n cliautomationdb01 --service-objective GP_Gen5_8 --no-wait
sql db op list -g clitest.rg000001 -s clitestserver000002 -d cliautomationdb01
sql db op cancel -g clitest.rg000001 -s clitestserver000002 -d cliautomationdb01 -n 91e5cc5d-39b5-4f47-b771-ac39dac9bcef
sql db str-policy set -g {resource_group} -s {server_name} -n {database_name} --retention-days {retention_days_v1} --diffbackup-hours {diffbackup_hours_v1}
sql db str-policy show -g {resource_group} -s {server_name} -n {database_name}
sql db str-policy set -g {resource_group} -s {server_name} -n {database_name} --retention-days {retention_days_v2} --diffbackup-hours {diffbackup_hours_v2}
sql db ltr-policy set -g {rg} -s {server_name} -n {database_name} --weekly-retention {weekly_retention} --monthly-retention {monthly_retention} --yearly-retention {yearly_retention} --week-of-year {week_of_year}
sql db ltr-policy show -g {rg} -s {server_name} -n {database_name}
sql db ltr-backup list -l {loc} -g {rg}
sql db ltr-backup list -l {loc}
sql db ltr-backup list -l {loc} -s {server_name} -g {rg}
sql db ltr-backup list -l {loc} -s {server_name}
sql db ltr-backup list -l {loc} -s {server_name} -d {database_name} -g {rg}
sql db ltr-backup list -l {loc} -s {server_name} -d {database_name}
sql db ltr-backup list -l {loc} -s {server_name} -d {database_name} --latest True
sql db ltr-backup show -l {loc} -s {server_name} -d {database_name} -n {backup_name}
sql db ltr-backup restore --backup-id '{backup_id}' --dest-database {dest_database_name} --dest-server {server_name} --dest-resource-group {rg}
sql db ltr-backup delete -l {loc} -s {server_name} -d {database_name} -n '{backup_name}' --yes
sql mi update -g Committer-SwaggerAndGeneratedSDKs-MI-CLI -n clitestmi000001 --edition BusinessCritical --capacity 4 --no-wait
sql mi op list -g Committer-SwaggerAndGeneratedSDKs-MI-CLI --mi clitestmi000001
sql mi op cancel -g Committer-SwaggerAndGeneratedSDKs-MI-CLI --mi clitestmi000001 -n 606457fa-8a61-469f-99ac-726e484612c7
sql server conn-policy show -g clitest.rg000001 -s clitestserver000002
sql server conn-policy update -g clitest.rg000001 -s clitestserver000002 -t Proxy
sql server conn-policy update -g clitest.rg000001 -s clitestserver000002 -t Default
sql server conn-policy update -g clitest.rg000001 -s clitestserver000002 -t Redirect
sql server ad-admin create -s {sn} -g {rg} -i {oid} -u {user}
sql server ad-admin list -s {sn} -g {rg}
sql server ad-admin update -s {sn} -g {rg} -u {user2} -i {oid2}
sql server ad-admin delete -s {sn} -g {rg}
sql server ad-admin list -s {sn} -g {rg}
sql server ad-admin create -s clitestserver000002 -g clitest.rg000001 -u DSEngAll -i 5e90ef3b-9b42-4777-819b-25c36961ea4d
sql server ad-only-auth enable -n clitestserver000002 -g clitest.rg000001
sql server ad-only-auth disable -n clitestserver000002 -g clitest.rg000001
sql server ad-only-auth get -n clitestserver000002 -g clitest.rg000001
sql db create -g clitest.rg000001 --server clitestserver000003 --name cliautomationdb01 --yes
sql db copy -g clitest.rg000001 --server clitestserver000003 --name cliautomationdb01 --dest-name cliautomationdb02
sql db copy -g clitest.rg000001 --server clitestserver000003 --name cliautomationdb01 --dest-name cliautomationdb02 --service-objective GP_Gen5_8
sql db copy -g clitest.rg000001 --server clitestserver000003 --name cliautomationdb01 --dest-name bsr_database --backup-storage-redundancy local
sql elastic-pool create -g clitest.rg000002 --server clitestserver000004 --name pool1  --edition GeneralPurpose
sql db copy -g clitest.rg000001 --server clitestserver000003 --name cliautomationdb01 --dest-name cliautomationdb02 --dest-resource-group clitest.rg000002 --dest-server clitestserver000004 --elastic-pool pool1
sql elastic-pool create -g clitest.rg000001 -s clitestserver000002 -n cliautomationpool1
sql db create -g clitest.rg000001 --server clitestserver000002 --name cliautomationdb01 -y
sql db show -g clitest.rg000001 -s clitestserver000002 -n cliautomationdb01
sql db show -g clitest.rg000001 -s clitestserver000002 -n cliautomationdb01
sql db show -g clitest.rg000001 -s clitestserver000002 -n cliautomationdb01
sql db restore -g clitest.rg000001 -s clitestserver000002 -n cliautomationdb01 -t 2021-12-04T11:06:53.131602 --dest-name cliautomationdb01restore1 --service-objective S1 --edition Standard
sql db restore -g clitest.rg000001 -s clitestserver000002 -n cliautomationdb01 -t 2021-12-04T11:06:58.628365 --dest-name cliautomationdb01restore2 --elastic-pool cliautomationpool1
sql db show -g clitest.rg000001 -s clitestserver000002 -n cliautomationdb01restore2
sql db restore -g clitest.rg000001 -s clitestserver000002 -n cliautomationdb01 -t 2021-12-04T11:07:02.852251 --dest-name bsr_database --backup-storage-redundancy geo
sql db create -g clitest.rg000001 --server clitestserver000002 --name cliautomationdb01 -y
sql db show -g clitest.rg000001 -s clitestserver000002 -n cliautomationdb01
sql db show -g clitest.rg000001 -s clitestserver000002 -n cliautomationdb01
sql db show -g clitest.rg000001 -s clitestserver000002 -n cliautomationdb01
sql db delete -g clitest.rg000001 -s clitestserver000002 -n cliautomationdb01 --yes
sql db list-deleted -g clitest.rg000001 -s clitestserver000002
sql db list-deleted -g clitest.rg000001 -s clitestserver000002
sql db list-deleted -g clitest.rg000001 -s clitestserver000002
sql db list-deleted -g clitest.rg000001 -s clitestserver000002
sql db list-deleted -g clitest.rg000001 -s clitestserver000002
sql db list-deleted -g clitest.rg000001 -s clitestserver000002
sql db list-deleted -g clitest.rg000001 -s clitestserver000002
sql db list-deleted -g clitest.rg000001 -s clitestserver000002
sql db list-deleted -g clitest.rg000001 -s clitestserver000002
sql db list-deleted -g clitest.rg000001 -s clitestserver000002
sql db list-deleted -g clitest.rg000001 -s clitestserver000002
sql db list-deleted -g clitest.rg000001 -s clitestserver000002
sql db list-deleted -g clitest.rg000001 -s clitestserver000002
sql db list-deleted -g clitest.rg000001 -s clitestserver000002
sql db list-deleted -g clitest.rg000001 -s clitestserver000002
sql db list-deleted -g clitest.rg000001 -s clitestserver000002
sql db list-deleted -g clitest.rg000001 -s clitestserver000002
sql db list-deleted -g clitest.rg000001 -s clitestserver000002
sql db list-deleted -g clitest.rg000001 -s clitestserver000002
sql db list-deleted -g clitest.rg000001 -s clitestserver000002
sql db list-deleted -g clitest.rg000001 -s clitestserver000002
sql db list-deleted -g clitest.rg000001 -s clitestserver000002
sql db list-deleted -g clitest.rg000001 -s clitestserver000002
sql db restore -g clitest.rg000001 -s clitestserver000002 -n cliautomationdb01 --deleted-time 2021-06-29T06:20:39.167000 --dest-name cliautomationdb01restore1 --service-objective S1 --edition Standard
sql db restore -g clitest.rg000001 -s clitestserver000002 -n cliautomationdb01 -t 2021-06-29T06:19:51 --deleted-time 2021-06-29T06:20:39.167000 --dest-name cliautomationdb01restore2
storage account show -g clitest.rg000001 -n clitest000004 --query primaryEndpoints.blob
storage account keys list -g clitest.rg000001 -n clitest000004 --query [0].value
sql db create -g clitest.rg000001 -s clitestserver000003 -n cliautomationdb01
sql db audit-policy show -g clitest.rg000001 -s clitestserver000003 -n cliautomationdb01
sql db audit-policy update -g clitest.rg000001 -s clitestserver000003 -n cliautomationdb01 --state Enabled --blob-storage-target-state Enabled --storage-key veryFakedStorageAccountKey== --storage-endpoint=https://clitest000004.blob.core.windows.net/ --retention-days=30 --actions DATABASE_LOGOUT_GROUP DATABASE_ROLE_MEMBER_CHANGE_GROUP
sql db audit-policy show -g clitest.rg000001 -s clitestserver000003 -n cliautomationdb01
storage account show -g clitest.rg000002 -n clitest000005 --query primaryEndpoints.blob
sql db audit-policy update -g clitest.rg000001 -s clitestserver000003 -n cliautomationdb01 --blob-storage-target-state Enabled --storage-account clitest000005
sql db audit-policy update -g clitest.rg000001 -s clitestserver000003 -n cliautomationdb01 --state Disabled
sql db threat-policy show -g clitest.rg000001 -s clitestserver000003 -n cliautomationdb01
sql db threat-policy update -g clitest.rg000001 -s clitestserver000003 -n cliautomationdb01 --state Enabled --storage-key veryFakedStorageAccountKey== --storage-endpoint https://clitest000004.blob.core.windows.net/ --retention-days 30 --email-addresses test1@example.com test2@example.com --disabled-alerts Sql_Injection_Vulnerability Access_Anomaly --email-account-admins True
storage account keys list -g clitest.rg000002 -n clitest000005 --query [0].value
sql db threat-policy update -g clitest.rg000001 -s clitestserver000003 -n cliautomationdb01 --storage-account clitest000005
monitor log-analytics workspace create -g clitest.rg000001 -n laws000006
sql db audit-policy update -g clitest.rg000001 -s clitestserver000003 -n cliautomationdb01 --state Enabled --log-analytics-target-state Enabled --log-analytics-workspace-resource-id /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/clitest.rg000001/providers/microsoft.operationalinsights/workspaces/laws000006
sql db audit-policy show -g clitest.rg000001 -s clitestserver000003 -n cliautomationdb01
sql db audit-policy update -g clitest.rg000001 -s clitestserver000003 -n cliautomationdb01 --state Enabled --log-analytics-target-state Disabled
sql db audit-policy show -g clitest.rg000001 -s clitestserver000003 -n cliautomationdb01
eventhubs namespace create -g clitest.rg000001 -n cliehnamespacedb01
eventhubs eventhub create -g clitest.rg000001 -n cliehdb01 --namespace-name cliehnamespacedb01
eventhubs namespace authorization-rule create -g clitest.rg000001 -n cliehauthruledb01 --namespace-name cliehnamespacedb01 --rights Listen Manage Send
sql db audit-policy update -g clitest.rg000001 -s clitestserver000003 -n cliautomationdb01 --state Enabled --event-hub-target-state Enabled --event-hub-authorization-rule-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.EventHub/namespaces/cliehnamespacedb01/authorizationRules/cliehauthruledb01 --event-hub cliehdb01
sql db audit-policy show -g clitest.rg000001 -s clitestserver000003 -n cliautomationdb01
sql db audit-policy update -g clitest.rg000001 -s clitestserver000003 -n cliautomationdb01 --state Enabled --event-hub-target-state Disabled
sql db audit-policy show -g clitest.rg000001 -s clitestserver000003 -n cliautomationdb01
storage account show -g clitest.rg000001 -n clitest000004 --query primaryEndpoints.blob
storage account keys list -g clitest.rg000001 -n clitest000004 --query [0].value
sql server audit-policy show -g clitest.rg000001 -n clitestserver000003
sql server audit-policy update -g clitest.rg000001 -n clitestserver000003 --state Enabled --blob-storage-target-state Enabled --storage-key veryFakedStorageAccountKey== --storage-endpoint=https://clitest000004.blob.core.windows.net/ --retention-days=30 --actions DATABASE_LOGOUT_GROUP DATABASE_ROLE_MEMBER_CHANGE_GROUP
sql server audit-policy show -g clitest.rg000001 -n clitestserver000003
storage account show -g clitest.rg000002 -n clitest000005 --query primaryEndpoints.blob
sql server audit-policy update -g clitest.rg000001 -n clitestserver000003 --blob-storage-target-state Enabled --storage-account clitest000005
sql server audit-policy update -g clitest.rg000001 -n clitestserver000003 --state Disabled
monitor log-analytics workspace create -g clitest.rg000001 -n laws000006
sql server audit-policy update -g clitest.rg000001 -n clitestserver000003 --state Enabled --log-analytics-target-state Enabled --log-analytics-workspace-resource-id /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/clitest.rg000001/providers/microsoft.operationalinsights/workspaces/laws000006
sql server audit-policy show -g clitest.rg000001 -n clitestserver000003
sql server audit-policy update -g clitest.rg000001 -n clitestserver000003 --state Enabled --log-analytics-target-state Disabled
sql server audit-policy show -g clitest.rg000001 -n clitestserver000003
eventhubs namespace create -g clitest.rg000001 -n cliehnamespacedb01
eventhubs eventhub create -g clitest.rg000001 -n cliehsrv01 --namespace-name cliehnamespacedb01
eventhubs namespace authorization-rule create -g clitest.rg000001 -n cliehauthruledb01 --namespace-name cliehnamespacedb01 --rights Listen Manage Send
sql server audit-policy update -g clitest.rg000001 -n clitestserver000003 --state Enabled --event-hub-target-state Enabled --event-hub-authorization-rule-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.EventHub/namespaces/cliehnamespacedb01/authorizationRules/cliehauthruledb01 --event-hub cliehsrv01
sql server audit-policy show -g clitest.rg000001 -n clitestserver000003
sql server audit-policy update -g clitest.rg000001 -n clitestserver000003 --state Enabled --event-hub-target-state Disabled
sql server audit-policy show -g clitest.rg000001 -n clitestserver000003
storage account show -g clitest.rg000001 -n clitest000004 --query primaryEndpoints.blob
storage account keys list -g clitest.rg000001 -n clitest000004 --query [0].value
sql server ms-support audit-policy show -g clitest.rg000001 -n clitestserver000003
sql server ms-support audit-policy update -g clitest.rg000001 -n clitestserver000003 --state Enabled --blob-storage-target-state Enabled --storage-key veryFakedStorageAccountKey== --storage-endpoint=https://clitest000004.blob.core.windows.net/
sql server ms-support audit-policy show -g clitest.rg000001 -n clitestserver000003
storage account show -g clitest.rg000002 -n clitest000005 --query primaryEndpoints.blob
sql server ms-support audit-policy update -g clitest.rg000001 -n clitestserver000003 --blob-storage-target-state Enabled --storage-account clitest000005
sql server ms-support audit-policy update -g clitest.rg000001 -n clitestserver000003 --state Disabled
monitor log-analytics workspace create -g clitest.rg000001 -n clilaworkspacems04
sql server ms-support audit-policy update -g clitest.rg000001 -n clitestserver000003 --state Enabled --log-analytics-target-state Enabled --log-analytics-workspace-resource-id /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/clitest.rg000001/providers/microsoft.operationalinsights/workspaces/clilaworkspacems04
sql server ms-support audit-policy show -g clitest.rg000001 -n clitestserver000003
sql server ms-support audit-policy update -g clitest.rg000001 -n clitestserver000003 --state Enabled --log-analytics-target-state Disabled
sql server ms-support audit-policy show -g clitest.rg000001 -n clitestserver000003
eventhubs namespace create -g clitest.rg000001 -n cliehnamespacems02
eventhubs eventhub create -g clitest.rg000001 -n cliehms02 --namespace-name cliehnamespacems02
eventhubs namespace authorization-rule create -g clitest.rg000001 -n cliehauthrulems02 --namespace-name cliehnamespacems02 --rights Listen Manage Send
sql server ms-support audit-policy update -g clitest.rg000001 -n clitestserver000003 --state Enabled --event-hub-target-state Enabled --event-hub-authorization-rule-id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.EventHub/namespaces/cliehnamespacems02/authorizationRules/cliehauthrulems02 --event-hub cliehms02
sql server ms-support audit-policy show -g clitest.rg000001 -n clitestserver000003
sql server ms-support audit-policy update -g clitest.rg000001 -n clitestserver000003 --state Enabled --event-hub-target-state Disabled
sql server ms-support audit-policy show -g clitest.rg000001 -n clitestserver000003
sql dw create -g clitest.rg000001 --server clitestserver000002 --name cliautomationdb01
sql db list -g clitest.rg000001 --server clitestserver000002
sql dw list -g clitest.rg000001 --server clitestserver000002
sql db show -g clitest.rg000001 --server clitestserver000002 --name cliautomationdb01
sql dw pause -g clitest.rg000001 --server clitestserver000002 --name cliautomationdb01
sql dw show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Sql/servers/clitestserver000002/databases/cliautomationdb01
sql dw resume -g clitest.rg000001 --server clitestserver000002 --name cliautomationdb01
sql dw show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Sql/servers/clitestserver000002/databases/cliautomationdb01
sql dw update -g clitest.rg000001 -s clitestserver000002 -n cliautomationdb01 --max-size 20TB --set tags.key1=value1
sql dw update --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Sql/servers/clitestserver000002/databases/cliautomationdb01 --service-objective DW200c
sql dw delete -g clitest.rg000001 --server clitestserver000002 --name cliautomationdb01 --yes
sql dw delete --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Sql/servers/clitestserver000002/databases/cliautomationdb01 --yes
sql server show -g clitest.rg000001 -n clitestserver000003
sql server show -g clitest.rg000001 -n clitestserver000004
sql server show -g clitest.rg000002 -n clitestserver000005
sql server dns-alias create -n alias1 -s clitestserver000003 -g clitest.rg000001
sql server dns-alias list -s clitestserver000003 -g clitest.rg000001
sql server dns-alias set -n alias1 --original-server clitestserver000003 -s clitestserver000004 -g clitest.rg000001
sql server dns-alias list -s clitestserver000003 -g clitest.rg000001
sql server dns-alias list -s clitestserver000004 -g clitest.rg000001
sql server dns-alias set -n alias1 --original-server clitestserver000003 -s clitestserver000004 -g clitest.rg000001
sql server dns-alias list -s clitestserver000004 -g clitest.rg000001
sql server dns-alias set -n alias1 --original-server clitestserver000004 --original-resource-group clitest.rg000001 -s clitestserver000005 -g clitest.rg000002
sql server dns-alias list -s clitestserver000004 -g clitest.rg000001
sql server dns-alias list -s clitestserver000005 -g clitest.rg000002
sql server dns-alias delete -n alias1 -s clitestserver000005 -g clitest.rg000002
sql server dns-alias list -s clitestserver000005 -g clitest.rg000002
sql server show -g clitest.rg000001 -n clitestserver000003
sql server show -g clitest.rg000001 -n clitestserver000004
sql server show -g clitest.rg000002 -n clitestserver000005
sql db create -g clitest.rg000001 -s clitestserver000003 -n cliautomationdb01 --yes
sql db create -g clitest.rg000001 -s clitestserver000003 -n cliautomationhs03 --service-objective HS_Gen5_8 --yes
sql db replica create -g clitest.rg000001 -s clitestserver000003 -n cliautomationdb01 --partner-server clitestserver000004
sql db replica create -g clitest.rg000001 -s clitestserver000003 -n cliautomationdb01 --partner-server clitestserver000004 --backup-storage-redundancy zone
sql db show -g clitest.rg000001 -s clitestserver000004 -n cliautomationdb01
sql db delete -g clitest.rg000001 -s clitestserver000004 -n cliautomationdb01 --yes
sql db replica create -g clitest.rg000001 -s clitestserver000003 -n cliautomationdb01 --partner-server clitestserver000004  --service-objective GP_Gen5_8 --partner-database cliautomationdb02 --secondary-type Geo
sql db replica create -g clitest.rg000001 -s clitestserver000003 -n cliautomationhs03 --partner-server clitestserver000003  --service-objective HS_Gen5_8 --partner-resource-group clitest.rg000001 --partner-database cliautomationnr04 --secondary-type Named --ha-replicas 2
sql elastic-pool create -g clitest.rg000002 --server clitestserver000005 --name pool1  --edition GeneralPurpose
sql db replica create -g clitest.rg000001 -s clitestserver000003 -n cliautomationdb01 --partner-server clitestserver000005 --partner-resource-group clitest.rg000002 --elastic-pool pool1
sql db show -g clitest.rg000002 -s clitestserver000005 -n cliautomationdb01
sql db replica list-links -g clitest.rg000001 -s clitestserver000003 -n cliautomationdb01
sql db replica list-links -g clitest.rg000002 -s clitestserver000005 -n cliautomationdb01
sql db replica set-primary -g clitest.rg000002 -s clitestserver000005 -n cliautomationdb01
sql db replica list-links -g clitest.rg000002 -s clitestserver000005 -n cliautomationdb01
sql db replica delete-link -g clitest.rg000002 -s clitestserver000005 -n cliautomationdb01 --partner-resource-group clitest.rg000001 --partner-server clitestserver000004 --yes
sql db replica list-links -g clitest.rg000002 -s clitestserver000005 -n cliautomationdb01
sql db replica delete-link -g clitest.rg000002 -s clitestserver000005 -n cliautomationdb01 --partner-resource-group clitest.rg000001 --partner-server clitestserver000004 --yes
sql db replica list-links -g clitest.rg000002 -s clitestserver000005 -n cliautomationdb01
sql db replica set-primary -g clitest.rg000002 -s clitestserver000005 -n cliautomationdb01 --allow-data-loss
sql db replica list-links -g clitest.rg000002 -s clitestserver000005 -n cliautomationdb01
sql db replica set-primary -g clitest.rg000001 -s clitestserver000003 -n cliautomationdb01 --allow-data-loss
sql elastic-pool create -g clitest.rg000001 --server clitestserver000002 --name cliautomationpool01 --dtu 1200 --edition Standard --db-dtu-min 10 --db-dtu-max 50 --storage 1200GB
sql elastic-pool show -g clitest.rg000001 --server clitestserver000002 --name cliautomationpool01
sql elastic-pool show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Sql/servers/clitestserver000002/elasticPools/cliautomationpool01
sql elastic-pool list -g clitest.rg000001 --server clitestserver000002
sql elastic-pool update -g clitest.rg000001 --server clitestserver000002 --name cliautomationpool01 --dtu 50 --storage 50GB --set tags.key1=value1
sql elastic-pool update --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Sql/servers/clitestserver000002/elasticPools/cliautomationpool01 --dtu 1200 --db-dtu-min 10 --db-dtu-max 50 --storage 1200GB
sql elastic-pool update -g clitest.rg000001 --server clitestserver000002 --name cliautomationpool01 --remove tags.key1
sql elastic-pool create -g clitest.rg000001 --server clitestserver000002 --name cliautomationpool02 
sql elastic-pool list -g clitest.rg000001 -s clitestserver000002
sql db create -g clitest.rg000001 --server clitestserver000002 --name cliautomationdb02 --elastic-pool cliautomationpool01
sql db show -g clitest.rg000001 --server clitestserver000002 --name cliautomationdb02
sql db update -g clitest.rg000001 -s clitestserver000002 -n cliautomationdb02 --elastic-pool cliautomationpool02 --service-objective ElasticPool
sql db show -g clitest.rg000001 --server clitestserver000002 --name cliautomationdb02
sql db update -g clitest.rg000001 -s clitestserver000002 -n cliautomationdb02 --service-objective S1
sql db update -g clitest.rg000001 -s clitestserver000002 -n cliautomationdb02 --elastic-pool /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Sql/servers/clitestserver000002/elasticPools/cliautomationpool01 --service-objective ElasticPool
sql db show -g clitest.rg000001 -s clitestserver000002 -n cliautomationdb02
sql elastic-pool list-dbs -g clitest.rg000001 -s clitestserver000002 -n cliautomationpool01
sql db list -g clitest.rg000001 -s clitestserver000002 --elastic-pool cliautomationpool01
sql db delete -g clitest.rg000001 --server clitestserver000002 --name cliautomationdb02 --yes
sql elastic-pool delete -g clitest.rg000001 --server clitestserver000002 --name cliautomationpool01
sql elastic-pool delete --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Sql/servers/clitestserver000002/elasticPools/cliautomationpool01
sql elastic-pool create -g clitest.rg000001 --server clitestserver000002 --name cliautomationpool1 --edition GeneralPurpose
sql elastic-pool update -g clitest.rg000001 --server clitestserver000002 --name cliautomationpool1 --edition Standard --capacity 100 --max-size 250GB --db-max-dtu 10
sql elastic-pool update -g clitest.rg000001 --server clitestserver000002 --name cliautomationpool1 -e GeneralPurpose -c 4 -f Gen5 --db-max-capacity 2
sql elastic-pool update -g clitest.rg000001 -s clitestserver000002 -n cliautomationpool1 --capacity 8
sql elastic-pool update -g clitest.rg000001 -s clitestserver000002 -n cliautomationpool1 --tier BusinessCritical
sql elastic-pool update -g clitest.rg000001 -s clitestserver000002 -n cliautomationpool1 --db-max-capacity 1 --db-min-capacity 0.5
sql elastic-pool create -g clitest.rg000001 --server clitestserver000002 --name cliautomationpool2 -e BusinessCritical -c 8 -f Gen5
sql elastic-pool create -g clitest.rg000001 --server clitestserver000002 --name operationtestep1 --dtu 125 --edition Premium --db-dtu-min 0 --db-dtu-max 50 --storage 50GB
sql elastic-pool update -g clitest.rg000001 --server clitestserver000002 --name operationtestep1 --dtu 250 --db-dtu-min 50 --db-dtu-max 250
sql elastic-pool op list -g clitest.rg000001 --server clitestserver000002 --elastic-pool operationtestep1
sql elastic-pool op cancel -g clitest.rg000001 --server clitestserver000002 --elastic-pool operationtestep1 --name 31ef718c-2403-44fe-a438-b06ced00e4b6
sql db list-editions -l westeurope
sql db list-editions -l westeurope --available
sql db list-editions -l westeurope --show-details max-size
sql db list-editions -l westeurope --edition standard
sql db list-editions -l westeurope --dtu 100
sql db list-editions -l westeurope --vcore 2
sql db list-editions -l westeurope --edition standard --service-objective s0
sql elastic-pool list-editions -l westeurope
sql elastic-pool list-editions -l westeurope --edition standard
sql elastic-pool list-editions -l westeurope --dtu 100
sql elastic-pool list-editions -l westeurope --vcore 2
sql elastic-pool list-editions -l westeurope --show-details max-size
sql elastic-pool list-editions -l westeurope --show-details db-max-size
sql elastic-pool list-editions -l westeurope --edition standard --show-details db-max-dtu
sql elastic-pool list-editions -l westeurope --edition standard --show-details db-min-dtu
sql elastic-pool list-editions -l westeurope --edition standard --show-details db-min-dtu db-max-dtu db-max-size max-size
sql server firewall-rule create --name allowAllIps -g clitest.rg000001 --server clitestserver000002 --start-ip-address 0.0.0.0 --end-ip-address 0.0.0.0
sql db create -g clitest.rg000001 --server clitestserver000002 --name cliautomationdb01
sql db create -g clitest.rg000001 --server clitestserver000002 --name cliautomationdb02
sql db create -g clitest.rg000001 --server clitestserver000002 --name cliautomationdb03
storage account show -g clitest.rg000001 -n clitest000003 --query primaryEndpoints.blob
storage account keys list -g clitest.rg000001 -n clitest000003 --query [0].value
storage blob generate-sas --account-name clitest000003 -c bacpacs -n testbacpac2.bacpac --permissions rw --expiry 9999-12-25T00:00:00Z
storage container create -n bacpacs --account-name clitest000003 --account-key veryFakedStorageAccountKey== 
sql db export -s clitestserver000002 -n cliautomationdb01 -g clitest.rg000001 -p SecretPassword123 -u admin123 --storage-key veryFakedStorageAccountKey== --storage-key-type StorageAccessKey --storage-uri https://clitest000003.blob.core.windows.net/bacpacs/testbacpac.bacpac
sql db export -s clitestserver000002 -n cliautomationdb01 -g clitest.rg000001 -p SecretPassword123 -u admin123 --storage-key se=9999-12-25T00%3A00%3A00Z&sp=rw&sv=2018-11-09&sr=b&sig=X6bPzFyFbxDHYFnCL9l%2BpiV1aT3tXd02PXlwE5sdBiA%3D --storage-key-type SharedAccessKey --storage-uri https://clitest000003.blob.core.windows.net/bacpacs/testbacpac2.bacpac
sql db import -s clitestserver000002 -n cliautomationdb02 -g clitest.rg000001 -p SecretPassword123 -u admin123 --storage-key veryFakedStorageAccountKey== --storage-key-type StorageAccessKey --storage-uri https://clitest000003.blob.core.windows.net/bacpacs/testbacpac.bacpac
sql db import -s clitestserver000002 -n cliautomationdb03 -g clitest.rg000001 -p SecretPassword123 -u admin123 --storage-key se=9999-12-25T00%3A00%3A00Z&sp=rw&sv=2018-11-09&sr=b&sig=X6bPzFyFbxDHYFnCL9l%2BpiV1aT3tXd02PXlwE5sdBiA%3D --storage-key-type SharedAccessKey --storage-uri https://clitest000003.blob.core.windows.net/bacpacs/testbacpac2.bacpac
sql db show-connection-string -s myserver -n mydb -c ado.net
sql db show-connection-string -s myserver -n mydb -c ado.net -a ADPassword
sql db show-connection-string -s myserver -n mydb -c ado.net -a ADIntegrated
sql db show-connection-string -s myserver -n mydb -c sqlcmd
sql db show-connection-string -s myserver -n mydb -c sqlcmd -a ADPassword
sql db show-connection-string -s myserver -n mydb -c sqlcmd -a ADIntegrated
sql db show-connection-string -s myserver -n mydb -c jdbc
sql db show-connection-string -s myserver -n mydb -c jdbc -a ADPassword
sql db show-connection-string -s myserver -n mydb -c jdbc -a ADIntegrated
sql db show-connection-string -s myserver -n mydb -c php_pdo
sql db show-connection-string -s myserver -n mydb -c php_pdo -a ADPassword
sql db show-connection-string -s myserver -n mydb -c php_pdo -a ADIntegrated
sql db show-connection-string -s myserver -n mydb -c php
sql db show-connection-string -s myserver -n mydb -c php -a ADPassword
sql db show-connection-string -s myserver -n mydb -c php -a ADIntegrated
sql db show-connection-string -s myserver -n mydb -c odbc
sql db show-connection-string -s myserver -n mydb -c odbc -a ADPassword
sql db show-connection-string -s myserver -n mydb -c odbc -a ADIntegrated
sql db create -g clitest.rg000001 --server clitestserver000002 --name sqltdedb000003
sql db tde show -g clitest.rg000001 -s clitestserver000002 -d sqltdedb000003
sql db tde list-activity -g clitest.rg000001 -s clitestserver000002 -d sqltdedb000003
sql db tde set -g clitest.rg000001 -s clitestserver000002 -d sqltdedb000003 --status Disabled
sql db tde list-activity -g clitest.rg000001 -s clitestserver000002 -d sqltdedb000003
sql db tde show -g clitest.rg000001 -s clitestserver000002 -d sqltdedb000003
sql db tde set -g clitest.rg000001 -s clitestserver000002 -d sqltdedb000003 --status Enabled
sql db tde list-activity -g clitest.rg000001 -s clitestserver000002 -d sqltdedb000003
sql db tde show -g clitest.rg000001 -s clitestserver000002 -d sqltdedb000003
sql server update -g clitest.rg000001 -n clitestserver000002 -i
sql db create -g clitest.rg000001 --server clitestserver000002 --name sqltdebyok000004
keyvault set-policy -g clitest.rg000001 -n sqltdebyok000003 --object-id 92e958c4-b79d-4e1f-87cd-03176eed491b --key-permissions wrapKey unwrapKey get list
keyvault key create -n sqltdebyok000005 -p software --vault-name sqltdebyok000003
sql server key create -g clitest.rg000001 -s clitestserver000002 -k https://sqltdebyok000003.vault.azure.net/keys/sqltdebyok000005/81bab0c401934064bc3b6f83f98bf77a
sql server key show -g clitest.rg000001 -s clitestserver000002 -k https://sqltdebyok000003.vault.azure.net/keys/sqltdebyok000005/81bab0c401934064bc3b6f83f98bf77a
sql server key list -g clitest.rg000001 -s clitestserver000002
sql server tde-key show -g clitest.rg000001 -s clitestserver000002
sql server tde-key set -g clitest.rg000001 -s clitestserver000002 -t AzureKeyVault -k https://sqltdebyok000003.vault.azure.net/keys/sqltdebyok000005/81bab0c401934064bc3b6f83f98bf77a --auto-rotation-enabled
sql server tde-key show -g clitest.rg000001 -s clitestserver000002
sql server tde-key set -g clitest.rg000001 -s clitestserver000002 -t ServiceManaged
sql server tde-key show -g clitest.rg000001 -s clitestserver000002
sql server key delete -g clitest.rg000001 -s clitestserver000002 -k https://sqltdebyok000003.vault.azure.net/keys/sqltdebyok000005/81bab0c401934064bc3b6f83f98bf77a
sql server key list -g clitest.rg000001 -s clitestserver000002
sql server create -g alswansotest3-rg -n umitest000001 -l eastus2euap -i --admin-user admin123 --admin-password SecretPassword123 --user-assigned-identity-id /subscriptions/e64f3e8e-ab91-4a65-8cdd-5cd2f47d00b4/resourceGroups/viparek/providers/Microsoft.ManagedIdentity/userAssignedIdentities/testumi --identity-type SystemAssigned,UserAssigned --pid /subscriptions/e64f3e8e-ab91-4a65-8cdd-5cd2f47d00b4/resourceGroups/viparek/providers/Microsoft.ManagedIdentity/userAssignedIdentities/testumi
sql server show -g alswansotest3-rg --name umitest000001
sql server delete -g alswansotest3-rg -n umitest000001 --yes
sql server show -g alswansotest3-rg -n umitest000001
network vnet create -g clitest.rg000001 -n vnet1
network vnet subnet create -g clitest.rg000001 --vnet-name vnet1 -n subnet1 --address-prefix 10.0.1.0/24
network vnet subnet show -n subnet1 --vnet-name vnet1 -g clitest.rg000001
network vnet create -g clitest.rg000001 -n vnet2
network vnet subnet create -g clitest.rg000001 --vnet-name vnet2 -n subnet1 --address-prefix 10.0.1.0/24 --service-endpoints Microsoft.Sql
network vnet subnet show -n subnet1 --vnet-name vnet2 -g clitest.rg000001
sql server vnet-rule create --name rule1 -g clitest.rg000001 --server clitestserver000002 --subnet subnet1 --vnet-name vnet1 -i
sql server vnet-rule show --name rule1 -g clitest.rg000001 --server clitestserver000002
sql server vnet-rule create --name rule2 -g clitest.rg000001 --server clitestserver000002 --subnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/vnet2/subnets/subnet1
sql server vnet-rule update --name rule1 -g clitest.rg000001 --server clitestserver000002 --subnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/vnet2/subnets/subnet1
sql server vnet-rule update --name rule2 -g clitest.rg000001 --server clitestserver000002 --subnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Network/virtualNetworks/vnet1/subnets/subnet1 -i
sql server vnet-rule list -g clitest.rg000001 --server clitestserver000002
sql server vnet-rule delete --name rule1 -g clitest.rg000001 --server clitestserver000002
sql server vnet-rule delete --name rule2 -g clitest.rg000001 --server clitestserver000002
sql list-usages -l westus
sql show-usage -l westus -u ServerQuota
sql db create -g clitest.rg000001 --server clitestserver000002 --name createUnzonedUpdateToZonedDb --edition Premium --zone-redundant False
sql db update -g clitest.rg000001 -s clitestserver000002 -n createUnzonedUpdateToZonedDb --service-objective P1 --zone-redundant
sql db create -g clitest.rg000001 --server clitestserver000002 --name createZonedUpdateToUnzonedDb --edition Premium --z
sql db update -g clitest.rg000001 -s clitestserver000002 -n createZonedUpdateToUnzonedDb --service-objective P1 --z False
sql db create -g clitest.rg000001 --server clitestserver000002 --name updateNoParamForUnzonedDb --edition Premium
sql db update -g clitest.rg000001 -s clitestserver000002 -n updateNoParamForUnzonedDb --service-objective P2
sql db create -g clitest.rg000001 --server clitestserver000002 --name updateNoParamForZonedDb --edition Premium --zone-redundant
sql db update -g clitest.rg000001 -s clitestserver000002 -n updateNoParamForZonedDb --service-objective P2
sql elastic-pool create -g clitest.rg000001 --server clitestserver000002 --name createUnzonedUpdateToZonedPool --edition Premium --z False
sql elastic-pool show -g clitest.rg000001 --server clitestserver000002 --name createUnzonedUpdateToZonedPool
sql elastic-pool update -g clitest.rg000001 -s clitestserver000002 -n createUnzonedUpdateToZonedPool --z
sql elastic-pool show -g clitest.rg000001 --server clitestserver000002 --name createUnzonedUpdateToZonedPool
sql elastic-pool create -g clitest.rg000001 --server clitestserver000002 --name createZonedUpdateToUnzonedPool --edition Premium --zone-redundant
sql elastic-pool show -g clitest.rg000001 --server clitestserver000002 --name createZonedUpdateToUnzonedPool
sql elastic-pool update -g clitest.rg000001 -s clitestserver000002 -n createZonedUpdateToUnzonedPool --zone-redundant False
sql elastic-pool show -g clitest.rg000001 --server clitestserver000002 --name createZonedUpdateToUnzonedPool
sql elastic-pool create -g clitest.rg000001 --server clitestserver000002 --name updateNoParamForUnzonedPool --edition Premium
sql elastic-pool show -g clitest.rg000001 --server clitestserver000002 --name updateNoParamForUnzonedPool
sql elastic-pool update -g clitest.rg000001 -s clitestserver000002 -n updateNoParamForUnzonedPool --dtu 250
sql elastic-pool show -g clitest.rg000001 --server clitestserver000002 --name updateNoParamForUnzonedPool
sql elastic-pool create -g clitest.rg000001 --server clitestserver000002 --name updateNoParamForZonedPool --edition Premium --zone-redundant
sql elastic-pool show -g clitest.rg000001 --server clitestserver000002 --name updateNoParamForZonedPool
sql elastic-pool update -g clitest.rg000001 -s clitestserver000002 -n updateNoParamForZonedPool --dtu 250
sql elastic-pool show -g clitest.rg000001 --server clitestserver000002 --name updateNoParamForZonedPool
sql db create -g clitest.rg000001 --server clitestserver000002 --name createDb1maintenance --edition Premium --maint-config-id SQL_EastUS2_DB_1
sql db create -g clitest.rg000001 --server clitestserver000002 --name createDb2maintenance --edition Standard --capacity 50 --maint-config-id /subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Maintenance/publicMaintenanceConfigurations/SQL_EastUS2_DB_2
sql db create -g clitest.rg000001 --server clitestserver000002 --name updateEnrollAndSwitchDb1maintenance --edition Standard
sql db update -g clitest.rg000001 --server clitestserver000002 --name updateEnrollAndSwitchDb1maintenance --edition Premium --capacity 125 -m SQL_EastUS2_DB_2
sql db update -g clitest.rg000001 --server clitestserver000002 --name updateEnrollAndSwitchDb1maintenance -m /subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Maintenance/publicMaintenanceConfigurations/SQL_EastUS2_DB_1 --zone-redundant
sql elastic-pool create -g clitest.rg000001 --server clitestserver000002 --name createDb1maintenance --edition Premium --maint-config-id SQL_EastUS2_DB_1
sql elastic-pool create -g clitest.rg000001 --server clitestserver000002 --name createDb2maintenance --edition Standard --capacity 100 --maint-config-id /subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Maintenance/publicMaintenanceConfigurations/SQL_EastUS2_DB_2
sql elastic-pool create -g clitest.rg000001 --server clitestserver000002 --name updateEnrollAndSwitchDb1maintenance --edition Premium
sql elastic-pool update -g clitest.rg000001 --server clitestserver000002 --name updateEnrollAndSwitchDb1maintenance --edition Premium -m SQL_EastUS2_DB_2
sql elastic-pool update -g clitest.rg000001 --server clitestserver000002 --name updateEnrollAndSwitchDb1maintenance --maint-config-id /subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Maintenance/publicMaintenanceConfigurations/SQL_EastUS2_DB_1 --zone-redundant
sql mi show -g {rg} -n {managed_instance_name_1}
sql mi show -g {rg} -n {managed_instance_name_2}
sql stg create -g {rg} -l {loc} --trust-scope {trust_scope} -n {stg_name} -m {mi1} {mi2}
sql stg show -g {rg} -l {loc} -n {stg_name}
sql stg list -g {rg} --instance-name {managed_instance_name_1}
sql stg list -g {rg} -l {loc}
sql stg delete -g {rg} -l {loc} -n {stg_name} --yes
sql mi create -g {rg} -n {managed_instance_name} -l {loc} -u {username} -p {admin_password} --subnet {subnet} --license-type {license_type} --capacity {v_cores} --storage {storage_size_in_gb} --edition {edition} --family {family} --collation {collation} --proxy-override {proxy_override} --public-data-endpoint-enabled --timezone-id "{timezone_id}" --maint-config-id "{maintenance_id}"
sql mi delete --ids /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/northeutest/providers/Microsoft.Sql/managedInstances/clitestmi000001 --yes
sql mi show -g Committer-SwaggerAndGeneratedSDKs-MI-CLI -n clitestmi000001
sql mi show --ids /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/Committer-SwaggerAndGeneratedSDKs-MI-CLI/providers/Microsoft.Sql/managedInstances/clitestmi000001
sql mi update -g Committer-SwaggerAndGeneratedSDKs-MI-CLI -n clitestmi000001 --admin-password SecretPassword456 -i
sql mi update --ids /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/Committer-SwaggerAndGeneratedSDKs-MI-CLI/providers/Microsoft.Sql/managedInstances/clitestmi000001 --admin-password SecretPassword123
sql mi update -g Committer-SwaggerAndGeneratedSDKs-MI-CLI -n clitestmi000001 --minimal-tls-version 1.1
sql mi update -g Committer-SwaggerAndGeneratedSDKs-MI-CLI -n clitestmi000001 --set tags.tagName3=tagValue3
sql mi update -g Committer-SwaggerAndGeneratedSDKs-MI-CLI -n clitestmi000001 --remove tags.tagName1
sql mi update -g Committer-SwaggerAndGeneratedSDKs-MI-CLI -n clitestmi000001 --tags tagName1=tagValue1
sql mi update -g Committer-SwaggerAndGeneratedSDKs-MI-CLI -n clitestmi000001 --tags ""
sql mi update -g Committer-SwaggerAndGeneratedSDKs-MI-CLI -n clitestmi000001 --subnet /subscriptions/4cac86b0-1e56-48c2-9df2-669a6d2d87c5/resourceGroups/Committer-SwaggerAndGeneratedSDKs-MI-CLI/providers/Microsoft.Network/virtualNetworks/vnet-powershell-cli-testing/subnets/ManagedInstance2
sql mi update -g Committer-SwaggerAndGeneratedSDKs-MI-CLI -n clitestmi000001 --subnet ManagedInstance2 --vnet-name vnet-powershell-cli-testing
sql mi list
sql mi show -g Committer-SwaggerAndGeneratedSDKs-MI-CLI -n clitestmi000001
sql instance-pool list -g Committer-SwaggerAndGeneratedSDKs-MI-CLI
sql instance-pool create -g Committer-SwaggerAndGeneratedSDKs-MI-CLI -n clitestip000002 -l westeurope --subnet /subscriptions/4cac86b0-1e56-48c2-9df2-669a6d2d87c5/resourceGroups/Committer-SwaggerAndGeneratedSDKs-MI-CLI/providers/Microsoft.Network/virtualNetworks/vnet-powershell-cli-testing/subnets/ManagedInstance --license-type LicenseIncluded --capacity 8 -e GeneralPurpose -f Gen5
sql instance-pool show -g Committer-SwaggerAndGeneratedSDKs-MI-CLI -n clitestip000002
sql instance-pool update -g Committer-SwaggerAndGeneratedSDKs-MI-CLI -n clitestip000002 --tags bar=foo foo=bar
sql instance-pool update -g Committer-SwaggerAndGeneratedSDKs-MI-CLI -n clitestip000002 --tags ""
sql instance-pool create -g Committer-SwaggerAndGeneratedSDKs-MI-CLI -n clitestip000003 -l westeurope --subnet /subscriptions/4cac86b0-1e56-48c2-9df2-669a6d2d87c5/resourceGroups/Committer-SwaggerAndGeneratedSDKs-MI-CLI/providers/Microsoft.Network/virtualNetworks/vnet-powershell-cli-testing/subnets/ManagedInstance --license-type LicenseIncluded --capacity 8 -e GeneralPurpose -f Gen5
sql instance-pool show -g Committer-SwaggerAndGeneratedSDKs-MI-CLI -n clitestip000003
sql instance-pool update -g Committer-SwaggerAndGeneratedSDKs-MI-CLI -n clitestip000003 --tags bar=foo foo=bar
sql instance-pool update -g Committer-SwaggerAndGeneratedSDKs-MI-CLI -n clitestip000003 --tags ""
sql instance-pool list -g Committer-SwaggerAndGeneratedSDKs-MI-CLI
sql instance-pool delete -g Committer-SwaggerAndGeneratedSDKs-MI-CLI -n clitestip000002 --yes
sql instance-pool show -g Committer-SwaggerAndGeneratedSDKs-MI-CLI -n clitestip000002
sql instance-pool delete -g Committer-SwaggerAndGeneratedSDKs-MI-CLI -n clitestip000003 --yes --no-wait
sql instance-pool list -g Committer-SwaggerAndGeneratedSDKs-MI-CLI
sql mi show -g {rg} -n {managed_instance_name}
sql midb create -g {rg} --mi {managed_instance_name} -n {database_name} --collation {collation}
keyvault create -g {rg} -n {vault_name} --enable-soft-delete true
keyvault set-policy -g {rg} -n {vault_name} --object-id {mi_identity} --key-permissions wrapKey unwrapKey get list
keyvault key create -n {key_name} -p software --vault-name {vault_name}
sql mi key create -g {rg} --mi {managed_instance_name} -k {kid}
sql mi key show -g {rg} --mi {managed_instance_name} -k {kid}
sql mi key list -g {rg} --mi {managed_instance_name}
sql mi tde-key show -g {rg} --mi {managed_instance_name}
sql mi tde-key set -g {rg} --mi {managed_instance_name} -t AzureKeyVault -k {kid} --auto-rotation-enabled
sql mi tde-key show -g {rg} --mi {managed_instance_name}
sql mi tde-key set -g {rg} --mi {managed_instance_name} -t ServiceManaged
sql mi tde-key show -g {rg} --mi {managed_instance_name}
sql midb create -g {rg} --mi {managed_instance_name} -n {database_name} --collation {collation}
sql midb short-term-retention-policy set -g {rg} --mi {managed_instance_name} -n {database_name} --retention-days {retention_days_inc}
sql midb short-term-retention-policy show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb delete -g {rg} --managed-instance {managed_instance_name} -n {database_name} --yes
sql midb list-deleted -g {rg} --managed-instance {managed_instance_name}
sql midb short-term-retention-policy set -g {rg} --mi {managed_instance_name} -n {database_name} --retention-days {retention_days_dec} --deleted-time {deleted_time}
sql midb short-term-retention-policy show -g {rg} --mi {managed_instance_name} -n {database_name} --deleted-time {deleted_time}
sql midb create -g {rg} --mi {managed_instance_name} -n {database_name} --collation {collation}
sql midb ltr-policy set -g {rg} --mi {managed_instance_name} -n {database_name} --weekly-retention {weekly_retention} --monthly-retention {monthly_retention} --yearly-retention {yearly_retention} --week-of-year {week_of_year}
sql midb ltr-policy show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb ltr-backup list -l {loc} -g {rg}
sql midb ltr-backup list -l {loc}
sql midb ltr-backup list -l {loc} --mi {managed_instance_name} -g {rg}
sql midb ltr-backup list -l {loc} --mi {managed_instance_name}
sql midb ltr-backup list -l {loc} --mi {managed_instance_name} -d {database_name} -g {rg}
sql midb ltr-backup list -l {loc} --mi {managed_instance_name} -d {database_name}
sql midb create -g {rg} --mi {managed_instance_name} -n {database_name} --collation {collation}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb show -g {rg} --mi {managed_instance_name} -n {database_name}
sql midb delete -g {rg} --managed-instance {managed_instance_name} -n {database_name} --yes
sql midb list-deleted -g {rg} --managed-instance {managed_instance_name}
sql midb restore -g {rg} --mi {managed_instance_name} -n {database_name} --dest-name {restored_database_name} --deleted-time {deleted_time} --time {deleted_time}
sql midb create -g Committer-SwaggerAndGeneratedSDKs-MI-CLI --mi clitestmi000001 -n cliautomationdb01 --collation Serbian_Cyrillic_100_CS_AS
sql midb restore -g Committer-SwaggerAndGeneratedSDKs-MI-CLI --mi clitestmi000001 -n cliautomationdb01 --dest-name restoredcliautomationdb01 --time 2021-12-04T11:21:45.185110
sql midb list -g Committer-SwaggerAndGeneratedSDKs-MI-CLI --managed-instance clitestmi000001
sql midb show -g Committer-SwaggerAndGeneratedSDKs-MI-CLI --managed-instance clitestmi000001 -n cliautomationdb01
sql midb show --ids /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/Committer-SwaggerAndGeneratedSDKs-MI-CLI/providers/Microsoft.Sql/managedInstances/clitestmi000001/databases/restoredcliautomationdb01
sql midb delete -g Committer-SwaggerAndGeneratedSDKs-MI-CLI --managed-instance clitestmi000001 -n cliautomationdb01 --yes
sql midb show -g Committer-SwaggerAndGeneratedSDKs-MI-CLI --managed-instance clitestmi000001 -n cliautomationdb01
sql mi ad-admin create --mi {managed_instance_name} -g {rg} -i {oid} -u {user}
sql mi ad-admin list --mi {managed_instance_name} -g {rg}
sql mi ad-admin update --mi {managed_instance_name} -g {rg} -u {user2} -i {oid2}
sql mi ad-admin delete --mi {managed_instance_name} -g {rg}
sql mi ad-admin list --mi {managed_instance_name} -g {rg}
sql mi ad-admin create --mi {managed_instance_name} -g {rg} -i {oid} -u {user}
sql mi ad-only-auth enable -n {managed_instance_name} -g {rg}
sql mi ad-only-auth disable -n {managed_instance_name} -g {rg}
sql mi ad-only-auth get -n {managed_instance_name} -g {rg}
sql db create -g clitest.rg000001 --server clitestserver000003 --name db1
sql failover-group create -n fgclitest16578-lulu -g clitest.rg000001 -s clitestserver000003 --partner-resource-group clitest.rg000002 --partner-server clitestserver000004 --failover-policy Automatic --grace-period 2
sql failover-group list -g clitest.rg000001 -s clitestserver000003
sql failover-group show -g clitest.rg000002 -s clitestserver000004 -n fgclitest16578-lulu
sql failover-group update -g clitest.rg000001 -s clitestserver000003 -n fgclitest16578-lulu --grace-period 3 --add-db db1
sql failover-group show -g clitest.rg000002 -s clitestserver000004 -n fgclitest16578-lulu
sql db list -g clitest.rg000002 -s clitestserver000004
sql failover-group update -g clitest.rg000001 -s clitestserver000003 -n fgclitest16578-lulu --failover-policy Manual
sql failover-group set-primary -g clitest.rg000002 -s clitestserver000004 -n fgclitest16578-lulu
sql failover-group show -g clitest.rg000002 -s clitestserver000004 -n fgclitest16578-lulu
sql failover-group show -g clitest.rg000001 -s clitestserver000003 -n fgclitest16578-lulu
sql failover-group set-primary -g clitest.rg000001 -s clitestserver000003 -n fgclitest16578-lulu
sql failover-group show -g clitest.rg000002 -s clitestserver000004 -n fgclitest16578-lulu
sql failover-group show -g clitest.rg000001 -s clitestserver000003 -n fgclitest16578-lulu
sql failover-group set-primary -g clitest.rg000001 -s clitestserver000003 -n fgclitest16578-lulu
sql failover-group show -g clitest.rg000002 -s clitestserver000004 -n fgclitest16578-lulu
sql failover-group show -g clitest.rg000001 -s clitestserver000003 -n fgclitest16578-lulu
sql failover-group update -g clitest.rg000001 -s clitestserver000003 -n fgclitest16578-lulu --remove-db db1
sql db show -g clitest.rg000002 -s clitestserver000004 -n db1
sql failover-group delete -g clitest.rg000001 -s clitestserver000003 -n fgclitest16578-lulu
sql failover-group list -g clitest.rg000001 -s clitestserver000003
sql failover-group list -g clitest.rg000002 -s clitestserver000004
sql virtual-cluster list
sql virtual-cluster list -g {rg}
sql virtual-cluster show -g {rg} -n {vc_name}
sql instance-failover-group create -n fgtest2021a -g Committer-SwaggerAndGeneratedSDKs-MI-CLI --mi clitestmi000001 --partner-resource-group Committer-SwaggerAndGeneratedSDKs-MI-CLI --partner-mi clitestmi000002 --failover-policy Automatic --grace-period 2
sql instance-failover-group show -g Committer-SwaggerAndGeneratedSDKs-MI-CLI -l westus -n fgtest2021a
sql instance-failover-group update -g Committer-SwaggerAndGeneratedSDKs-MI-CLI -n fgtest2021a -l westeurope --grace-period 3 
sql instance-failover-group show -g Committer-SwaggerAndGeneratedSDKs-MI-CLI -l westus -n fgtest2021a
sql instance-failover-group update -g Committer-SwaggerAndGeneratedSDKs-MI-CLI -n fgtest2021a -l westeurope --failover-policy Manual
sql instance-failover-group set-primary -g Committer-SwaggerAndGeneratedSDKs-MI-CLI -n fgtest2021a -l westus 
sql instance-failover-group show -g Committer-SwaggerAndGeneratedSDKs-MI-CLI -l westus -n fgtest2021a
sql instance-failover-group show -g Committer-SwaggerAndGeneratedSDKs-MI-CLI -l westeurope -n fgtest2021a
sql instance-failover-group set-primary --allow-data-loss -g Committer-SwaggerAndGeneratedSDKs-MI-CLI -n fgtest2021a -l westeurope
sql instance-failover-group show -g Committer-SwaggerAndGeneratedSDKs-MI-CLI -l westus -n fgtest2021a
sql instance-failover-group show -g Committer-SwaggerAndGeneratedSDKs-MI-CLI -l westeurope -n fgtest2021a
sql instance-failover-group set-primary -g Committer-SwaggerAndGeneratedSDKs-MI-CLI -n fgtest2021a -l westeurope
sql instance-failover-group show -g Committer-SwaggerAndGeneratedSDKs-MI-CLI -l westus -n fgtest2021a
sql instance-failover-group show -g Committer-SwaggerAndGeneratedSDKs-MI-CLI -l westeurope -n fgtest2021a
sql instance-failover-group delete -g Committer-SwaggerAndGeneratedSDKs-MI-CLI -l westeurope -n fgtest2021a
sql db create -g clitest.rg000001 -s clitestserver000002 -n sensitivityclassificationsdb01 --sample-name AdventureWorksLT
sql db classification list -g clitest.rg000001 -s clitestserver000002 -n sensitivityclassificationsdb01
storage account show -g clitest.rg000001 -n clitest000003 --query primaryEndpoints.blob
storage account keys list -g clitest.rg000001 -n clitest000003 --query [0].value
sql db threat-policy update -g clitest.rg000001 -s clitestserver000002 -n sensitivityclassificationsdb01 --state Enabled --storage-key veryFakedStorageAccountKey== --storage-endpoint https://clitest000003.blob.core.windows.net/ --retention-days 30 --email-addresses test1@example.com test2@example.com --disabled-alerts Sql_Injection_Vulnerability Access_Anomaly --email-account-admins True
sql db classification recommendation list -g clitest.rg000001 -s clitestserver000002 -n sensitivityclassificationsdb01
sql db classification recommendation disable -g clitest.rg000001 -s clitestserver000002 -n sensitivityclassificationsdb01 --schema SalesLT --table Customer --column FirstName
sql db classification recommendation list -g clitest.rg000001 -s clitestserver000002 -n sensitivityclassificationsdb01
sql db classification recommendation enable -g clitest.rg000001 -s clitestserver000002 -n sensitivityclassificationsdb01 --schema SalesLT --table Customer --column FirstName
sql db classification recommendation list -g clitest.rg000001 -s clitestserver000002 -n sensitivityclassificationsdb01
sql db classification update -g clitest.rg000001 -s clitestserver000002 -n sensitivityclassificationsdb01 --schema SalesLT --table Customer --column FirstName --information-type Name --label "Confidential - GDPR"
sql db classification show -g clitest.rg000001 -s clitestserver000002 -n sensitivityclassificationsdb01 --schema SalesLT --table Customer --column FirstName
sql db classification recommendation list -g clitest.rg000001 -s clitestserver000002 -n sensitivityclassificationsdb01
sql db classification list -g clitest.rg000001 -s clitestserver000002 -n sensitivityclassificationsdb01
sql db classification delete -g clitest.rg000001 -s clitestserver000002 -n sensitivityclassificationsdb01 --schema SalesLT --table Customer --column FirstName
sql db classification list -g clitest.rg000001 -s clitestserver000002 -n sensitivityclassificationsdb01
sql server create -g clitest.rg000001 --name clitestserver000002 --admin-user admin123 --admin-password SecretPassword123 --minimal-tls-version 1.2
sql server update -g clitest.rg000001 --name clitestserver000002 --minimal-tls-version 1.1 -i
sql mi failover -g {resource_group} -n {managed_instance_name}
sql db create -g clitest.rg000001 --server clitestserver000002 --name sqlledgerdb000003
sql db ledger-digest-uploads show -g clitest.rg000001 -s clitestserver000002 --name sqlledgerdb000003
sql db ledger-digest-uploads enable -g clitest.rg000001 -s clitestserver000002 --name sqlledgerdb000003 --endpoint https://test.confidential-ledger.azure.com
sql db ledger-digest-uploads show -g clitest.rg000001 -s clitestserver000002 --name sqlledgerdb000003
sql db ledger-digest-uploads disable -g clitest.rg000001 -s clitestserver000002 --name sqlledgerdb000003
sql db ledger-digest-uploads show -g clitest.rg000001 -s clitestserver000002 --name sqlledgerdb000003
sql vm create -n clisqlvm000002 -g sqlvm_cli_test_create000001 -l westus --license-type PAYG
sql vm create -n clisqlvm000003 -g sqlvm_cli_test_create000001 -l westus --license-type AHUB
sql vm create -n clisqlvm000004 -g sqlvm_cli_test_create000001 -l westus --license-type PAYG --sql-mgmt-type Full --connectivity-type PUBLIC --port 1433 --sql-auth-update-username sqladmin123 --sql-auth-update-pwd SecretPassword123
sql vm delete -n clisqlvm000002 -g sqlvm_cli_test_create000001 --yes
sql vm delete -n clisqlvm000003 -g sqlvm_cli_test_create000001 --yes
sql vm delete -n clisqlvm000004 -g sqlvm_cli_test_create000001 --yes
sql vm create -n clisqlvm000002 -g sqlvm_cli_test_create000001 -l westus --license-type PAYG --sql-mgmt-type Full --day-of-week Monday --maintenance-window-duration 60 --maintenance-window-start-hour 22
storage account update -n clitest000005 -g sqlvm_cli_test_create000001 --set kind=StorageV2
storage account show -n clitest000005 -g sqlvm_cli_test_create000001
storage account keys list -n clitest000005 -g sqlvm_cli_test_create000001
sql vm create -n clisqlvm000003 -g sqlvm_cli_test_create000001 -l westus --license-type PAYG --backup-schedule-type Manual --full-backup-frequency Weekly --full-backup-start-hour 2 --full-backup-duration 2 --sa-key veryFakedStorageAccountKey== --storage-account https://clitest000005.blob.core.windows.net/ --retention-period 30 --log-backup-frequency 60 --sql-mgmt-type Full
sql vm create -n clisqlvm000004 -g sqlvm_cli_test_create000001 -l westus --license-type PAYG --enable-r-services True --sql-mgmt-type Full
storage account update -n clitest000003 -g clitest.rg000001 --set kind=StorageV2
storage account show -n clitest000003 -g clitest.rg000001
storage account keys list -n clitest000003 -g clitest.rg000001
sql vm create -n clisqlvm000002 -g clitest.rg000001 -l westus --license-type PAYG --sql-mgmt-type NoAgent
sql vm create -n clisqlvm000002 -g clitest.rg000001 -l westus --license-type PAYG
sql vm list -g clitest.rg000001
sql vm show -n clisqlvm000002 -g clitest.rg000001
sql vm show -n clisqlvm000002 -g clitest.rg000001
sql vm update -n clisqlvm000002 -g clitest.rg000001 --sql-mgmt-type Full --yes
sql vm show -n clisqlvm000002 -g clitest.rg000001 --expand *
sql vm show -n clisqlvm000002 -g clitest.rg000001 --expand AutoBackupSettings
sql vm show -n clisqlvm000002 -g clitest.rg000001 --expand AutoPatchingSettings AutoBackupSettings
sql vm show -n clisqlvm000002 -g clitest.rg000001 --expand AutoPatchingSettings * AutoBackupSettings
sql vm update -n clisqlvm000002 -g clitest.rg000001 --license-type AHUB
sql vm update -n clisqlvm000002 -g clitest.rg000001 --enable-r-services True
sql vm update -n clisqlvm000002 -g clitest.rg000001 --day-of-week Monday --maintenance-window-duration 60 --maintenance-window-start-hour 22
sql vm update -n clisqlvm000002 -g clitest.rg000001 --enable-auto-patching False
sql vm update -n clisqlvm000002 -g clitest.rg000001 --backup-schedule-type Manual --full-backup-frequency Weekly --full-backup-start-hour 2 --full-backup-duration 2 --sa-key veryFakedStorageAccountKey== --storage-account https://clitest000003.blob.core.windows.net/ --retention-period 30 --log-backup-frequency 60
sql vm delete -n clisqlvm000002 -g clitest.rg000001 --yes
sql vm list -g clitest.rg000001
sql vm create -n clisqlvm000002 -g sqlvm_cli_test_license000001 -l westus --image-sku Enterprise --license-type AHUB
sql vm update -n clisqlvm000002 -g sqlvm_cli_test_license000001 --image-sku Enterprise --license-type PAYG
sql vm delete -n clisqlvm000002 -g sqlvm_cli_test_license000001 --yes
sql vm create -n clisqlvm000002 -g sqlvm_cli_test_license000001 -l westus --image-sku Enterprise --license-type PAYG
sql vm update -n clisqlvm000002 -g sqlvm_cli_test_license000001 --image-sku Enterprise
sql vm update -n clisqlvm000002 -g sqlvm_cli_test_license000001 --image-sku Enterprise --license-type AHUB
sql vm update -n clisqlvm000002 -g sqlvm_cli_test_license000001 --license-type DR
sql vm delete -n clisqlvm000002 -g sqlvm_cli_test_license000001 --yes
sql vm create -n clisqlvm000002 -g sqlvm_cli_test_license000001 -l westus --license-type DR
storage account show -n clitest000002 -g clitest.rg000001
storage account keys list -n clitest000002 -g clitest.rg000001
storage account show -n clitest000003 -g clitest.rg000001
storage account keys list -n clitest000003 -g clitest.rg000001
sql vm group create -n sqlvmgroup -g clitest.rg000001 -l westus -i SQL2017-WS2016 -s Enterprise -f domain.com -p myvmadmin -k veryFakedStorageAccountKey== -e sqlservice -u https://clitest000002.blob.core.windows.net/
sql vm group list -g clitest.rg000001
sql vm group show -n sqlvmgroup -g clitest.rg000001
sql vm group update -n sqlvmgroup -g clitest.rg000001 -u https://clitest000003.blob.core.windows.net/ -k veryFakedStorageAccountKey==
sql vm group update -n sqlvmgroup -g clitest.rg000001 -f mydomain.com -k veryFakedStorageAccountKey==
sql vm group update -n sqlvmgroup -g clitest.rg000001 -p mymyvmadmin -k veryFakedStorageAccountKey==
sql vm group delete -n sqlvmgroup -g clitest.rg000001 --yes
sql vm group list -g clitest.rg000001
vm run-command invoke -n adVM -g clitest.rg000001 --command-id RunPowerShellScript --scripts "Set-AdUser -UserPrincipalName admin123@domain.com -Identity admin123 -PasswordNeverExpires $true"
deployment group create --name joinvms -g clitest.rg000001 --template-uri https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/quickstarts/microsoft.compute/vm-domain-join-existing/azuredeploy.json --parameters location=westus domainJoinUserName=domain\\admin123 domainJoinUserPassword=SecretPassword123 domainFQDN=domain.com vmList=clisqlvm000003
storage account show -n clitest000004 -g clitest.rg000001
storage account keys list -n clitest000004 -g clitest.rg000001
sql vm group create -n cligroup -g clitest.rg000001 -l westus -i SQL2017-WS2016 -s Enterprise -f domain.com -p admin123 -k veryFakedStorageAccountKey== -e admin123 -u https://clitest000004.blob.core.windows.net/ --bootstrap-acc admin123
sql vm create -n clisqlvm000003 -g clitest.rg000001 -l westus --license-type PAYG --connectivity-type PRIVATE --port 1433 --sql-auth-update-pwd admin123 --sql-auth-update-username SecretPassword123 --sql-mgmt-type Full
sql vm add-to-group -n clisqlvm000003 -g clitest.rg000001 -r /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachineGroups/cligroup -p SecretPassword123 -s SecretPassword123 -b SecretPassword123
sql vm remove-from-group -n clisqlvm000003 -g clitest.rg000001
storage account generate-sas --resource-types o --services b --expiry 2000-01-01 --permissions r --account-name ""
storage account generate-sas --resource-types o --services b --expiry 2000-01-01 --permissions r --connection-string DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;
storage account generate-sas --resource-types o --services b --expiry 2046-12-31T08:23Z --permissions r --https-only  --account-name clitest000002 --account-key veryFakedStorageAccountKey==
storage account create -n cli000002 -g clitest.rg000001 --sku Standard_LRS -l westus
storage account check-name --name cli000002
storage account list -g clitest.rg000001
storage account show -n cli000002 -g clitest.rg000001
storage account show -n cli000002
storage account show-connection-string -g clitest.rg000001 -n cli000002 --protocol http
storage account update -g clitest.rg000001 -n cli000002 --tags foo=bar cat
storage account update -g clitest.rg000001 -n cli000002 --sku Standard_GRS --tags
storage account update -g clitest.rg000001 -n cli000002 --set tags.test=success
storage account delete -g clitest.rg000001 -n cli000002 --yes
storage account check-name --name cli000002
storage account create -g clitest.rg000001 -n cli000003 --sku Standard_LRS --enable-large-file-share
storage account show -n cli000003 -g clitest.rg000001
storage account create -n {name} -g {rg} -l {loc} --kind StorageV2
storage account check-name --name {name}
storage account create -n cli000002 -g clitest.rg000001 --sku Standard_LRS --assign-identity
storage account create -n cli000002 -g clitest.rg000001 --require-infrastructure-encryption
storage account show -n cli000002 -g clitest.rg000001
storage account create -n cli000002 -g clitest.rg000001 --enable-files-aadds
storage account create -n cli000002 -g clitest.rg000001 --enable-files-aadds false
storage account create -n cli000002 -g clitest.rg000001 --enable-files-aadds true
storage account create -n {sc} -g {rg} -l eastus2euap --enable-files-adds --domain-name
        {domain_name} --net-bios-domain-name {net_bios_domain_name} --forest-name {forest_name} --domain-guid
        {domain_guid} --domain-sid {domain_sid} --azure-storage-sid {azure_storage_sid}
storage account create -n {sc} -g {rg} -l eastus2euap --enable-files-adds false
storage account create -n {sc} -g {rg} -l eastus2euap --enable-files-adds true --domain-name
        {domain_name} --net-bios-domain-name {net_bios_domain_name} --forest-name {forest_name} --domain-guid
        {domain_guid} --domain-sid {domain_sid} --azure-storage-sid {azure_storage_sid}
storage account create -n cli000002 -g clitest.rg000001
storage account create -n cli000003 -g clitest.rg000001 --public-network-access Disabled
keyvault show -n {vt} -g {rg}
keyvault key create -n testkey -p software --vault-name {vt} -otsv --query 'key.kid'
storage account update -n {sa} -g {rg} --assign-identity -otsv --query 'identity.principalId'
keyvault set-policy -n {vt} --object-id {oid} -g {rg} --key-permissions get wrapKey unwrapKey recover
keyvault update -n {vt} -g {rg} --set properties.enableSoftDelete=true
resource update --id {vid} --set properties.enablePurgeProtection=true
storage account update -n {sa} -g {rg} --encryption-key-source Microsoft.Keyvault --encryption-key-vault {vtn} --encryption-key-name testkey 
storage account update -n {sa} -g {rg} --encryption-key-version {ver}
storage account update -n {sa} -g {rg} --encryption-key-version ""
keyvault key create -n newkey -p software --vault-name {vt} 
storage account update -n {sa} -g {rg} --encryption-key-vault {vtn} --encryption-key-name "newkey"
storage account update -n {sa} -g {rg} --encryption-key-source Microsoft.Storage
account list-locations
storage account list
storage account show-connection-string -g clitest.rg000001 -n clitest000002 -otsv
storage logging show --connection-string DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=clitest000002;AccountKey=veryFakedStorageAccountKey==

storage logging update --services b --log r --retention 1 --service b --connection-string DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=clitest000002;AccountKey=veryFakedStorageAccountKey==

storage logging show --connection-string DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=clitest000002;AccountKey=veryFakedStorageAccountKey==

storage logging off --connection-string DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=clitest000002;AccountKey=veryFakedStorageAccountKey==

storage logging show --connection-string DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=clitest000002;AccountKey=veryFakedStorageAccountKey==

storage logging update --services t --log r --retention 1 --version 2.0 --connection-string DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=clitest000002;AccountKey=veryFakedStorageAccountKey==

storage logging update --services t --log r --retention 1 --version 1.0 --connection-string DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=clitest000002;AccountKey=veryFakedStorageAccountKey==
 
storage logging show --connection-string DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=clitest000002;AccountKey=veryFakedStorageAccountKey==

storage logging update --services t --log r --retention 1 --connection-string DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=clitest000002;AccountKey=veryFakedStorageAccountKey==

storage logging show --connection-string DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=clitest000002;AccountKey=veryFakedStorageAccountKey==

storage account blob-service-properties update --enable-last-access-tracking true -n {sa} -g {rg}
storage account management-policy create --account-name {sa} -g {rg} --policy @"{policy}"
storage account management-policy update --account-name {sa} -g {rg} --set "policy.rules[0].name=newname"
storage account management-policy show --account-name {sa} -g {rg}
storage account management-policy delete --account-name {sa} -g {rg}
storage account management-policy show --account-name {sa} -g {rg}
storage metrics show --account-name clitest000002 --account-key veryFakedStorageAccountKey==
storage metrics update --services f --api true --hour true --minute true --retention 1  --account-name clitest000002 --account-key veryFakedStorageAccountKey==
storage metrics show --account-name clitest000002 --account-key veryFakedStorageAccountKey==
storage account create -g {rg} -n {sc} -l eastus2euap --enable-files-aadds
storage account keys list -g {rg} -n {sc}
storage account keys list -g {rg} -n {sc} --expand-key-type kerb
storage account keys renew -g {rg} -n {sc} --key secondary
storage account keys renew -g {rg} -n {sc} --key primary --key-type kerb
storage account keys list -g clitest.rg000001 -n clitest000002
storage account keys renew -g clitest.rg000001 -n clitest000002 --key primary
storage account keys renew -g clitest.rg000001 -n clitest000002 --key secondary
storage account show-usage -l westus
storage account show-usage
storage account create -n {sa1} -g {rg} --edge-zone microsoftrrdclab1 -l eastus2euap --sku Premium_LRS
storage account create -n {sa2} -g {rg} --edge-zone microsoftlosangeles1 --sku Premium_LRS
storage account network-rule add -g {rg} --account-name {sa} --resource-id {rid1} --tenant-id {tid1}
storage account network-rule list -g {rg} --account-name {sa}
storage account network-rule add -g {rg} --account-name {sa} --resource-id {rid1} --tenant-id {tid1}
storage account network-rule list -g {rg} --account-name {sa}
storage account network-rule add -g {rg} --account-name {sa} --resource-id {rid2} --tenant-id {tid1}
storage account network-rule list -g {rg} --account-name {sa}
storage account network-rule add -g {rg} --account-name {sa} --resource-id {rid3} --tenant-id {tid2}
storage account network-rule list -g {rg} --account-name {sa}
storage account network-rule remove -g {rg} --account-name {sa} --resource-id {rid1} --tenant-id {tid1}
storage account network-rule list -g {rg} --account-name {sa}
storage account network-rule remove -g {rg} --account-name {sa} --resource-id {rid2} --tenant-id {tid2}
storage account network-rule list -g {rg} --account-name {sa}
storage account create -g cli_test_storage_service_endpoints000001 -n cli000002 --bypass Metrics --default-action Deny --https-only
storage account update -g cli_test_storage_service_endpoints000001 -n cli000002 --bypass Logging --default-action Allow
storage account update -g cli_test_storage_service_endpoints000001 -n cli000002 --set networkRuleSet.default_action=deny
network vnet create -g cli_test_storage_service_endpoints000001 -n vnet1 --subnet-name subnet1
network vnet subnet update -g cli_test_storage_service_endpoints000001 --vnet-name vnet1 -n subnet1 --service-endpoints Microsoft.Storage
storage account network-rule add -g cli_test_storage_service_endpoints000001 --account-name cli000002 --ip-address 25.1.2.3
storage account network-rule add -g cli_test_storage_service_endpoints000001 --account-name cli000002 --ip-address 25.1.2.3
storage account network-rule add -g cli_test_storage_service_endpoints000001 --account-name cli000002 --ip-address 25.2.0.0/24
storage account network-rule add -g cli_test_storage_service_endpoints000001 --account-name cli000002 --vnet-name vnet1 --subnet subnet1
storage account network-rule list -g cli_test_storage_service_endpoints000001 --account-name cli000002
storage account network-rule add -g cli_test_storage_service_endpoints000001 --account-name cli000002 --vnet-name vnet1 --subnet subnet1
storage account network-rule list -g cli_test_storage_service_endpoints000001 --account-name cli000002
storage account network-rule remove -g cli_test_storage_service_endpoints000001 --account-name cli000002 --ip-address 25.1.2.3
storage account network-rule remove -g cli_test_storage_service_endpoints000001 --account-name cli000002 --vnet-name vnet1 --subnet subnet1
storage account network-rule list -g cli_test_storage_service_endpoints000001 --account-name cli000002
storage account show -g {rg} -n {sa}
storage account show text_causing_parsing_error
storage account show -g fake_group -n {sa}
storage account show -g {rg} -n fake_account
storage account create -n {name1} -g {rg} --enable-alw --immutability-period 10 --immutability-state Disabled --allow-append
storage account create -n {name2} -g {rg} --enable-alw false --immutability-period 10 --immutability-state Disabled --allow-append
storage account create -n {name2} -g {rg} --enable-alw --immutability-period 10  --allow-append
storage account create -n {name2} -g {rg} --enable-alw --immutability-period 10 --immutability-state Locked --allow-append
storage account update -n {name1} --immutability-period 15 --immutability-state Unlocked --allow-append false
storage account create -n {name2} -g {rg} --enable-alw false
storage account update -n {name2} --immutability-period 10 --immutability-state Disabled --allow-append
storage account update -n {name1} --immutability-state Disabled
storage account update -n {name1} --immutability-state Locked
storage account update -n {name1} --immutability-state UnLocked
storage account update -n {name1} --immutability-state Locked
storage account update -n {name1} --immutability-period 10
storage account update -n {name1} --immutability-state UnLocked
storage account update -n {name1} --allow-append
storage account create -n {name} -g {rg}
storage account create -n {name} -g {rg} --default-share-permission StorageFileDataSmbShareReader
storage account update -n {name} -g {rg} --default-share-permission None
storage account create -n cli000002 -g cli_storage_account000001
storage account create -n cli000002 -g cli_storage_account000001 --key-exp-days 3
storage account create -n cli000002 -g cli_storage_account000001 --sas-exp 1.23:59:59
storage account update -n cli000002 -g cli_storage_account000001 --key-exp-days 100000
storage account update -n cli000002 -g cli_storage_account000001 --sas-exp 100000.00:00:00
network vnet create -g {rg} -n {vnet} --subnet-name {subnet}
network vnet subnet update -g {rg} --vnet-name {vnet} -n {subnet} --service-endpoints Microsoft.Storage
storage account create -n {name1} -g {rg} --subnet {subnet_id} --default-action Deny --hns --sku Standard_LRS --enable-nfs-v3 true
storage account create -n {name2} -g {rg} --enable-nfs-v3 false
storage account create -n {name3} -g {rg} --enable-nfs-v3 --vnet-name {vnet} --subnet {subnet} --default-action Deny --hns --sku Standard_LRS 
storage account create -n clirouting000002 -g cli_storage_account_routing000001 --routing-choice MicrosoftRouting --publish-microsoft-endpoint true
storage account update -n clirouting000002 -g cli_storage_account_routing000001 --routing-choice InternetRouting --publish-microsoft-endpoint false --publish-internet-endpoint true
storage account create -n clirouting000003 -g cli_storage_account_routing000001 --routing-choice InternetRouting --publish-internet-endpoints true --publish-microsoft-endpoints false
storage account update -n clirouting000003 -g cli_storage_account_routing000001 --routing-choice MicrosoftRouting
storage account create -n clirouting000004 -g cli_storage_account_routing000001
storage account update -n clirouting000004 -g cli_storage_account_routing000001 --routing-choice MicrosoftRouting --publish-internet-endpoints false --publish-microsoft-endpoints true
storage account create -n cli000002 -g cli_storage_account000001 --allow-shared-key-access
storage account create -n cli000002 -g cli_storage_account000001 --allow-shared-key-access false
storage account create -n cli000002 -g cli_storage_account000001 --allow-shared-key-access true
storage account update -n cli000002 --allow-shared-key-access false
storage account update -n cli000002 --allow-shared-key-access true
storage account create -n cli000002 -g clitest.rg000001
storage account create -n cli000002 -g clitest.rg000001
storage account create -n cliencryption000002 -g cli_storage_account_encryption000001 --kind StorageV2 -t Account -q Service
storage account create -n cli000002 -g cli_storage_account_hns000001 --kind StorageV2 --hns
storage account create -n cli000002 -g cli_storage_account_hns000001 --kind StorageV2 --hns false
storage account create -n cli000002 -g cli_storage_account_hns000001 --kind StorageV2 --hns true
storage account create -n cli000002 -g cli_storage_account000001
storage account create -n cli000003 -g cli_storage_account000001 --min-tls-version TLS1_0
storage account create -n cli000004 -g cli_storage_account000001 --min-tls-version TLS1_1
storage account create -n cli000005 -g cli_storage_account000001 --min-tls-version TLS1_2
storage account create -n cli000002 -g cli_storage_account000001 --allow-blob-public-access
storage account create -n cli000003 -g cli_storage_account000001 --allow-blob-public-access true
storage account create -n cli000004 -g cli_storage_account000001 --allow-blob-public-access false
storage account show -n tls000002 -g cli_storage_account000001
storage account update -n tls000002 -g cli_storage_account000001 --min-tls-version TLS1_1
storage account update -n tls000002 -g cli_storage_account000001 --min-tls-version TLS1_2
storage account update -n tls000002 -g cli_storage_account000001 --min-tls-version TLS1_0
storage account update -n blob000002 --allow-blob-public-access
storage account update -n blob000002 --allow-blob-public-access true
storage account update -n blob000002 --allow-blob-public-access false
storage account create -n cli000002 -g clitest.rg000001 --sku Standard_LRS
storage account update -n cli000002 -g clitest.rg000001 --assign-identity
storage account create -n cli000002 -g clitest.rg000001
storage account update -n cli000002 -g clitest.rg000001 --enable-files-aadds
storage account create -n cli000002 -g clitest.rg000001
storage account update -n cli000002 -g clitest.rg000001 --enable-files-aadds false
storage account create -n cli000002 -g clitest.rg000001
storage account update -n cli000002 -g clitest.rg000001 --enable-files-aadds true
storage account create -n cli000002 -g clitest.rg000001 -l eastus2euap
storage account update -n {sc} -g {rg} --enable-files-adds --domain-name {domain_name}
        --net-bios-domain-name {net_bios_domain_name} --forest-name {forest_name} --domain-guid {domain_guid}
        --domain-sid {domain_sid} --azure-storage-sid {azure_storage_sid}
storage account create -n cli000002 -g clitest.rg000001 -l eastus2euap
storage account update -n cli000002 -g clitest.rg000001 --enable-files-adds false
storage account create -n cli000002 -g clitest.rg000001 -l eastus2euap
storage account update -n {sc} -g {rg} --enable-files-adds true --domain-name {domain_name}
        --net-bios-domain-name {net_bios_domain_name} --forest-name {forest_name} --domain-guid {domain_guid}
        --domain-sid {domain_sid} --azure-storage-sid {azure_storage_sid}
storage account create -n cli000002 -g clitest.rg000001 --public-network-access Enabled
storage account update -n cli000002 -g clitest.rg000001 --public-network-access Disabled
identity create -n {identity} -g {rg}
keyvault show -n {vt} -g {rg} 
keyvault key create -n testkey -p software --vault-name {vt} -otsv --query 'key.kid'
keyvault set-policy -n {vt} --object-id {oid} -g {rg} --key-permissions get wrapKey unwrapKey recover
keyvault update -n {vt} -g {rg} --set properties.enableSoftDelete=true
resource update --id {vid} --set properties.enablePurgeProtection=true
storage account create -n {sa1} -g {rg} --encryption-key-source Microsoft.Keyvault --encryption-key-vault {vtn} --encryption-key-name testkey --key-vault-user-identity-id {iid} --identity-type UserAssigned --user-identity-id {iid}
storage account update -n {sa1} -g {rg} --identity-type None 
storage account update -n {sa1} -g {rg} --identity-type UserAssigned --user-identity-id {iid}
storage account update -n {sa1} -g {rg} --encryption-key-source Microsoft.Keyvault --encryption-key-vault {vtn} --encryption-key-name testkey --identity-type SystemAssigned,UserAssigned 
storage account update -n {sa1} -g {rg} --assign-identity -otsv --query 'identity.principalId'
keyvault set-policy -n {vt} --object-id {oid} -g {rg} --key-permissions get wrapKey unwrapKey recover
storage account update -n {sa1} -g {rg} --key-vault-user-identity-id "" 
storage account update -n {sa1} -g {rg} --encryption-key-source Microsoft.Storage 
storage account create -n {sa2} -g {rg} --encryption-key-source Microsoft.Storage
storage account create -n {sa3} -g {rg} --encryption-key-source Microsoft.Keyvault --encryption-key-vault {vtn} --encryption-key-name testkey --key-vault-user-identity-id {iid} --identity-type SystemAssigned,UserAssigned --user-identity-id {iid}
storage account update -n {sa2} -g {rg} --assign-identity -otsv --query 'identity.principalId'
keyvault set-policy -n {vt} --object-id {sid} -g {rg} --key-permissions get wrapKey unwrapKey recover
keyvault set-policy -n {vt} --object-id {sid} -g {rg} --key-permissions get wrapKey unwrapKey recover
storage account update -n {sa2} -g {rg} --encryption-key-source Microsoft.Keyvault --encryption-key-vault {vtn} --encryption-key-name testkey --identity-type SystemAssigned 
storage account create -n {sa2} -g {rg} --encryption-key-source Microsoft.Storage
storage account update -n {sa2} -g {rg} --encryption-key-source Microsoft.Keyvault --encryption-key-vault {vtn} --encryption-key-name testkey --identity-type SystemAssigned 
storage account update -n {sa2} -g {rg} --identity-type None 
storage account update -n {sa2} -g {rg} --identity-type UserAssigned --user-identity-id {iid} --key-vault-user-identity-id {iid} 
storage account update -n {sa2} -g {rg} --identity-type SystemAssigned,UserAssigned
storage account update -n {sa2} -g {rg} --key-vault-user-identity-id ""
storage account update -n {sa2} -g {rg} --identity-type SystemAssigned
storage account update -n {sa2} -g {rg} --encryption-key-source Microsoft.Keyvault --encryption-key-vault {vtn} --encryption-key-name testkey --key-vault-user-identity-id {iid} --identity-type SystemAssigned,UserAssigned --user-identity-id {iid}
identity create -n {new_id} -g {rg}
keyvault set-policy -n {vt} --object-id {new_oid} -g {rg} --key-permissions get wrapKey unwrapKey recover
storage account update -n {sa2} -g {rg} --encryption-key-source Microsoft.Keyvault --encryption-key-vault {vtn} --encryption-key-name testkey --key-vault-user-identity-id {new_iid} --identity-type UserAssigned --user-identity-id {new_iid}
storage account update -n {sa2} -g {rg} --identity-type None 
storage account update -n {sa2} -g {rg} --identity-type UserAssigned --user-identity-id {new_iid} --key-vault-user-identity-id {new_iid} 
storage account blob-service-properties show -n {sa} -g {rg}
storage account blob-service-properties update --default-service-version 2018 -n {sa} -g {rg}
storage account blob-service-properties update --default-service-version 2018-11-09 -n {sa} -g {rg}
storage account blob-service-properties show -n {sa} -g {rg}
{cmd} --enable-change-feed false --change-feed-retention-days 14600 -n {sa} -g {rg}
{cmd} --change-feed-retention-days 1 -n {sa} -g {rg}
{cmd} --enable-change-feed true --change-feed-retention-days -1 -n {sa} -g {rg}
{cmd} --enable-change-feed true --change-feed-retention-days 0 -n {sa} -g {rg}
{cmd} --enable-change-feed true --change-feed-retention-days 146001 -n {sa} -g {rg}
{cmd} --enable-change-feed true --change-feed-retention-days 1 -n {sa} -g {rg}
{cmd} --enable-change-feed true --change-feed-retention-days 100 -n {sa} -g {rg}
{cmd} --enable-change-feed true --change-feed-retention-days 14600 -n {sa} -g {rg}
{cmd} --enable-change-feed false -n {sa} -g {rg}
{cmd} --enable-container-delete-retention true -n {sa} -g {rg}
{cmd} --enable-container-delete-retention false --container-delete-retention-days 365 -n {sa} -g {rg}
{cmd} --container-delete-retention-days 1 -n {sa} -g {rg}
{cmd} --enable-container-delete-retention true --container-delete-retention-days -1 -n {sa} -g {rg}
{cmd} --enable-container-delete-retention true --container-delete-retention-days 0 -n {sa} -g {rg}
{cmd} --enable-container-delete-retention true --container-delete-retention-days 366 -n {sa} -g {rg}
{cmd} --enable-container-delete-retention true --container-delete-retention-days 1 -n {sa} -g {rg}
{cmd} --enable-container-delete-retention true --container-delete-retention-days 100 -n {sa} -g {rg}
{cmd} --enable-container-delete-retention true --container-delete-retention-days 365 -n {sa} -g {rg}
{cmd} --enable-container-delete-retention false -n {sa} -g {rg}
{cmd} --enable-delete-retention true -n {sa} -g {rg}
{cmd} --enable-delete-retention false --delete-retention-days 365 -n {sa} -g {rg}
{cmd} --delete-retention-days 1 -n {sa} -g {rg}
{cmd} --enable-delete-retention true --delete-retention-days -1 -n {sa} -g {rg}
{cmd} --enable-delete-retention true --delete-retention-days 0 -n {sa} -g {rg}
{cmd} --enable-delete-retention true --delete-retention-days 366 -n {sa} -g {rg}
{cmd} --enable-delete-retention true --delete-retention-days 1 -n {sa} -g {rg}
{cmd} --enable-delete-retention true --delete-retention-days 100 -n {sa} -g {rg}
{cmd} --enable-delete-retention true --delete-retention-days 365 -n {sa} -g {rg}
{cmd} --enable-delete-retention false -n {sa} -g {rg}
storage account blob-service-properties update --enable-last-access-tracking true -n {sa} -g {rg}
storage account blob-service-properties show -n {sa} -g {rg}
storage account blob-service-properties update --enable-last-access-tracking false -n {sa} -g {rg}
storage account blob-service-properties update --enable-last-access-tracking -n {sa} -g {rg}
storage account blob-service-properties show -n {sa} -g {rg}
storage account blob-service-properties update --enable-versioning true -n {sa} -g {rg}
storage account blob-service-properties update --enable-versioning false -n {sa} -g {rg}
storage account blob-service-properties update --enable-versioning -n {sa} -g {rg}
storage account blob-service-properties show -n {sa} -g {rg}
{cmd} show --account-name {sa} -g {rg}
{cmd} update --account-name {sa} -g {rg}
{cmd} update --enable-delete-retention false -n {sa} -g {rg}
{cmd} show -n {sa} -g {rg}
{cmd} update --account-name {sa} -g {rg}
{cmd} update --enable-delete-retention true -n {sa} -g {rg}
{cmd} update --delete-retention-days 1 -n {sa} -g {rg} -n {sa} -g {rg}
{cmd} update --enable-delete-retention false --delete-retention-days 1 -n {sa} -g {rg}
{cmd} update --enable-delete-retention true --delete-retention-days 10 -n {sa} -g {rg}
{cmd} update --delete-retention-days 1 -n {sa} -g {rg}
{cmd} show -n {sa} -g {rg}
{cmd} update --versions "SMB2.1;SMB3.0;SMB3.1.1" --auth-methods "NTLMv2;Kerberos" --kerb-ticket-encryption "RC4-HMAC;AES-256" --channel-encryption "AES-128-CCM;AES-128-GCM;AES-256-GCM" -n {sa} -g {rg}
{cmd} show -n {sa} -g {rg}
{cmd} update --mc -n {sa2} -g {rg}
{cmd} show -n {sa} -g {rg}
{cmd} show -n {sa2} -g {rg}
{cmd} update --enable-smb-multichannel -n {sa} -g {rg}
{cmd} update --enable-smb-multichannel false -n {sa} -g {rg}
{cmd} update --enable-smb-multichannel true -n {sa} -g {rg}
storage account private-link-resource list --account-name {sa} -g {rg}
network vnet create -n {vnet} -g {rg} -l {loc} --subnet-name {subnet}
network vnet subnet update -n {subnet} --vnet-name {vnet} -g {rg} --disable-private-endpoint-network-policies true
storage account private-link-resource list --account-name {sa} -g {rg}
storage account show -n {sa} -g {rg}
network private-endpoint create -g {rg} -n {pe} --vnet-name {vnet} --subnet {subnet} -l {loc} --connection-name {pe_connection} --private-connection-resource-id {sa_id} --group-ids blob
storage account show -n {sa} -g {rg}
storage account private-endpoint-connection show --account-name {sa} -g {rg} --name {sa_pec_name}
storage account private-endpoint-connection approve --account-name {sa} -g {rg} --name {sa_pec_name}
storage account private-endpoint-connection reject --account-name {sa} -g {rg} --name {sa_pec_name}
storage account private-endpoint-connection approve --account-name {sa} -g {rg} --name {sa_pec_name}
storage account private-endpoint-connection delete --id {sa_pec_id} -y
storage account create -n {sa} -g {rg} -l eastus2euap --kind StorageV2 --sku Standard_RAGRS --https-only
storage account show -n {sa} -g {rg} --expand geoReplicationStats --query geoReplicationStats.canFailover -o tsv
storage account show -n {sa} -g {rg} --expand geoReplicationStats --query geoReplicationStats.canFailover -o tsv
storage account show -n {sa} -g {rg} --expand geoReplicationStats --query geoReplicationStats.canFailover -o tsv
storage account show -n {sa} -g {rg} --expand geoReplicationStats --query geoReplicationStats.canFailover -o tsv
storage account show -n {sa} -g {rg} --expand geoReplicationStats --query geoReplicationStats.canFailover -o tsv
storage account show -n {sa} -g {rg} --expand geoReplicationStats --query geoReplicationStats.canFailover -o tsv
storage account show -n {sa} -g {rg} --expand geoReplicationStats --query geoReplicationStats.canFailover -o tsv
storage account show -n {sa} -g {rg} --expand geoReplicationStats --query geoReplicationStats.canFailover -o tsv
storage account show -n {sa} -g {rg} --expand geoReplicationStats --query geoReplicationStats.canFailover -o tsv
storage account show -n {sa} -g {rg} --expand geoReplicationStats
storage account failover -n {sa} -g {rg} --no-wait -y
storage account show -n {sa} -g {rg} --expand geoReplicationStats
local-context on
storage account create -g {rg} -n {account_name} --https-only
storage account show
storage account delete
storage account delete -n {account_name} -y
local-context off
local-context delete --all --purge -y
storage account create -n {src_sc} -g {rg} 
storage account update -n {src_sc} -g {rg} -r false
storage account update -n {src_sc} -g {rg} -r true
storage account create -n {src_sc} -g {rg} -r false
storage account create -n {src_sc} -g {rg} -r true
cloud show --query profile -otsv
storage account keys list -n clitest000002 -g cli_test_storage_account_ors000001 --query "[0].value" -otsv
storage container create -n cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage account blob-service-properties update -n {dest_sc} -g {rg} --enable-versioning
storage account or-policy create -n {dest_sc} -s /subscriptions/1c638cf4-608f-4ee6-b680-c329e824c3a8/resourcegroups/clitest/providers/Microsoft.Storage/storageAccounts/clitestcor --dcont {dcont} --scont {scont} -t "2020-02-19T16:05:00Z"
cloud show --query profile -otsv
storage account keys list -n clitest000002 -g cli_test_storage_account_ors000001 --query "[0].value" -otsv
storage container create -n cont000005 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage account keys list -n clitest000003 -g cli_test_storage_account_ors000001 --query "[0].value" -otsv
storage container create -n cont000006 --account-name clitest000003 --account-key veryFakedStorageAccountKey==

storage account show -n clitest000002 -g cli_test_storage_account_ors000001 --query id -otsv
storage account show -n clitest000003 -g cli_test_storage_account_ors000001 --query id -otsv
storage account show -n clitest000004 -g cli_test_storage_account_ors000001 --query id -otsv
storage account blob-service-properties update -n {src_sc} -g {rg} --enable-change-feed
storage account blob-service-properties update -n {src_sc} -g {rg} --enable-versioning
storage account blob-service-properties update -n {dest_sc} -g {rg} --enable-versioning
storage account or-policy create -n {dest_sc} -s {src_sc} --dcont {dcont} --scont {scont} -t "2020-02-19T16:05:00Z"
storage account or-policy show -g {rg} -n {dest_sc} --policy-id {policy_id}
storage container create -n cont000007 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container create -n cont000008 --account-name clitest000003 --account-key veryFakedStorageAccountKey==

storage account or-policy rule list -g {rg} -n {dest_sc} --policy-id {policy_id}
storage account or-policy rule show -g {rg} -n {dest_sc} --rule-id {rule_id} --policy-id {policy_id}
storage account or-policy rule add -g cli_test_storage_account_ors000001 -n clitest000003 --policy-id 1d4871a6-67ce-4174-b829-f8b07f3685dd -d cont000008 -s cont000007 -t "2020-02-19T16:05:00Z"
storage account or-policy rule list -g {rg} -n {dest_sc} --policy-id {policy_id}
storage account or-policy rule update -g cli_test_storage_account_ors000001 -n clitest000003 --policy-id 1d4871a6-67ce-4174-b829-f8b07f3685dd --rule-id cab1d6b3-2e67-4173-b44d-7e3fb4d824e8 --prefix-match blobA blobB -t "2020-02-20T16:05:00Z"
storage account or-policy rule show -g cli_test_storage_account_ors000001 -n clitest000003 --policy-id 1d4871a6-67ce-4174-b829-f8b07f3685dd --rule-id cab1d6b3-2e67-4173-b44d-7e3fb4d824e8
storage account or-policy rule remove -g cli_test_storage_account_ors000001 -n clitest000003 --policy-id 1d4871a6-67ce-4174-b829-f8b07f3685dd --rule-id cab1d6b3-2e67-4173-b44d-7e3fb4d824e8
storage account or-policy rule list -g {rg} -n {dest_sc} --policy-id {policy_id}
storage account or-policy create -g {rg} -n {src_sc} -d {dest_sc} -s {src_sc} --dcont {dcont} --scont {scont}
storage account or-policy show -g {rg} -n {dest_sc} --policy-id {policy_id}
storage account or-policy create -g {rg} -n {src_sc} -p @"{policy}"
storage account or-policy update -g cli_test_storage_account_ors000001 -n clitest000003 --policy-id 1d4871a6-67ce-4174-b829-f8b07f3685dd --source-account clitest000004
storage account or-policy delete -g {rg} -n {src_sc} --policy-id {policy_id}
storage account or-policy list -g {rg} -n {src_sc}
storage account or-policy delete -g {rg} -n {dest_sc} --policy-id {policy_id}
storage account or-policy list -g {rg} -n {dest_sc}
cloud show --query profile -otsv
storage account keys list -n clitest000002 -g cli_test_blob_inventory000001 --query "[0].value" -otsv
storage container create -n mycontainer --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage account blob-inventory-policy create --account-name {sa} -g {rg} --policy @"{policy_no_type}"
storage account blob-inventory-policy show --account-name {sa} -g {rg}
storage account blob-service-properties update -n {sa} -g {rg} --enable-versioning
storage account blob-inventory-policy create --account-name {sa} -g {rg} --policy @"{policy}"
storage account blob-inventory-policy show --account-name {sa} -g {rg}
storage account blob-inventory-policy update --account-name {sa} -g {rg} --set "policy.rules[0].name=newname"
storage account blob-inventory-policy show --account-name {sa} -g {rg}
storage account blob-inventory-policy delete --account-name {sa} -g {rg} -y
storage account blob-inventory-policy show --account-name {sa} -g {rg}
storage account hns-migration start --request-type validation -n {sa1} -g {rg}
storage account hns-migration start --request-type upgrade -n {sa1} -g {rg}
storage account hns-migration start --request-type validation -n {sa2} -g {rg}
storage account hns-migration start --request-type upgrade -n {sa2} -g {rg} --no-wait
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
storage account hns-migration stop -n {sa2} -g {rg}
cloud show --query profile -otsv
storage account keys list -n clitest000002 -g clitest.rg000001 --query "[0].value" -otsv
storage container create -n cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container policy list --container-name cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container policy create --container-name cont000003 -n test1 --permission l --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container policy create --container-name cont000003 -n test2 --start 2016-01-01T00:00Z --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container policy create --container-name cont000003 -n test3 --expiry 2018-01-01T00:00Z --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container policy create --container-name cont000003 -n test4 --permission rwdl --start 2016-01-01T00:00Z --expiry 2016-05-01T00:00Z --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container policy list --container-name cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container policy show --container-name cont000003 -n test1 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container policy show --container-name cont000003 -n test2 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container policy show --container-name cont000003 -n test3 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container policy show --container-name cont000003 -n test4 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container policy update --container-name cont000003 -n test1 --permission r --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container policy show --container-name cont000003 -n test1 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container policy delete --container-name cont000003 -n test1 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container policy list --container-name cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

cloud show --query profile -otsv
storage account keys list -n clitest000002 -g clitest.rg000001 --query "[0].value" -otsv
storage share create -n share000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage share policy list --share-name share000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage share policy create --share-name share000003 -n test1 --permission l --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage share policy create --share-name share000003 -n test2 --start 2016-01-01T00:00Z --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage share policy create --share-name share000003 -n test3 --expiry 2018-01-01T00:00Z --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage share policy create --share-name share000003 -n test4 --permission rwdl --start 2016-01-01T00:00Z --expiry 2016-05-01T00:00Z --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage share policy list --share-name share000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage share policy show --share-name share000003 -n test1 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage share policy show --share-name share000003 -n test2 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage share policy show --share-name share000003 -n test3 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage share policy show --share-name share000003 -n test4 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage share policy update --share-name share000003 -n test1 --permission r --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage share policy show --share-name share000003 -n test1 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage share policy delete --share-name share000003 -n test1 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage share policy list --share-name share000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

cloud show --query profile -otsv
storage account keys list -n clitest000002 -g clitest.rg000001 --query "[0].value" -otsv
storage fs create -n filesystem000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs file create -p dir000004/file000005 -f filesystem000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs file show -p dir000004/file000005 -f filesystem000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs directory show -n dir000004 -f filesystem000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs access set -f filesystem000003 -p / --acl user::rwx,group::r--,other::--- --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs access show -f filesystem000003 -p /  --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs access set -f filesystem000003 -p dir000004/file000005 --permissions rwxrwxrwx --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs access show -f filesystem000003 -p dir000004/file000005  --account-name clitest000002 --account-key veryFakedStorageAccountKey==

cloud show --query profile -otsv
storage account keys list -n clitest000002 -g clitest.rg000001 --query "[0].value" -otsv
storage fs create -n filesystem000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs directory exists -n dir000004 -f filesystem000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs directory create -n dir000004 -f filesystem000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs directory exists -n dir000004 -f filesystem000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs directory show -n dir000004 -f filesystem000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs directory create -n dir000004/subdir000005 -f filesystem000003 --permissions rwxrwxrwx --umask 0007 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs directory show -n dir000004/subdir000005 -f filesystem000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs directory list -f filesystem000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs directory list -f filesystem000003 --path dir000004 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs directory exists -n new_dir -f filesystem000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs directory move -n dir000004/subdir000005 -f filesystem000003 --new-directory filesystem000003/new_dir --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs directory exists -n new_dir -f filesystem000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs directory exists -n dir000004/subdir000005 -f filesystem000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs directory show -n new_dir -f filesystem000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs directory list -f filesystem000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs directory list -f filesystem000003 --path dir000004 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs create -n filesystem000006 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs directory move -n dir000004 -f filesystem000003 --new-directory filesystem000006/new_dir --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs directory show -n new_dir -f filesystem000006 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs directory delete -n new_dir -f filesystem000003 -y --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs directory delete -n new_dir -f filesystem000006 -y --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs directory list -f filesystem000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

cloud show --query profile -otsv
storage account keys list -n clitest000002 -g clitest.rg000001 --query "[0].value" -otsv
storage fs create -n filesystem000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs file exists -p file000005 -f filesystem000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs file create -p file000005 -f filesystem000003 --content-type "application/json" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs file exists -p file000005 -f filesystem000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs file show -p file000005 -f filesystem000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs file append -p file000005 -f filesystem000003 --content testappend --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs file show -p file000005 -f filesystem000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs file upload -p dir000004/file000005 -f filesystem000003 -s "C:\Users\ZELINW~1\AppData\Local\Temp\tmpf7gbpfwu" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs file upload -p dir000004/file000005 -f filesystem000003 -s "C:\Users\ZELINW~1\AppData\Local\Temp\tmpehwqi_wh" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs file upload -p dir000004/file000005 -f filesystem000003 -s "C:\Users\ZELINW~1\AppData\Local\Temp\tmpehwqi_wh" --overwrite --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs file upload -p dir000004/file000005 -f filesystem000003 -s "C:\Users\ZELINW~1\AppData\Local\Temp\tmpehwqi_wh" --overwrite true --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs file list -f filesystem000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs file list -f filesystem000003 --exclude-dir --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs file list --path dir000004 -f filesystem000003 --exclude-dir --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs file list -f filesystem000003 --num-results 1 --show-next-marker --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs file list -f filesystem000003 --num-results 1 --marker VBa8hL7YxabTv3QYcxhuL2NsaXRlc3R1bWp4d25xMjZveWZvaWhmbgEwMUQ3QkU2QURDQjQ3MjYzL2ZpbGVzeXN0ZW1reHQ2N3ZiN3F1ejdsegEwMUQ3QkU2QUVBNkM0NDE2L2RpcmhuZGRobGQ0Ni9maWxlNmdkM21ieWYWAAAA --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs file list -f filesystem000003 --num-results 1 --show-next-marker --exclude-dir --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs file download -p dir000004/file000005 -f filesystem000003 -d "C:\Users\ZELINW~1\AppData\Local\Temp\tmpcllj8_ut" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs file download -p dir000004/file000005 -f filesystem000003 -d "C:\Users\ZELINW~1\AppData\Local\Temp\tmpcllj8_ut" --overwrite false --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs create -n filesystem000006 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs file move -p dir000004/file000005 -f filesystem000003 --new-path filesystem000006/file000005 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs file exists -p dir000004/file000005 -f filesystem000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs file exists -p file000005 -f filesystem000006 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs file delete -p file000005 -f filesystem000006 -y --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs file exists -p file000005 -f filesystem000006 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

cloud show --query profile -otsv
storage account keys list -n clitest000002 -g clitest.rg000001 --query "[0].value" -otsv
storage account show-connection-string -n clitest000002 -g clitest.rg000001 -otsv
storage fs exists -n filesystem000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs create -n filesystem000003 --public-access file --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs exists -n filesystem000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs show -n filesystem000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs create -n filesystem000004 --public-access filesystem --connection-string DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=clitest000002;AccountKey=veryFakedStorageAccountKey==

storage fs show -n filesystem000004 --connection-string DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=clitest000002;AccountKey=veryFakedStorageAccountKey==

storage fs create -n filesystem000005 --public-access off --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs show -n filesystem000005 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs list --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs delete -n filesystem000003 -y --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs delete -n filesystem000004 -y --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs delete -n filesystem000005 -y --account-name clitest000002 --account-key veryFakedStorageAccountKey==

cloud show --query profile -otsv
storage account keys list -n clitest000002 -g clitest.rg000001 --query "[0].value" -otsv
storage fs create -n filesystem000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs metadata update -n filesystem000003 --metadata a=b c=d --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs metadata show -n filesystem000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs directory create -n dir000004 -f filesystem000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs directory metadata update -n dir000004 -f filesystem000003 --metadata foo=bar moo=bak --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs directory metadata show -n dir000004 -f filesystem000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs file create -p file000005 -f filesystem000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs file metadata update -p file000005 -f filesystem000003 --metadata test=beta cat=file --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs file metadata show -p file000005 -f filesystem000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

cloud show --query profile -otsv
storage account keys list -n clitest000002 -g clitest.rg000001 --query "[0].value" -otsv
storage fs create -n filesystem000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs generate-sas --account-name clitest000002 -n filesystem000003 --expiry 2021-12-04T12:48Z --permissions r --https-only --auth-mode login
storage fs generate-sas --account-name clitest000002 -n filesystem000003 --expiry 2021-12-04T12:48Z --permissions dlrwop --https-only --as-user --auth-mode login
cloud show --query profile -otsv
storage account keys list -n clitest000002 -g clitest.rg000001 --query "[0].value" -otsv
storage fs create -n filesystem000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage fs generate-sas -n filesystem000003 --expiry 2021-12-04T12:48Z --permissions r --https-only --full-uri --account-name clitest000002 --account-key veryFakedStorageAccountKey==

cloud show --query profile -otsv
storage account keys list -n clitest000002 -g clitest.rg000001 --query "[0].value" -otsv
storage container create -n cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob upload -c cont000003 -f "C:\Users\ZELINW~1\AppData\Local\Temp\tmpl7h3rd5i" -n blob000004 --type append --if-none-match * --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob list -c cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob upload -c cont000003 -f "C:\Users\ZELINW~1\AppData\Local\Temp\tmpl7h3rd5i" -n blob000004 --type append --if-none-match * --account-name clitest000002 --account-key veryFakedStorageAccountKey==

cloud show --query profile -otsv
storage account keys list -n clitest000002 -g clitest.rg000001 --query "[0].value" -otsv
storage container create -n cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container exists -n cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container set-permission -n cont000003 --public-access blob --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container show-permission -n cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container set-permission -n cont000003 --public-access off --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container show-permission -n cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container show -n cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container list --query "[].name" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container metadata update -n cont000003 --metadata foo=bar moo=bak --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container metadata show -n cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container metadata update -n cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container metadata show -n cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container lease acquire --lease-duration 60 -c cont000003 --if-modified-since 2016-04-01t12:00z --proposed-lease-id abcdabcd-abcd-abcd-abcd-abcdabcdabcd --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container show --name cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container lease change -c cont000003 --lease-id abcdabcd-abcd-abcd-abcd-abcdabcdabcd --proposed-lease-id dcbadcba-dcba-dcba-dcba-dcbadcbadcba --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container lease renew -c cont000003 --lease-id dcbadcba-dcba-dcba-dcba-dcbadcbadcba --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container show -n cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container lease break -c cont000003 --lease-break-period 30 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container show --name cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container lease release -c cont000003 --lease-id dcbadcba-dcba-dcba-dcba-dcbadcbadcba --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container show --name cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container generate-sas -n cont000003 --permissions r --expiry 2021-12-04T12:48Z --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container delete --name cont000003 --fail-not-exist --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container exists -n cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

cloud show --query profile -otsv
storage account keys list -n clitest000002 -g clitest.rg000001 --query "[0].value" -otsv
storage container create -n cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob upload -c cont000003 -n blob000004 -f "C:\Users\ZELINW~1\AppData\Local\Temp\tmpo2hfwc9c" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob copy cancel -c cont000003 -b blob000004 --copy-id abcdabcd-abcd-abcd-abcd-abcdabcdabcd --account-name clitest000002 --account-key veryFakedStorageAccountKey==

cloud show --query profile -otsv
storage account keys list -n clitest000002 -g clitest.rg000001 --query "[0].value" -otsv
storage blob download -c mycontainer -n myblob -f "C:\Users\ZELINW~1\AppData\Local\Temp\tmpemuzjpbp" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

cloud show --query profile -otsv
storage account keys list -n clitest000002 -g clitest.rg000001 --query "[0].value" -otsv
storage container create -n cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob generate-sas --account-name clitest000002 -n blob000004 -c cont000003 --expiry 2021-12-04T12:48Z --permissions r --https-only --auth-mode login
storage blob generate-sas --account-name clitest000002 -n blob000004 -c cont000003 --expiry 2021-12-04T12:48Z --permissions r --https-only --as-user --auth-mode login
storage container generate-sas --account-name clitest000002 -n cont000003 --expiry 2021-12-04T12:48Z --permissions r --https-only --as-user --auth-mode login
cloud show --query profile -otsv
storage account keys list -n clitest000002 -g clitest.rg000001 --query "[0].value" -otsv
storage container create -n cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob generate-sas -n blob000004 -c cont000003 --expiry 2021-12-04T12:48Z --permissions r --https-only --full-uri --account-name clitest000002 --account-key veryFakedStorageAccountKey==

cloud show --query profile -otsv
storage account keys list -n clitest000002 -g clitest.rg000001 --query "[0].value" -otsv
storage container create -n cont000004 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob upload -c cont000004 -n src -f "C:\Users\ZELINW~1\AppData\Local\Temp\tmpkqrwk7b7" -t page --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob snapshot -c cont000004 -n src --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage account keys list -n clitest000003 -g clitest.rg000001 --query "[0].value" -otsv
storage container create -n cont000005 --account-name clitest000003 --account-key veryFakedStorageAccountKey==

storage blob incremental-copy start --source-container cont000004 --source-blob src --source-account-name clitest000002 --source-account-key veryFakedStorageAccountKey==
 --source-snapshot 2021-09-07T07:11:33.5615303Z --destination-container cont000005 --destination-blob backup --destination-if-modified-since "2020-06-29T06:32Z"  --account-name clitest000003 --account-key veryFakedStorageAccountKey==

cloud show --query profile -otsv
storage account keys list -n clitest000002 -g clitest.rg000001 --query "[0].value" -otsv
storage container create -n cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob upload -c cont000003 -n blob000004 -f "C:\Users\ZELINW~1\AppData\Local\Temp\tmp8noklk9m" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob lease acquire --lease-duration 60 -b blob000004 -c cont000003 --if-modified-since 2016-04-01t12:00z --proposed-lease-id abcdabcd-abcd-abcd-abcd-abcdabcdabcd --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob show -n blob000004 -c cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob lease change -b blob000004 -c cont000003 --lease-id abcdabcd-abcd-abcd-abcd-abcdabcdabcd --proposed-lease-id dcbadcba-dcba-dcba-dcba-dcbadcbadcba --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob lease renew -b blob000004 -c cont000003 --lease-id dcbadcba-dcba-dcba-dcba-dcbadcbadcba --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob show -n blob000004 -c cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob lease break -b blob000004 -c cont000003 --lease-break-period 30 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob show -n blob000004 -c cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob lease release -b blob000004 -c cont000003 --lease-id dcbadcba-dcba-dcba-dcba-dcbadcbadcba --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob show -n blob000004 -c cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

cloud show --query profile -otsv
storage account keys list -n clitest000002 -g clitest.rg000001 --query "[0].value" -otsv
storage container create -n cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob upload -c cont000003 -n blob000004 -f "c:\code\azure-cli\src\azure-cli\azure\cli\command_modules\storage\tests\latest\test_storage_blob_scenarios.py" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob metadata update -n blob000004 -c cont000003 --metadata a=b c=d --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob metadata show -n blob000004 -c cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob metadata update -n blob000004 -c cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob metadata show -n blob000004 -c cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob upload -c foo -n bar -f "C:\Users\ZELINW~1\AppData\Local\Temp\tmp6_dobscz"
cloud show --query profile -otsv
storage account keys list -n clitest000002 -g clitest.rg000001 --query "[0].value" -otsv
storage container create -n cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob upload -c cont000003 -n blob000004 -f "C:\Users\ZELINW~1\AppData\Local\Temp\tmp3_5a78jt" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob snapshot -c cont000003 -n blob000004 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob exists -n blob000004 -c cont000003 --snapshot 2021-10-18T07:57:49.9371982Z --account-name clitest000002 --account-key veryFakedStorageAccountKey==

cloud show --query profile -otsv
storage account keys list -n clitest000002 -g clitest.rg000001 --query "[0].value" -otsv
storage container create -n cont000004 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob upload -c cont000004 -f "C:\Users\ZELINW~1\AppData\Local\Temp\tmp5xgdk_ce" -n blob000003 --type block --socket-timeout -11 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob exists -n blob000003 -c cont000004 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob upload -c cont000004 -f "C:\Users\ZELINW~1\AppData\Local\Temp\tmp5xgdk_ce" -n blob000003 --type block --socket-timeout 10 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob exists -n blob000003 -c cont000004 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob show -n blob000003 -c cont000004 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob download -n blob000003 -c cont000004 --file "C:\Users\ZELINW~1\AppData\Local\Temp\tmplc69_hha\test.file" --socket-timeout 10 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container create -n cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==
storage blob upload -c cont000003 -f "C:\Users\ZELINW~1\AppData\Local\Temp\tmpnn5bpx60" -n blob000004 --type block --account-name clitest000002 --account-key veryFakedStorageAccountKey==
storage blob list -c cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==
storage blob service-properties delete-policy update --enable true --days-retained 2 --account-name clitest000002 --account-key veryFakedStorageAccountKey==
storage blob service-properties delete-policy show --account-name clitest000002 --account-key veryFakedStorageAccountKey==
storage blob delete -c cont000003 -n blob000004 --account-name clitest000002 --account-key veryFakedStorageAccountKey==
storage blob list -c cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==
storage blob list -c cont000003 --include d --account-name clitest000002 --account-key veryFakedStorageAccountKey==
storage blob undelete -c cont000003 -n blob000004 --account-name clitest000002 --account-key veryFakedStorageAccountKey==
storage blob list -c cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==
cloud show --query profile -otsv
storage account keys list -n clitest000002 -g clitest.rg000001 --query "[0].value" -otsv
storage blob show -c foo -n bar.txt --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob show --account-name clitest000002 --account-key="YQ==" -c foo -n bar.txt 
storage account create -n account000002 -g clitest.rg000001 --kind StorageV2
cloud show --query profile -otsv
storage account keys list -n account000002 -g clitest.rg000001 --query "[0].value" -otsv
storage blob service-properties show --account-name account000002 --account-key veryFakedStorageAccountKey==

storage blob service-properties update --static-website --index-document index.html --404-document error.html --account-name account000002 --account-key veryFakedStorageAccountKey==

storage blob service-properties update --delete-retention --delete-retention-period 1 --account-name account000002 --account-key veryFakedStorageAccountKey==

storage blob service-properties update --set hourMetrics.enabled=false --account-name account000002 --account-key veryFakedStorageAccountKey==

storage blob service-properties update --set minuteMetrics.enabled=true minuteMetrics.includeApis=true --account-name account000002 --account-key veryFakedStorageAccountKey==

storage blob service-properties update --set logging.delete=true --account-name account000002 --account-key veryFakedStorageAccountKey==

storage blob service-properties show --account-name account000002 --account-key veryFakedStorageAccountKey==

cloud show --query profile -otsv
storage account keys list -n clitest000002 -g clitest.rg000001 --query "[0].value" -otsv
storage container create -n cont000005 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob exists -n blob000003 -c cont000005 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob upload -c cont000005 -f "C:\Users\ZELINW~1\AppData\Local\Temp\tmp561xq0kc" -n blob000003 --type block --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob exists -n blob000003 -c cont000005 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob upload -c cont000005 -f "C:\Users\ZELINW~1\AppData\Local\Temp\blob000004" --type block --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob exists -n blob000004 -c cont000005 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob list -c cont000005 -otable --num-results 1 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob show -n blob000003 -c cont000005 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob generate-sas -n blob000003 -c cont000005 --expiry 2021-12-04T12:50Z --permissions r --https-only --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob update -n blob000003 -c cont000005 --content-type application/test-content --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob show -n blob000003 -c cont000005 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob update -n blob000003 -c cont000005 --content-type "" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob show -n blob000003 -c cont000005 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob service-properties show --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob download -n blob000003 -c cont000005 --file "C:\Users\ZELINW~1\AppData\Local\Temp\tmpa95rx6_z\test.file" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob download -n blob000003 -c cont000005 --file "C:\Users\ZELINW~1\AppData\Local\Temp\tmpa95rx6_z\test.file" --start-range 10 --end-range 499 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage account keys list -n clitest000002 -g clitest.rg000001 --query "[0].value" -otsv
storage container create -n cont000008 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob exists -n blob000006 -c cont000008 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob upload -c cont000008 -f "C:\Users\ZELINW~1\AppData\Local\Temp\tmpsgrfko82" -n blob000006 --type block --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob exists -n blob000006 -c cont000008 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob upload -c cont000008 -f "C:\Users\ZELINW~1\AppData\Local\Temp\blob000007" --type block --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob exists -n blob000007 -c cont000008 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob list -c cont000008 -otable --num-results 1 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob show -n blob000006 -c cont000008 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob generate-sas -n blob000006 -c cont000008 --expiry 2021-12-04T12:50Z --permissions r --https-only --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob update -n blob000006 -c cont000008 --content-type application/test-content --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob show -n blob000006 -c cont000008 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob update -n blob000006 -c cont000008 --content-type "" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob show -n blob000006 -c cont000008 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob service-properties show --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob download -n blob000006 -c cont000008 --file "C:\Users\ZELINW~1\AppData\Local\Temp\tmpuu43vfy1\test.file" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob download -n blob000006 -c cont000008 --file "C:\Users\ZELINW~1\AppData\Local\Temp\tmpuu43vfy1\test.file" --start-range 10 --end-range 499 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

cloud show --query profile -otsv
storage account keys list -n clitest000002 -g clitest.rg000001 --query "[0].value" -otsv
storage container create -n cont000005 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob exists -n blob000003 -c cont000005 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob upload -c cont000005 -f "C:\Users\ZELINW~1\AppData\Local\Temp\tmpps1fjg3w" -n blob000003 --type block --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob exists -n blob000003 -c cont000005 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob upload -c cont000005 -f "C:\Users\ZELINW~1\AppData\Local\Temp\blob000004" --type block --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob exists -n blob000004 -c cont000005 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob list -c cont000005 -otable --num-results 1 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob show -n blob000003 -c cont000005 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob generate-sas -n blob000003 -c cont000005 --expiry 2021-12-04T12:50Z --permissions r --https-only --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob update -n blob000003 -c cont000005 --content-type application/test-content --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob show -n blob000003 -c cont000005 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob update -n blob000003 -c cont000005 --content-type "" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob show -n blob000003 -c cont000005 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob service-properties show --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob download -n blob000003 -c cont000005 --file "C:\Users\ZELINW~1\AppData\Local\Temp\tmpy8ewji5l\test.file" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob download -n blob000003 -c cont000005 --file "C:\Users\ZELINW~1\AppData\Local\Temp\tmpy8ewji5l\test.file" --start-range 10 --end-range 499 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage account keys list -n clitest000002 -g clitest.rg000001 --query "[0].value" -otsv
storage container create -n cont000008 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob exists -n blob000006 -c cont000008 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob upload -c cont000008 -f "C:\Users\ZELINW~1\AppData\Local\Temp\tmpavhyta4t" -n blob000006 --type page --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob exists -n blob000006 -c cont000008 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob upload -c cont000008 -f "C:\Users\ZELINW~1\AppData\Local\Temp\blob000007" --type page --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob exists -n blob000007 -c cont000008 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob list -c cont000008 -otable --num-results 1 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob show -n blob000006 -c cont000008 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob generate-sas -n blob000006 -c cont000008 --expiry 2021-12-04T12:50Z --permissions r --https-only --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob update -n blob000006 -c cont000008 --content-type application/test-content --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob show -n blob000006 -c cont000008 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob update -n blob000006 -c cont000008 --content-type "" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob show -n blob000006 -c cont000008 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob service-properties show --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob download -n blob000006 -c cont000008 --file "C:\Users\ZELINW~1\AppData\Local\Temp\tmppe3a_7qc\test.file" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob download -n blob000006 -c cont000008 --file "C:\Users\ZELINW~1\AppData\Local\Temp\tmppe3a_7qc\test.file" --start-range 10 --end-range 499 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

cloud show --query profile -otsv
storage account keys list -n clitest000002 -g clitest.rg000001 --query "[0].value" -otsv
storage container create -n cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob upload -c cont000003 -n blob000004 -f "C:\Users\ZELINW~1\AppData\Local\Temp\tmp68g82ugt" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob set-tier -c cont000003 -n blob000004 --tier Cool -r Middle --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob set-tier -c cont000003 -n blob000004 --tier Archive -r High --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob set-tier -c cont000003 -n blob000004 --tier Archive --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob show -c cont000003 -n blob000004  --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob set-tier -c cont000003 -n blob000004 --tier Cool -r High --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob show -c cont000003 -n blob000004  --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob upload -c cont000003 -n blob000005 -f "C:\Users\ZELINW~1\AppData\Local\Temp\tmp68g82ugt" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob set-tier -c cont000003 -n blob000005 --tier Archive --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob show -c cont000003 -n blob000005  --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob set-tier -c cont000003 -n blob000005 --tier Hot --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob show -c cont000003 -n blob000005  --account-name clitest000002 --account-key veryFakedStorageAccountKey==

cloud show --query profile -otsv
storage account keys list -n clitest000002 -g clitest.rg000001 --query "[0].value" -otsv
storage container create -n cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob upload -c cont000003 -n blob000004 -f "C:\Users\ZELINW~1\AppData\Local\Temp\tmpvil3x9at" -t page --tier P10 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob show -c cont000003 -n blob000004  --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob set-tier -c cont000003 -n blob000004 --tier P20 -r High -t page --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob set-tier -c cont000003 -n blob000004 --tier P20 -t page --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob show -c cont000003 -n blob000004  --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage account blob-service-properties update -n {sa} -g {rg} --enable-versioning
storage container-rm create -n {container} --storage-account {sa} -g {rg} --enable-vlw
storage blob upload -c container000003 -f "C:\Users\ZELINW~1\AppData\Local\Temp\tmp9sahctpr" -n blob000004  --account-name version000002 --account-key veryFakedStorageAccountKey==
storage blob immutability-policy set -n blob000004 -c container000003 --expiry-time 2021-12-04T12:51Z --policy-mode Unlocked --account-name version000002 --account-key veryFakedStorageAccountKey==
storage blob immutability-policy delete -n blob000004 -c container000003 --account-name version000002 --account-key veryFakedStorageAccountKey==
storage blob set-legal-hold --legal-hold -n blob000004 -c container000003 --account-name version000002 --account-key veryFakedStorageAccountKey==
storage blob set-legal-hold --legal-hold false -n blob000004 -c container000003 --account-name version000002 --account-key veryFakedStorageAccountKey==
cloud show --query profile -otsv
storage account keys list -n storage000002 -g clitest000001 --query "[0].value" -otsv
storage container create -n con000003 --account-name storage000002 --account-key veryFakedStorageAccountKey==

storage blob upload -c con000003 -f "C:\Users\ZELINW~1\AppData\Local\Temp\tmpgrk_v4tx" -n dir/blob000004  --account-name storage000002 --account-key veryFakedStorageAccountKey==

storage blob list -c con000003  --account-name storage000002 --account-key veryFakedStorageAccountKey==

storage blob snapshot -c con000003 -n dir/blob000004  --account-name storage000002 --account-key veryFakedStorageAccountKey==

storage blob list -c con000003 --include s --account-name storage000002 --account-key veryFakedStorageAccountKey==

storage blob metadata update -c con000003 -n dir/blob000004 --metadata test=1  --account-name storage000002 --account-key veryFakedStorageAccountKey==

storage blob metadata show -c con000003 -n dir/blob000004  --account-name storage000002 --account-key veryFakedStorageAccountKey==

storage blob list -c con000003 --include m --account-name storage000002 --account-key veryFakedStorageAccountKey==

storage blob upload -c con000003 -f "C:\Users\ZELINW~1\AppData\Local\Temp\tmpgrk_v4tx" -n dir/blob000005  --account-name storage000002 --account-key veryFakedStorageAccountKey==

storage blob list -c con000003  --account-name storage000002 --account-key veryFakedStorageAccountKey==

storage blob list -c con000003 --num-results 1  --account-name storage000002 --account-key veryFakedStorageAccountKey==

storage blob list -c con000003 --num-results 1 --show-next-marker --account-name storage000002 --account-key veryFakedStorageAccountKey==

storage blob list -c con000003 --marker 2!96!MDAwMDI4IWRpci9ibG9iZnR1cnBybW55aG1odTJmMnhtN20hMDAwMDI4ITk5OTktMTItMzFUMjM6NTk6NTkuOTk5OTk5OVoh  --account-name storage000002 --account-key veryFakedStorageAccountKey==

storage blob list -c con000003 --prefix dir/ --account-name storage000002 --account-key veryFakedStorageAccountKey==

storage blob list -c con000003 --delimiter "/" --account-name storage000002 --account-key veryFakedStorageAccountKey==

storage blob list -c con000003 --delimiter "ir" --account-name storage000002 --account-key veryFakedStorageAccountKey==

storage blob list -c con000003 --account-name storage000002-secondary --account-key veryFakedStorageAccountKey==
 
storage account blob-service-properties update --enable-change-feed --enable-delete-retention --delete-retention-days 2 --enable-versioning -n {sa}
storage account blob-service-properties update --enable-restore-policy --restore-days 1 -n {sa} 
storage account keys list -n restore000002 -g storage_blob_restore000001 --query "[0].value" -otsv
storage container create -n containera000003 --account-name restore000002 --account-key veryFakedStorageAccountKey==

storage blob upload -c containera000003 -f "C:\Users\ZELINW~1\AppData\Local\Temp\tmp5zic2ys9" -n blob1000005 --account-name restore000002 --account-key veryFakedStorageAccountKey==

storage blob upload -c containera000003 -f "C:\Users\ZELINW~1\AppData\Local\Temp\tmp5zic2ys9" -n blob2000006 --account-name restore000002 --account-key veryFakedStorageAccountKey==

storage blob upload -c containera000003 -f "C:\Users\ZELINW~1\AppData\Local\Temp\tmp5zic2ys9" -n blob3000007 --account-name restore000002 --account-key veryFakedStorageAccountKey==

storage blob upload -c containera000003 -f "C:\Users\ZELINW~1\AppData\Local\Temp\tmp5zic2ys9" -n blob4000008 --account-name restore000002 --account-key veryFakedStorageAccountKey==

storage blob list -c containera000003 --account-name restore000002 --account-key veryFakedStorageAccountKey==

storage container delete -n containera000003 --account-name restore000002 --account-key veryFakedStorageAccountKey==

storage container create -n containerb000004 --account-name restore000002 --account-key veryFakedStorageAccountKey==

storage blob upload -c containerb000004 -f "C:\Users\ZELINW~1\AppData\Local\Temp\tmp5zic2ys9" -n blob1000005 --account-name restore000002 --account-key veryFakedStorageAccountKey==

storage blob upload -c containerb000004 -f "C:\Users\ZELINW~1\AppData\Local\Temp\tmp5zic2ys9" -n blob2000006 --account-name restore000002 --account-key veryFakedStorageAccountKey==

storage blob upload -c containerb000004 -f "C:\Users\ZELINW~1\AppData\Local\Temp\tmp5zic2ys9" -n blob3000007 --account-name restore000002 --account-key veryFakedStorageAccountKey==

storage blob upload -c containerb000004 -f "C:\Users\ZELINW~1\AppData\Local\Temp\tmp5zic2ys9" -n blob4000008 --account-name restore000002 --account-key veryFakedStorageAccountKey==

storage blob list -c containerb000004 --account-name restore000002 --account-key veryFakedStorageAccountKey==

storage container delete -n containerb000004 --account-name restore000002 --account-key veryFakedStorageAccountKey==

storage account blob-service-properties show -n {sa}
storage blob restore -t 2021-12-04T11:51Z -r containera000003/blob1000005 containera000003/blob2000006 --account-name restore000002 -g storage_blob_restore000001
storage blob restore -t 2021-12-04T11:51Z -r containera000003/blob1000005 containera000003/blob2000006 --account-name restore000002 -g storage_blob_restore000001 --no-wait
storage blob restore -t 2021-12-04T11:51Z -r containera000003/blob2000006 containerb000004/blob3000007 --account-name restore000002 -g storage_blob_restore000001
storage blob restore -t 2021-12-04T11:51Z --account-name restore000002 -g storage_blob_restore000001 --no-wait
cloud show --query profile -otsv
storage account keys list -n clitest000002 -g clitest.rg000001 --query "[0].value" -otsv
storage container create -n cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container create -n cont000004 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob upload -c cont000003 -f "C:\Users\ZELINW~1\AppData\Local\Temp\tmpnd21620u" -n src  --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob set-tier -c cont000003 -n src --tier Archive --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob show -c cont000003 -n src  --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob url -c cont000003 -n src --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob copy start -b dst -c cont000004 --source-uri "https://clitest000002.blob.core.windows.net/cont000003/src"
 --tier Cool -r High --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage blob show -c cont000004 -n dst  --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage account blob-service-properties update -n {sa} -g {rg} --enable-versioning 
storage container-rm create -n {container1} --storage-account {sa} -g {rg} --enable-vlw
storage container-rm show -n {container1} --storage-account {sa} -g {rg}
storage container-rm create -n {container2} --storage-account {sa} -g {rg}
storage container immutability-policy create -c {container2} --account-name {sa} -g {rg} -w --period 1
storage container-rm migrate-vlw -n {container2} --storage-account {sa} -g {rg} --no-wait
storage container-rm show -n {container2} --storage-account {sa} -g {rg}
cloud show --query profile -otsv
storage account keys list -n clitest000002 -g clitest000001 --query "[0].value" -otsv
storage container create -n con1000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container create -n con2000004 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage account blob-service-properties update -n {sa} -g {rg} --container-delete-retention-days 7 --enable-container-delete-retention
storage container list  --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container metadata update -n con1000003 --metadata test=1  --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container metadata show -n con1000003  --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container list --include-metadata --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container list --num-results 1  --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container list --num-results 1 --show-next-marker --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container list --marker /clitest000002/con2000004  --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container list --prefix con1 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container delete -n con2000004  --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container list  --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container list --include-deleted  --account-name clitest000002 --account-key veryFakedStorageAccountKey==

cloud show --query profile -otsv
storage account keys list -n clitest000002 -g clitest000001 --query "[0].value" -otsv
storage container create -n con1000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage account blob-service-properties update -n {sa} -g {rg} --container-delete-retention-days 7 --enable-container-delete-retention
storage container list  --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container delete -n con1000003  --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container list  --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container list --include-deleted --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container list --include-deleted --query [0].version -o tsv --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container restore -n con1000003 --deleted-version 01D7A3BA487C4FF2 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container list  --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container list --include-deleted  --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage container create --account-name clitest000002 -n container1
storage container immutability-policy create --account-name clitest000002 -c container1 -g clitest.rg000001 --period 1 -w
storage container immutability-policy show --account-name clitest000002 -c container1 -g clitest.rg000001
storage container immutability-policy delete --account-name clitest000002 -c container1 -g clitest.rg000001 --if-match '"8d971cf1c7aaa02"'
storage container immutability-policy show --account-name clitest000002 -c container1 -g clitest.rg000001
storage container immutability-policy create --account-name clitest000002 -c container1 -g clitest.rg000001 --period 1 -w false
storage container immutability-policy show --account-name clitest000002 -c container1 -g clitest.rg000001
storage container immutability-policy lock --account-name clitest000002 -c container1 -g clitest.rg000001 --if-match '"8d971cf1f7800f4"'
storage container immutability-policy show --account-name clitest000002 -c container1 -g clitest.rg000001
storage container immutability-policy delete --account-name clitest000002 -c container1 -g clitest.rg000001 --if-match '"8d971cf20e72a29"'
storage container immutability-policy extend --period 2 --account-name clitest000002 -c container1 -g clitest.rg000001 --if-match '"8d971cf20e72a29"'
storage container delete --account-name clitest000002 -n container1 --bypass-immutability-policy
storage container create --account-name clitest000002 -n container1
storage container immutability-policy create --account-name clitest000002 -c container1 -g clitest.rg000001 --period 1 --w-all
storage container immutability-policy create --account-name clitest000002 -c container1 -g clitest.rg000001 --period 1 --w-all -w
storage container immutability-policy show --account-name clitest000002 -c container1 -g clitest.rg000001
storage container immutability-policy delete --account-name clitest000002 -c container1 -g clitest.rg000001 --if-match '"8d981921b962ea7"'
storage container immutability-policy create --account-name clitest000002 -c container1 -g clitest.rg000001 --period 1 --w-all false
storage container immutability-policy create --account-name clitest000002 -c container1 -g clitest.rg000001 --w-all
storage container immutability-policy show --account-name clitest000002 -c container1 -g clitest.rg000001
storage container immutability-policy lock --account-name clitest000002 -c container1 -g clitest.rg000001 --if-match '"8d981921e3b4b25"'
storage container immutability-policy show --account-name clitest000002 -c container1 -g clitest.rg000001
storage container immutability-policy extend --account-name clitest000002 -c container1 -g clitest.rg000001 --period 5 --if-match '"8d981921f7aca52"'
storage account create -g clitest.rg000001 -n clistorage000002 --kind StorageV2
storage container create --account-name clistorage000002 -n container1 --metadata k1=v1 k2=v2
storage container legal-hold show --account-name clistorage000002 -c container1 -g clitest.rg000001
storage container legal-hold set --account-name clistorage000002 -c container1 -g clitest.rg000001 --tags tag1 tag2
storage container legal-hold clear --account-name clistorage000002 -c container1 -g clitest.rg000001 --tags tag1 tag2
storage container create --account-name clitest000002 -n container1 --metadata k1=v1 k2=v2
storage container legal-hold show --account-name clitest000002 -c container1 -g clitest.rg000001
storage container legal-hold set --account-name clitest000002 -c container1 -g clitest.rg000001 --tags tag1 tag2 --w-all
storage container legal-hold clear --account-name clitest000002 -c container1 -g clitest.rg000001 --tags tag1 tag2
storage container legal-hold set --account-name clitest000002 -c container1 -g clitest.rg000001 --tags tag3 tag4 --w-all false
network vnet create -g {rg} -n {vnet} --subnet-name {subnet}
network vnet subnet update -g {rg} --vnet-name {vnet} -n {subnet} --service-endpoints Microsoft.Storage
storage account create -n {sa} -g {rg} --subnet {subnet_id} --default-action Deny --hns --sku Standard_LRS --enable-nfs-v3 true
storage container-rm create -n {cont} --storage-account {sa} --root-squash RootSquash
storage container-rm update -n {cont} --storage-account {sa} --root-squash AllSquash
storage container-rm update -n {cont} --storage-account {sa} --root-squash NoRootSquash
storage container-rm create --storage-account {sa} -g {rg} -n {container_name} --public-access blob --metadata key1=value1 -d {encryption} --deny-override false
storage container-rm create --storage-account {sa} -g {rg} -n {container_name} --fail-on-exist
storage account show -n {sa}
storage container-rm create --storage-account {storage_account_id} -n {container_name_2} --public-access off
storage container-rm exists --storage-account {sa} -g {rg} -n {container_name}
storage container-rm exists --storage-account {storage_account_id} -n {container_name}
storage container-rm exists --ids {container_id}
storage container-rm show --storage-account {sa} -g {rg} -n {container_name}
storage container-rm show --storage-account {storage_account_id} -n {container_name}
storage container-rm show --ids {container_id}
storage container-rm update --storage-account {sa} -g {rg} -n {container_name} --metadata key2=value2
storage container-rm update --storage-account {storage_account_id} -n {container_name} --public-access container
storage container-rm update --ids {container_id} --deny-encryption-scope-override true
storage container-rm list --storage-account {sa} --query "[].name"
storage container-rm delete --storage-account {sa} -g {rg} -n {container_name_2} -y
storage container-rm list --storage-account {storage_account_id} --query "[].name"
storage container-rm delete --ids {container_id} -y
storage container-rm list --storage-account {storage_account_id}
storage container-rm show --storage-account {sa} -g {rg} -n {container_name}
storage container-rm exists --storage-account {sa} -g {rg} -n {container_name}
storage account show-connection-string -n clitest000002 -g clitest.rg000001 -otsv
storage cors list --connection-string "DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=clitest000002;AccountKey=veryFakedStorageAccountKey==
"
storage cors add --method POST --origins http://example.com --services bfq --max-age 60 --connection-string "DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=clitest000002;AccountKey=veryFakedStorageAccountKey==
"
storage cors add --method GET --origins http://example.com --services bf --connection-string "DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=clitest000002;AccountKey=veryFakedStorageAccountKey==
"
storage cors list --connection-string "DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=clitest000002;AccountKey=veryFakedStorageAccountKey==
"
storage cors clear --services bf --connection-string "DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=clitest000002;AccountKey=veryFakedStorageAccountKey==
"
storage cors list --connection-string "DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=clitest000002;AccountKey=veryFakedStorageAccountKey==
"
storage cors clear --services q --connection-string "DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=clitest000002;AccountKey=veryFakedStorageAccountKey==
"
storage cors list --connection-string "DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=clitest000002;AccountKey=veryFakedStorageAccountKey==
"
storage account encryption-scope create --account-name {sa} -g {rg} -n {encryption} -s Microsoft.KeyVault
storage account encryption-scope update --account-name {sa} -g {rg} -n {encryption} -u keyuri
storage account encryption-scope create -i --account-name {sa} -g {rg} -n {encryption}
storage account encryption-scope show --account-name {sa} -g {rg} -n {encryption}
storage account encryption-scope list --account-name {sa} -g {rg}
storage account encryption-scope update --account-name {sa} -g {rg} -n {encryption} -s Microsoft.KeyVault
storage account update -n {sa} --assign-identity
keyvault set-policy -n {vault} -g {rg} --object-id {sa_pid} --key-permissions get wrapKey unwrapkey
keyvault key create --vault-name {vault} -n {key}
storage account encryption-scope update --account-name {sa} -g {rg} -n {encryption} -u {key_uri}
storage account encryption-scope update --account-name {sa} -g {rg} -n {encryption} -s Microsoft.KeyVault -u {key_uri}
storage account encryption-scope update --account-name {sa} -g {rg} -n {encryption} --state Disabled
storage account encryption-scope update --account-name {sa} -g {rg} -n {encryption} --state Enabled
storage container create -n {con} --account-name {sa} -g {rg} --default-encryption-scope {encryption}
storage container create -n {con} --account-name {sa} -g {rg} --prevent-encryption-scope-override False
storage container create -n {con} --account-name {sa} -g {rg} --default-encryption-scope {encryption} --prevent-encryption-scope-override false --public-access off
cloud show --query profile -otsv
storage account keys list -n encryption000002 -g cli_test_storage_encryption000001 --query "[0].value" -otsv
storage blob upload -c container000006 -n blob000007 -f "C:\Users\ZELINW~1\AppData\Local\Temp\tmpg926cy4y" --encryption-scope encryption000004 --account-name encryption000002 --account-key veryFakedStorageAccountKey==

storage account show-connection-string -n {sa} -g {rg}
storage blob upload -c container000006 -n blob000008 -f "C:\Users\ZELINW~1\AppData\Local\Temp\tmpg926cy4y" --encryption-scope encryption000004 --connection-string "DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=encryption000002;AccountKey=veryFakedStorageAccountKey=="
storage share-rm create --storage-account {sa} -g {rg} -n {share_name_1} --quota {initial_quota} --metadata key1=value1
storage account show -n {sa}
storage share-rm create --storage-account {storage_account_id} -n {share_name_2} --quota {initial_quota} --metadata key1=value1
storage share-rm exists --storage-account {sa} -g {rg} -n {share_name_1}
storage share-rm exists --storage-account {storage_account_id} -n {share_name_1}
storage share-rm exists --ids {share_id_1}
storage share-rm show --storage-account {sa} -g {rg} -n {share_name_1}
storage share-rm show --storage-account {storage_account_id} -n {share_name_1}
storage share-rm show --ids {share_id_1}
storage share-rm show --storage-account {sa} -g {rg} -n {non_exist_share_name}
storage share-rm update --storage-account {sa} -g {rg} -n {share_name_1} --quota {updated_quota} --metadata key2=value2
storage share-rm update --storage-account {storage_account_id} -n {share_name_2} --quota {updated_quota} --metadata key2=value2
storage share-rm update --ids {share_id_1} --quota {updated_quota} --metadata key2=value2
storage share-rm list --storage-account {sa} -g {rg} --query "[].name"
storage share-rm list --storage-account {storage_account_id} --query "[].name"
storage share-rm delete --storage-account {sa} -g {rg} -n {share_name_1} -y
storage share-rm delete --ids {share_id_2} -y
storage share-rm exists --storage-account {sa} -g {rg} -n {share_name_1}
storage share-rm exists --ids {share_id_2}
storage account file-service-properties update -n {sa} -g {rg} --delete-retention-days 7 --enable-delete-retention
storage share-rm create --storage-account {sa} -g {rg} -n {share}
storage share-rm list --storage-account {sa} -g {rg}
storage share-rm delete --storage-account {sa} -g {rg} -n {share} -y
storage share-rm list --storage-account {sa} -g {rg}
storage share-rm list --storage-account {sa} -g {rg} --include-deleted
storage share-rm list --storage-account {sa} -g {rg} --include-deleted --query [0].version -o tsv
storage share-rm restore --storage-account {sa} -g {rg} -n {share} --deleted-version {version}
storage share-rm list --storage-account {sa} -g {rg}
storage share-rm create --storage-account {sa} -g {rg} -n {share} --enabled-protocols NFS --root-squash AllSquash
storage share-rm update --storage-account {sa} -g {rg} -n {share} --root-squash NoRootSquash
storage share-rm show --storage-account {sa} -g {rg} -n {share}
storage share-rm list --storage-account {sa} -g {rg}
storage share-rm delete --storage-account {sa} -g {rg} -n {share} -y
storage share-rm list --storage-account {sa} -g {rg}
storage share-rm create --storage-account {sa} -g {rg} -n {share}
storage share-rm show --storage-account {sa} -g {rg} -n {share}
storage share-rm update --storage-account {sa} -g {rg} -n {share} --access-tier Hot
storage share-rm show --storage-account {sa} -g {rg} -n {share}
storage share-rm create --storage-account {sa} -g {rg} -n {new_share} --access-tier Hot
storage share-rm create --storage-account {sa} -g {rg} -n {share}
storage share-rm snapshot --storage-account {sa} -g {rg} -n {share} -q 10 --metadata k1=v1 --access-tier Hot --enabled-protocols SMB --root-squash AllSquash
storage share-rm show --storage-account {sa} -g {rg} -n {share} --snapshot {snapshot}
storage share-rm list --storage-account {sa} -g {rg} --include-snapshot
storage share-rm delete --storage-account {sa} -g {rg} -n {share} -y
storage share-rm delete --storage-account {sa} -g {rg} -n {share} --snapshot {snapshot} -y
storage share-rm list --storage-account {sa} -g {rg} --include-deleted --include-snapshot
storage share-rm show --storage-account {sa} -g {rg} -n {share} --snapshot {snapshot}
storage share-rm delete --storage-account {sa} -g {rg} -n {share} -y
storage share-rm list --storage-account {sa} -g {rg} --include-deleted --include-snapshot
cloud show --query profile -otsv
storage account keys list -n stats000002 -g cli_stats000001 --query "[0].value" -otsv
storage share-rm create -n share000003 --storage-account stats000002 -g cli_stats000001 
storage share-rm stats -n share000003 --storage-account stats000002 -g cli_stats000001 
storage file upload --share-name share000003 --source "C:\Users\ZELINW~1\AppData\Local\Temp\tmp8hdryylo" --path source_file.txt  --account-name stats000002 --account-key veryFakedStorageAccountKey==

storage share-rm stats -n share000003 --storage-account stats000002 -g cli_stats000001 
cloud show --query profile -otsv
storage account keys list -n clitest000002 -g clitest.rg000001 --query "[0].value" -otsv
storage share create -n share000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage share create -n share000004 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage directory create --share-name share000003 -n dir1 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage directory create --share-name share000004 -n dir2 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage file upload -p "dir1\source_file.txt" --share-name share000003 --source "C:\Users\ZELINW~1\AppData\Local\Temp\tmp1i6gdqjx" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage file exists -p "dir1\source_file.txt" -s share000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage file url -p "dir1\source_file.txt" -s share000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage file copy start -s share000004 -p "dir2\destination_file.txt" -u "https://clitest000002.file.core.windows.net/share000003/dir1/source_file.txt"
 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage file show --share-name share000004 -p "dir2\destination_file.txt" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage file copy start -s share000004 -p "dir2\destination_file.txt" -u "https://clitest000002.file.core.windows.net/share000003/dir1/source_file.txt"
 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage file show -s share000004 -p "dir2\destination_file.txt" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage file copy start -s share000004 -p "dir2\destination_file.txt" --source-share share000003 --source-path "dir1\source_file.txt" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

cloud show --query profile -otsv
storage account keys list -n clitest000002 -g clitest.rg000001 --query "[0].value" -otsv
storage share create -n share000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage share create -n share000004 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage directory create --share-name share000003 -n dir1 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage directory create --share-name share000004 -n dir2 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage file upload -p "dir1\source_file.txt" --share-name share000003 --source "C:\Users\ZELINW~1\AppData\Local\Temp\tmp0ycdld1q" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage file exists -p "dir1\source_file.txt" -s share000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage share snapshot -n share000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage file delete --share-name share000003 -p "dir1\source_file.txt" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage file exists -p "dir1\source_file.txt" -s share000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage file copy start -s share000004 -p "dir2\destination_file.txt" --source-share share000003 --source-path "dir1\source_file.txt" --file-snapshot 2021-09-07T07:16:22.0000000Z --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage file show --share-name share000004 -p "dir2\destination_file.txt" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

cloud show --query profile -otsv
storage account keys list -n clitest000002 -g clitest.rg000001 --query "[0].value" -otsv
storage share create -n share000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage share create -n share000004 --metadata foo=bar cat=hat --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage share exists -n share000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage share metadata show --name share000004 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage share list --query "[].name" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage share metadata update --name share000003 --metadata a=b c=d --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage share metadata show -n share000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage share metadata update -n share000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage share metadata show -n share000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage share update --name share000003 --quota 3 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage share show --name share000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage share url --name share000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage share url --name share000003 --unc --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage share generate-sas -n share000003 --permissions r --expiry 2046-08-23T10:30Z --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage file upload --share-name share000003 --source "C:\Users\ZELINW~1\AppData\Local\Temp\tmpwo1s5454" -p sample_file.bin --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage file exists -s share000003 -p sample_file.bin --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage file download --share-name share000003 -p "sample_file.bin" --dest "C:\Users\ZELINW~1\AppData\Local\Temp\tmpa13p39_c" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage file download --share-name share000003 -p "sample_file.bin" --dest "C:\Users\ZELINW~1\AppData\Local\Temp\tmpa13p39_c" --start-range 0 --end-range 511 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage file resize --share-name share000003 -p "sample_file.bin" --size 1234 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage file show -s share000003 -p "sample_file.bin" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage file metadata update --share-name share000003 -p "sample_file.bin" --metadata a=b c=d --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage file metadata show -s share000003 -p "sample_file.bin" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage file metadata update --share-name share000003 -p "sample_file.bin" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage file metadata show -s share000003 -p "sample_file.bin" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage file url -s share000003 -p "sample_file.bin" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage file list -s share000003 --query "[].name" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage file generate-sas -s share000003 -p sample_file.bin --permissions r --expiry 2021-12-04T12:55Z --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage file update -s share000003 -p sample_file.bin --content-type "test/type" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage file show -s share000003 -p sample_file.bin --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage file delete --share-name share000003 -p "sample_file.bin" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage file exists --share-name share000003 -p "sample_file.bin" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage directory create --share-name share000003 --name dir000005 --fail-on-exist --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage directory list -s share000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage directory exists --share-name share000003 -n dir000005 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage directory metadata update -s share000003 -n dir000005 --metadata a=b c=d --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage directory metadata show --share-name share000003 -n dir000005 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage directory show --share-name share000003 -n dir000005 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage directory metadata update --share-name share000003 --name dir000005 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage directory metadata show --share-name share000003 --name dir000005 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage file upload --share-name share000003 -p "dir000005/testfile.txt" --source "C:\Users\ZELINW~1\AppData\Local\Temp\tmpsf486xac" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage file exists --share-name share000003 -p "dir000005/testfile.txt" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage file download --share-name share000003 -p "dir000005/testfile.txt" --dest "C:\Users\ZELINW~1\AppData\Local\Temp\tmp233mpgs0" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage file list -s share000003 -p dir000005 --query "[].name" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage share stats --name share000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage file delete --share-name share000003 -p "dir000005/testfile.txt" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage file exists -s share000003 -p "testfile.txt" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage directory delete --share-name share000003 --name dir000005 --fail-not-exist --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage directory exists --share-name share000003 --name dir000005 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage directory create --share-name share000003 --name dir000006 --fail-on-exist --metadata foo=bar cat=hat --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage directory metadata show --share-name share000003 -n dir000006 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage directory delete --share-name share000003 --name dir000006 --fail-not-exist --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage share delete -n share000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

cloud show --query profile -otsv
storage account keys list -n testfilehandlesa -g azure-cli-test-file-handle-rg --query "[0].value" -otsv
storage share list-handle --name file-share --recursive --account-name testfilehandlesa --account-key veryFakedStorageAccountKey==

storage share list-handle --name file-share --recursive --path dir1 --account-name testfilehandlesa --account-key veryFakedStorageAccountKey==

storage share list-handle --name file-share --path 'Book1.csv' --account-name testfilehandlesa --account-key veryFakedStorageAccountKey==

storage share close-handle --name file-share --path 'Book1.csv' --handle-id 117235056741 --account-name testfilehandlesa --account-key veryFakedStorageAccountKey==

storage share list-handle --name file-share --path 'Book1.csv' --account-name testfilehandlesa --account-key veryFakedStorageAccountKey==

storage share close-handle --name file-share --path 'dir1' --recursive --close-all --account-name testfilehandlesa --account-key veryFakedStorageAccountKey==

storage share list-handle --name file-share --path 'dir1/testjson.json' --account-name testfilehandlesa --account-key veryFakedStorageAccountKey==

storage share close-handle --name file-share --recursive --handle-id '*' --account-name testfilehandlesa --account-key veryFakedStorageAccountKey==

storage share list-handle --name file-share --recursive --account-name testfilehandlesa --account-key veryFakedStorageAccountKey==

storage container create -n {container} --account-name {account} --public-access off --auth-mode login
storage blob upload -c {container} -f "{local_file}" -n {blob} --type block --account-name {account} --auth-mode login
storage blob exists -n {blob} -c {container} --account-name {account} --auth-mode login
storage blob list -c {container} --account-name {account} --auth-mode login
storage blob show -c {container} --account-name {account} -n {blob} --auth-mode login
storage blob download -n {blob} -c {container} --file "{download_path}" --account-name {account} --auth-mode login
storage queue create -n {queue} --account-name {account} --fail-on-exist --metadata a=b c=d --auth-mode login
storage queue exists -n {queue} --account-name {account} --auth-mode login
storage queue metadata show -n {queue} --account-name {account} --auth-mode login
storage queue metadata update -n {queue} --account-name {account} --metadata e=f g=h --auth-mode login
storage queue metadata show -n {queue} --account-name {account} --auth-mode login
storage container create -n cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==
storage blob upload -c {c} -n {b} -f "{local_file}" --account-name {sa} --auth-mode login
storage blob lease acquire --lease-duration 60 -b {b} -c {c} --account-name {sa} --proposed-lease-id {proposed_lease_id} -o tsv --auth-mode login
storage blob show -n {b} -c {c} --account-name {sa} --auth-mode login
storage blob lease change -b {b} -c {c} --lease-id {proposed_lease_id} --proposed-lease-id {new_lease_id} --account-name {sa} --auth-mode login
storage blob lease renew -b {b} -c {c} --lease-id {new_lease_id} --account-name {sa} --auth-mode login
storage blob show -n {b} -c {c} --account-name {sa} --auth-mode login
storage blob lease break -b {b} -c {c} --lease-break-period 30 --account-name {sa} --auth-mode login
storage blob show -n {b} -c {c} --account-name {sa} --auth-mode login
storage blob lease release -b {b} -c {c} --lease-id {new_lease_id} --account-name {sa} --auth-mode login
storage blob show -n {b} -c {c} --account-name {sa} --auth-mode login
storage container create -n cont000003 --account-name storage000002 --account-key veryFakedStorageAccountKey==
storage blob upload -c {container} -f "{local_file}" -n {blob_name1} --account-name {account}  --auth-mode login
storage blob snapshot -c {container} -n {blob_name1} --account-name {account}  --auth-mode login
storage blob list -c {container} --include s --account-name {account}  --auth-mode login
storage blob metadata update -c {container} -n {blob_name1} --metadata test=1 --account-name {account}  --auth-mode login
storage blob metadata show -c {container} -n {blob_name1} --account-name {account}  --auth-mode login
storage blob list -c {container} --include m --account-name {account}   --auth-mode login
storage blob upload -c {container} -f "{local_file}" -n {blob_name2} --account-name {account}  --auth-mode login
storage blob list -c {container} --account-name {account}  --auth-mode login
storage blob list -c {container} --num-results 1 --account-name {account}  --auth-mode login
storage blob list -c {container} --num-results 1 --show-next-marker --account-name {account}  --auth-mode login
storage blob list -c {container} --marker {next_marker} --account-name {account}  --auth-mode login
storage blob list -c {container} --prefix dir/ --account-name {account}  --auth-mode login
storage blob list -c {container} --delimiter "/" --account-name {account}  --auth-mode login
storage container create -n cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==
storage blob upload -c {container} -n {block} -f "{local_file}" --account-name {sa} --auth-mode login
storage blob show -c {container} -n {block} --account-name {sa} --auth-mode login
storage blob show -c {container} -n {block} --account-name {sa} --auth-mode login
storage blob upload -c {container} -n {page} -f "{local_file}" --type page --account-name {sa} --auth-mode login
storage blob show -c {container} -n {page} --account-name {sa} --auth-mode login
storage blob snapshot -c {container} -n {block} --account-name {sa} --auth-mode login
storage blob show -c {container} -n {block} --account-name {sa} --auth-mode login
storage blob show -c {container} -n {block} --account-name {sa} --if-match {etag} --auth-mode login
storage blob show -c {container} -n {block} --account-name {sa} --if-match * --auth-mode login
storage blob show -c {container} -n {block} --account-name {sa} --if-none-match {etag} --auth-mode login
storage blob show -c {container} -n {block} --account-name {sa} --if-none-match * --auth-mode login
storage blob show -c {container} -n {block} --account-name {sa} --if-unmodified-since "2020-06-29T06:32Z" --auth-mode login
storage blob show -c {container} -n {block} --account-name {sa} --if-modified-since "2020-06-29T06:32Z" --auth-mode login
storage fs create -n {filesystem} --account-name {account} --auth-mode login
storage fs exists -n {filesystem} --account-name {account} --auth-mode login
storage fs show --n {filesystem} --account-name {account} --auth-mode login
storage fs list --account-name {account} --auth-mode login
storage fs directory create -n {directory} -f {filesystem} --account-name {account} --auth-mode login
storage fs directory exists -n {directory} -f {filesystem} --account-name {account} --auth-mode login
storage fs directory show --n {directory} -f {filesystem} --account-name {account} --auth-mode login
storage fs directory list -f {filesystem} --account-name {account} --auth-mode login
storage fs file create -p {file} -f {filesystem} --account-name {account} --auth-mode login
storage fs file upload -f {filesystem} -s "{local_file}" -p {file} --account-name {account} --auth-mode login
storage fs file exists -p {file} -f {filesystem} --account-name {account} --auth-mode login
storage fs file list -f {filesystem} --account-name {account}  --auth-mode login
storage fs file list -f {filesystem} --account-name {account} --exclude-dir --auth-mode login
storage fs file show -p {file} -f {filesystem} --account-name {account} --auth-mode login
storage fs file download -p {file} -f {filesystem} -d "{download_path}" --account-name {account} --auth-mode login
storage fs file move -f {filesystem} -p {file} --new-path {filesystem}/{new_file} --account-name {account} --auth-mode login
storage fs file delete -f {filesystem} -p {new_file} --account-name {account} -y --auth-mode login
storage fs access set --acl "user::rwx,group::r--,other::---,mask::rwx" -f {filesystem} -p {directory} --account-name {account}  --auth-mode login
storage fs access show -f {filesystem} -p {directory} --account-name {account} --auth-mode login
storage queue create -n {queue_name1} --metadata key1=value1 --account-name {account}  --auth-mode login
storage queue list --account-name {account} --auth-mode login
storage queue list --include-metadata --account-name {account}  --auth-mode login
storage queue create -n {queue_name2} --account-name {account}  --auth-mode login
storage queue list --account-name {account} --auth-mode login
storage queue list --num-results 1 --account-name {account}  --auth-mode login
storage queue list --num-results 1 --show-next-marker --account-name {account}  --auth-mode login
storage queue list --marker {next_marker} --account-name {account}  --auth-mode login
storage queue list --prefix second --account-name {account}  --auth-mode login
storage container create -n cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==
storage blob upload -c cont000003 -n blob000004 -f "C:\Users\ZELINW~1\AppData\Local\Temp\tmpld2ehd1l" --account-name clitest000002  --auth-mode login
storage blob set-tier -c cont000003 -n blob000004 --tier Cool -r Middle --account-name clitest000002  --auth-mode login
storage blob set-tier -c cont000003 -n blob000004 --tier Archive -r High --account-name clitest000002  --auth-mode login
storage blob set-tier -c cont000003 -n blob000004 --tier Archive --account-name clitest000002  --auth-mode login
storage blob show -c cont000003 -n blob000004 --account-name clitest000002  --auth-mode login
storage blob set-tier -c cont000003 -n blob000004 --tier Cool -r High --account-name clitest000002  --auth-mode login
storage blob show -c cont000003 -n blob000004 --account-name clitest000002  --auth-mode login
storage blob upload -c cont000003 -n blob000005 -f "C:\Users\ZELINW~1\AppData\Local\Temp\tmpld2ehd1l" --account-name clitest000002  --auth-mode login
storage blob set-tier -c cont000003 -n blob000005 --tier Archive --account-name clitest000002  --auth-mode login
storage blob show -c cont000003 -n blob000005 --account-name clitest000002  --auth-mode login
storage blob set-tier -c cont000003 -n blob000005 --tier Hot --account-name clitest000002  --auth-mode login
storage blob show -c cont000003 -n blob000005 --account-name clitest000002  --auth-mode login
storage container create -n cont000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==
storage blob upload -c cont000003 -n blob000004 -f "C:\Users\ZELINW~1\AppData\Local\Temp\tmpk_ijxjha" -t page --tier P10 --account-name clitest000002  --auth-mode login
storage blob show -c cont000003 -n blob000004 --account-name clitest000002  --auth-mode login
storage blob set-tier -c cont000003 -n blob000004 --tier P20 -r High -t page --account-name clitest000002  --auth-mode login
storage blob set-tier -c cont000003 -n blob000004 --tier P20 -t page --account-name clitest000002  --auth-mode login
storage blob show -c cont000003 -n blob000004 --account-name clitest000002  --auth-mode login
storage account show-connection-string -n clitest000002 -g clitest.rg000001 --query connectionString -otsv
storage queue create -n queue000003 --fail-on-exist --metadata a=b c=d
storage queue exists -n queue000003
storage queue list
storage queue list --connection-string DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=clitest000002;AccountKey=veryFakedStorageAccountKey==
storage queue generate-sas -n queue000003 --permissions r --expiry 2021-12-04T12:57Z
storage queue metadata show -n queue000003
storage queue metadata update -n queue000003 --metadata e=f g=h
storage queue metadata show -n queue000003
storage queue policy list -q queue000003
storage queue policy create -q queue000003 -n policy000004 --permission raup --start 2016-01-01T00:00Z --expiry 2021-12-04T12:57Z
storage queue policy list -q queue000003
storage queue policy show -q queue000003 -n policy000004
storage queue policy update -q queue000003 -n policy000004 --permission ra
storage queue policy show -q queue000003 -n policy000004
storage queue policy delete -q queue000003 -n policy000004
storage queue policy list -q queue000003
storage message put -q queue000003 --content "test message"
storage message peek -q queue000003
storage message get -q queue000003
storage message update -q queue000003 --id fc5424df-0519-49bb-a1ac-c6874e8ef9cd --pop-receipt AgAAAAMAAAAAAAAA/8of6b2j1wE= --visibility-timeout 1 --content "new message!"
storage message peek -q queue000003
storage message put -q queue000003 --content "second message"
storage message put -q queue000003 --content "third message"
storage message peek -q queue000003 --num-messages 32
storage message get -q queue000003
storage message delete -q queue000003 --id fc5424df-0519-49bb-a1ac-c6874e8ef9cd --pop-receipt AgAAAAMAAAAAAAAAJLkX7r2j1wE=
storage message peek -q queue000003 --num-messages 32
storage message clear -q queue000003
storage message peek -q queue000003 --num-messages 32
storage queue delete -n queue000003 --fail-not-exist
storage queue exists -n queue000003
storage queue stats
cloud show --query profile -otsv
storage account keys list -n clitest000002 -g clitest.rg000001 --query "[0].value" -otsv
storage table create -n table000003 --fail-on-exist --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage table exists -n table000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage table list --query "[].name" --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage table generate-sas -n table000003 --permissions r --expiry 2021-12-04T12:57Z --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage entity insert -t table000003 -e rowkey=001 partitionkey=001 name=test value=something binaryProperty=AAECAwQF binaryProperty@odata.type=Edm.Binary --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage entity show -t table000003 --row-key 001 --partition-key 001 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage entity show -t table000003 --row-key 001 --partition-key 001 --select name --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage entity merge -t table000003 -e rowkey=001 partitionkey=001 name=test value=newval --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage entity show -t table000003 --row-key 001 --partition-key 001 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage entity replace -t table000003 -e rowkey=001 partitionkey=001 cat=hat --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage entity show -t table000003 --row-key 001 --partition-key 001 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage entity delete -t table000003 --row-key 001 --partition-key 001 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage entity show -t table000003 --row-key 001 --partition-key 001 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage entity insert -t table000003 -e rowkey=001 partitionkey=001 name=test value=something binaryProperty=AAECAwQF binaryProperty@odata.type=Edm.Binary --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage entity insert -t table000003 -e rowkey=002 partitionkey=002 name=test2 value=something2 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage entity query -t table000003 --num-results 1 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage entity query -t table000003 --marker nextpartitionkey=1!4!MDAy nextrowkey=1!4!MDAy --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage table policy list -t table000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage table policy create -t table000003 -n test1 --permission a --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage table policy create -t table000003 -n test2 --start 2016-01-01T00:00Z --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage table policy create -t table000003 -n test3 --expiry 2018-01-01T00:00Z --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage table policy create -t table000003 -n test4 --permission raud --start 2016-01-01T00:00Z --expiry 2016-05-01T00:00Z --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage table policy list -t table000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage table policy show -t table000003 -n test1 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage table policy show -t table000003 -n test2 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage table policy show -t table000003 -n test3 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage table policy show -t table000003 -n test4 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage table policy update -t table000003 -n test1 --permission au --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage table policy show -t table000003 -n test1 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage table policy delete -t table000003 -n test1 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage table policy list -t table000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage table delete --name table000003 --fail-not-exist --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage table exists -n table000003 --account-name clitest000002 --account-key veryFakedStorageAccountKey==

storage table stats --account-name clitest000002 --account-key veryFakedStorageAccountKey==

synapse role scope list --workspace-name {workspace} 
synapse role definition list --workspace-name {workspace}
synapse role definition show --workspace-name {workspace} --role "{role}" 
synapse role assignment create --workspace-name {workspace} --role "{role}" --assignee  {servicePrincipal} --assignment-id 0550e787-7841-4669-9ac8-a8176e900002
synapse role assignment create --workspace-name {workspace} --role "{role}" --assignee  {servicePrincipal} --item-type {itemType} --item {item} --assignment-id 0333e787-7841-4669-9ac8-a8176e900002
synapse role assignment show --workspace-name {workspace} --id {roleAssignmentId} 
synapse role assignment list --workspace-name {workspace} --role "{role}" --item-type {itemType} --item {item}
synapse role assignment list --workspace-name {workspace} --assignee {servicePrincipal} 
synapse role assignment list --workspace-name {workspace} --assignee-object-id {principalId} 
synapse role assignment delete --workspace-name {workspace} --ids {roleAssignmentId} -y 
synapse role assignment show --workspace-name {workspace} --id {roleAssignmentId} 
synapse workspace create --name {workspace} --resource-group {rg} --storage-account {storage-account} --file-system {file-system} --sql-admin-login-user {login-user} --sql-admin-login-password {login-password} --location {location} 
synapse workspace firewall-rule create --resource-group {rg} --name allowAll --workspace-name {workspace} --start-ip-address 0.0.0.0 --end-ip-address 255.255.255.255
synapse dataset create --workspace-name {workspace} --name {name} --file {file}
synapse dataset show --workspace-name {workspace} --name {name}
synapse dataset list --workspace-name {workspace}
synapse dataset delete --workspace-name {workspace} --name {name} -y
synapse dataset show --workspace-name {workspace} --name {name}
synapse integration-runtime managed create --resource-group {rg} --workspace-name {workspace} --name {name}
synapse integration-runtime self-hosted create --resource-group {rg} --workspace-name {workspace} --name {selfhosted-name}
synapse integration-runtime show --resource-group {rg} --workspace-name {workspace} --name {name}
synapse integration-runtime list --resource-group {rg} --workspace-name {workspace}
synapse integration-runtime delete --resource-group {rg} --workspace-name {workspace} --name {name} -y
synapse integration-runtime show --resource-group {rg} --workspace-name {workspace} --name {name}
synapse integration-runtime upgrade --resource-group {rg} --workspace-name {workspace} --name {selfhosted-integration-runtime}
synapse integration-runtime list-auth-key --resource-group {rg} --workspace-name {workspace} --name {selfhosted-integration-runtime}
synapse integration-runtime regenerate-auth-key --resource-group {rg} --workspace-name {workspace} --name {selfhosted-integration-runtime} --key-name authKey1
synapse integration-runtime get-monitoring-data --resource-group {rg} --workspace-name {workspace} --name {selfhosted-integration-runtime}
synapse integration-runtime sync-credentials --resource-group {rg} --workspace-name {workspace} --name {selfhosted-integration-runtime}
synapse integration-runtime get-status --resource-group {rg} --workspace-name {workspace} --name {selfhosted-integration-runtime}
synapse integration-runtime start --resource-group {rg} --workspace-name {workspace} --name {ssisirname}
synapse integration-runtime stop --resource-group {rg} --workspace-name {workspace} --name {ssisirname} -y
synapse workspace create --name {workspace} --resource-group {rg} --storage-account {storage-account} --file-system {file-system} --sql-admin-login-user {login-user} --sql-admin-login-password {login-password} --location {location} 
synapse workspace check-name --name {workspace}
synapse workspace firewall-rule create --name {ruleName} --workspace-name {workspace} --resource-group {rg} --start-ip-address {startIpAddress} --end-ip-address {endIpAddress}
synapse workspace firewall-rule show --name {ruleName} --workspace-name {workspace} --resource-group {rg}
synapse workspace firewall-rule update --name {ruleName} --workspace-name {workspace} --resource-group {rg} --start-ip-address {secondIpAddress}
synapse workspace firewall-rule list --workspace-name {workspace} --resource-group {rg}
synapse workspace firewall-rule delete --name {ruleName} --workspace-name {workspace} --resource-group {rg} --yes
synapse workspace firewall-rule show --name {ruleName} --workspace-name {workspace} --resource-group {rg}
synapse workspace create --name {workspace} --resource-group {rg} --storage-account {storage-account} --file-system {file-system} --sql-admin-login-user {login-user} --sql-admin-login-password {login-password} --location {location} 
synapse workspace check-name --name {workspace}
synapse kusto pool create --name "{kustoPool}" --location "{location}" --enable-purge true --enable-streaming-ingest true --sku name="Storage optimized" capacity=2 size="Medium" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto pool create --name "{leaderkustoPool}" --location "{location}" --enable-purge true --enable-streaming-ingest true --sku name="Storage optimized" capacity=2 size="Medium" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto database create --database-name "{database}" --kusto-pool-name "{leaderkustoPool}" --read-write-database location="{location}" soft-delete-period="P1D" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto pool show --name "{leaderkustoPool}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto pool show --name "{kustoPool}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto attached-database-configuration create --attached-database-configuration-name "{database-configuration-name}" --kusto-pool-name "{kustoPool}" --location "{location}" --kusto-pool-resource-id "{leaderkpoolsourceid}" --database-name "{database}" --default-principals-modification-kind "Union" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto attached-database-configuration show --attached-database-configuration-name "{database-configuration-name}" --kusto-pool-name "{kustoPool}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto attached-database-configuration list --kusto-pool-name "{kustoPool}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto attached-database-configuration update --attached-database-configuration-name "{database-configuration-name}" --kusto-pool-name "{kustoPool}" --location "{location}" --kusto-pool-resource-id "{leaderkpoolsourceid}" --database-name "{database}" --default-principals-modification-kind "Union" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto pool detach-follower-database --attached-database-configuration-name "{database-configuration-name}" --kusto-pool-resource-id "{kpoolsourceid}" --name "{leaderkustoPool}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto attached-database-configuration create --attached-database-configuration-name "{database-configuration-name}" --kusto-pool-name "{kustoPool}" --location "{location}" --kusto-pool-resource-id "{leaderkpoolsourceid}" --database-name "{database}" --default-principals-modification-kind "Union" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto attached-database-configuration delete -y --attached-database-configuration-name "{database-configuration-name}" --kusto-pool-name "{leaderkustoPool}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto attached-database-configuration show --attached-database-configuration-name "{database-configuration-name}" --kusto-pool-name "{leaderkustoPool}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse workspace create --name {workspace} --resource-group {rg} --storage-account {storage-account} --file-system {file-system} --sql-admin-login-user {login-user} --sql-admin-login-password {login-password} --location {location} 
synapse workspace check-name --name {workspace}
synapse kusto pool create --name "{kustoPool}" --location "{location}" --enable-purge true --enable-streaming-ingest true --sku name="Storage optimized" capacity=2 size="Medium" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto database create --database-name "{database}" --kusto-pool-name "{kustoPool}" --read-write-database location="{location}" soft-delete-period="P1D" --resource-group "{rg}" --workspace-name "{workspace}"
eventhubs namespace create --resource-group {rg} -n {eventhub_namespace} --location eastus
eventhubs eventhub create --resource-group {rg} -n {eventhub_name} --namespace-name {eventhub_namespace}
synapse kusto data-connection event-grid create --data-connection-name "{dataConnectionName}" --database-name "{database}" --kusto-pool-name "{kustoPool}" --location "{location}" --consumer-group "$Default" --event-hub-resource-id "{ehresourceid}" --storage-account-resource-id  "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.Storage/storageAccounts/{storage-account}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto data-connection show --data-connection-name "{dataConnectionName}" --database-name "{database}" --kusto-pool-name "{kustoPool}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto data-connection list --database-name "{database}" --kusto-pool-name "{kustoPool}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto data-connection event-grid update --data-connection-name "{dataConnectionName}" --database-name "{database}" --kusto-pool-name "{kustoPool}" --location "{location}" --consumer-group "$Default" --event-hub-resource-id "{ehresourceid}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto data-connection delete -y --data-connection-name "{dataConnectionName}" --database-name "{database}" --kusto-pool-name "{kustoPool}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto data-connection show --data-connection-name "{dataConnectionName}" --database-name "{database}" --kusto-pool-name "{kustoPool}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse workspace create --name {workspace} --resource-group {rg} --storage-account {storage-account} --file-system {file-system} --sql-admin-login-user {login-user} --sql-admin-login-password {login-password} --location {location} 
synapse workspace check-name --name {workspace}
synapse kusto pool create --name "{kustoPool}" --location "{location}" --enable-purge true --enable-streaming-ingest true --sku name="Storage optimized" capacity=2 size="Medium" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto database create --database-name "{database}" --kusto-pool-name "{kustoPool}" --read-write-database location="{location}" soft-delete-period="P1D" --resource-group "{rg}" --workspace-name "{workspace}"
eventhubs namespace create --resource-group {rg} -n {eventhub_namespace} --location eastus
eventhubs eventhub create --resource-group {rg} -n {eventhub_name} --namespace-name {eventhub_namespace}
synapse kusto data-connection event-hub create --data-connection-name "{dataConnectionName}" --database-name "{database}" --kusto-pool-name "{kustoPool}" --location "{location}" --consumer-group "$Default" --event-hub-resource-id "{ehresourceid}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto data-connection show --data-connection-name "{dataConnectionName}" --database-name "{database}" --kusto-pool-name "{kustoPool}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto data-connection list --database-name "{database}" --kusto-pool-name "{kustoPool}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto data-connection event-hub update --data-connection-name "{dataConnectionName}" --database-name "{database}" --kusto-pool-name "{kustoPool}" --location "{location}" --consumer-group "$Default" --event-hub-resource-id "{ehresourceid}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto data-connection delete -y --data-connection-name "{dataConnectionName}" --database-name "{database}" --kusto-pool-name "{kustoPool}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto data-connection show --data-connection-name "{dataConnectionName}" --database-name "{database}" --kusto-pool-name "{kustoPool}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse workspace create --name {workspace} --resource-group {rg} --storage-account {storage-account} --file-system {file-system} --sql-admin-login-user {login-user} --sql-admin-login-password {login-password} --location {location} 
synapse workspace check-name --name {workspace}
synapse kusto pool create --name "{kustoPool}" --location "{location}" --enable-purge true --enable-streaming-ingest true --sku name="Storage optimized" capacity=2 size="Medium" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto database create --database-name "{database}" --kusto-pool-name "{kustoPool}" --read-write-database location="{location}" soft-delete-period="P1D" --resource-group "{rg}" --workspace-name "{workspace}"
iot hub create --resource-group "{rg}" --name "{iotHubName}" --location "{location}" 
synapse kusto data-connection iot-hub create --data-connection-name "{dataConnectionName}" --database-name "{database}" --kusto-pool-name "{kustoPool}" --location "{location}" --consumer-group "$Default" --iot-hub-resource-id "{iotresourceid}" --shared-access-policy-name "{iotHubSharedAccessPolicyName}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto data-connection show --data-connection-name "{dataConnectionName}" --database-name "{database}" --kusto-pool-name "{kustoPool}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto data-connection list --database-name "{database}" --kusto-pool-name "{kustoPool}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto data-connection iot-hub update --data-connection-name "{dataConnectionName}" --database-name "{database}" --kusto-pool-name "{kustoPool}" --location "{location}" --consumer-group "$Default" --iot-hub-resource-id "{iotresourceid}" --shared-access-policy-name "{iotHubSharedAccessPolicyName}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto data-connection delete -y --data-connection-name "{dataConnectionName}" --database-name "{database}" --kusto-pool-name "{kustoPool}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto data-connection show --data-connection-name "{dataConnectionName}" --database-name "{database}" --kusto-pool-name "{kustoPool}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse workspace create --name {workspace} --resource-group {rg} --storage-account {storage-account} --file-system {file-system} --sql-admin-login-user {login-user} --sql-admin-login-password {login-password} --location {location} 
synapse workspace check-name --name {workspace}
synapse kusto pool create --name "{kustoPool}" --location "{location}" --enable-purge true --enable-streaming-ingest true --sku name="Storage optimized" capacity=2 size="Medium" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto database create --database-name "{database}" --kusto-pool-name "{kustoPool}" --read-write-database location="{location}" soft-delete-period="P1D" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto database list --kusto-pool-name "{kustoPool}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto database show --database-name "{database}" --kusto-pool-name "{kustoPool}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto database update --database-name "{database}" --kusto-pool-name "{kustoPool}" --read-write-database soft-delete-period="P1D" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto database delete -y --database-name "{database}" --kusto-pool-name "{kustoPool}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto database show --database-name "{database}" --kusto-pool-name "{kustoPool}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse workspace create --name {workspace} --resource-group {rg} --storage-account {storage-account} --file-system {file-system} --sql-admin-login-user {login-user} --sql-admin-login-password {login-password} --location {location} 
synapse workspace check-name --name {workspace}
synapse kusto pool create --name "{kustoPool}" --location "{location}" --enable-purge true --enable-streaming-ingest true --sku name="Storage optimized" capacity=2 size="Medium" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto database create --database-name "{database}" --kusto-pool-name "{kustoPool}" --read-write-database location="{location}" soft-delete-period="P1D" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto database-principal-assignment create --database-name "{database}" --kusto-pool-name "{kustoPool}" --principal-id "{principalId}" --principal-type "App" --role "Admin" --principal-assignment-name "{principalAssignmentName}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto database-principal-assignment show --database-name "{database}" --kusto-pool-name "{kustoPool}" --principal-assignment-name "{principalAssignmentName}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto database-principal-assignment list --database-name "{database}" --kusto-pool-name "{kustoPool}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto database-principal-assignment update --database-name "{database}" --kusto-pool-name "{kustoPool}" --principal-id "{principalId}" --principal-type "App" --role "Admin" --principal-assignment-name "{principalAssignmentName}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto database-principal-assignment delete -y --database-name "{database}" --kusto-pool-name "{kustoPool}" --principal-assignment-name "{principalAssignmentName}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto database-principal-assignment show --database-name "{database}" --kusto-pool-name "{kustoPool}" --principal-assignment-name "{principalAssignmentName}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse workspace create --name {workspace} --resource-group {rg} --storage-account {storage-account} --file-system {file-system} --sql-admin-login-user {login-user} --sql-admin-login-password {login-password} --location {location} 
synapse workspace check-name --name {workspace}
synapse kusto pool create --name "{kustoPool}" --location "{location}" --enable-purge true --enable-streaming-ingest true --sku name="Storage optimized" capacity=2 size="Medium" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto pool show --name "{kustoPool}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto pool list-sku --name "{kustoPool}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto pool list --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto pool update --name "{kustoPool}" --enable-purge true --enable-streaming-ingest true --sku name="Storage optimized" capacity=2 size="Medium" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto pool add-language-extension --name "{kustoPool}" --value language-extension-name="PYTHON" --value language-extension-name="R" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto pool list-language-extension --name "{kustoPool}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto pool remove-language-extension --name "{kustoPool}" --value language-extension-name="PYTHON" --value language-extension-name="R" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto pool start --name "{kustoPool}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto pool stop --name "{kustoPool}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse workspace create --name {workspace} --resource-group {rg} --storage-account {storage-account} --file-system {file-system} --sql-admin-login-user {login-user} --sql-admin-login-password {login-password} --location {location} 
synapse workspace check-name --name {workspace}
synapse kusto pool create --name "{kustoPool}" --location "{location}" --enable-purge true --enable-streaming-ingest true --sku name="Storage optimized" capacity=2 size="Medium" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto database create --database-name "{database}" --kusto-pool-name "{kustoPool}" --read-write-database location="{location}" soft-delete-period="P1D" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto pool-principal-assignment create --kusto-pool-name "{kustoPool}" --principal-id "{principalId}" --principal-type "App" --role "AllDatabasesAdmin" --principal-assignment-name "{principalAssignmentName}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto pool-principal-assignment show --kusto-pool-name "{kustoPool}" --principal-assignment-name "{principalAssignmentName}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto pool-principal-assignment list --kusto-pool-name "{kustoPool}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto pool-principal-assignment update --kusto-pool-name "{kustoPool}" --principal-id "{principalId}" --principal-type "App" --role "AllDatabasesAdmin" --principal-assignment-name "{principalAssignmentName}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto pool-principal-assignment delete -y --kusto-pool-name "{kustoPool}" --principal-assignment-name "{principalAssignmentName}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse kusto pool-principal-assignment show --kusto-pool-name "{kustoPool}" --principal-assignment-name "{principalAssignmentName}" --resource-group "{rg}" --workspace-name "{workspace}"
synapse workspace create --name {workspace} --resource-group {rg} --storage-account {storage-account} --file-system {file-system} --sql-admin-login-user {login-user} --sql-admin-login-password {login-password} --location {location} 
synapse workspace firewall-rule create --resource-group {rg} --name allowAll --workspace-name {workspace} --start-ip-address 0.0.0.0 --end-ip-address 255.255.255.255
synapse linked-service create --workspace-name {workspace} --name {name} --file @"{file}"
synapse linked-service show --workspace-name {workspace} --name {name}
synapse linked-service list --workspace-name {workspace}
synapse linked-service delete --workspace-name {workspace} --name {name} -y
synapse linked-service show --workspace-name {workspace} --name {name}
synapse  managed-private-endpoints create --workspace-name {workspace} --pe-name {name} --resource-id {privateLinkResourceId} --group-Id {groupId}
synapse  managed-private-endpoints show --workspace-name {workspace} --pe-name {name}
synapse  managed-private-endpoints list --workspace-name {workspace}
synapse  managed-private-endpoints delete --workspace-name {workspace} --pe-name {name} -y
synapse managed-private-endpoints show --workspace-name {workspace} --pe-name {name}
synapse workspace create --name {workspace} --resource-group {rg} --storage-account {storage-account} --file-system {file-system} --sql-admin-login-user {login-user} --sql-admin-login-password {login-password} --location {location} --enable-managed-virtual-network
synapse workspace show --name {workspace} --resource-group {rg}
synapse workspace create --name {workspace} --resource-group {rg} --storage-account {storage-account} --file-system {file-system} --sql-admin-login-user {login-user} --sql-admin-login-password {login-password} --location {location} 
synapse workspace firewall-rule create --resource-group {rg} --name allowAll --workspace-name {workspace} --start-ip-address 0.0.0.0 --end-ip-address 255.255.255.255
synapse spark pool create --name {spark-pool} --spark-version {spark-version} --workspace {workspace} --resource-group {rg} --node-count 3 --node-size Medium
synapse notebook create --workspace-name {workspace} --name {name} --file @"{file}" --spark-pool-name {spark-pool} --folder-path {folder_path}
synapse notebook show --workspace-name {workspace} --name {name}
synapse notebook list --workspace-name {workspace}
synapse notebook export --workspace-name {workspace} --name {name} --output-folder "{output-folder}"
synapse notebook delete --workspace-name {workspace} --name {name} -y
synapse notebook show --workspace-name {workspace} --name {name}
synapse pipeline create --workspace-name {workspace} --name {name} --file @"{file}"
synapse pipeline show --workspace-name {workspace} --name {name}
synapse pipeline list --workspace-name {workspace}
synapse pipeline create-run --workspace-name {workspace} --name {name}
synapse pipeline-run cancel --workspace-name {workspace} --run-id {runId} -y
synapse pipeline-run show --workspace-name {workspace} --run-id {runId}
synapse pipeline-run query-by-workspace --workspace-name {workspace} --last-updated-after 2020-09-01T00:36:44.3345758Z --last-updated-before 2020-10-16T00:36:44.3345758Z
synapse activity-run query-by-pipeline-run --workspace-name {workspace} --name {name} --run-id {runId} --last-updated-after 2020-09-01T00:36:44.3345758Z --last-updated-before 2020-10-16T00:36:44.3345758Z
synapse pipeline delete --workspace-name {workspace} --name {name} -y
synapse pipeline show --workspace-name {workspace} --name {name}
synapse spark job submit --name {job} --workspace-name {workspace} --spark-pool-name {spark-pool} --main-definition-file {main-definition-file} --main-class-name {main-class-name} --arguments {arguments} --executors {executors} --executor-size {executor-size} --configuration {configuration} 
synapse spark job show --livy-id {batch-id} --workspace-name {workspace} --spark-pool-name {spark-pool}
synapse spark job list --workspace-name {workspace} --spark-pool-name {spark-pool}
synapse spark job cancel --livy-id {batch-id} --workspace-name {workspace} --spark-pool-name {spark-pool} --yes
synapse spark job show --livy-id {batch-id} --workspace-name {workspace} --spark-pool-name {spark-pool}
synapse workspace create --name {workspace} --resource-group {rg} --storage-account {storage-account} --file-system {file-system} --sql-admin-login-user {login-user} --sql-admin-login-password {login-password} --location {location} 
synapse workspace firewall-rule create --resource-group {rg} --name allowAll --workspace-name {workspace} --start-ip-address 0.0.0.0 --end-ip-address 255.255.255.255
synapse spark pool create --name {spark-pool} --spark-version {spark-version} --workspace {workspace} --resource-group {rg} --node-count 3 --node-size Medium
synapse spark-job-definition create --workspace-name {workspace} --name {name} --file @"{file}" --folder-path {folder_path}
synapse spark-job-definition show --workspace-name {workspace} --name {name}
synapse spark-job-definition list --workspace-name {workspace}
synapse spark-job-definition delete --workspace-name {workspace} --name {name}
synapse spark-job-definition show --workspace-name {workspace} --name {name}
synapse workspace create --name {workspace} --resource-group {rg} --storage-account {storage-account} --file-system {file-system} --sql-admin-login-user {login-user} --sql-admin-login-password {login-password} --location {location} 
synapse workspace check-name --name {workspace}
synapse spark pool create --name {spark-pool} --spark-version {spark-version} --workspace {workspace} --resource-group {rg} --node-count 3 --node-size Medium --spark-config-file-path "{file}"
synapse spark pool show --name {spark-pool} --workspace {workspace} --resource-group {rg}
synapse spark pool list --workspace {workspace} --resource-group {rg}
synapse spark pool update --ids {pool-id} --tags key1=value1 --spark-config-file-path "{file}"
synapse spark pool delete --name {spark-pool} --workspace {workspace} --resource-group {rg} --yes
synapse spark pool show --name {spark-pool} --workspace {workspace} --resource-group {rg}
synapse spark session create --name {job} --workspace-name {workspace} --spark-pool-name {spark-pool} --executor-size {executor-size} --executors {executors}
synapse spark session show --livy-id {session-id} --workspace-name {workspace} --spark-pool-name {spark-pool}
synapse spark session list --workspace-name {workspace} --spark-pool-name {spark-pool}
synapse spark session reset-timeout --livy-id {session-id} --workspace-name {workspace} --spark-pool-name {spark-pool}
synapse spark statement invoke --session-id {session-id} --workspace-name {workspace} --spark-pool-name {spark-pool} --code {code} --language {language}
synapse spark statement show --livy-id {statement-id} --session-id {session-id} --workspace-name {workspace} --spark-pool-name {spark-pool}
synapse spark statement list --session-id {session-id} --workspace-name {workspace} --spark-pool-name {spark-pool}
synapse spark statement cancel --livy-id {statement-id} --session-id {session-id} --workspace-name {workspace} --spark-pool-name {spark-pool}  --yes
synapse spark session cancel --livy-id {session-id} --workspace-name {workspace} --spark-pool-name {spark-pool} --yes
synapse spark session show --livy-id {session-id} --workspace-name {workspace} --spark-pool-name {spark-pool}
synapse workspace create --name {workspace} --resource-group {rg} --storage-account {storage-account} --file-system {file-system} --sql-admin-login-user {login-user} --sql-admin-login-password {login-password} --location {location} 
synapse sql ad-admin create --workspace-name {workspace} --resource-group {rg} --display-name {user-name} --object-id {object-id}
synapse sql ad-admin show --workspace-name {workspace} --resource-group {rg}
synapse sql ad-admin update --workspace-name {workspace} --resource-group {rg} --display-name {user-email}
synapse sql ad-admin delete --workspace-name {workspace} --resource-group {rg} -y
synapse sql ad-admin show --workspace-name {workspace} --resource-group {rg}
synapse workspace create --name {workspace} --resource-group {rg} --storage-account {storage-account} --file-system {file-system} --sql-admin-login-user {login-user} --sql-admin-login-password {login-password} --location {location} 
synapse workspace check-name --name {workspace}
synapse sql pool create --name {sql-pool} --performance-level {performance-level} --workspace {workspace} --resource-group {rg}
synapse sql pool show --name {sql-pool} --workspace {workspace} --resource-group {rg}
synapse sql pool list --workspace {workspace} --resource-group {rg}
synapse sql pool update --ids {pool-id} --tags key1=value1
synapse sql pool show --ids {pool-id}
synapse sql pool pause --name {sql-pool} --workspace {workspace} --resource-group {rg}
synapse sql pool show --name {sql-pool} --workspace {workspace} --resource-group {rg}
synapse sql pool resume --name {sql-pool} --workspace {workspace} --resource-group {rg}
synapse sql pool show --name {sql-pool} --workspace {workspace} --resource-group {rg}
synapse sql pool delete --name {sql-pool} --workspace {workspace} --resource-group {rg} --yes
synapse sql pool show --name {sql-pool} --workspace {workspace} --resource-group {rg}
synapse workspace create --name {workspace} --resource-group {rg} --storage-account {storage-account} --file-system {file-system} --sql-admin-login-user {login-user} --sql-admin-login-password {login-password} --location {location} 
synapse sql pool create --name {sql-pool} --performance-level {performance-level} --workspace {workspace} --resource-group {rg}
storage account show -g synapse-cli000001 -n adlsgen2000002 --query primaryEndpoints.blob
storage account keys list -g synapse-cli000001 -n adlsgen2000002 --query [0].value
synapse sql pool audit-policy show --workspace-name {workspace} --resource-group {rg} --name {sql-pool} 
synapse sql pool audit-policy update --resource-group {rg} --workspace-name {workspace} --name {sql-pool}  --state Enabled --bsts Enabled --storage-key {storage-key} --storage-endpoint={storage-endpoint} --retention-days={retention-days} --actions {audit-actions-input} 
synapse sql pool audit-policy show --workspace-name {workspace} --resource-group {rg} --name {sql-pool}
synapse sql pool audit-policy update --resource-group {rg} --workspace-name {workspace} --name {sql-pool} --state Enabled --bsts Enabled --storage-account {storage-account} --retention-days={retention-days} --actions {audit-actions-input}
synapse sql pool audit-policy update --resource-group {rg} --workspace-name {workspace} --name {sql-pool} --state Disabled
monitor log-analytics workspace create --resource-group {rg} --workspace-name {log_analytics_workspace_name}
synapse sql pool audit-policy update --resource-group {rg} --workspace-name {workspace} --name {sql-pool} --state Enabled --lats Enabled --lawri {log_analytics_workspace_id} 
synapse sql pool audit-policy show --resource-group {rg} --workspace-name {workspace} --name {sql-pool} 
synapse sql pool audit-policy update --resource-group {rg} --workspace-name {workspace} --name {sql-pool} --state Enabled --lats Disabled
synapse sql pool audit-policy show --resource-group {rg} --workspace-name {workspace} --name {sql-pool}
eventhubs namespace create --resource-group {rg} -n {eventhub_namespace} --location eastus
eventhubs eventhub create --resource-group {rg} -n {eventhub_name} --namespace-name {eventhub_namespace}
eventhubs namespace authorization-rule create --resource-group {rg} -n {eventhub_auth_rule} --namespace-name {eventhub_namespace} --rights Listen Manage Send
synapse sql pool audit-policy update --resource-group {rg} --workspace-name {workspace} --name {sql-pool} --state Enabled --event-hub-target-state Enabled --ehari {eventhub_auth_rule_id} --event-hub {eventhub_name}
synapse sql pool audit-policy show --resource-group {rg} --workspace-name {workspace}  --name {sql-pool}
synapse sql pool audit-policy update --resource-group {rg} --workspace-name {workspace}  --name {sql-pool} --state Enabled --event-hub-target-state Disabled
synapse sql pool audit-policy show --resource-group {rg} --workspace-name {workspace} --name {sql-pool}
synapse sql pool classification create --name {sql-pool} --workspace-name {workspace} --resource-group {rg} --schema {schema} --table {table} --column {column} --label {label} --information-type {information-type}
synapse sql pool classification show --name {sql-pool} --workspace-name {workspace} --resource-group {rg} --schema {schema} --table {table} --column {column}
synapse sql pool classification list --name {sql-pool} --workspace-name {workspace} --resource-group {rg}
synapse sql pool classification update --name {sql-pool} --workspace-name {workspace} --resource-group {rg} --schema {schema} --table {table} --column {column} --label {label} --information-type {information-type}
synapse sql pool classification delete --name {sql-pool} --workspace-name {workspace} --resource-group {rg} --schema {schema} --table {table} --column {column}
synapse sql pool classification recommendation enable --name {sql-pool} --workspace-name {workspace} --resource-group {rg} --schema {schema} --table {table} --column {column}
synapse sql pool classification recommendation list --name {sql-pool} --workspace-name {workspace} --resource-group {rg}
synapse sql pool classification recommendation disable --name {sql-pool} --workspace-name {workspace} --resource-group {rg} --schema {schema} --table {table} --column {column}
synapse sql pool classification recommendation list --name {sql-pool} --workspace-name {workspace} --resource-group {rg}
synapse sql pool restore --name {sql-pool} --workspace-name {workspace} --resource-group {rg} --dest-name {dest-sql-pool} --time {restore-point-time}
synapse sql pool show --name {dest-sql-pool} --workspace-name {workspace} --resource-group {rg}
synapse sql pool delete --name {dest-sql-pool} --workspace-name {workspace} --resource-group {rg} --yes
synapse sql pool list-deleted --workspace-name {workspace} --resource-group {rg}
synapse workspace create --name {workspace} --resource-group {rg} --storage-account {storage-account} --file-system {file-system} --sql-admin-login-user {login-user} --sql-admin-login-password {login-password} --location {location} 
synapse sql pool create --name {sql-pool} --performance-level {performance-level} --workspace {workspace} --resource-group {rg}
synapse sql pool tde set --status Enabled --name {sql-pool} --workspace-name {workspace}             --resource-group {rg} --transparent-data-encryption-name current
synapse sql pool tde show --name {sql-pool} --workspace-name {workspace} --resource-group {rg}                  --transparent-data-encryption-name current
synapse workspace create --name {workspace} --resource-group {rg} --storage-account {storage-account} --file-system {file-system} --sql-admin-login-user {login-user} --sql-admin-login-password {login-password} --location {location} 
synapse sql pool create --name {sql-pool} --performance-level {performance-level} --workspace {workspace} --resource-group {rg}
synapse sql pool threat-policy update --state Enabled --storage-account {storage-account} --name {sql-pool} --workspace-name {workspace} --resource-group {rg} --security-alert-policy-name {threat-policy}
synapse sql pool threat-policy show --name {sql-pool} --workspace-name {workspace} --resource-group {rg} --security-alert-policy-name {threat-policy}
synapse workspace create --name {workspace} --resource-group {rg} --storage-account {storage-account} --file-system {file-system} --sql-admin-login-user {login-user} --sql-admin-login-password {login-password} --location {location} 
storage account show -g synapse-cli000001 -n adlsgen2000002 --query primaryEndpoints.blob
storage account keys list -g synapse-cli000001 -n adlsgen2000002 --query [0].value
synapse sql audit-policy show --workspace-name {workspace} --resource-group {rg}
synapse sql audit-policy update --resource-group {rg} --workspace-name {workspace} --state Enabled --bsts Enabled --storage-key {storage-key} --storage-endpoint={storage-endpoint} --retention-days={retention-days} --actions {audit-actions-input}
synapse sql audit-policy show --workspace-name {workspace} --resource-group {rg}
synapse sql audit-policy update --resource-group {rg} --workspace-name {workspace} --state Enabled --bsts Enabled --storage-account {storage-account} --retention-days={retention-days} --actions {audit-actions-input}
synapse sql audit-policy update --resource-group {rg} --workspace-name {workspace} --state Disabled
monitor log-analytics workspace create --resource-group {rg} --workspace-name {log_analytics_workspace_name}
synapse sql audit-policy update --resource-group {rg} --workspace-name {workspace} --state Enabled --lats Enabled --lawri {log_analytics_workspace_id}
synapse sql audit-policy show --resource-group {rg} --workspace-name {workspace}
synapse sql audit-policy update --resource-group {rg} --workspace-name {workspace} --state Enabled --lats Disabled
synapse sql audit-policy show --resource-group {rg} --workspace-name {workspace}
eventhubs namespace create --resource-group {rg} -n {eventhub_namespace} --location eastus
eventhubs eventhub create --resource-group {rg} -n {eventhub_name} --namespace-name {eventhub_namespace}
eventhubs namespace authorization-rule create --resource-group {rg} -n {eventhub_auth_rule} --namespace-name {eventhub_namespace} --rights Listen Manage Send
synapse sql audit-policy update --resource-group {rg} --workspace-name {workspace} --state Enabled --event-hub-target-state Enabled --ehari {eventhub_auth_rule_id} --event-hub {eventhub_name}
synapse sql audit-policy show --resource-group {rg} --workspace-name {workspace}
synapse sql audit-policy update --resource-group {rg} --workspace-name {workspace} --state Enabled --event-hub-target-state Disabled
synapse sql audit-policy show --resource-group {rg} --workspace-name {workspace}
synapse workspace create --name {workspace} --resource-group {rg} --storage-account {storage-account} --file-system {file-system} --sql-admin-login-user {login-user} --sql-admin-login-password {login-password} --location {location} 
synapse workspace firewall-rule create --resource-group {rg} --name allowAll --workspace-name {workspace} --start-ip-address 0.0.0.0 --end-ip-address 255.255.255.255
synapse sql pool create --name {sql_pool_name} --performance-level {performance_level} --workspace {workspace} --resource-group {rg}
synapse sql-script create --workspace-name {workspace} --name {name} --file "{file}" --sql-pool-name {sql_pool_name} --sql-database-name {data_base_name} --folder-name {folder_name}
synapse sql-script show --workspace-name {workspace} --name {name}
synapse sql-script list --workspace-name {workspace}
synapse sql-script export --workspace-name {workspace} --name {name} --output-folder "{output_folder}"
synapse sql-script delete --workspace-name {workspace} --name {name}
synapse sql-script show --workspace-name {workspace} --name {name}
synapse trigger create --workspace-name {workspace} --name {name} --file @"{file}"
synapse trigger show --workspace-name {workspace} --name {name}
synapse trigger list --workspace-name {workspace}
synapse trigger delete --workspace-name {workspace} --name {name} -y
synapse trigger show --workspace-name {workspace} --name {name}
synapse trigger subscribe-to-event --workspace-name {workspace} --name {event-trigger}
synapse trigger get-event-subscription-status --workspace-name {workspace} --name {event-trigger}
synapse trigger unsubscribe-from-event --workspace-name {workspace} --name {event-trigger}
synapse trigger start --workspace-name {workspace} --name {tumbling-window-trigger}
synapse trigger-run query-by-workspace --workspace-name {workspace} --last-updated-after 2020-09-01T00:36:44.3345758Z --last-updated-before 2020-10-01T00:36:44.3345758Z
synapse trigger-run rerun --workspace-name {workspace} --name {tumbling-window-trigger} --run-id {run-id}
synapse trigger stop --workspace-name {workspace} --name {tumbling-window-trigger}
synapse workspace create --name {workspace} --resource-group {rg} --storage-account {storage-account} --file-system {file-system} --sql-admin-login-user {login-user} --sql-admin-login-password {login-password} --location {location} 
synapse workspace firewall-rule create --resource-group {rg} --name allowAll --workspace-name {workspace} --start-ip-address 0.0.0.0 --end-ip-address 255.255.255.255
synapse workspace-package upload --workspace-name {workspace} --package "{file}"
synapse workspace-package show --workspace-name {workspace} --name {name}
synapse workspace-package list --workspace-name {workspace}
synapse workspace-package delete --workspace-name {workspace} --name {name} -y
synapse workspace-package show --workspace-name {workspace} --name {name}
synapse workspace create --name {workspace} --resource-group {rg} --storage-account {storage-account} --file-system {file-system} --sql-admin-login-user {login-user} --sql-admin-login-password {login-password} --location {location} 
synapse workspace check-name --name {workspace}
synapse workspace show --name {workspace} --resource-group {rg}
synapse workspace list --resource-group {rg}
synapse workspace update --ids {workspace-id} --tags key1=value1
synapse workspace delete --name {workspace} --resource-group {rg} --yes
synapse workspace show --name {workspace} --resource-group {rg}
rest -u /subscriptions?api-version=2020-01-01
rest -u /tenants?api-version=2020-01-01
rest -m PUT -u https://management.azure.com/subscriptions/{{subscriptionId}}/resourcegroups/{rg}?api-version=2019-10-01 --body '{{"location": "eastus"}}'
rest -u https://management.azure.com/subscriptions/{{subscriptionId}}/resourcegroups/{rg}?api-version=2019-10-01
rest -m DELETE -u https://management.azure.com/subscriptions/{{subscriptionId}}/resourcegroups/{rg}?api-version=2019-10-01
rest -u https://management.azure.com/subscriptions/{{subscriptionId}}/resourcegroups/{rg}?api-version=2019-10-01
rest -u https://management.azure.com/subscriptions/{{subscriptionId}}/resourcegroups/{rg}?api-version=2019-10-01
rest -u https://management.azure.com/subscriptions/{{subscriptionId}}/resourcegroups/{rg}?api-version=2019-10-01
rest -u https://management.azure.com/subscriptions/{{subscriptionId}}/resourcegroups/{rg}?api-version=2019-10-01
rest -u https://management.azure.com/subscriptions/{{subscriptionId}}/resourcegroups/{rg}?api-version=2019-10-01
rest -u https://management.azure.com/subscriptions/{{subscriptionId}}/resourcegroups/{rg}?api-version=2019-10-01
rest -u https://management.azure.com/subscriptions/{{subscriptionId}}/resourcegroups/{rg}?api-version=2019-10-01
rest --method POST --url https://graph.microsoft.com/v1.0/applications --body '{{"displayName": "{display_name}"}}'
rest --method GET --url https://graph.microsoft.com/v1.0/applications/{app_object_id}
rest --method PATCH --url https://graph.microsoft.com/v1.0/applications/{app_object_id} --body '{{"web":{{"redirectUris":["https://myapp.com"]}}}}'
rest --method POST --url https://graph.microsoft.com/v1.0/applications/{app_object_id}/addPassword --body '{{"passwordCredential": {{"displayName": "Password friendly name"}}}}'
rest --method POST --url https://graph.microsoft.com/v1.0/serviceprincipals --body '{{"appId": "{app_id}"}}'
rest --method GET --url https://graph.microsoft.com/v1.0/servicePrincipals/{sp_object_id}
rest --method PATCH --url https://graph.microsoft.com/v1.0/servicePrincipals/{sp_object_id} --body '{{"appRoleAssignmentRequired": true}}'
rest --method POST --url https://graph.microsoft.com/v1.0/servicePrincipals/{sp_object_id}/addPassword --body '{{"passwordCredential": {{"displayName": "Password friendly name"}}}}'
rest --method DELETE --url https://graph.microsoft.com/v1.0/serviceprincipals/{sp_object_id}
rest --method GET --url https://graph.microsoft.com/v1.0/servicePrincipals/{sp_object_id}
rest --method DELETE --url https://graph.microsoft.com/v1.0/applications/{app_object_id}
rest --method GET --url https://graph.microsoft.com/v1.0/applications/{app_object_id}
rest -m GET -u "https://graph.microsoft.com/v1.0/applications?$filter=startswith(displayName, '{display_name_prefix}')"
rest -m PUT -u /subscriptions/{{subscriptionId}}/resourceGroups/{rg}/providers/Microsoft.Storage/storageAccounts/{sa}?api-version=2019-06-01 -b @"{storage_account_create_body}"
rest -m GET -u /subscriptions/{{subscriptionId}}/resourceGroups/{rg}/providers/Microsoft.Storage/storageAccounts/{sa}?api-version=2019-06-01
rest -m GET -u /subscriptions/{{subscriptionId}}/resourceGroups/{rg}/providers/Microsoft.Storage/storageAccounts/{sa}?api-version=2019-06-01
rest -m GET -u /subscriptions/{{subscriptionId}}/resourceGroups/{rg}/providers/Microsoft.Storage/storageAccounts/{sa}?api-version=2019-06-01
rest -m POST -u "/subscriptions/{{subscriptionId}}/resourceGroups/{rg}/providers/Microsoft.Storage/storageAccounts/{sa}/ListAccountSas?api-version=2019-06-01" -b @"{storage_account_sas_body}"
rest -m PUT -u https://{sa}.blob.core.windows.net/mycontainer?restype=container&sv=2015-04-05&ss=b&srt=sco&sp=rwdlacu&st=2017-05-24T10%3A42%3A03.1567373Z&se=2030-05-24T11%3A42%3A03.1567373Z&spr=https,http&sig=%2BhKh5DtEK1XbrA1zm32lu4t6ij9zGWvTG3DzOEdH%2FJE%3D --skip-authorization-header
rest -m HEAD -u https://{sa}.blob.core.windows.net/mycontainer?restype=container&sv=2015-04-05&ss=b&srt=sco&sp=rwdlacu&st=2017-05-24T10%3A42%3A03.1567373Z&se=2030-05-24T11%3A42%3A03.1567373Z&spr=https,http&sig=%2BhKh5DtEK1XbrA1zm32lu4t6ij9zGWvTG3DzOEdH%2FJE%3D --skip-authorization-header
rest -m PUT -u https://{sa}.blob.core.windows.net/mycontainer/myblob?sv=2015-04-05&ss=b&srt=sco&sp=rwdlacu&st=2017-05-24T10%3A42%3A03.1567373Z&se=2030-05-24T11%3A42%3A03.1567373Z&spr=https,http&sig=%2BhKh5DtEK1XbrA1zm32lu4t6ij9zGWvTG3DzOEdH%2FJE%3D --headers "Content-Type=text/plain; charset=UTF-8" "x-ms-blob-type=BlockBlob" --skip-authorization-header --body "hello world"
rest -m GET -u https://{sa}.blob.core.windows.net/mycontainer/myblob?sv=2015-04-05&ss=b&srt=sco&sp=rwdlacu&st=2017-05-24T10%3A42%3A03.1567373Z&se=2030-05-24T11%3A42%3A03.1567373Z&spr=https,http&sig=%2BhKh5DtEK1XbrA1zm32lu4t6ij9zGWvTG3DzOEdH%2FJE%3D --skip-authorization-header
rest -m GET -u https://{sa}.blob.core.windows.net/mycontainer?restype=container&comp=list&sv=2015-04-05&ss=b&srt=sco&sp=rwdlacu&st=2017-05-24T10%3A42%3A03.1567373Z&se=2030-05-24T11%3A42%3A03.1567373Z&spr=https,http&sig=%2BhKh5DtEK1XbrA1zm32lu4t6ij9zGWvTG3DzOEdH%2FJE%3D --skip-authorization-header
rest -m DELETE -u https://{sa}.blob.core.windows.net/mycontainer/myblob?sv=2015-04-05&ss=b&srt=sco&sp=rwdlacu&st=2017-05-24T10%3A42%3A03.1567373Z&se=2030-05-24T11%3A42%3A03.1567373Z&spr=https,http&sig=%2BhKh5DtEK1XbrA1zm32lu4t6ij9zGWvTG3DzOEdH%2FJE%3D --skip-authorization-header
rest -m DELETE -u https://{sa}.blob.core.windows.net/mycontainer?restype=container&sv=2015-04-05&ss=b&srt=sco&sp=rwdlacu&st=2017-05-24T10%3A42%3A03.1567373Z&se=2030-05-24T11%3A42%3A03.1567373Z&spr=https,http&sig=%2BhKh5DtEK1XbrA1zm32lu4t6ij9zGWvTG3DzOEdH%2FJE%3D --skip-authorization-header
rest -m DELETE -u "/subscriptions/{{subscriptionId}}/resourceGroups/{rg}/providers/Microsoft.Storage/storageAccounts/{sa}?api-version=2019-06-01"
version
identity create -g {rg} -n {ide}
role assignment create --assignee {identity_id} --role Contributor --scope {scope}
image builder create -n {tmpl} -g {rg} --scripts {script_url} --image-source {img_src} --identity {ide} --defer
image builder customizer add -n {tmpl} -g {rg} --customizer-name {pwsh_name} --type powershell -e 0 1 2 --script-url {script_url}
image builder customizer remove -n {tmpl} -g {rg} --customizer-name {pwsh_name}
image builder customizer clear -n {tmpl} -g {rg}
image builder output add -n {tmpl} -g {rg} --is-vhd --output-name {vhd_name}
image builder output remove -n {tmpl} -g {rg} --output-name {vhd_name}
image builder output clear -n {tmpl} -g {rg}
identity create -g {rg} -n {ide}
role assignment create --assignee {identity_id} --role Contributor --scope {scope}
image builder create -n {tmpl_1} -g {rg} --image-source {img_src} --managed-image-destinations {img_1}={loc} --scripts {script} --identity {ide}
image builder run -n {tmpl_1} -g {rg}
image builder show-runs -n {tmpl_1} -g {rg} --output-name {img_1}
vm create --name {vm} -g {rg} --image {image_id} --generate-ssh-keys --admin-username azureuser
vm show -n {vm} -g {rg}
image builder create -n {tmpl_2} -g {rg} --image-source {image_id} --managed-image-destinations {img_2}={loc} --scripts {script} --identity {ide}
identity create -g {rg} -n {ide}
role assignment create --assignee {identity_id} --role Contributor --scope {scope}
sig create -g {rg} --gallery-name {gallery}
sig image-definition create -g {rg} --gallery-name {gallery} --gallery-image-definition {sig1} --os-type linux -p publisher1 -f offer1 -s sku1
image builder create -n {tmpl} -g {rg} --scripts {script} --image-source {img_src} --identity {ide} --defer
image builder output add -n {tmpl} -g {rg} --gallery-name {gallery} --gallery-image-definition {sig1} --gallery-replication-regions westus --defer
image builder update -n {tmpl} -g {rg}
image builder run -n {tmpl} -g {rg}
image builder show-runs -n {tmpl} -g {rg} --output-name {sig1}
vm create --name {vm} -g {rg} --image {image_id} --generate-ssh-keys --admin-username azureuser
vm show -n {vm} -g {rg}
image builder create -n {tmpl_2} -g {rg} --image-source {image_id} --identity {ide} --shared-image-destinations "{gallery}/{sig1}={loc}" --scripts {script}
identity create -g {rg} -n {ide}
role assignment create --assignee {identity_id} --role Contributor --scope {scope}
network vnet create -g {rg} -n {vnet} --subnet-name {subnet}
network vnet subnet update -g {rg} -n {subnet} --vnet-name {vnet} --disable-private-link-service-network-policies true
image builder create -n {tmpl_01} -g {rg} --scripts {script} {script} --image-source {img_src} --identity {ide} --vnet {vnet} --subnet {subnet} --vm-size Standard_D1_v2 --os-disk-size 20 --defer
image builder output add -n {tmpl_01} -g {rg} --managed-image {new_img} --managed-image-location {new_loc} --defer
image builder output add -n {tmpl_01} -g {rg} --output-name {vhd_out} --is-vhd --defer
image builder update -n {tmpl_01} -g {rg}
image builder create -n {tmpl_02} -g {rg} --identity {ide} --scripts {script} --image-source {img_src} --build-timeout 22 --managed-image-destinations img_1=westus /subscriptions/{sub}/resourceGroups/{rg}/providers/Microsoft.Compute/images/img_2=centralus
identity create -g {rg} -n {ide}
role assignment create --assignee {identity_id} --role Contributor --scope {scope}
sig create -g {rg} --gallery-name {gallery}
sig image-definition create -g {rg} --gallery-name {gallery} --gallery-image-definition {sig1} --os-type linux -p publisher1 -f offer1 -s sku1
image builder create -n {tmpl_01} -g {rg} --scripts {script} --image-source {img_src} --shared-image-destinations {sig_out} --identity {ide}
identity create -g {rg} -n {ide}
role assignment create --assignee {identity_id} --role Contributor --scope {scope}
image builder create -g {rg} -n {tmpl} --image-source {img_src} --managed-image-destinations {img}={loc} --identity {ide}
image builder run -g {rg} -n {tmpl} --no-wait
image builder show -g {rg} -n {tmpl}
image builder cancel -g {rg} -n {tmpl}
image builder show -g {rg} -n {tmpl}
identity create -g {rg} -n {ide}
role assignment create --assignee {identity_id} --role Contributor --scope {scope}
image builder create -n {tmpl} -g {rg} --scripts {script_url} --image-source {img_src} --managed-image-destinations {img}={loc} --identity {ide} --defer
image builder customizer add -n {tmpl} -g {rg} --customizer-name {pwsh_name} --type powershell -e 0 1 2 --script-url {script_url} --defer
image builder customizer add -n {tmpl} -g {rg} --customizer-name {pwsh_name_2} --type powershell -e 12 14 16 --inline-script {inline_script} --defer
image builder customizer add -n {tmpl} -g {rg} --customizer-name {win_restart_name} -t windows-restart --restart-check-command "{win_restart_check_cmd}" --defer
image builder customizer add -n {tmpl} -g {rg} --customizer-name {file_name} -t file --file-source "{file_url}" --dest-path "{file_dest_path}" --defer
image builder customizer add -n {tmpl} -g {rg} --customizer-name {shell_name} --type shell --inline-script "{inline_shell_script}" --defer
image builder customizer add -n {tmpl} -g {rg} --customizer-name {win_update_name} --type windows-update --search-criteria IsInstalled=0 --filters "exclude:$_.Title -like '*Preview*'" "include:$true" --update-limit 20 --defer
image builder customizer remove -n {tmpl} -g {rg} --customizer-name {shell_name} --defer
image builder update -n {tmpl} -g {rg}
image builder customizer clear -n {tmpl} -g {rg} --defer
identity create -g {rg} -n {ide}
role assignment create --assignee {identity_id} --role Contributor --scope {scope}
image builder create -n {tmpl_01} -g {rg} --scripts {script} --image-source {img_src} --identity {ide} --defer
image builder output add -n {tmpl_01} -g {rg} --managed-image {img_1} --managed-image-location {loc} --defer
image builder output add -n {tmpl_01} -g {rg} --managed-image {img_2} --managed-image-location {loc} --defer
image builder output add -n {tmpl_01} -g {rg} --output-name {vhd_out} --artifact-tags "is_vhd=True" --is-vhd --defer
image builder output remove -n {tmpl_01} -g {rg} --output-name {img_2} --defer
image builder update -n {tmpl_01} -g {rg}
image builder output clear -n {tmpl_01} -g {rg} --defer
vm image list --offer ubuntu
vm list-usage --location westus
vm image list --edge-zone microsoftlosangeles1 --offer CentOs --publisher OpenLogic --sku 7.7 -o tsv --all
vm create -g {rg} -l westus -n {vm} --admin-username ubuntu --image Canonical:UbuntuServer:14.04.4-LTS:latest --admin-password @PasswordPassword1! --public-ip-address-allocation dynamic --authentication-type password --nsg-rule NONE
vm open-port -g {rg} -n {vm} --port 555,556,557-559 --priority 800
network nsg show -g {rg} -n {nsg_list}
vm open-port -g {rg} -n {vm} --port "*" --priority 900
network nsg show -g {rg} -n {nsg}
vm open-port -g {rg} -n {vm} --apply-to-subnet --nsg-name {nsg} --port "*" --priority 900
network nsg show -g {rg} -n {nsg}
vm list-ip-addresses --resource-group {rg}
vm create --resource-group {rg} --location {loc} -n {vm} --admin-username ubuntu --image Canonical:UbuntuServer:14.04.4-LTS:latest --admin-password testPassword0 --public-ip-address-allocation {allocation} --authentication-type password --zone {zone} --nsg-rule NONE
vm show --resource-group {rg} --name {vm} -d
vm list --resource-group {rg} -d
vm list-vm-resize-options --resource-group {rg} --name {vm}
vm list-ip-addresses --resource-group {rg_caps}
vm list-sizes --location westus
vm image list-offers --location {loc} --publisher {pub}
vm image list-offers --location {loc} --publisher {pub} --edge-zone {edge_zone}
vm image list-publishers --location {loc}
vm image list-publishers --location {loc} --edge-zone {edge_zone}
vm image list-skus --location {loc} -p {pub} --offer {offer} --query "length([].id.contains(@, '/Publishers/{pub}/ArtifactTypes/VMImage/Offers/{offer}/Skus/'))"
vm image list-skus --location {loc} --edge-zone {edge_zone} --offer {offer} --publisher {pub} --edge-zone {edge_zone}
vm image show --location {loc} --publisher {pub} --offer {offer} --sku {sku} --version {ver}
vm image show --offer {offer} --publisher {pub} --sku {sku} --version {ver} -l {loc} --edge-zone {edge_zone}
vm create -g {rg} --location {loc} -n {vm} --admin-username ubuntu --image centos --admin-password testPassword0 --authentication-type password --nsg-rule NONE
vm deallocate -g {rg} -n {vm}
vm generalize -g {rg} -n {vm}
vm show -g {rg} -n {vm}
image create -g {rg} -n {image} --source {vm} --zone-resilient -l {loc}
vm create -g {rg} -n {vm} --admin-username ubuntu --image UbuntuLTS --admin-password testPassword0 --authentication-type password --use-unmanaged-disk --nsg-rule NONE
vm stop -g {rg} -n {vm}
vm generalize -g {rg} -n {vm}
vm show -g {rg} -n {vm}
vm capture -g {rg} -n {vm} --vhd-name-prefix vmtest
image create -g {rg} -n {image} --source {vm}
vm create -g {rg} -n {vm} --image Win2012R2Datacenter --admin-username clitest1234 --admin-password Test123456789# --license-type Windows_Server --nsg-rule NONE
vm show -g {rg} -n {vm}
vm update -g {rg} -n {vm} --license-type None
vm create -g {rg} -n {vm1} --image ubuntults --use-unmanaged-disk --admin-username sdk-test-admin --admin-password testPassword0 --nsg-rule NONE
vm run-command invoke -g {rg} -n {vm1} --command-id RunShellScript --scripts "echo 'sudo waagent -deprovision+user --force' | at -M now + 1 minutes"
vm deallocate -g {rg} -n {vm1}
vm generalize -g {rg} -n {vm1}
image create -g {rg} -n {image1} --source {vm1}
vm create -g {rg} -n {vm2} --image ubuntults --storage-sku standard_lrs --data-disk-sizes-gb 1 1 1 1 --admin-username sdk-test-admin --admin-password testPassword0 --nsg-rule NONE
vm show -g {rg} -n {vm2}
vm disk detach -n {disk_0_name} --vm-name {vm2} -g {rg}
vm disk detach -n {disk_2_name} --vm-name {vm2} -g {rg}
vm show -g {rg} -n {vm2}
vm run-command invoke -g {rg} -n {vm2} --command-id RunShellScript --scripts "echo 'sudo waagent -deprovision+user --force' | at -M now + 1 minutes"
vm deallocate -g {rg} -n {vm2}
vm generalize -g {rg} -n {vm2}
image create -g {rg} -n {image2} --source {vm2}
vm create -g {rg} -n {newvm1} --image {image1} --admin-username sdk-test-admin --admin-password testPassword0 --authentication-type password --nsg-rule NONE
vm show -g {rg} -n {newvm1}
vmss create -g {rg} -n vmss1 --image {image1} --admin-username sdk-test-admin --admin-password testPassword0 --authentication-type password
vm create -g {rg} -n {newvm2} --image {image2} --admin-username sdk-test-admin --admin-password testPassword0 --authentication-type password --nsg-rule NONE
vm show -g {rg} -n {newvm2}
vm create -g {rg} -n vm3 --image {image2} --admin-username sdk-test-admin --admin-password testPassword0 --authentication-type password --storage-sku os=Premium_LRS 0=StandardSSD_LRS --data-disk-sizes-gb 1 --nsg-rule NONE
vm show -g {rg} -n vm3
vmss create -g {rg} -n vmss2 --image {image2} --admin-username sdk-test-admin --admin-password testPassword0 --authentication-type password
vm create -g {rg} -n {vm} --image debian --use-unmanaged-disk --admin-username ubuntu --admin-password testPassword0 --authentication-type password --nsg-rule NONE
vm show -g {rg} -n {vm}
vm stop -g {rg} -n {vm}
disk create -g {rg} -n {os_disk} --source {os_disk_vhd_uri} --os-type linux
vm deallocate -g {rg} -n {vm}
vm generalize -g {rg} -n {vm}
image create -g {rg} -n {image1} --source {vm}
image create -g {rg} -n {image2} --source {vm_id}
image create -g {rg} -n {image3} --source {os_disk_id} --os-type linux --hyper-v-generation "V1"
vm create -g {rg} -n {vm} --image debian --use-unmanaged-disk --admin-username ubuntu --admin-password testPassword0 --authentication-type password --nsg-rule NONE
vm show -g {rg} -n {vm}
vm stop -g {rg} -n {vm}
disk create -g {rg} -n {os_disk} --source {os_disk_vhd_uri} --os-type linux
vm create -g {rg} -n {vm} --attach-os-disk {os_disk} --os-type linux --nsg-rule NONE
vm create -g {rg} -n vm1 --image debian --use-unmanaged-disk --admin-username ubuntu --admin-password testPassword0 --authentication-type password --nsg-rule NONE
vm show -g {rg} -n vm1
vm delete -g {rg} -n vm1 -y
vm create -g {rg} -n vm2 --attach-os-disk {disk_uri} --os-type linux --use-unmanaged-disk --nsg-rule NONE
vm create -g {rg} -n vm1 --image debian --use-unmanaged-disk --admin-username ubuntu --admin-password testPassword0 --authentication-type password --nsg-rule NONE
vm unmanaged-disk attach -g {rg} --vm-name {vm} --new --size-gb 1
vm unmanaged-disk attach -g {rg} --vm-name {vm} --new --size-gb 2
vm show -g {rg} -n {vm}
vm delete -g {rg} -n vm1 -y
vm create -g {rg} -n {vm2} --attach-os-disk {disk_uri} --os-type linux --use-unmanaged-disk --attach-data-disks {data_disk} {data_disk2} --data-disk-caching 0=ReadWrite 1=ReadOnly --nsg-rule NONE
vm show -g {rg} -n {vm2} -d
vm create -g {rg} -n vm1 --image centos --admin-username centosadmin --admin-password testPassword0 --authentication-type password --data-disk-sizes-gb 2 --nsg-rule NONE
vm show -g {rg} -n vm1
snapshot create -g {rg} -n {os_snapshot} --source {origin_os_disk}
disk create -g {rg} -n {os_disk} --source {os_snapshot}
snapshot create -g {rg} -n {data_snapshot} --source {origin_data_disk}
disk create -g {rg} -n {data_disk} --source {data_snapshot}
vm create -g {rg} -n vm2 --attach-os-disk {os_disk} --os-disk-delete-option Delete --attach-data-disks {data_disk} --data-disk-delete-option Detach --data-disk-sizes-gb 3 --os-disk-size-gb 100 --os-type linux --nsg-rule NONE
vm show -g {rg} -n vm2
vm create -g {rg} -n vm1 --use-unmanaged-disk --image centos --admin-username centosadmin --admin-password testPassword0 --authentication-type password --nsg-rule NONE
vm unmanaged-disk attach -g {rg} --vm-name vm1 --new --size-gb 2
vm show -g {rg} -n vm1
vm deallocate -g {rg} -n vm1
vm delete -g {rg} -n vm1 -y
vm create -g {rg} -n vm2 --attach-os-disk {os_disk_vhd} --attach-data-disks {data_disk_vhd} --os-type linux --use-unmanaged-disk --nsg-rule NONE
vm create -n Delete_CLI1 -g {rg} --image RedHat:RHEL:7-RAW:7.4.2018010506 -l northeurope --size Standard_E8as_v4 --generate-ssh-keys --public-ip-address "" --os-disk-size-gb 64 --data-disk-sizes-gb 200 --data-disk-delete-option Delete
vm show -g {rg} -n Delete_CLI1
vm create -g {rg} -n vm1 --image centos --admin-username centosadmin --admin-password testPassword0 --authentication-type password --data-disk-sizes-gb 2 --nsg-rule NONE
vm show -g {rg} -n vm1
snapshot create -g {rg} -n {os_snapshot} --source {origin_os_disk}
disk create -g {rg} -n {os_disk} --source {os_snapshot}
snapshot create -g {rg} -n {data_snapshot} --source {origin_data_disk}
disk create -g {rg} -n {data_disk} --source {data_snapshot}
disk create -g {rg} -n {data_disk2} --source {data_snapshot}
vm create -g {rg} -n vm2 --attach-os-disk {os_disk} --os-disk-delete-option Delete --attach-data-disks {data_disk} {data_disk2} --data-disk-delete-option {data_disk}=Delete {data_disk2}=Detach --os-disk-size-gb 100 --os-type linux --nsg-rule NONE
vm show -g {rg} -n vm2
vm create -g {rg} -n vm --image centos --admin-username centosadmin --admin-password testPassword0 --authentication-type password --os-disk-size-gb 75 --use-unmanaged-disk --storage-account {sa} --nsg-rule NONE
storage blob list --account-name {sa} --container-name vhds
vm create -g {rg} -n vm1 --image centos --admin-username centosadmin --admin-password testPassword0 --authentication-type password --os-disk-size-gb 75 --nsg-rule NONE
vm show -g {rg} -n vm1
disk create -g {rg} -n {disk1} --size-gb 10 --sku UltraSSD_LRS --disk-iops-read-only 200 --disk-mbps-read-only 30
disk update -g {rg} -n {disk1} --disk-iops-read-only 250 --disk-mbps-read-only 40
disk create -g {rg} -n {disk2} --image-reference {image}
disk create -g {rg} -n {disk3} --image-reference Canonical:UbuntuServer:18.04-LTS:18.04.202002180
sig create -g {rg} --gallery-name {g1}
sig image-definition create -g {rg} --gallery-name {g1} --gallery-image-definition image --os-type linux -p publisher1 -f offer1 -s sku1 --features "IsAcceleratedNetworkSupported=true" --hyper-v-generation V2
disk create -g {rg} -n disk --size-gb 10
snapshot create -g {rg} -n s1 --source disk
sig image-version create -g {rg} --gallery-name {g1} --gallery-image-definition image --gallery-image-version 1.0.0 --os-snapshot s1
disk create -g {rg} -n {disk4} --gallery-image-reference {gallery_image}
disk create -g {rg} -n {disk6} --size-gb 256 --max-shares 2 -l centraluseuap
disk update -g {rg} -n {disk6} --max-shares 1
disk create -g {rg} -n {disk} --for-upload --upload-size-bytes 21474836992
disk create -g {rg} -n {disk1} --size-gb 1 --tags tag1=d1
disk update -g {rg} -n {disk1} --size-gb 10 --sku Standard_LRS
disk grant-access -g {rg} -n {disk1} --duration-in-seconds 10
disk create -g {rg} -n {disk2} --source {disk1_id}
snapshot create -g {rg} -n {snapshot1} --size-gb 1 --sku Premium_LRS --tags tag1=s1
snapshot update -g {rg} -n {snapshot1} --sku Standard_LRS
snapshot create -g {rg} -n {snapshot2} --source {disk1} --sku Premium_LRS
image create -g {rg} -n {image} --source {snapshot1} --data-disk-sources {disk1} {snapshot2_id} {disk2_id} --os-type Linux --tags tag1=i1
image create -g {rg} -n {image_2} --source {snapshot1} --data-disk-sources {disk1} {snapshot2_id} {disk2_id} --os-type Linux --tags tag1=i1 --storage-sku Premium_LRS --os-disk-caching None
image create -g {rg} -n {image_3} --source {snapshot1} --data-disk-sources {disk1} {snapshot2_id} {disk2_id} --os-type Linux --tags tag1=i1 --storage-sku Standard_LRS --os-disk-caching ReadWrite --data-disk-caching ReadOnly
disk create -g {rg} -n {disk} --size-gb 10 -l westus
snapshot create -g {rg} -n {snapshot1} --source {disk}
snapshot create -g {rg} -n {snapshot2} --source {disk} -l eastus
disk create -g {rg} -n {disk} --size-gb 10 -l centraluseuap
snapshot create -g {rg} -n {snapshot} --incremental -l centraluseuap --source {disk}
vm list --resource-group {rg}
vm create --resource-group {rg} --location {loc} --name {vm} --admin-username ubuntu --image UbuntuLTS --admin-password testPassword0 --authentication-type password --tags firsttag=1 secondtag=2 thirdtag --nsg {nsg} --public-ip-address {ip} --vnet-name {vnet} --storage-account {sa} --use-unmanaged-disk --nsg-rule NONE
vm list --resource-group {rg}
vm show --resource-group {rg} --name {vm}
vm get-instance-view --resource-group {rg} --name {vm}
vm user update -g {rg} -n {vm} -u foouser1 -p Foo12345
vm user delete -g {rg} -n {vm} -u foouser1
network nsg show --resource-group {rg} --name {nsg}
network public-ip show --resource-group {rg} --name {ip}
network vnet show --resource-group {rg} --name {vnet}
storage account show --resource-group {rg} --name {sa}
vm stop --resource-group {rg} --name {vm}
vm get-instance-view --resource-group {rg} --name {vm}
vm start --resource-group {rg} --name {vm}
vm get-instance-view --resource-group {rg} --name {vm}
vm restart --resource-group {rg} --name {vm}
vm get-instance-view --resource-group {rg} --name {vm}
vm restart --resource-group {rg} --name {vm} --force
vm get-instance-view --resource-group {rg} --name {vm}
vm deallocate --resource-group {rg} --name {vm}
vm get-instance-view --resource-group {rg} --name {vm}
vm resize -g {rg} -n {vm} --size Standard_DS2_v2
vm delete --resource-group {rg} --name {vm} --yes
vm list --resource-group {rg}
vm create -g {rg} -n vm --image Win2019Datacenter --admin-username AzureUser --admin-password testPassword0 --nsg-rule NONE
vm user update -g {rg} -n vm --username AzureUser --password testPassword1
vm create --resource-group {rg} --name {vm1} --admin-username azureuser --admin-password testPassword0 --authentication-type password --location {loc} --image Centos --priority Regular --nsg-rule NONE
vm simulate-eviction --resource-group {rg} --name {vm1}
vm create --resource-group {rg} --name {vm2} --admin-username azureuser --admin-password testPassword0 --authentication-type password --location {loc} --image Centos --priority Spot --eviction-policy Deallocate --nsg-rule NONE
vm simulate-eviction --resource-group {rg} --name {vm2}
vm get-instance-view --resource-group {rg} --name {vm2}
vm create --resource-group {rg} --name {vm3} --admin-username azureuser --admin-password testPassword0 --authentication-type password --location {loc} --image Centos --priority Spot --eviction-policy Delete --nsg-rule NONE
vm simulate-eviction --resource-group {rg} --name {vm3}
vm list --resource-group {rg}
vm show --resource-group {rg} --name {vm3}
vm create -g {rg} -n {vm} --admin-username user12 --admin-password testPassword0 --authentication-type password --image UbuntuLTS --nsg-rule NONE --no-wait
vm wait -g {rg} -n {vm} --custom "instanceView.statuses[?code=='PowerState/running']"
vm get-instance-view -g {rg} -n {vm}
vm update -g {rg} -n {vm} --set tags.mytag=tagvalue1 --no-wait
vm wait -g {rg} -n {vm} --updated
vm show -g {rg} -n {vm}
vm availability-set create -g {rg} -n {availset}
vm availability-set create -g {rg} -n avset2 --platform-fault-domain-count 2 --platform-update-domain-count 2
vm availability-set delete -g {rg} -n avset2
vm availability-set update -g {rg} -n {availset} --set tags.test=success
vm availability-set list -g {rg}
vm availability-set list --query "[?name=='availset-test']"
vm availability-set list-sizes -g {rg} -n {availset}
vm availability-set show -g {rg} -n {availset}
vm availability-set delete -g {rg} -n {availset}
vm availability-set list -g {rg}
vm availability-set create -g {rg} -n {availset} --unmanaged --platform-fault-domain-count 3 -l westus2
vm availability-set convert -g {rg} -n {availset}
vm list-skus -l eastus2 --size Standard_DS1_V2 --zone
vm list-skus -l westus --resource-type disks
vm list-skus -l eastus --query "[?name=='Standard_M64m']"
vm list-skus -l eastus2 -otable
vm create -n {vm} -g {rg} --image UbuntuLTS --authentication-type password --admin-username user11 --admin-password testPassword0 --nsg-rule NONE
vm extension list --vm-name {vm} --resource-group {rg}
vm extension set -n {ext} --publisher {pub} --version 1.2 --vm-name {vm} --resource-group {rg} --protected-settings "{config}" --force-update --enable-auto-upgrade false
vm get-instance-view -n {vm} -g {rg}
vm extension show --resource-group {rg} --vm-name {vm} --name {ext}
vm extension delete --resource-group {rg} --vm-name {vm} --name {ext}
vm create -n {vm} -g {rg} --image UbuntuLTS --authentication-type password --admin-username user11 --admin-password testPassword0 --nsg-rule NONE
vm extension set -n {ext_type} --publisher {pub} --version 1.2 --vm-name {vm} --resource-group {rg} --protected-settings "{config}" --extension-instance-name {ext_name}
vm extension show --resource-group {rg} --vm-name {vm} --name {ext_name}
vm extension delete --resource-group {rg} --vm-name {vm} --name {ext_name}
vm extension image list-names --location {loc} --publisher {pub}
vm extension image list-versions --location {loc} -p {pub} --name {ext}
vm extension image show --location {loc} -p {pub} --name {ext} --version {ver}
vm create --resource-group {rg} --admin-username {username} --name {vm} --authentication-type {auth} --computer-name {comp_name}  --image {image} --ssh-key-value '{ssh_key}' --location {loc} --data-disk-sizes-gb 1 --data-disk-caching ReadOnly --nsg-rule NONE
vm show -g {rg} -n {vm}
vm create --resource-group {rg} --admin-username {username} --name {vm} --authentication-type {auth} --computer-name {comp_name}  --image {image} --ssh-key-value '{ssh_key}' --location {loc} --data-disk-sizes-gb 1 --data-disk-caching ReadOnly --nsg-rule NONE
vm create --resource-group {rg} --name {vm} --image {image} --ssh-key-value '{ssh_key}' --location {loc} --ephemeral-os-disk --admin-username {user} --nsg-rule NONE
vm show -g {rg} -n {vm}
vm create --resource-group {rg} --name {vm_2} --image {image} --ssh-key-value '{ssh_key}' --location {loc} --ephemeral-os-disk --os-disk-caching ReadOnly --admin-username {user} --nsg-rule NONE
vm show -g {rg} -n {vm_2}
vm create -n {base} -g {rg} --image {image} --size Standard_DS4_v2 --location {loc} --ephemeral-os-disk --ephemeral-os-disk-placement {placement1}
vm show -g {rg} -n {base}
vm create --resource-group {rg} --name {vm} --image {image} --size Standard_DS4_v2 --ssh-key-value '{ssh_key}' --location {loc} --ephemeral-os-disk --ephemeral-os-disk-placement {placement1} --admin-username {user} --nsg-rule NONE
vm show -g {rg} -n {vm}
vm create --resource-group {rg} --name {vm_2} --image {image} --ssh-key-value '{ssh_key}' --location {loc} --ephemeral-os-disk --ephemeral-os-disk-placement {placement2} --os-disk-caching ReadOnly --admin-username {user} --nsg-rule NONE
vm show -g {rg} -n {vm_2}
vm create -n {vm1} -g {rg} --image {image} --size Standard_DS4_v2 --location {loc} --ephemeral-os-disk
vm show -g {rg} -n {vm1}
vm update --resource-group {rg} --name {vm1} --size {size1} --ephemeral-os-disk-placement {placement1}
vm show -g {rg} -n {vm1}
vm update --resource-group {rg} --name {vm1} --size {size2} --ephemeral-os-disk-placement {placement2} --set tags.tagName=tagValue
vm show -g {rg} -n {vm1}
vm create -n {base} -g {rg} --image {image} --size Standard_DS4_v2 --location {loc}
vm show -g {rg} -n {base}
vm update --resource-group {rg} --name {base} --size {size} --set tags.tagName=tagValue
vm show -g {rg} -n {base}
vm update --resource-group {rg} --name {base} --size {size} --set tags.tagName=tagValue
vm show -g {rg} -n {base}
vm create -n {base2} -g {rg} --image {image}  --location {loc}
vm show -g {rg} -n {base2}
vm update --resource-group {rg} --name {base2} --size {size}
vm show -g {rg} -n {base2}
network vnet create -g {rg} -n {vnet} --subnet-name {subnet}
network nic create -g {rg} -n {nic} --subnet {subnet} --vnet-name {vnet}
network nic create -g {rg} -n {nic} --subnet {subnet} --vnet-name {vnet}
network nic create -g {rg} -n {nic} --subnet {subnet} --vnet-name {vnet}
network nic create -g {rg} -n {nic} --subnet {subnet} --vnet-name {vnet}
vm create -g {rg} -n {vm} --image UbuntuLTS --nics nic1 nic2 nic3 nic4 --nic-delete-option nic1=Delete nic3=Delete --admin-username user11 --size Standard_DS3 --ssh-key-value '{ssh_key}'
vm show -g {rg} -n {vm}
vm create -g {rg} -n {vm} --image UbuntuLTS --nics nic1 nic2 nic3 nic4 --nic-delete-option Detach --admin-username user11 --size Standard_DS3 --ssh-key-value '{ssh_key}'
vm show -g {rg} -n {vm}
vm deallocate -g {rg} -n {vm}
vm nic list -g {rg} --vm-name {vm}
vm nic show -g {rg} --vm-name {vm} --nic nic1
vm nic remove -g {rg} --vm-name {vm} --nics nic4 --primary-nic nic1
vm nic add -g {rg} --vm-name {vm} --nics nic4
vm nic set -g {rg} --vm-name {vm} --nics nic1 nic2 --primary-nic nic2
vm create -n {vm} -g {rg} --computer-name {quotes} --image Debian --availability-set {quotes} --nsg {quotes} --ssh-key-value '{ssh_key}' --public-ip-address {quotes} --tags {quotes} --location {loc} --admin-username user11
vm show -n {vm} -g {rg}
network public-ip show -n {vm}PublicIP -g {rg}
network nsg create -g {rg} -n {nsg}
vm create -n {vm} -g {rg} --image UbuntuLTS --workspace {workspace} --nsg {nsg} --admin-username azureuser --admin-password testPassword0 --authentication-type password
vm monitor log show -n {vm} -g {rg} -q "Perf | limit 10"
network nsg create -g {rg} -n {nsg}
vm create -n {vm} -g {rg} --image UbuntuLTS --nsg {nsg} --admin-username azureuser --admin-password testPassword0 --authentication-type password
vm start -n {vm} -g {rg}
vm monitor metrics tail -n {vm} -g {rg} --metrics "Percentage CPU"
vm monitor metrics list-definitions -n {vm} -g {rg}
network nsg create -g {rg} -n {nsg}
vm create -n {vm} -g {rg} --image UbuntuLTS --workspace {workspace} --nsg {nsg} --generate-ssh-keys --admin-username azureuser
monitor log-analytics workspace show -n {workspace} -g {rg}
rest --method get --uri "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/cli_test_vm_create_with_workspace_linux000001/providers/microsoft.operationalinsights/workspaces/cliworkspace000002/dataSources?$filter=kind eq 'LinuxPerformanceCollection'&api-version=2020-03-01-preview"
rest --method get --uri "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/cli_test_vm_create_with_workspace_linux000001/providers/microsoft.operationalinsights/workspaces/cliworkspace000002/dataSources?$filter=kind eq 'LinuxSyslog'&api-version=2020-03-01-preview"
rest --method get --uri "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/cli_test_vm_create_with_workspace_linux000001/providers/microsoft.operationalinsights/workspaces/cliworkspace000002/dataSources?$filter=kind eq 'LinuxSyslogCollection'&api-version=2020-03-01-preview"
rest --method get --uri "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/cli_test_vm_create_with_workspace_linux000001/providers/microsoft.operationalinsights/workspaces/cliworkspace000002/dataSources?$filter=kind eq 'LinuxPerformanceObject'&api-version=2020-03-01-preview"
network nsg create -g {rg} -n {nsg}
vm create -n {vm} -g {rg} --image Win2016Datacenter --workspace {workspace} --admin-username azureuser --admin-password AzureCLI@1224 --nsg {nsg}
monitor log-analytics workspace show -n {workspace} -g {rg}
rest --method get --uri "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/cli_test_vm_create_with_workspace_windows000001/providers/microsoft.operationalinsights/workspaces/cliworkspace000002/dataSources?$filter=kind eq 'WindowsEvent'&api-version=2020-03-01-preview"
rest --method get --uri "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/cli_test_vm_create_with_workspace_windows000001/providers/microsoft.operationalinsights/workspaces/cliworkspace000002/dataSources?$filter=kind eq 'WindowsPerformanceCounter'&api-version=2020-03-01-preview"
network nsg create -g {rg} -n {nsg}
vm create -n {vm} -g {rg} --image UbuntuLTS --nsg {nsg} --generate-ssh-keys --admin-username azureuser
vm update -n {vm} -g {rg} --workspace {workspace1}
monitor log-analytics workspace show -n {workspace1} -g {rg}
rest --method get --uri "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/cli_test_vm_update_with_workspace_linux000001/providers/microsoft.operationalinsights/workspaces/cliworkspace000002/dataSources?$filter=kind eq 'LinuxPerformanceCollection'&api-version=2020-03-01-preview"
rest --method get --uri "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/cli_test_vm_update_with_workspace_linux000001/providers/microsoft.operationalinsights/workspaces/cliworkspace000002/dataSources?$filter=kind eq 'LinuxSyslog'&api-version=2020-03-01-preview"
rest --method get --uri "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/cli_test_vm_update_with_workspace_linux000001/providers/microsoft.operationalinsights/workspaces/cliworkspace000002/dataSources?$filter=kind eq 'LinuxSyslogCollection'&api-version=2020-03-01-preview"
rest --method get --uri "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/cli_test_vm_update_with_workspace_linux000001/providers/microsoft.operationalinsights/workspaces/cliworkspace000002/dataSources?$filter=kind eq 'LinuxPerformanceObject'&api-version=2020-03-01-preview"
vm monitor log show -n {vm} -g {rg} -q "Perf"
monitor log-analytics workspace create -n {workspace2} -g {rg}
vm update -n {vm} -g {rg} --workspace {workspace2}
monitor log-analytics workspace show -n {workspace2} -g {rg}
rest --method get --uri "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/cli_test_vm_update_with_workspace_linux000001/providers/microsoft.operationalinsights/workspaces/cliworkspace000003/dataSources?$filter=kind eq 'LinuxPerformanceCollection'&api-version=2020-03-01-preview"
rest --method get --uri "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/cli_test_vm_update_with_workspace_linux000001/providers/microsoft.operationalinsights/workspaces/cliworkspace000003/dataSources?$filter=kind eq 'LinuxSyslog'&api-version=2020-03-01-preview"
rest --method get --uri "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/cli_test_vm_update_with_workspace_linux000001/providers/microsoft.operationalinsights/workspaces/cliworkspace000003/dataSources?$filter=kind eq 'LinuxSyslogCollection'&api-version=2020-03-01-preview"
rest --method get --uri "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/cli_test_vm_update_with_workspace_linux000001/providers/microsoft.operationalinsights/workspaces/cliworkspace000003/dataSources?$filter=kind eq 'LinuxPerformanceObject'&api-version=2020-03-01-preview"
vm monitor log show -n {vm} -g {rg} -q "Perf"
storage account create -g {rg} -n {sa} --sku Standard_LRS -l westus
vm create -n {vm} -g {rg} --image UbuntuLTS --authentication-type password --admin-username user11 --admin-password testPassword0 --nsg-rule NONE
vm boot-diagnostics enable -g {rg} -n {vm}
vm show -g {rg} -n {vm}
vm boot-diagnostics get-boot-log-uris -g {rg} -n {vm} --expire 100
vm boot-diagnostics get-boot-log -g {rg} -n {vm}
vm boot-diagnostics enable -g {rg} -n {vm} --storage {sa}
vm show -g {rg} -n {vm}
vm boot-diagnostics disable -g {rg} -n {vm}
vm show -g {rg} -n {vm}
vm create -g {rg} -n {vm2} --image debian --admin-username user11 --admin-password testPassword0 --boot-diagnostics-storage {sa} --nsg-rule NONE
vm show -g {rg} -n {vm2}
vmss create -n {vmss} -g {rg} --image UbuntuLTS --authentication-type password --admin-username admin123 --admin-password testPassword0 --instance-count 1
vmss extension set -n {net-ext} --publisher {net-pub} --version 1.4  --vmss-name {vmss} --resource-group {rg} --protected-settings "{config_file}" --force-update --enable-auto-upgrade false
vmss extension show --resource-group {rg} --vmss-name {vmss} --name {net-ext}
vmss extension set -g {rg} --vmss-name {vmss} -n {script-ext} --publisher {script-pub} --version 2.0 --provision-after-extensions {net-ext} --settings "{{\"commandToExecute\": \"echo testing\"}}"
vmss extension show -g {rg} --vmss-name {vmss} --name {script-ext}
vmss extension set -g {rg} --vmss-name {vmss} -n {access-ext} --publisher {access-pub} --version 1.5 --provision-after-extensions {net-ext} {script-ext} --protected-settings "{config_file}"
vmss extension show -g {rg} --vmss-name {vmss} --name {access-ext}
vmss extension upgrade -g {rg} -n {vmss}
vmss extension delete --resource-group {rg} --vmss-name {vmss} --name {access-ext}
vmss extension delete --resource-group {rg} --vmss-name {vmss} --name {script-ext}
vmss extension delete --resource-group {rg} --vmss-name {vmss} --name {net-ext}
vmss create -n {vmss} -g {rg} --image UbuntuLTS --authentication-type password --admin-username admin123 --admin-password testPassword0 --instance-count 1
vmss extension set -n {ext_type} --publisher {pub} --version 1.4  --vmss-name {vmss} --resource-group {rg} --protected-settings "{config_file}" --extension-instance-name {ext_name}
vmss extension show --resource-group {rg} --vmss-name {vmss} --name {ext_name}
vmss extension delete --resource-group {rg} --vmss-name {vmss} --name {ext_name}
vmss create -g {rg} -n {vmss} --image UbuntuLTS --authentication-type password --admin-username user11 --admin-password TestTest12#$
vm create -g {rg} -n {vm} --image UbuntuLTS --authentication-type password --admin-username user11 --admin-password TestTest12#$ --use-unmanaged-disk --nsg-rule NONE
vmss diagnostics set -g {rg} --vmss-name {vmss} --settings {public_settings} --protected-settings {protected_settings}
vmss show -g {rg} -n {vmss}
vm extension set -g {rg} --vm-name {vm} -n LinuxDiagnostic --version 2.3.9025 --publisher Microsoft.OSTCExtensions --settings {public_settings} --protected-settings {protected_settings}
vm diagnostics set -g {rg} --vm-name {vm} --settings {public_settings} --protected-settings {protected_settings}
vm show -g {rg} -n {vm}
vm create --image Debian -l westus -g {rg} -n {vm_1} --authentication-type all  --admin-username myadmin --admin-password testPassword0 --ssh-key-value "{ssh_key}" --nsg-rule NONE
vm show -n {vm_1} -g {rg}
vm create --image Debian -l westus -g {rg} -n {vm_2} --authentication-type ssh  --admin-username myadmin --ssh-key-value "{ssh_key}" "{ssh_key_2}" --ssh-dest-key-path "{ssh_dest}" --nsg-rule NONE
vm show -n {vm_2} -g {rg}
vm availability-set create --name {availset} -g {rg} --unmanaged --platform-fault-domain-count 3 --platform-update-domain-count 3
network public-ip create --name {pubip} -g {rg}
network vnet create --name {vnet} -g {rg} --subnet-name {subnet}
network nsg create --name {nsg} -g {rg}
vm create --image UbuntuLTS --os-disk-name {disk} --os-disk-delete-option Delete --vnet-name {vnet} --subnet {subnet} --availability-set {availset} --public-ip-address {pubip} -l "West US" --nsg {nsg} --use-unmanaged-disk --size Standard_DS2 --admin-username user11 --storage-account {sa} --storage-container-name {container} -g {rg} --name {vm} --ssh-key-value '{ssh_key}'
vm availability-set show -n {availset} -g {rg}
network nsg show -n {nsg} -g {rg}
network nic show -n {vm}VMNic -g {rg}
vm show -n {vm} -g {rg}
vm create -g {rg} -n {vm1} --image UbuntuLTS --enable-agent --admin-username azureuser --admin-password {pswd} --authentication-type password --nsg-rule NONE
vm show -g {rg} -n {vm1}
vm create -g {rg} -n {vm2} --image Win2019Datacenter --admin-username azureuser --admin-password {pswd} --authentication-type password --enable-agent false --nsg-rule NONE
vm show -g {rg} -n {vm2}
vm availability-set create --name {availset} -g {rg} --unmanaged --platform-fault-domain-count 3 --platform-update-domain-count 3
network public-ip create --name {pubip} -g {rg}
network vnet create --name {vnet} -g {rg} --subnet-name {subnet}
network nsg create --name {nsg} -g {rg}
vm create --image UbuntuLTS --os-disk-name {disk} --subnet {subnet_id} --availability-set {availset_id} --public-ip-address {pubip_id} -l "West US" --nsg {nsg_id} --use-unmanaged-disk --size Standard_DS2 --admin-username user11 --storage-account {sa} --storage-container-name {container} -g {rg} --name {vm} --ssh-key-value '{ssh_key}'
vm availability-set show -n {availset} -g {rg}
network nsg show -n {nsg} -g {rg}
network nic show -n {vm}VMNic -g {rg}
vm show -n {vm} -g {rg}
vm create -n {vm} -g {rg} --image UbuntuLTS --admin-username user11 --private-ip-address 10.0.0.5 --public-ip-sku {public_ip_sku} --public-ip-address-dns-name {dns} --generate-ssh-keys --nsg-rule NONE
network public-ip show -n {vm}PublicIP -g {rg}
network nic show -n {vm}VMNic -g {rg}
vm create -n {vm2} -g {rg} --image UbuntuLTS --admin-username user11 --generate-ssh-keys --nsg-rule NONE
network public-ip show -n {vm2}PublicIP -g {rg}
vm create -g {rg} --location {loc} -n {vm} --admin-username admin123 --image centos --admin-password testPassword0 --authentication-type password --nsg-rule NONE
vm disk attach -g {rg} --vm-name {vm} --name {disk1} --new --size-gb 1 --caching ReadOnly
vm disk attach -g {rg} --vm-name {vm} --name {disk2} --new --size-gb 2 --lun 2 --sku standard_lrs
vm show -g {rg} -n {vm}
vm disk detach -g {rg} --vm-name {vm} -n {disk1}
vm show -g {rg} -n {vm}
vm disk attach -g {rg} --vm-name {vm} --name {disk1}
vm show -g {rg} -n {vm}
vm disk detach -g {rg} --vm-name {vm} -n {disk2}
vm disk detach -g {rg} --vm-name {vm} -n {disk1}
vm show -g {rg} -n {vm}
vm disk attach -g {rg} --vm-name {vm} --name {disk1} --caching ReadWrite --sku standard_lrs
vm show -g {rg} -n {vm}
disk create -g {rg} -n {disk1} --size-gb 4
snapshot create -g {rg} -n {snapshot1} --source {disk1} --sku Standard_ZRS
vm create -g {rg}  -n {vm} --admin-username admin123 --admin-password testPassword0 --image debian --storage-sku StandardSSD_LRS --data-disk-sizes-gb 1 --nsg-rule NONE
vm disk attach -g {rg} --vm-name {vm} --name {disk1} --new --size-gb 1 --sku premium_lrs
vm disk attach -g {rg} --vm-name {vm} --name {disk2}  --new --size-gb 2 --sku StandardSSD_LRS
disk create -g {rg} -n {disk3} --size-gb 4 --sku StandardSSD_LRS
vm disk attach -g {rg} --vm-name {vm} --name {disk3}
vm show -g {rg} -n {vm}
vm create -g {rg} -n {vm} --image UbuntuLTS --enable-hibernation True
vm show -g {rg} -n {vm}
vm deallocate -g {rg} -n {vm}
vm update -g {rg} -n {vm} --enable-hibernation False
disk create -g {rg} -n {disk1} --size-gb 4 --sku UltraSSD_LRS --disk-iops-read-write 500 --disk-mbps-read-write 8 --zone 2
disk update -g {rg} -n {disk1} --disk-iops-read-write 510 --disk-mbps-read-write 10
disk create -g {rg} -n {disk1} --size-gb 4 --sku UltraSSD_LRS --disk-iops-read-write 500 --disk-mbps-read-write 8 --zone 2
disk show -g {rg} -n {disk1}
disk create -g {rg} -n {disk2} --size-gb 4 --sku UltraSSD_LRS
vm create -g {rg} -n {vm} --admin-username admin123 --size Standard_D2s_v3 --admin-password testPassword0 --image debian --storage-sku UltraSSD_LRS --data-disk-sizes-gb 4 --zone 2 --location eastus --nsg-rule NONE
vm disk attach -g {rg} --vm-name {vm} --name {disk3} --new --size-gb 5 --sku UltraSSD_LRS
vm disk attach -g {rg} --vm-name {vm} --name {disk1}
vm show -g {rg} -n {vm}
vm create -g {rg} -n {vm2} --admin-username admin123 --admin-password testPassword0 --image debian --size Standard_D2s_v3 --ultra-ssd-enabled --zone 2 --location eastus --nsg-rule NONE
vm disk attach -g {rg} --vm-name {vm2} --name {disk4} --new --size-gb 5 --sku UltraSSD_LRS
vm show -g {rg} -n {vm2}
vm create -g {rg} -n {vm} --image centos --size Standard_D2s_v3 --zone 2 --admin-username azureuser --admin-password testPassword0 --authentication-type password --nsg-rule NONE
vm deallocate -g {rg} -n {vm}
vm update -g {rg} -n {vm} --ultra-ssd-enabled
vmss create -g {rg} -n {vmss} --image centos --vm-sku Standard_D2s_v3 --zone 2 --admin-username azureuser --admin-password testPassword0 --authentication-type password --lb ""
vmss deallocate -g {rg} -n {vmss}
vmss update -g {rg} -n {vmss} --ultra-ssd-enabled
vmss create -g {rg} -n {vmss} --admin-username admin123 --admin-password testPassword0 --image debian --storage-sku UltraSSD_LRS  --data-disk-sizes-gb 4 --zone 2 --location eastus --vm-sku Standard_D2s_v3 --instance-count 1 --lb ""
vmss show -g {rg} -n {vmss}
vmss create -g {rg} -n {vmss2} --admin-username admin123 --admin-password testPassword0 --image debian --ultra-ssd-enabled --zone 2 --location eastus --vm-sku Standard_D2s_v3 --lb ""
vmss disk attach -g {rg} --vmss-name {vmss2} --size-gb 5 --sku UltraSSD_LRS
vmss show -g {rg} -n {vmss2}
vm create -g {rg} --location {loc} -n {vm} --admin-username ubuntu --image UbuntuLTS --admin-password testPassword0 --authentication-type password --use-unmanaged-disk --nsg-rule NONE
vm show -g {rg} -n {vm}
vm unmanaged-disk attach -g {rg} --vm-name {vm} -n {disk} --vhd {vhd_uri} --new --caching ReadWrite --size-gb 8 --lun 1
vm show -g {rg} -n {vm}
vm unmanaged-disk detach -g {rg} --vm-name {vm} -n {disk}
vm show -g {rg} -n {vm}
vm unmanaged-disk attach -g {rg} --vm-name {vm} -n {disk} --vhd {vhd_uri} --caching ReadOnly
vm create -g {rg} -n {vm} --admin-username {username} --authentication-type {auth} --image {image} --ssh-key-value '{ssh_key}' -l {loc} --custom-data '{custom_data}' --nsg-rule NONE
vm show -g {rg} -n {vm}
vm create -g {rg} -n {vm} --admin-username {username} --authentication-type {auth} --image {image} --ssh-key-value '{ssh_key}' -l {loc} --user-data '{user_data}' --nsg-rule NONE
vm show -g {rg} -n {vm} --include-user-data
vm show -g {rg} -n {vm} --include-user-data --show-details
vm show -g {rg} -n {vm}
vm show -g {rg} -n {vm} --show-details
vm update -g {rg} -n {vm} --user-data @"{user_data_file}"
vm show -g {rg} -n {vm} --include-user-data
vm update -g {rg} -n {vm} --user-data ""
vm show -g {rg} -n {vm} --include-user-data
vmss create --admin-password testPassword0 --name {vmss} -g {rg} --admin-username myadmin --image Win2012R2Datacenter --instance-count {count}
vmss show --name {vmss} -g {rg}
vmss list
vmss list --resource-group {rg}
vmss list-skus --resource-group {rg} --name {vmss}
vmss show --resource-group {rg} --name {vmss}
vmss list-instances --resource-group {rg} --name {vmss} --query "[].instanceId"
vmss update-instances --resource-group {rg} --name {vmss} --instance-ids {instance_ids}
vmss get-instance-view --resource-group {rg} --name {vmss}
vmss stop --resource-group {rg} --name {vmss}
vmss start --resource-group {rg} --name {vmss}
vmss restart --resource-group {rg} --name {vmss}
vmss scale --resource-group {rg} --name {vmss} --new-capacity {new_count}
vmss show --resource-group {rg} --name {vmss}
vmss list-instances --resource-group {rg} --name {vmss} --query "[].instanceId"
vmss delete-instances --resource-group {rg} --name {vmss} --instance-ids {instance_ids}
vmss get-instance-view --resource-group {rg} --name {vmss}
vmss deallocate --resource-group {rg} --name {vmss}
vmss delete --resource-group {rg} --name {vmss}
vmss list --resource-group {rg}
vmss create -g {rg} -n {vmss} --image centos --scale-in-policy NewestVM --admin-username azureuser
vmss update -g {rg} -n {vmss} --scale-in-policy OldestVM
vmss create --image Debian -l westus -g {rg} -n {vmss_1} --authentication-type all  --admin-username myadmin --admin-password testPassword0 --ssh-key-value '{ssh_key}'
vmss create --image Debian -l westus -g {rg} -n {vmss_2} --authentication-type ssh  --admin-username myadmin --ssh-key-value "{ssh_key}" "{ssh_key_2}" --ssh-dest-key-path "{ssh_dest}"
vmss create --resource-group {rg} --name {vmss} --image {image} --ephemeral-os-disk --disable-overprovision --instance-count {count} --data-disk-sizes-gb 1 --storage-sku os=standard_lrs 0=premium_lrs --admin-username {user} --admin-password {password}
vmss show -g {rg} -n {vmss}
vmss create --resource-group {rg} --name {vmss_2} --image {image} --ephemeral-os-disk --os-disk-caching {caching} --disable-overprovision --instance-count {count} --admin-username {user} --admin-password {password}
vmss show -g {rg} -n {vmss_2}
vmss create -n {base} -g {rg} --image {image} --vm-sku Standard_DS4_v2 --ephemeral-os-disk --ephemeral-os-disk-placement {placement1}
vmss show -g {rg} -n {base}
vmss create --resource-group {rg} --name {vmss} --image {image} --vm-sku Standard_DS4_v2 --ephemeral-os-disk --ephemeral-os-disk-placement {placement1} --disable-overprovision --instance-count {count} --data-disk-sizes-gb 1 --storage-sku os=standard_lrs 0=premium_lrs --admin-username {user} --admin-password {password}
vmss show -g {rg} -n {vmss}
vmss create --resource-group {rg} --name {vmss_2} --image {image} --ephemeral-os-disk --ephemeral-os-disk-placement {placement2} --os-disk-caching {caching} --disable-overprovision --instance-count {count} --admin-username {user} --admin-password {password}
vmss show -g {rg} -n {vmss_2}
network public-ip create --name {ip} -g {rg}
vmss create --image Debian --admin-password testPassword0 -l westus -g {rg} -n {vmss} --disable-overprovision --instance-count {count} --os-disk-caching {caching} --upgrade-policy-mode {update} --authentication-type password --admin-username myadmin --public-ip-address {ip} --os-disk-size-gb 40 --data-disk-sizes-gb 1 --vm-sku Standard_D2_v2 --computer-name-prefix vmss1
network lb show -g {rg} -n {vmss}lb 
vmss show -g {rg} -n {vmss}
vmss list-instances -g {rg} -n {vmss} --query "[].instanceId"
vmss show -g {rg} -n {vmss} --instance-id {id}
vmss disk attach -g {rg} --vmss-name {vmss} --size-gb 3
vmss show -g {rg} -n {vmss}
vmss disk detach -g {rg} --vmss-name {vmss} --lun 1
vmss show -g {rg} -n {vmss}
vmss create --image Debian --admin-password testPassword0 -g {rg} -n {vmss} --instance-count 1 --generate-ssh-keys --admin-username myadmin --max-batch-instance-percent {maxBIP} --max-unhealthy-instance-percent {maxUIP} --max-unhealthy-upgraded-instance-percent {maxUUIP} --pause-time-between-batches {PTB} --prioritize-unhealthy-instances true
vmss show -g {rg} -n {vmss}
vmss create --image Debian --admin-username clitest1 --admin-password testPassword0 -l westus -g {rg} -n {vmss}  --storage-sku {sku}
disk create -g {rg} -n {disk} --size-gb 1 --sku {sku}
vmss list-instances -g {rg} -n {vmss}
vmss disk attach -g {rg} --vmss-name {vmss} --instance-id {instance_id} --disk {disk} --caching {caching}
vmss list-instances -g {rg} -n {vmss} --query "[?instanceId=='{instance_id}']"
vmss disk detach -g {rg} --vmss-name {vmss} --instance-id {instance_id} --lun 0
vmss list-instances -g {rg} -n {vmss} --query "[?instanceId=='{instance_id}']"
vmss create -g {rg} --name {vmss} --validate --image UbuntuLTS --disable-overprovision --instance-count 101 --single-placement-group false --admin-username ubuntuadmin --generate-ssh-keys --lb ""
vmss create -n {vmss} -g {rg} --image Debian --load-balancer {quotes} --admin-username ubuntu --ssh-key-value '{ssh_key}' --public-ip-address {quotes} --tags {quotes} --vm-sku Basic_A1
vmss show -n {vmss} -g {rg}
vmss update -g {rg} -n {vmss} --set tags.test=success
network public-ip show -n {vmss}PublicIP -g {rg}
vmss create -n {vmss} -g {rg} --image Debian --admin-username clittester --ssh-key-value '{ssh_key}' --app-gateway apt1 --instance-count 5
vmss show -n {vmss} -g {rg}
network lb create -g {rg} -n {lb} --backend-pool-name test
vmss create -g {rg} -n {vmss} --load-balancer {lb} --image UbuntuLTS --admin-username clitester --admin-password TestTest12#$
vmss create -g {rg} -n {vmss} --admin-username clitester --admin-password PasswordPassword1! --image debian --single-placement-group false
vmss show -g {rg} -n {vmss}
network lb list -g {rg}
network public-ip list -g {rg}
network nsg create -g {rg} -n {nsg}
vmss create -n {vmss} -g {rg} --image Debian --admin-username clittester --ssh-key-value '{ssh_key}' --vm-domain-name {dns_label} --public-ip-per-vm --dns-servers 10.0.0.6 10.0.0.5 --nsg {nsg}
vmss show -n {vmss} -g {rg}
vmss list-instance-public-ips -n {vmss} -g {rg}
vmss create -g {rg} -n {flex_vmss} --image UbuntuLTS --orchestration-mode Flexible
vmss list-instance-public-ips -n {flex_vmss} -g {rg}
vmss create -g {rg} -n {vmss} --image Win2012R2Datacenter --admin-username clitest1234 --admin-password Test123456789# --license-type Windows_Server --instance-count 1
vmss show -g {rg} -n {vmss}
vmss update -g {rg} -n {vmss} --license-type None
vmss update -g {rg} -n {vmss} --set virtualMachineProfile.licenseType=Windows_Server
vmss list-instances -n {vmss} -g {rg}
vmss update -g {rg} -n {vmss} --protect-from-scale-in True --protect-from-scale-set-actions True --instance-id {instance_id}
vmss update -g {rg} -n {vmss} --set protectionPolicy.protectFromScaleIn=False protectionPolicy.protectFromScaleSetActions=False --instance-id {instance_id}
vmss update -g {rg} -n {vmss} --protect-from-scale-in True --protect-from-scale-set-actions True
vmss create -n {vm1} -g {rg} --image {image} --vm-sku Standard_DS4_v2 --ephemeral-os-disk
vmss show -g {rg} -n {vm1}
vmss update --resource-group {rg} --name {vm1} --vm-sku {size1} --ephemeral-os-disk-placement {placement1}
vmss show -g {rg} -n {vm1}
vmss update --resource-group {rg} --name {vm1} --vm-sku {size2} --ephemeral-os-disk-placement {placement2} --set tags.tagName=tagValue
vmss show -g {rg} -n {vm1}
vm create -g {rg} -n {vm} --image centos --admin-username clitest1 --generate-ssh-key --nsg-rule None
vm run-command invoke -g {rg} -n {vm} --command-id RunShellScript --scripts "echo 'sudo waagent -deprovision+user --force' | at -M now + 1 minutes"
vm deallocate -g {rg} -n {vm}
vm generalize -g {rg} -n {vm}
image create -g {rg} -n {img} --source {vm}
vmss create -g {rg} -n {vmss} --image {image_id}
vmss update -g {rg} -n {vmss} --set tags.foo=bar
vmss create -g {rg} -n {vmss} --image Win2012R2Datacenter --admin-username clitest1234 --admin-password Test123456789# --license-type Windows_Server --instance-count 1 --generate-ssh-keys
vmss update -g {rg} -n {vmss} --max-batch-instance-percent {maxBIP} --max-unhealthy-instance-percent {maxUIP} --max-unhealthy-upgraded-instance-percent {maxUUIP} --pause-time-between-batches {PTB} --prioritize-unhealthy-instances true
vmss create -n {base} -g {rg} --image {image} --vm-sku Standard_DS4_v2
vmss show -g {rg} -n {base}
vmss update --resource-group {rg} --name {base} --vm-sku {vm_sku} --set tags.tagName=tagValue
vmss show -g {rg} -n {base}
vmss update --resource-group {rg} --name {base} --vm-sku {vm_sku} --set tags.tagName=tagValue
vmss show -g {rg} -n {base}
vmss create -n {base2} -g {rg} --image {image}  --location {loc}
vmss show -g {rg} -n {base2}
vmss update --resource-group {rg} --name {base2} --vm-sku {vm_sku}
vmss show -g {rg} -n {base2}
vm create -n {vm} -g {rg} --size Standard_DS4_v2 --image ubuntults --admin-username clittester --generate-ssh-keys --nsg-rule NONE
network nic show -n {vm}vmnic -g {rg}
vmss create -n {vmss} -g {rg} --vm-sku Standard_DS4_v2 --image Win2016Datacenter --admin-username clittester --admin-password Test12345678!!! --accelerated-networking --instance-count 1
vmss show -n {vmss} -g {rg}
network asg create -g {rg} -n {asg}
vmss create -g {rg} -n {vmss} --image debian --instance-count 1 --asgs {asg} --admin-username clittester --generate-ssh-keys
vm create -g {rg} -n {vm} --image debian --asgs {asg} --admin-username clittester --generate-ssh-keys --nsg-rule NONE
vmss show -g {rg} -n {vmss}
network nic show -g {rg} -n {vm}VMNIC
vm create -g {rg} -n {vm} --admin-username {admin} --authentication-type {auth} --image {image} --ssh-key-value '{ssh_key}' -l {loc} --secrets '{secrets}' --nsg-rule NONE
keyvault show -g {rg} -n {vault}
keyvault certificate create --vault-name {vault} -n cert1 -p @"{policy_path}"
keyvault secret list-versions --vault-name {vault} -n cert1 --query "[?attributes.enabled].id" -o tsv
vm secret format -s {secret_out}
vm create -g {rg} -n {vm} --admin-username {admin} --authentication-type {auth} --image {image} --ssh-key-value '{ssh_key}' -l {loc} --secrets '{secrets}' --nsg-rule NONE
vm show -g {rg} -n {vm}
vm create -g {rg} -n {vm} --admin-username {admin} --admin-password VerySecret!12 --image {image} -l {loc} --secrets '{secrets}' --nsg-rule NONE
keyvault show -g {rg} -n {vault}
keyvault certificate create --vault-name {vault} -n cert1 -p @"{policy_path}"
keyvault secret list-versions --vault-name {vault} -n cert1 --query "[?attributes.enabled].id" -o tsv
vm secret format -s {secret_out} --certificate-store "My"
vm create -g {rg} -n {vm} --admin-username {admin} --admin-password VerySecret!12 --image {image} -l {loc} --secrets "{secrets}" --nsg-rule NONE
vm show -g {rg} -n {vm}
keyvault show -g {rg} -n {vault}
keyvault certificate create --vault-name {vault} -n cert1 -p @"{policy_path}"
keyvault secret list-versions --vault-name {vault} -n cert1 --query "[?attributes.enabled].id" -o tsv
vm secret format -s {secret_out}
vmss create -n {vmss} -g {rg} --image Debian --admin-username deploy --ssh-key-value '{ssh_key}' --secrets '{secrets}'
vmss show -n {vmss} -g {rg}
network vnet create -n {vnet} -g {rg} --subnet-name {subnet}
network lb create --name {lb} -g {rg} --backend-pool-name {bepool}
vmss create --image CentOS --os-disk-name {os_disk} --admin-username ubuntu --vnet-name {vnet} --subnet {subnet} -l "West US" --vm-sku {sku} --storage-container-name {container} -g {rg} --name {vmss} --load-balancer {lb} --ssh-key-value '{ssh_key}' --backend-pool-name {bepool} --use-unmanaged-disk
vmss show --name {vmss} -g {rg}
network lb show --name {lb} -g {rg}
network vnet show --name {vnet} -g {rg}
network vnet create -n {vnet} -g {rg} --subnet-name {subnet}
network lb create --name {lb} -g {rg} --backend-pool-name {bepool}
vmss create --image CentOS --os-disk-name {os_disk} --admin-username ubuntu --subnet {subnet_id} -l "West US" --vm-sku {sku} --storage-container-name {container} -g {rg} --name {vmss} --load-balancer {lb_id} --ssh-key-value '{ssh_key}' --backend-pool-name {bepool} --use-unmanaged-disk
vmss show --name {vmss} -g {rg}
network lb show --name {lb} -g {rg}
network vnet show --name {vnet} -g {rg}
vmss create -g {rg} -n {vmss} --image UbuntuLTS --authentication-type password --admin-username admin123 --admin-password TestTest12#$ --instance-count {count}
vmss list-instances --resource-group {rg} --name {vmss}
vmss show --resource-group {rg} --name {vmss} --instance-id {id}
vmss list-instance-connection-info --resource-group {rg} --name {vmss}
vmss restart --resource-group {rg} --name {vmss} --instance-ids *
vmss get-instance-view --resource-group {rg} --name {vmss} --instance-id 1
vmss get-instance-view --resource-group {rg} --name {vmss} --instance-id 3
vmss stop --resource-group {rg} --name {vmss} --instance-ids *
vmss get-instance-view --resource-group {rg} --name {vmss} --instance-id 1
vmss get-instance-view --resource-group {rg} --name {vmss} --instance-id 3
vmss start --resource-group {rg} --name {vmss} --instance-ids *
vmss get-instance-view --resource-group {rg} --name {vmss} --instance-id 1
vmss get-instance-view --resource-group {rg} --name {vmss} --instance-id 3
vmss deallocate --resource-group {rg} --name {vmss} --instance-ids *
vmss get-instance-view --resource-group {rg} --name {vmss} --instance-id 1
vmss get-instance-view --resource-group {rg} --name {vmss} --instance-id 3
vmss delete-instances --resource-group {rg} --name {vmss} --instance-ids *
vmss list-instances --resource-group {rg} --name {vmss}
vmss create -g {rg} -n {flex_vmss} --image UbuntuLTS --orchestration-mode Flexible
vmss list-instance-connection-info --resource-group {rg} --name {flex_vmss}
vmss create -g {rg} -n {spot_vmss_name} --location NorthEurope --instance-count 2 --image Centos --priority Spot --eviction-policy Deallocate --single-placement-group True --enable-spot-restore {enabled_1} --spot-restore-timeout {restore_timeout1}
vmss update -g {rg} -n {spot_vmss_name} --enable-spot-restore {enabled_2} --spot-restore-timeout {restore_timeout2}
vmss create --resource-group {rg} --name {vmss1} --location {loc} --instance-count 2 --image Centos --priority Regular
vmss list-instances --resource-group {rg} --name {vmss1}
vmss simulate-eviction --resource-group {rg} --name {vmss1} --instance-id {id}
vmss create --resource-group {rg} --name {vmss2} --location {loc} --instance-count 2 --image Centos --priority Spot --eviction-policy Deallocate --single-placement-group True
vmss list-instances --resource-group {rg} --name {vmss2}
vmss simulate-eviction --resource-group {rg} --name {vmss2} --instance-id {id}
vmss get-instance-view --resource-group {rg} --name {vmss2} --instance-id {id}
vmss create --resource-group {rg} --name {vmss3} --location {loc} --instance-count 2 --image Centos --priority Spot --eviction-policy Delete --single-placement-group True
vmss list-instances --resource-group {rg} --name {vmss3}
vmss simulate-eviction --resource-group {rg} --name {vmss3} --instance-id {id}
vmss list-instances --resource-group {rg} --name {vmss3}
vmss get-instance-view --resource-group {rg} --name {vmss3} --instance-id {id}
vmss create -n {vmss} -g {rg} --image Debian --admin-username deploy --ssh-key-value "{ssh_key}" --custom-data "#cloud-config
hostname: myVMhostname"
vmss show -n {vmss} -g {rg}
vmss create -n {vmss} -g {rg} --image Debian --admin-username deploy --ssh-key-value "{ssh_key}" --user-data "{user_data}"
vmss show -n {vmss} -g {rg} --include-user-data
vmss show -n {vmss} -g {rg}
vmss list-instances -g {rg} -n {vmss} --query "[].instanceId"
vmss show -g {rg} -n {vmss} --instance-id {instance_id} --include-user-data
vmss show -g {rg} -n {vmss} --instance-id {instance_id}
vmss update -g {rg} -n {vmss} --user-data @"{user_data_file}"
vmss show -n {vmss} -g {rg} --include-user-data
vmss update -g {rg} -n {vmss} --instance-id {instance_id} --user-data "user_data"
vmss show -g {rg} -n {vmss} --instance-id {instance_id} --include-user-data
vmss update -g {rg} -n {vmss} --user-data ""
vmss show -n {vmss} -g {rg} --include-user-data
vmss create -g {rg} -n {vmss} --authentication-type password --admin-username admin123 --admin-password PasswordPassword1!  --image Win2012R2Datacenter
vmss nic list -g {rg} --vmss-name {vmss}
vmss list-instances -g {rg} -n {vmss}
vmss nic list-vm-nics -g {rg} --vmss-name {vmss} --instance-id {iid}
vmss nic show --resource-group {rg} --vmss-name {vmss} --instance-id {iid} -n {nic}
vmss create -g {rg} -n {vmss} --authentication-type password --admin-username admin123 --admin-password PasswordPassword1!  --image UbuntuLTS --use-unmanaged-disk
vmss create -g {rg} -n {vmss} --authentication-type password --admin-username admin123 --admin-password PasswordPassword1!  --image UbuntuLTS --use-unmanaged-disk
network vnet list -g {rg}
vmss create -g {rg} -n {vmss} --admin-username admin123 --admin-password PasswordPassword1! --image centos --instance-count 1 --public-ip-address ""
vmss list-instance-connection-info -g {rg} -n {vmss}
identity create -g {rg} -n {emsi} --tags tag1=d1
identity create -g {rg} -n {emsi2}
vm create -g {rg} -n vm2 --image ubuntults --assign-identity {emsi} --generate-ssh-keys --admin-username {user} --nsg-rule NONE
vm create -g {rg} -n {vm} --image ubuntults --assign-identity {emsi} [system] --role reader --scope {scope} --generate-ssh-keys --admin-username {user} --nsg-rule NONE
vm identity show -g {rg} -n {vm}
vm identity assign -g {rg} -n {vm} --identities {emsi2}
vm identity show -g {rg} -n {vm}
vm identity remove -g {rg} -n {vm} --identities {emsi}
vm identity show -g {rg} -n {vm}
vm identity remove -g {rg} -n {vm} --identities {emsi2}
vm identity show -g {rg} -n {vm}
vm identity remove -g {rg} -n {vm}
vm identity remove -g {rg} -n {vm}
vm create -g {rg} -n {vm1} --image debian --assign-identity --admin-username admin123 --admin-password PasswordPassword1! --scope {scope} --nsg-rule NONE
vm create -g {rg} -n {vm2} --image Win2016Datacenter --assign-identity --scope {vm1_id} --role reader --admin-username admin123 --admin-password PasswordPassword1! --nsg-rule NONE
vm create -g {rg} -n {vm3} --image debian --admin-username admin123 --admin-password PasswordPassword1! --nsg-rule NONE
vm identity assign -g {rg} -n {vm3} --scope {vm1_id} --role reader
vm identity remove -g {rg} -n {vm3}
vm identity show -g {rg} -n {vm3}
vm create -g {rg} -n {vm1} --image debian --assign-identity --admin-username admin123 --admin-password PasswordPassword1! --nsg-rule NONE
vmss create -g {rg} -n {vmss1} --image debian --assign-identity --admin-username admin123 --admin-password PasswordPassword1!
vm create -g {rg} -n {vm2} --image debian --admin-username admin123 --admin-password PasswordPassword1! --nsg-rule NONE
vm identity assign -g {rg} -n {vm2}
vmss create -g {rg} -n {vmss2} --image debian --admin-username admin123 --admin-password PasswordPassword1!
vmss identity assign -g {rg} -n {vmss2}
identity create -g {rg} -n {emsi}
identity create -g {rg} -n {emsi2}
vmss create -g {rg} -n {vmss} --image ubuntults --assign-identity {emsi} [system] --role reader --scope {scope} --instance-count 1 --generate-ssh-keys --admin-username ubuntuadmin
vmss identity show -g {rg} -n {vmss}
vmss identity assign -g {rg} -n {vmss} --identities {emsi2}
vmss identity show -g {rg} -n {vmss}
vmss update-instances -g {rg} -n {vmss} --instance-ids *
vmss identity remove -g {rg} -n {vmss} --identities {emsi}
vmss show -g {rg} -n {vmss}
vmss identity remove -g {rg} -n {vmss} --identities {emsi2}
vmss identity show -g {rg} -n {vmss}
vmss create -g {rg} -n {vmss1} --image debian --instance-count 1 --assign-identity --admin-username admin123 --admin-password PasswordPassword1! --scope {scope}
vmss create -g {rg} -n {vmss2} --image Win2016Datacenter --instance-count 1 --assign-identity --scope {vmss1_id} --role reader --admin-username admin123 --admin-password PasswordPassword1!
vmss create -g {rg} -n {vmss3} --image debian --instance-count 1 --admin-username admin123 --admin-password PasswordPassword1!
vmss identity assign -g {rg} -n {vmss3} --scope "{vmss1_id}" --role reader
vmss identity remove -g {rg} -n {vmss3}
vmss identity show -g {rg} -n {vmss3}
vmss identity remove -g {rg} -n {vmss3}
vm create -g {rg} -n {vm} --admin-username clitester --admin-password PasswordPassword1! --image debian --zone {zones} --public-ip-address {ip} --nsg-rule NONE
network public-ip show -g {rg} -n {ip}
vm show -g {rg} -n {vm} -otable
disk create -g {rg} -n {disk} --size-gb {size} --zone {zones}
disk show -g {rg} -n {disk}
disk show -g {rg} -n {disk} -otable
disk list -g {rg} -otable
vm create -g {rg} -n vm1 --admin-username clitester --admin-password PasswordPassword1! --image debian --zone 1
vm create -g {rg} -n {vm} --image ubuntults
vm run-command create -g {rg} --vm-name {vm} --name {run_cmd}
vm run-command show --vm-name {vm} --name {run_cmd} -g {rg} --instance-view
vm run-command update -g {rg} --vm-name {vm} --name {run_cmd}  --vm-name {vm} --script script1 --parameters arg1=f1 --run-as-user user1 --timeout-in-seconds 3600
vm run-command list --vm-name {vm} -g {rg}
vm run-command show --vm-name {vm} --name {run_cmd} -g {rg}
vm run-command delete --vm-name {vm} --name {run_cmd} -g {rg} -y
vm run-command list --vm-name {vm} -g {rg}
vm create -g {rg} -n {vm} --image debian --admin-username clitest1 --admin-password Test12345678!! --generate-ssh-keys --nsg-rule NONE
vm run-command invoke -g {rg} -n{vm} --command-id RunShellScript  --scripts "echo $0 $1" --parameters hello world
vmss create -g {rg} -n {vmss} --image ubuntults --admin-username {user} --generate-ssh-keys
vmss list-instances --resource-group {rg} --name {vmss} --query "[].instanceId"
vmss run-command create --name {run_cmd} -g {rg} --vmss-name {vmss} --instance-id {instance_id}
vmss run-command show --vmss-name {vmss} --name {run_cmd} --instance-id {instance_id} -g {rg} --instance-view
vmss run-command update --name {run_cmd} -g {rg} --vmss-name {vmss} --instance-id {instance_id} --script script1 --parameters arg1=f1 --run-as-user user1 --timeout-in-seconds 3600
vmss run-command list --vmss-name {vmss} -g {rg} --instance-id {instance_id}
vmss run-command show --vmss-name {vmss} --name {run_cmd} --instance-id {instance_id} -g {rg}
vmss run-command delete --vmss-name {vmss} --name {run_cmd} --instance-id {instance_id} -g {rg} -y
vmss run-command list --vmss-name {vmss} --instance-id {instance_id} -g {rg}
vmss create -g {rg} -n {vmss} --image debian --admin-username clitest1 --generate-ssh-keys
vmss list-instances --resource-group {rg} --name {vmss} --query "[].instanceId"
vmss run-command invoke -g {rg} -n {vmss} --instance-id {id} --command-id RunShellScript  --scripts "echo $0 $1" --parameters hello world
vmss run-command invoke -g {rg} -n {vmss} --instance-id {id} --command-id RunShellScript  --scripts "echo $0 $1" --parameters hello world
vm create -g {rg} -n {vm} --image win2012datacenter --admin-username clitester1 --admin-password Test123456789! --nsg-rule NONE
vm encryption enable -g {rg} -n {vm} --disk-encryption-keyvault {vault}
vm encryption show -g {rg} -n {vm}
vm encryption disable -g {rg} -n {vm}
vm create -g {rg} -n {vm} --image centos --generate-ssh-keys --nsg-rule NONE --encryption-at-host --admin-username exampleusername
vm show -g {rg} -n {vm}
vmss create -g {rg} -n {vmss} --image centos --generate-ssh-keys --encryption-at-host --admin-username exampleusername
vmss show -g {rg} -n {vmss}
vmss update -g {rg} -n {vmss} --set tags.rule=test
vmss create -g {rg} -n {vmss} --image win2016datacenter --instance-count 1 --admin-username clitester1 --admin-password Test123456789!
vmss encryption enable -g {rg} -n {vmss} --disk-encryption-keyvault {vault}
vmss update-instances -g {rg} -n {vmss}  --instance-ids "*"
vmss encryption show -g {rg} -n {vmss}
vmss show -g {rg} -n {vmss}
vmss encryption disable -g {rg} -n {vmss}
vmss update-instances -g {rg} -n {vmss}  --instance-ids "*"
vmss encryption show -g {rg} -n {vmss}
vmss show -g {rg} -n {vmss}
network public-ip create -g {rg} -n my-pip
network vnet create -g {rg} -n my-vnet --subnet-name my-subnet1
network nsg create -g {rg} -n nsg
network nic create -g {rg} -n my-nic --subnet my-subnet1 --vnet-name my-vnet --public-ip-address my-pip --network-security-group nsg
network nic ip-config create -n my-ipconfig2 -g {rg} --nic-name my-nic --private-ip-address-version IPv6
vm create -g {rg} -n vm1 --image centos --nics my-nic --generate-ssh-keys --admin-username ubuntuadmin
vm show -g {rg} -n vm1 -d
vm create -g {rg} -n {vm} --image rhel --generate-ssh-keys --admin-username rheladmin --nsg-rule NONE
keyvault certificate create --vault-name {vault} -n {cert} -p @"{policy_path}"
vm secret add -g {rg} -n {vm} --keyvault {vault} --certificate {cert}
vm secret list -g {rg} -n {vm}
vm secret remove -g {rg} -n {vm} --keyvault {vault} --certificate {cert}
vm secret list -g {rg} -n {vm}
vm create -g {rg} -n {vm} --image centos --admin-username clitest123 --generate-ssh-keys --nsg-rule NONE
vm show -g {rg} -n {vm}
disk create -g {rg} -n {backupDisk} --source /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Compute/disks/vm1_OsDisk_1_840186fdf6314d2d9fc43ffc2c275f39
vm stop -g {rg} -n {vm}
vm update -g {rg} -n {vm} --os-disk /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clitest.rg000001/providers/Microsoft.Compute/disks/disk1
vm show -g {rg} -n {vm}
vm create -g {rg} -n {vm} --image debian --data-disk-sizes-gb 1 2 --admin-username cligenerics --generate-ssh-keys --nsg-rule NONE
vm update -g {rg} -n {vm} --set identity.type="SystemAssigned"
vm update -g {rg} -n {vm} --set storageProfile.dataDisks[0].caching="ReadWrite"
vm update -g {rg} -n {vm} --remove storageProfile.dataDisks
sig create -g {rg} --gallery-name {gallery} --permissions groups
sig image-definition create -g {rg} --gallery-name {gallery} --gallery-image-definition {image} --os-type linux -p publisher1 -f offer1 -s sku1
vm create -g {rg} -n {vm} --image ubuntults --data-disk-sizes-gb 10 --admin-username clitest1 --generate-ssh-key --nsg-rule None
vm deallocate -g {rg} -n {vm}
vm generalize -g {rg} -n {vm}
image create -g {rg} -n {captured} --source {vm}
sig image-version create -g {rg} --gallery-name {gallery} --gallery-image-definition {image} --gallery-image-version {version} --managed-image {captured} --replica-count 1
sig show --gallery-name {gallery} --resource-group {rg} --select Permissions
sig share add --gallery-name {gallery} -g {rg} --subscription-ids {subId} --tenant-ids {tenantId}
sig image-version show-shared --gallery-image-definition {image} --gallery-unique-name {unique_name} --location {location} --gallery-image-version {version}
vm create -g {rg} -n {vm_with_shared_gallery_version} --image {shared_gallery_image_version} --admin-username clitest1 --generate-ssh-key --nsg-rule None
vm show -g {rg} -n {vm_with_shared_gallery_version}
vm create -g {rg} -n {vm_with_shared_gallery_version2} --image {shared_gallery_image_version} --admin-username clitest1 --generate-ssh-key --nsg-rule None --os-type linux
vm show -g {rg} -n {vm_with_shared_gallery_version2}
vmss create -g {rg} -n {vmss_with_shared_gallery_version} --image {shared_gallery_image_version} --generate-ssh-keys --upgrade-policy-mode automatic --admin-username clitest1 
vmss show -g {rg} -n {vmss_with_shared_gallery_version}
sig share reset --gallery-name {gallery} -g {rg}
sig show --gallery-name {gallery} --resource-group {rg} --select Permissions
sig create -g {rg} --gallery-name {gallery}
sig list -g {rg}
sig show -g {rg} --gallery-name {gallery}
sig image-definition create -g {rg} --gallery-name {gallery} --gallery-image-definition {image} --os-type linux -p publisher1 -f offer1 -s sku1
sig image-definition list -g {rg} --gallery-name {gallery}
sig image-definition show -g {rg} --gallery-name {gallery} --gallery-image-definition {image}
vm create -g {rg} -n {vm} --image ubuntults --data-disk-sizes-gb 10 --admin-username clitest1 --generate-ssh-key --nsg-rule NONE
vm run-command invoke -g {rg} -n {vm} --command-id RunShellScript --scripts "echo 'sudo waagent -deprovision+user --force' | at -M now + 1 minutes"
vm deallocate -g {rg} -n {vm}
vm generalize -g {rg} -n {vm}
image create -g {rg} -n {captured} --source {vm}
sig image-version create -g {rg} --gallery-name {gallery} --gallery-image-definition {image} --gallery-image-version {version} --managed-image {captured} --replica-count 1
sig image-version list -g {rg} --gallery-name {gallery} --gallery-image-definition {image}
sig image-version show -g {rg} --gallery-name {gallery} --gallery-image-definition {image} --gallery-image-version {version}
sig image-version update -g {rg} --gallery-name {gallery} --gallery-image-definition {image} --gallery-image-version {version} --target-regions {location2}=1 {location} --replica-count 2
keyvault show -g {rg} -n {vault}
keyvault key create -n {key} --vault {vault} --protection software
disk-encryption-set create -g {rg} -n {des1} --key-url {kid} --source-vault {vault}
disk-encryption-set show -g {rg} -n {des1}
keyvault set-policy -n {vault} --object-id {des1_sp_id} --key-permissions wrapKey unwrapKey get
role assignment create --assignee {des1_sp_id} --role Reader --scope {vault_id}
sig image-version create -g {rg} --gallery-name {gallery} --gallery-image-definition {image} --gallery-image-version {version2} --target-regions {location}=1 --target-region-encryption {des1},0,{des1} --managed-image {captured} --replica-count 1
vm create -g {rg} -n {vm2} --image {image_id} --admin-username clitest1 --generate-ssh-keys --nsg-rule NONE
sig image-version delete -g {rg} --gallery-name {gallery} --gallery-image-definition {image} --gallery-image-version {version}
sig image-version delete -g {rg} --gallery-name {gallery} --gallery-image-definition {image} --gallery-image-version {version2}
sig image-definition delete -g {rg} --gallery-name {gallery} --gallery-image-definition {image}
sig delete -g {rg} --gallery-name {gallery}
vm create -g {rg} -n vm1 --image centos --use-unmanaged-disk --nsg-rule NONE --generate-ssh-key
vm show -g {rg} -n vm1
sig create -g {rg} --gallery-name {gallery}
sig image-definition create -g {rg} --gallery-name {gallery} --gallery-image-definition image1 --os-type linux -p publisher1 -f offer1 -s sku1
disk create -g {rg} -n d1 --size-gb 10
disk create -g {rg} -n d2 --size-gb 10
snapshot create -g {rg} -n s1 --source d1
snapshot create -g {rg} -n s2 --source d2
sig image-version create -g {rg} --gallery-name {gallery} --gallery-image-definition image1 --gallery-image-version 1.0.0 --os-snapshot s1 --data-snapshot-luns 0 --data-snapshots s2 --data-vhds-luns 1 --data-vhds-sa {stac} --data-vhds-uris {vhd}
sig create -g {rg} -r {gallery_name} --soft-delete True
sig show -g {rg} -r {gallery_name}
sig update -g {rg} -r {gallery_name} --soft-delete False
sig show -g {rg} -r {gallery_name}
sig delete -g {rg} -r {gallery_name}
sig create -g {rg} --gallery-name {gallery}
sig image-definition create -g {rg} --gallery-name {gallery} --gallery-image-definition {image} --os-type linux --os-state specialized --hyper-v-generation V2 -p publisher1 -f offer1 -s sku1
disk create -g {rg} -n d1 --size-gb 10
disk create -g {rg} -n d2 --size-gb 10
disk create -g {rg} -n d3 --size-gb 10
snapshot create -g {rg} -n s1 --source d1
snapshot create -g {rg} -n s2 --source d2
snapshot create -g {rg} -n s3 --source d3
sig image-version create -g {rg} --gallery-name {gallery} --gallery-image-definition {image} --gallery-image-version 1.0.0 --os-snapshot s1 --data-snapshots s2 s3 --data-snapshot-luns 2 3
sig create -g {rg} -r {sig_name}
sig image-definition create -g {rg} --gallery-name {sig_name} --gallery-image-definition {img_def_name} --os-type linux -p {pub_name} -f {of_name} -s {sku_name}
vm create -g {rg} -n {vm_name} --image Ubuntults
vm deallocate -g {rg} -n {vm_name}
vm generalize -g {rg} -n {vm_name}
image create -g {rg} -n {img_name} --source {vm_name}
sig image-version create --replication-mode Full -g {rg} -r {sig_name} -i {img_def_name} -e 1.1.1 --managed-image {img_name}
sig image-version show -g {rg} -r {sig_name} -i {img_def_name} -e 1.1.1
sig image-version create --replication-mode Shallow -g {rg} -r {sig_name} -i {img_def_name} -e 1.1.2 --managed-image {img_name}
sig image-version show -g {rg} -r {sig_name} -i {img_def_name} -e 1.1.2
sig create -g {rg} --gallery-name {gallery} --permissions private
sig image-definition create -g {rg} --gallery-name {gallery} --gallery-image-definition {image} --os-type linux -p publisher1 -f offer1 -s sku1
sig image-definition show -g {rg} --gallery-name {gallery} --gallery-image-definition {image}
vm create -g {rg} -n {vm} --image ubuntults --data-disk-sizes-gb 10 --admin-username clitest1 --generate-ssh-key --nsg-rule NONE
vm run-command invoke -g {rg} -n {vm} --command-id RunShellScript --scripts "echo 'sudo waagent -deprovision+user --force' | at -M now + 1 minutes"
vm deallocate -g {rg} -n {vm}
vm generalize -g {rg} -n {vm}
image create -g {rg} -n {captured} --source {vm}
sig image-version create -g {rg} --gallery-name {gallery} --gallery-image-definition {image} --gallery-image-version {version} --managed-image {captured} --replica-count 1
sig update --gallery-name {gallery} --resource-group {rg} --permissions groups
sig show --gallery-name {gallery} --resource-group {rg} --select Permissions
sig update --gallery-name {gallery} --resource-group {rg} --permissions groups --permissions groups
sig share add --gallery-name {gallery} -g {rg} --subscription-ids {subId} {sharedSubId} --tenant-ids {tenantId}
sig show --gallery-name {gallery} --resource-group {rg} --select Permissions
sig share remove --gallery-name {gallery} -g {rg} --subscription-ids {sharedSubId} --tenant-ids {tenantId}
sig show --gallery-name {gallery} --resource-group {rg} --select Permissions
sig list-shared --location {location}
sig show-shared --location {location} --gallery-unique-name {unique_name}
sig image-definition list-shared --gallery-unique-name {unique_name} --location {location}
sig image-definition show-shared --gallery-image-definition {image} --gallery-unique-name {unique_name} --location {location}
sig image-version list-shared --gallery-image-definition {image} --gallery-unique-name {unique_name} --location {location}
sig image-version show-shared --gallery-image-definition {image} --gallery-unique-name {unique_name} --location {location} --gallery-image-version {version}
sig share reset --gallery-name {gallery} -g {rg}
sig show --gallery-name {gallery} --resource-group {rg} --select Permissions
sig create -g {rg} --gallery-name {gallery}
sig image-definition create -g {rg} --gallery-name {gallery} --gallery-image-definition {image} --os-type linux --os-state specialized -p publisher1 -f offer1 -s sku1
vm create -g {rg} -n {vm1} --image ubuntults --nsg-rule NONE --admin-username azureuser --admin-password testPassword0 --authentication-type password
vm show -g {rg} -n {vm1}
snapshot create -g {rg} -n {snapshot} --source {disk}
sig image-version create -g {rg} --gallery-name {gallery} --gallery-image-definition {image} --gallery-image-version 1.0.0 --os-snapshot {snapshot}
vm create -g {rg} -n {vm2} --image {image_version} --specialized --nsg-rule NONE --admin-username azureuser --admin-password testPassword0 --authentication-type password
vmss create -g {rg} -n {vmss1} --image {image_version} --specialized --admin-username azureuser --admin-password testPassword0 --authentication-type password
vm create -g {rg} -n {vm3} --specialized
vmss create -g {rg} -n {vmss2} --specialized
sig create -r {gallery} -g {rg}
sig gallery-application create -n {app_name} -r {gallery} --os-type windows -g {rg}
sig create -r {gallery} -g {rg}
sig gallery-application update -n {app_name} -r {gallery} -g {rg} --description test --tags tag=test
sig gallery-application list -r {gallery} -g {rg}
sig gallery-application show -n {app_name} -r {gallery} -g {rg}
sig gallery-application delete -n {app_name} -r {gallery} -g {rg} -y
sig gallery-application list -r {gallery} -g {rg}
sig create -r {gallery} -g {rg}
sig gallery-application create -n {app_name} -r {gallery} --os-type windows -g {rg}
storage account create -n {account} -g {rg}
storage account keys list -n {account} -g {rg} --query "[0].value"
storage container create -g {rg} --account-name {account} -n {container} --public-access blob --account-key {storage_key}
storage blob upload -n {blob} --account-name {account} --container-name {container} --file {f1} --type page --account-key {storage_key}
sig gallery-application version create -n {ver_name} --application-name {app_name} -r {gallery} -g {rg} --package-file-link https://{account}.blob.core.windows.net/{container}/{blob} --install-command install  --remove-command remove
sig gallery-application version update -n {ver_name} --application-name {app_name} -r {gallery} -g {rg} --package-file-link https://{account}.blob.core.windows.net/{container}/{blob} --tags tag=test
sig gallery-application version list -r {gallery} --application-name {app_name} -g {rg}
sig gallery-application version show -n {ver_name} --application-name {app_name} -r {gallery} -g {rg}
sig gallery-application version delete -n {ver_name} --application-name {app_name} -r {gallery} -g {rg} -y
sig gallery-application version list -r {gallery} --application-name {app_name} -g {rg}
ppg create -g {rg} -n {ppg} -t standard
vmss create -g {rg} -n {vmss} --image debian --admin-username debian --ssh-key-value '{ssh_key}'
vmss show -g {rg} -n {vmss}
vmss deallocate -g {rg} -n {vmss}
vmss update -g {rg} -n {vmss} --ppg {ppg_id}
vm create -g {rg} -n {vm} --image debian --admin-username debian --ssh-key-value '{ssh_key}' --nsg-rule NONE
vm show -g {rg} -n {vm}
vm deallocate -g {rg} -n {vm}
vm update -g {rg} -n {vm} --ppg {ppg_id}
vm availability-set create -g {rg} -n {avset}
vm availability-set update -g {rg} -n {avset} --ppg {ppg_id}
ppg show -n {ppg} -g {rg}
ppg create -n {ppg} -t standard -g {rg}
vm create -g {rg} -n {vm} --image debian --admin-username debian --ssh-key-value '{ssh_key}' --ppg {ppg} --nsg-rule NONE
vmss create -g {rg} -n {vmss} --image debian --admin-username debian --ssh-key-value '{ssh_key}' --ppg {ppg_id}
vmss show -g {rg} -n {vmss}
vm availability-set create -g {rg} -n {avset} --ppg {ppg}
ppg show -n {ppg} -g {rg}
ppg create -n fail_ppg -g {rg} -t notAvalidType
ppg create -n {ppg1} -t StandarD -g {rg}
ppg show -g {rg} -n {ppg1} --include-colocation-status
ppg create -n {ppg2} -t ultra -g {rg}
ppg create -n {ppg3} -g {rg}
vm host group create -n {host-group} -c 3 -g {rg} --tags "foo=bar"
vm host create -n {host-name} --host-group {host-group} -d 2 -g {rg} --sku DSv3-Type1 --auto-replace false --tags "bar=baz" 
vm host get-instance-view --host-group {host-group} --name {host-name} -g {rg}
vm host group get-instance-view -g {rg} -n {host-group}
vm host show -g {rg} -n {host-name} --host-group {host-group}
vm create -n {vm-name} --image debian -g {rg} --size Standard_D4s_v3 --host {host_id} --generate-ssh-keys --admin-username azureuser --nsg-rule NONE
vm show -n {vm-name} -g {rg}
vm host show --name {host-name} --host-group {host-group} -g {rg}
vm host group show --name {host-group} -g {rg}
vm delete --name {vm-name} -g {rg} --yes
vm host delete --name {host-name} --host-group {host-group} -g {rg} --yes
vm host group delete --name {host-group} -g {rg} --yes
vm host group create -n {host-group} -c 1 -g {rg2} --automatic-placement
vm host create -n {host-name} --host-group {host-group} -d 0 -g {rg2} --sku DSv3-Type1
vm create -g {rg2} -n vm1 --image centos --host {host_id} --size Standard_D4s_v3 --nsg-rule NONE --generate-ssh-keys --admin-username azureuser
vm create -g {rg2} -n vm2 --image centos --host-group {host-group} --size Standard_D4s_v3 --nsg-rule NONE --generate-ssh-keys --admin-username azureuser
vm show -g {rg2} -n vm1
vm show -g {rg2} -n vm2
vm delete --name vm1 -g {rg2} --yes
vm delete --name vm2 -g {rg2} --yes
vm host delete --name {host-name} --host-group {host-group} -g {rg2} --yes
vm host group create -n {host-group} -c 3 -g {rg} --tags "foo=bar"
vm host group create -n {host2-group} -c 3 -g {rg} --tags "foo=bar"
vm host create -n {host-name} --host-group {host-group} -d 2 -g {rg} --sku DSv3-Type1 --auto-replace false --tags "bar=baz" 
vm host create -n {host2-name} --host-group {host2-group} -d 2 -g {rg} --sku DSv3-Type1 --auto-replace false --tags "bar=baz" 
vm host get-instance-view --host-group {host-group} --name {host-name} -g {rg}
vm host get-instance-view --host-group {host2-group} --name {host2-name} -g {rg}
vm host group get-instance-view -g {rg} -n {host-group}
vm host group get-instance-view -g {rg} -n {host2-group}
vm host show -g {rg} -n {host-name} --host-group {host-group}
vm host show -g {rg} -n {host2-name} --host-group {host2-group}
vm create -n {vm-name} --image debian -g {rg} --size Standard_D4s_v3 --generate-ssh-keys --admin-username azureuser --nsg-rule NONE
vm show -n {vm-name} -g {rg}
vm deallocate -n {vm-name} -g {rg}
vm update -n {vm-name} -g {rg} --host {host_id} --set tags.tagName=tagValue
vm start -n {vm-name} -g {rg}
vm show -n {vm-name} -g {rg}
vm deallocate -n {vm-name} -g {rg}
vm update -n {vm-name} -g {rg} --host {host2_id} --set tags.tagName=tagValue
vm start -n {vm-name} -g {rg}
vm show -n {vm-name} -g {rg}
vm delete --name {vm-name} -g {rg} --yes
vm host delete --name {host-name} --host-group {host-group} -g {rg} --yes
vm host delete --name {host2-name} --host-group {host2-group} -g {rg} --yes
vm host group delete --name {host-group} -g {rg} --yes
vm host group delete --name {host2-group} -g {rg} --yes
vm host group create -n {host-group} -c 1 -g {rg} --automatic-placement
vm host group create -n {host2-group} -c 1 -g {rg} --automatic-placement
vm host create -n {host-name} --host-group {host-group} -d 0 -g {rg} --sku DSv3-Type1
vm host create -n {host2-name} --host-group {host2-group} -d 0 -g {rg} --sku DSv3-Type1
vm create -g {rg} -n vm1 --image centos --size Standard_D4s_v3 --nsg-rule NONE --generate-ssh-keys --admin-username azureuser
vm create -g {rg} -n vm2 --image centos --size Standard_D4s_v3 --nsg-rule NONE --generate-ssh-keys --admin-username azureuser
vm show -g {rg} -n vm1
vm show -g {rg} -n vm2
vm deallocate -n vm1 -g {rg}
vm update -n vm1 -g {rg} --host {host_id}
vm start -n vm1 -g {rg}
vm show -g {rg} -n vm1
vm deallocate -n vm1 -g {rg}
vm update -n vm1 -g {rg} --host {host2_id}
vm start -n vm1 -g {rg}
vm show -g {rg} -n vm1
vm deallocate -n vm2 -g {rg}
vm update -n vm2 -g {rg} --host-group {host-group}
vm start -n vm2 -g {rg}
vm show -g {rg} -n vm2
vm deallocate -n vm2 -g {rg}
vm update -n vm2 -g {rg} --host-group {host2-group}
vm start -n vm2 -g {rg}
vm show -g {rg} -n vm2
vm deallocate -n vm2 -g {rg}
vm update -n vm2 -g {rg} --host {host_id}
vm start -n vm2 -g {rg}
vm show -g {rg} -n vm2
vm deallocate -n vm2 -g {rg}
vm update -n vm2 -g {rg} --host-group {host2-group}
vm start -n vm2 -g {rg}
vm show -g {rg} -n vm2
vm delete --name vm1 -g {rg} --yes
vm delete --name vm2 -g {rg} --yes
vm host delete --name {host-name} --host-group {host-group} -g {rg} --yes
vm host delete --name {host2-name} --host-group {host2-group} -g {rg} --yes
vm host group delete --name {host-group} -g {rg} --yes
vm host group delete --name {host2-group} -g {rg} --yes
vmss create -g {rg} -n {vmss1} --image UbuntuLTS --terminate-notification-time 5 --admin-username azureuser
vmss update -g {rg} -n {vmss1} --enable-terminate-notification --terminate-notification-time 8
vmss update -g {rg} -n {vmss1} --terminate-notification-time 9
vmss update -g {rg} -n {vmss1} --enable-terminate-notification false
vmss update -g {rg} -n {vmss1} --enable-terminate-notification false --terminate-notification-time 5
vmss update -g {rg} -n {vmss1} --enable-terminate-notification
vmss create -g {rg} -n {vmss2} --image UbuntuLTS --admin-username azureuser
vmss update -g {rg} -n {vmss2} --enable-terminate-notification true --terminate-notification-time 5
vm create -g {rg} -n {vm} --image UbuntuLTS --priority Low --eviction-policy Deallocate --max-price 50 --admin-username azureuser --admin-password testPassword0 --authentication-type password --nsg-rule NONE
vm show -g {rg} -n {vm}
vm deallocate -g {rg} -n {vm}
vm update -g {rg} -n {vm} --priority Spot --max-price 100
vm create -g {rg} -n {vm} --image UbuntuLTS --admin-username azureuser --admin-password testPassword0 --authentication-type password --nsg-rule NONE
vm show -g {rg} -n {vm}
vm image terms accept --urn {urn}
vm image terms show --urn {urn}
vm image terms cancel --urn {urn}
vm image terms show --urn {urn}
vm image terms accept --publisher {publisher} --offer {offer} --plan {plan}
vm image terms show --publisher {publisher} --offer {offer} --plan {plan}
vm image terms cancel --publisher {publisher} --offer {offer} --plan {plan}
vm image terms show --publisher {publisher} --offer {offer} --plan {plan}
keyvault show -g {rg} -n {vault}
keyvault key create -n {key} --vault {vault} --protection software
disk-encryption-set create -g {rg} -n {des1} --key-url {kid} --source-vault {vault}
disk-encryption-set show -g {rg} -n {des1}
disk-encryption-set create -g {rg} -n {des2} --key-url {kid} --source-vault {vault}
disk-encryption-set show -g {rg} -n {des2}
disk-encryption-set create -g {rg} -n {des3} --key-url {kid} --source-vault {vault}
disk-encryption-set show -g {rg} -n {des3}
keyvault set-policy -n {vault} --object-id {des1_sp_id} --key-permissions wrapKey unwrapKey get
keyvault set-policy -n {vault} --object-id {des2_sp_id} --key-permissions wrapKey unwrapKey get
keyvault set-policy -n {vault} --object-id {des3_sp_id} --key-permissions wrapKey unwrapKey get
role assignment create --assignee {des1_sp_id} --role Reader --scope {vault_id}
role assignment create --assignee {des2_sp_id} --role Reader --scope {vault_id}
role assignment create --assignee {des3_sp_id} --role Reader --scope {vault_id}
disk create -g {rg} -n {disk} --encryption-type EncryptionAtRestWithCustomerKey --disk-encryption-set {des1} --size-gb 10
vm create -g {rg} -n {vm1} --attach-os-disk {disk} --os-type linux --nsg-rule NONE
vm create -g {rg} -n {vm2} --image centos --os-disk-encryption-set {des1} --data-disk-sizes-gb 10 10 --data-disk-encryption-sets {des2} {des3} --nsg-rule NONE --admin-username azureuser --admin-password testPassword0 --authentication-type password
vm show -g {rg} -n {vm2}
vmss create -g {rg} -n {vmss} --image centos --os-disk-encryption-set {des1} --data-disk-sizes-gb 10 10 --data-disk-encryption-sets {des2} {des3} --admin-username azureuser --admin-password testPassword0 --authentication-type password
vmss show -g {rg} -n {vmss}
keyvault show -g {rg} -n {vault}
keyvault key create -n {key} --vault {vault} --protection software
disk-encryption-set create -g {rg} -n {des1} --key-url {kid} --source-vault {vault}
disk-encryption-set show -g {rg} -n {des1}
keyvault set-policy -n {vault} --object-id {des1_sp_id} --key-permissions wrapKey unwrapKey get
role assignment create --assignee {des1_sp_id} --role Reader --scope {vault_id}
disk create -g {rg} -n {disk} --size-gb 10
disk update -g {rg} -n {disk} --disk-encryption-set {des1} --encryption-type EncryptionAtRestWithCustomerKey
keyvault show -g {rg} -n {vault}
keyvault key create -n {key} --vault {vault} --protection software
disk-encryption-set create -g {rg} -n {des1} --key-url {kid} --source-vault {vault}
disk-encryption-set show -g {rg} -n {des1}
disk-encryption-set create -g {rg} -n {des2} --key-url {kid} --source-vault {vault}
disk-encryption-set show -g {rg} -n {des2}
keyvault set-policy -n {vault} --object-id {des1_sp_id} --key-permissions wrapKey unwrapKey get
keyvault set-policy -n {vault} --object-id {des2_sp_id} --key-permissions wrapKey unwrapKey get
role assignment create --assignee {des1_sp_id} --role Reader --scope {vault_id}
role assignment create --assignee {des2_sp_id} --role Reader --scope {vault_id}
snapshot create -g {rg} -n {snapshot1} --encryption-type EncryptionAtRestWithCustomerKey --disk-encryption-set {des1} --size-gb 10
snapshot create -g {rg} -n {snapshot2} --size-gb 10
snapshot update -g {rg} -n {snapshot2} --encryption-type EncryptionAtRestWithCustomerKey --disk-encryption-set {des2}
disk-encryption-set list-associated-resources -g {rg} -n {des2}
keyvault key create -n {key1} --vault {vault1} --protection software
keyvault show -g {rg} -n {vault2}
keyvault key create -n {key2} --vault {vault2} --protection software
disk-encryption-set create -g {rg} -n {des} --key-url {kid1} --source-vault {vault1} --enable-auto-key-rotation true
disk-encryption-set show -g {rg} -n {des}
keyvault set-policy -n {vault2} --object-id {des_sp_id} --key-permissions wrapKey unwrapKey get
role assignment create --assignee {des_sp_id} --role Reader --scope {vault2_id}
disk-encryption-set update -g {rg} -n {des} --key-url {kid2} --source-vault {vault2} --enable-auto-key-rotation false
disk-access create -g {rg} -l {loc} -n {diskaccess}
disk-access list -g {rg}
disk-access update -g {rg} -n {diskaccess} --tags tag1=val1
disk-access show -g {rg} -n {diskaccess}
disk create -g {rg} -n {disk} --size-gb 10 --network-access-policy AllowPrivate --disk-access {diskaccess}
disk update -g {rg} -n {disk} --network-access-policy AllowPrivate --disk-access {disk_access_id}
disk show -g {rg} -n {disk}
snapshot create -g {rg} -n {snapshot} --size-gb 10 --network-access-policy AllowPrivate --disk-access {diskaccess}
snapshot update -g {rg} -n {snapshot} --network-access-policy AllowPrivate --disk-access {disk_access_id}
snapshot show -g {rg} -n {snapshot}
disk delete -g {rg} -n {disk} --yes
snapshot delete -g {rg} -n {snapshot}
disk-access delete -g {rg} -n {diskaccess}
disk-access list -g {rg}
disk create -g {rg} -n {disk1} --size-gb 1024 --location centraluseuap --enable-bursting
disk show -g {rg} -n {disk1}
disk create -g {rg} -n {disk2} --size-gb 1024 --location centraluseuap
disk show -g {rg} -n {disk2}
disk update -g {rg} -n {disk2} --enable-bursting
disk show -g {rg} -n {disk2}
vmss create -g {rg} -n {vmss} --image debian --data-disk-sizes-gb 10 10 --data-disk-iops 555 666 --data-disk-mbps 77 88 --ultra-ssd-enabled --zone 1 --vm-sku Standard_D2s_v3 --storage-sku UltraSSD_LRS --location eastus --admin-username azureuser --lb ""
vmss update -g {rg} -n {vmss} --set virtualMachineProfile.storageProfile.dataDisks[0].diskIOPSReadWrite=444 virtualMachineProfile.storageProfile.dataDisks[1].diskIOPSReadWrite=555 virtualMachineProfile.storageProfile.dataDisks[0].diskMBpsReadWrite=66 virtualMachineProfile.storageProfile.dataDisks[1].diskMBpsReadWrite=77 
vm list --resource-group {rg}
network vnet list --resource-group {rg}
network vnet create --resource-group {rg} --name {vnet} --location {loc}
vm create --resource-group {rg} --location {loc} --name {vm} --admin-username ubuntu --image UbuntuLTS --admin-password testPassword0 --authentication-type password --vnet-name {vnet} --nsg-rule NONE
vm list --resource-group {rg}
network vnet show --resource-group {rg} --name {vnet}
vmss create -g {rg} -n {vmss} --image UbuntuLTS --automatic-repairs-grace-period 30 --admin-username azureuser
vmss create -g {rg} -n {vmss} --image UbuntuLTS --load-balancer {lb} --automatic-repairs-grace-period 30 --admin-username azureuser
vmss create -g {rg} -n {vmss} --image UbuntuLTS --health-probe {probe} --automatic-repairs-grace-period 30 --admin-username azureuser
network lb create -g {rg} -n {lb}
network lb probe create -g {rg} --lb-name {lb} -n {probe} --protocol Tcp --port 80
network lb rule create -g {rg} --lb-name {lb} -n {lbrule} --probe-name {probe} --protocol Tcp --frontend-port 80 --backend-port 80
vmss create -g {rg} -n {vmss} --image UbuntuLTS --load-balancer {lb} --health-probe {probe} --automatic-repairs-grace-period 30 --admin-username azureuser
vmss create -g {rg} -n {vmss} --image UbuntuLTS --admin-username azureuser
vmss extension set -g {rg} --vmss-name {vmss} --name ApplicationHealthLinux --version 1.0 --publisher Microsoft.ManagedServices --settings {settings}
vmss list-instances -g {rg} -n {vmss} --query "[].instanceId"
vmss update-instances -g {rg} -n {vmss} --instance-ids {instance_ids}
vmss update -g {rg} -n {vmss} --enable-automatic-repairs true --automatic-repairs-grace-period 30
vmss create -g {rg} -n {vmss} --image UbuntuLTS --admin-username azureuser
vmss update -g {rg} -n {vmss} --enable-automatic-repairs false --automatic-repairs-grace-period 30
vmss update -g {rg} -n {vmss} --enable-automatic-repairs true
network lb probe create -g {rg} --lb-name {vmss}LB -n {probe} --protocol Tcp --port 80
network lb rule create -g {rg} --lb-name {vmss}LB -n {lbrule} --probe-name {probe} --protocol Tcp --frontend-port 80 --backend-port 80
vmss update -g {rg} -n {vmss} --set virtualMachineProfile.networkProfile.healthProbe.id={probe_id}
vmss list-instances -g {rg} -n {vmss} --query "[].instanceId"
vmss update-instances -g {rg} -n {vmss} --instance-ids {instance_ids}
vmss update -g {rg} -n {vmss} --enable-automatic-repairs true --automatic-repairs-grace-period 30
vm create -g {rg} -n {vm} --image centos --nsg-rule NONE --admin-username azureuser --admin-password testPassword0 --authentication-type password
network nsg show -g {rg} -n {vm}NSG
network lb create -g {rg} -n {lb}
network lb probe create -g {rg} --lb-name {lb} -n {probe} --protocol Tcp --port 80
network lb rule create -g {rg} --lb-name {lb} -n {lbrule} --probe-name {probe} --protocol Tcp --frontend-port 80 --backend-port 80
vmss create -g {rg} -n {vmss} --image UbuntuLTS --load-balancer {lb} --health-probe {probe} --automatic-repairs-grace-period 30 --admin-username azureuser
vmss set-orchestration-service-state -g {rg} -n {vmss} --service-name {service_name} --action Resume
vmss set-orchestration-service-state -g {rg} -n {vmss} --service-name {service_name} --action Suspend
vmss get-instance-view -g {rg} -n {vmss}
vm create -g {rg} -n {vm} --image centos --nsg-rule NONE --admin-username azureuser --admin-password testPassword0 --authentication-type password
vm auto-shutdown -g {rg} -n {vm} --time 1730 --email "foo@bar.com" --webhook "https://example.com/"
vm auto-shutdown -g {rg} -n {vm} --time 1730 --email "foo2@bar.com" 
vm auto-shutdown -g {rg} -n {vm} --off
vmss create -n {vmss} -g {rg} --image ubuntults --orchestration-mode flexible
vmss show -g {rg} -n {vmss}
vmss create -n {vmss0} -g {rg} --orchestration-mode Flexible --single-placement-group false --platform-fault-domain-count 1 --vm-sku Standard_DS1_v2 --instance-count 0 --image ubuntults --computer-name-prefix testvmss --vnet-name {vnet_name} --subnet default --network-api-version 2020-11-01 --admin-username testvmss 
vmss show -g {rg} -n {vmss0}
vmss create -g {rg} -n {vmss1} --orchestration-mode Flexible --single-placement-group false --platform-fault-domain-count 1 --vm-sku Standard_DS1_v2 --instance-count 0 --admin-username testvmss --admin-password This!s@Terr!bleP@ssw0rd --computer-name-prefix testvmss --image debian --vnet-name {vnet_name} --subnet default --network-api-version 2020-11-01
vmss show -g {rg} -n {vmss1}
vmss create -n {vmss2} -g {rg} --orchestration-mode Flexible --single-placement-group false --platform-fault-domain-count 1 --vm-sku Standard_DS1_v2 --instance-count 0 --image ubuntults --computer-name-prefix testvmss --vnet-name {vnet_name} --subnet default --network-api-version 2020-11-01 --admin-username testvmss --generate-ssh-keys 
vmss show -g {rg} -n {vmss2}
vmss create -n {vmss3} -g {rg} --orchestration-mode Flexible --single-placement-group false --platform-fault-domain-count 1 --vm-sku Standard_DS1_v2 --instance-count 0 --image ubuntults --computer-name-prefix testvmss --vnet-name {vnet_name} --subnet default --network-api-version 2020-11-01 --admin-username testvmss --generate-ssh-keys 
vmss show -g {rg} -n {vmss3}
vmss create -n {vmss4} -g {rg} --orchestration-mode Flexible --single-placement-group false --platform-fault-domain-count 1 --vm-sku Standard_DS1_v2 --instance-count 0 --image ubuntults --computer-name-prefix testvmss --vnet-name {vnet_name} --subnet default --network-api-version 2020-11-01 --admin-username testvmss --ssh-key-value '{ssh_key}' 
vmss show -g {rg} -n {vmss4}
vmss create -n {vmss5} -g {rg} --orchestration-mode Flexible --single-placement-group false --platform-fault-domain-count 1 --vm-sku Standard_DS1_v2 --instance-count 0 --image ubuntults --computer-name-prefix testvmss --vnet-name {vnet_name} --subnet default --network-api-version 2020-11-01 --admin-username testvmss --authentication-type ssh 
vmss show -g {rg} -n {vmss5}
ppg create -g {rg} -n {ppg}
vmss create -g {rg} -n {vmss} --orchestration-mode Flexible --single-placement-group false --ppg {ppg} --platform-fault-domain-count 3 
vm create -g {rg} -n {vm} --image centos --platform-fault-domain 0 --vmss {vmss} --generate-ssh-keys --nsg-rule None
vm show -g {rg} -n {vm}
vm create -g {rg} -n vm1 --image UbuntuLTS --enable-agent --patch-mode AutomaticByPlatform --generate-ssh-keys --nsg-rule NONE
vm show -g {rg} -n vm1
vmss create -g {rg} -n {vmss} --image UbuntuLTS --enable-agent --patch-mode ImageDefault --orchestration-mode Flexible --generate-ssh-keys --instance-count 0
vmss extension set --name ApplicationHealthLinux --publisher Microsoft.ManagedServices --version 1.0 --resource-group {rg} --vmss-name {vmss} --settings {extension_file}
vmss update --name {vmss} --resource-group {rg} --set virtualMachineProfile.osProfile.linuxConfiguration.patchSettings.patchMode=AutomaticByPlatform
vmss scale --name {vmss} --new-capacity 1 --resource-group {rg}
vmss list-instances -g {rg} -n {vmss}
vm show -g {rg} -n {vm}
vmss create -g {rg} -n {vmss} --image Win2019Datacenter --enable-agent --enable-auto-update false --patch-mode Manual --orchestration-mode Flexible --admin-username azureuser --admin-password testPassword0
vmss list-instances -g {rg} -n {vmss}
vm show -g {rg} -n {vm}
disk create -g {rg} -n d1 --size-gb 10 --logical-sector-size 4096 --sku UltraSSD_LRS
disk create -g {rg} -n d2 --size-gb 10 --tier P4
vmss create -g {rg} -n vmss1 --image centos
vmss reimage -g {rg} -n vmss1 --instance-id 1
vmss reimage -g {rg} -n vmss1
sshkey create -g {rg} -n k1
sshkey list
sshkey show -g {rg} -n k1
sshkey create -g {rg} -n k2 --public-key "{key}"
vm create -g {rg} -n vm1 --image centos --nsg-rule None --ssh-key-name k1
vm create -g {rg} -n vm3 --image centos --nsg-rule None --ssh-key-name k3 --generate-ssh-keys
sshkey show -g {rg} -n k3
vm create -g {rg} -n vm --image Win2019Datacenter --enable-hotpatching true --admin-username azureuser --admin-password testPassword0 --nsg-rule NONE
vm install-patches -g {rg} -n vm --maximum-duration PT4H --reboot-setting IfRequired --classifications-to-include-win Critical Security --exclude-kbs-requiring-reboot true
vm create -g {rg} -n vm2 --image UbuntuLTS --enable-hotpatching true --admin-username azureuser --admin-password testPassword0 --nsg-rule NONE
vm install-patches -g {rg} -n vm2 --maximum-duration PT4H --reboot-setting IfRequired --classifications-to-include-linux Critical Security
disk create -g {rg} -n d1 --image-reference Canonical:UbuntuServer:18_04-lts-gen2:18.04.202004290 --hyper-v-generation V2 --security-type TrustedLaunch
disk create -g {rg} -n d1 --size-gb 10 --support-hibernation true
network vnet create -g {rg} -n vnet --address-prefix 10.0.0.0/16
network vnet subnet create -g {rg} --vnet-name vnet -n subnet1 --address-prefixes 10.0.0.0/24
network vnet subnet create -g {rg} --vnet-name vnet -n subnet2 --address-prefixes 10.0.1.0/24
vm create -g {rg} -n vma --image ubuntults --count 3 --vnet-name vnet --subnet subnet1 --nsg-rule None --generate-ssh-keys --nic-delete-option Delete
vm list -g {rg}
vm create -g {rg} -n vmb --image ubuntults --count 3 --vnet-name vnet --subnet subnet2 --nsg-rule None --generate-ssh-keys
vm list -g {rg}
disk create -g {rg} -n d1 --size-gb 10 --edge-zone microsoftlosangeles1
snapshot create -g {rg} -n s1 --size-gb 10 --edge-zone microsoftlosangeles1 --sku Premium_LRS
image create -g {rg} -n image --os-type linux --source d1 --edge-zone microsoftlosangeles1
vm create -g {rg} -n vm --image ubuntults --nsg-rule None --generate-ssh-keys --edge-zone microsoftlosangeles1 --public-ip-sku Standard
vm show -g {rg} -n vm
network vnet show -g {rg} -n vmVNET
network nic show -g {rg} -n vmVMNic
network public-ip show -n vmPublicIP -g {rg}
vmss create -g {rg} -n vmss --image ubuntults --generate-ssh-keys --edge-zone microsoftlosangeles1 --lb-sku Standard
vmss show -g {rg} -n vmss
network vnet show -g {rg} -n vmssVNET
network lb show -g {rg} -n vmssLB
network public-ip show -n vmssLBPublicIP -g {rg}
disk create -g {rg} -n d1 --size-gb 1024 --sku StandardSSD_ZRS --max-shares 3
disk update -g {rg} -n d1 --sku Premium_ZRS
vm create -g {rg} -n d1 --image ubuntults --zone 1 --attach-data-disks d1 --generate-ssh-keys --nsg-rule None
disk create -g {rg} -n d1 --size-gb 10 --sku StandardSSD_ZRS --zone 1
vm create -l eastus -g {rg} -n {vm} --image Win2012R2Datacenter --admin-username clitest1234 --admin-password Test123456789# --license-type Windows_Server --nsg-rule NONE
vm application set -g {rg} -n {vm} --app-version-ids {vid1} {vid2}
vm application list -g {rg} -n {vm}
vm create -l eastus -g {rg} -n {vm} --image Win2012R2Datacenter --admin-username clitest1234 --admin-password Test123456789# --license-type Windows_Server --nsg-rule NONE
vm application set -g {rg} -n {vm} --app-version-ids
vm application list -g {rg} -n {vm}
vm create -l eastus -g {rg} -n {vm} --image Win2012R2Datacenter --admin-username clitest1234 --admin-password Test123456789# --license-type Windows_Server --nsg-rule NONE
vm application set -g {rg} -n {vm} --app-version-ids {vid1} {vid2} --app-config-overrides {config}
vm application set -g {rg} -n {vm} --app-version-ids {vid1} {vid2} --app-config-overrides null {config}
vm application list -g {rg} -n {vm}
vm create -l eastus -g {rg} -n {vm} --image Win2012R2Datacenter --admin-username clitest1234 --admin-password Test123456789# --license-type Windows_Server --nsg-rule NONE
vm application set -g {rg} -n {vm} --app-version-ids {vid1} {vid2} --order-applications
vm application list -g {rg} -n {vm}
vmss create -l eastus -g {rg} -n {vmss} --authentication-type password --admin-username admin123 --admin-password PasswordPassword1!  --image Win2012R2Datacenter
vmss application set -g {rg} -n {vmss} --app-version-ids {vid1} {vid2}
vmss application list -g {rg} --name {vmss}
vmss create -l eastus -g {rg} -n {vmss} --authentication-type password --admin-username admin123 --admin-password PasswordPassword1!  --image Win2012R2Datacenter
vmss application set -g {rg} -n {vmss} --app-version-ids
vmss application list -g {rg} --name {vmss}
vmss create -l eastus -g {rg} -n {vmss} --authentication-type password --admin-username admin123 --admin-password PasswordPassword1!  --image Win2012R2Datacenter
vmss application set -g {rg} -n {vmss} --app-version-ids {vid1} {vid2} --app-config-overrides {config}
vmss application set -g {rg} -n {vmss} --app-version-ids {vid1} {vid2} --app-config-overrides null {config}
vmss application list -g {rg} --name {vmss}
vmss create -l eastus -g {rg} -n {vmss} --authentication-type password --admin-username admin123 --admin-password PasswordPassword1!  --image Win2012R2Datacenter
vmss application set -g {rg} -n {vmss} --app-version-ids {vid1} {vid2} --order-applications
vmss application list -g {rg} --name {vmss}
disk create --accelerated-network true --size-gb 5 -n {disk1} -g {rg}
disk show -g {rg} -n {disk1}
disk update --accelerated-network false -n {disk1} -g {rg}
disk show -g {rg} -n {disk1}
disk create --size-gb 5 -n {disk2} -g {rg}
disk show -g {rg} -n {disk2}
disk update --accelerated-network true -n {disk1} -g {rg}
disk show -g {rg} -n {disk1}
snapshot create --accelerated-network true --size-gb 5 -n {snapshot1} -g {rg}
snapshot show -g {rg} -n {snapshot1}
snapshot update --accelerated-network false -n {snapshot1} -g {rg}
snapshot show -g {rg} -n {snapshot1}
snapshot create --size-gb 5 -n {snapshot2} -g {rg}
snapshot show -g {rg} -n {snapshot2}
snapshot update --accelerated-network true -n {snapshot2} -g {rg}
snapshot show -g {rg} -n {snapshot2}
disk create -g {rg} -n disk1 --size-gb 200 -l westus
snapshot create -g {rg} -n snapa --source disk1 -l westus --incremental true
snapshot create -g {rg2} -n snapb --copy-start true --incremental true --source {source} -l eastus
snapshot show -g {rg2} -n snapb
disk create --public-network-access Enabled --size-gb 5 -n {disk1} -g {rg}
disk show -g {rg} -n {disk1}
disk update --public-network-access Disabled -n {disk1} -g {rg}
disk show -g {rg} -n {disk1}
disk create --network-access-policy AllowAll --public-network-access Disabled --size-gb 5 -n {disk2} -g {rg}
disk show -g {rg} -n {disk2}
disk-access create -g {rg} -n diskaccess
snapshot create --network-access-policy AllowPrivate --disk-access diskaccess --public-network-access Enabled --size-gb 5 -n {disk3} -g {rg}
snapshot show -g {rg} -n {disk3}
snapshot create --public-network-access Enabled --size-gb 5 -n {snapshot1} -g {rg}
snapshot show -g {rg} -n {snapshot1}
snapshot update --public-network-access Disabled -n {snapshot1} -g {rg}
snapshot show -g {rg} -n {snapshot1}
snapshot create --network-access-policy AllowAll --public-network-access Disabled --size-gb 5 -n {snapshot2} -g {rg}
snapshot show -g {rg} -n {snapshot2}
disk-access create -g {rg} -n diskaccess
snapshot create --network-access-policy AllowPrivate --disk-access diskaccess --public-network-access Enabled --size-gb 5 -n {snapshot3} -g {rg}
snapshot show -g {rg} -n {snapshot3}
# live
security jit-policy list
keyvault secret show --vault-name cupertino-kv-test -n TestDbPassword
keyvault secret show --vault-name cupertino-kv-test -n TestDbPassword
keyvault secret show --vault-name cupertino-kv-test -n TestDbPassword
vmss create -n {vm1} -g {rg} --image {image} --vm-sku Standard_DS4_v2 --ephemeral-os-disk
resource create -g {rg} -n {vault} --resource-type Microsoft.RecoveryServices/vaults --is-full-object -p "{{\"properties\":{{}},\"location\":\"{loc}\",\"sku\":{{\"name\":\"Standard\"}}}}"
sig create -g {rg} --gallery-name {gallery} --permissions groups
vmss create -n {base} -g {rg} --image {image} --vm-sku Standard_DS4_v2
vm create -g {rg} -n vm1 --admin-username clitester --admin-password PasswordPassword1! --image debian --zone 1
vm host group create -n {host-group} -c 3 -g {rg} --tags "foo=bar"
resource tag --ids {vault_id} --tags {tag}
vm host create -n {host-name} --host-group {host-group} -d 2 -g {rg} --sku DSv3-Type1 --auto-replace false --tags "bar=baz"
configure --defaults location={loc}
resource list --tag {tag}
resource list --tag {tag} -l westus
resource list --tag {tag} --l westus
resource list --tag {tag} --location westus
configure --defaults location=""
resource list --tag {tag}
resource list --tag {tag} -l westus
resource list --tag {tag} --l westus
resource list --tag {tag} --location westus
resource delete --id {vault_id}
storage account show-usage
sig image-definition create -g {rg} --gallery-name {gallery} --gallery-image-definition {image} --os-type linux -p publisher1 -f offer1 -s sku1
identity create -g {rg} -n {one_off_identity}
cdn endpoint list -g clitest.rga77kjj65yiwcucpyoxkdy6omddibzkemupslicbse3n3ibisvziecfzo6h7suwk3j --profile-name profile123
cdn profile create -g clitest.rga77kjj65yiwcucpyoxkdy6omddibzkemupslicbse3n3ibisvziecfzo6h7suwk3j -n profile123 --sku Standard_Microsoft
identity create -g {rg} -n {access_identity}
vm host get-instance-view --host-group {host-group} --name {host-name} -g {rg}
vm host group get-instance-view -g {rg} -n {host-group}
vm host show -g {rg} -n {host-name} --host-group {host-group}
keyvault set-policy -g {rg} -n {kv} --object-id {access_identity_principal} --secret-permissions get list set
vm create -n {vm-name} --image debian -g {rg} --size Standard_D4s_v3 --host {host_id} --generate-ssh-keys --admin-username azureuser --nsg-rule NONE
keyvault certificate get-default-policy
keyvault certificate create --vault-name {kv} --name {cert} --policy "{keyvault_cert_policy}"
keyvault certificate show --vault-name {kv} --name {cert}
network public-ip create -g {rg} -n {ip} --sku Standard
vm create -g {rg} -n {vm} --image ubuntults --data-disk-sizes-gb 10 --admin-username clitest1 --generate-ssh-key --nsg-rule None
network application-gateway create -g {rg} -n {gw} --sku Standard_v2 --public-ip-address {ip} --identity {one_off_identity}
cdn endpoint create -g clitest.rga77kjj65yiwcucpyoxkdy6omddibzkemupslicbse3n3ibisvziecfzo6h7suwk3j -n cdn-cli-test-4 --profile-name profile123 --origin www.example.com 80 443
vmss show -g {rg} -n {vm1}
vmss update --resource-group {rg} --name {vm1} --vm-sku {size1} --ephemeral-os-disk-placement {placement1}
vmss show -g {rg} -n {base}
vmss update --resource-group {rg} --name {base} --vm-sku {vm_sku} --set tags.tagName=tagValue
vmss show -g {rg} -n {vm1}
vmss update --resource-group {rg} --name {vm1} --vm-sku {size2} --ephemeral-os-disk-placement {placement2} --set tags.tagName=tagValue
vmss show -g {rg} -n {vm1}
vm host group create -n {host-group} -c 3 -g {rg} --tags "foo=bar"
vm host group create -n {host2-group} -c 3 -g {rg} --tags "foo=bar"
vm show -n {vm-name} -g {rg}
vm host show --name {host-name} --host-group {host-group} -g {rg}
vm host group show --name {host-group} -g {rg}
vm delete --name {vm-name} -g {rg} --yes
vmss show -g {rg} -n {base}
vmss update --resource-group {rg} --name {base} --vm-sku {vm_sku} --set tags.tagName=tagValue
vm host create -n {host-name} --host-group {host-group} -d 2 -g {rg} --sku DSv3-Type1 --auto-replace false --tags "bar=baz"
keyvault certificate create --vault-name {kv_name} -n {cert_name} -p @"{policy_path}"
keyvault certificate show --vault-name {kv_name} -n {cert_name}
sf cluster create -g {rg} -c {cluster_name} -l {loc} --secret-identifier {cert_secret_id} --vm-password "{vm_password}" --cluster-size 3
vmss show -g {rg} -n {base}
vmss create -n {base2} -g {rg} --image {image}  --location {loc}
vm host create -n {host2-name} --host-group {host2-group} -d 2 -g {rg} --sku DSv3-Type1 --auto-replace false --tags "bar=baz"
vm host delete --name {host-name} --host-group {host-group} -g {rg} --yes
vm deallocate -g {rg} -n {vm}
vm host get-instance-view --host-group {host-group} --name {host-name} -g {rg}
vm host get-instance-view --host-group {host2-group} --name {host2-name} -g {rg}
vm host group get-instance-view -g {rg} -n {host-group}
vm host group get-instance-view -g {rg} -n {host2-group}
vm host show -g {rg} -n {host-name} --host-group {host-group}
vm host show -g {rg} -n {host2-name} --host-group {host2-group}
vm create -n {vm-name} --image debian -g {rg} --size Standard_D4s_v3 --generate-ssh-keys --admin-username azureuser --nsg-rule NONE
vm generalize -g {rg} -n {vm}
image create -g {rg} -n {captured} --source {vm}
vmss show -g {rg} -n {base2}
vmss update --resource-group {rg} --name {base2} --vm-sku {vm_sku}
vm host group delete --name {host-group} -g {rg} --yes
vm host group create -n {host-group} -c 1 -g {rg2} --automatic-placement
vm host create -n {host-name} --host-group {host-group} -d 0 -g {rg2} --sku DSv3-Type1
vm show -n {vm-name} -g {rg}
vm deallocate -n {vm-name} -g {rg}
sig image-version create -g {rg} --gallery-name {gallery} --gallery-image-definition {image} --gallery-image-version {version} --managed-image {captured} --replica-count 1
vm create -g {rg2} -n vm1 --image centos --host {host_id} --size Standard_D4s_v3 --nsg-rule NONE --generate-ssh-keys --admin-username azureuser
vmss show -g {rg} -n {base2}
disk create -g {rg} -n d1 --image-reference Canonical:UbuntuServer:18_04-lts-gen2:18.04.202004290 --hyper-v-generation V2 --security-type TrustedLaunch
network application-gateway show -g {rg} -n {gw}
network application-gateway identity remove -g {rg} --gateway-name {gw}
vm update -n {vm-name} -g {rg} --host {host_id} --set tags.tagName=tagValue
network application-gateway identity assign -g {rg} --gateway-name {gw} --identity {access_identity}
network application-gateway identity show -g {rg} --gateway-name {gw}
network application-gateway ssl-cert create  -g {rg} --gateway-name {gw} --name MySSLCert --key-vault-secret-id {secret_id}
vm start -n {vm-name} -g {rg}
network application-gateway root-cert create -g {rg} --gateway-name {gw} -n cert1 --keyvault-secret {secret_id}
vm show -n {vm-name} -g {rg}
vm deallocate -n {vm-name} -g {rg}
vm update -n {vm-name} -g {rg} --host {host2_id} --set tags.tagName=tagValue
vm create -g {rg2} -n vm2 --image centos --host-group {host-group} --size Standard_D4s_v3 --nsg-rule NONE --generate-ssh-keys --admin-username azureuser
sf managed-cluster create -g {rg} -c {cluster_name} -l {loc} --cert-thumbprint {cert_tp} --cert-is-admin --admin-password {vm_password}
vm start -n {vm-name} -g {rg}
vm show -n {vm-name} -g {rg}
vm delete --name {vm-name} -g {rg} --yes
sf cluster show -g {rg} -c {cluster_name}
sf cluster show -g {rg} -c {cluster_name}
vm show -g {rg2} -n vm1
vm show -g {rg2} -n vm2
vm delete --name vm1 -g {rg2} --yes
sf cluster show -g {rg} -c {cluster_name}
vm host delete --name {host-name} --host-group {host-group} -g {rg} --yes
vm delete --name vm2 -g {rg2} --yes
sf cluster show -g {rg} -c {cluster_name}
sf managed-node-type create -g {rg} -c {cluster_name} -n pnt --instance-count 5 --primary
vm host delete --name {host2-name} --host-group {host2-group} -g {rg} --yes
vm host delete --name {host-name} --host-group {host-group} -g {rg2} --yes
sf cluster show -g {rg} -c {cluster_name}
vm host group delete --name {host-group} -g {rg} --yes
vm host group delete --name {host2-group} -g {rg} --yes
sf cluster show -g {rg} -c {cluster_name}
vm host group create -n {host-group} -c 1 -g {rg} --automatic-placement
vm host group create -n {host2-group} -c 1 -g {rg} --automatic-placement
vm host create -n {host-name} --host-group {host-group} -d 0 -g {rg} --sku DSv3-Type1
sf cluster show -g {rg} -c {cluster_name}
sig show --gallery-name {gallery} --resource-group {rg} --select Permissions
sig share add --gallery-name {gallery} -g {rg} --subscription-ids {subId} --tenant-ids {tenantId}
vm host create -n {host2-name} --host-group {host2-group} -d 0 -g {rg} --sku DSv3-Type1
sig image-version show-shared --gallery-image-definition {image} --gallery-unique-name {unique_name} --location {location} --gallery-image-version {version}
vm create -g {rg} -n vm1 --image centos --size Standard_D4s_v3 --nsg-rule NONE --generate-ssh-keys --admin-username azureuser
sf cluster show -g {rg} -c {cluster_name}
sf cluster show -g {rg} -c {cluster_name}
vm create -g {rg} -n vm2 --image centos --size Standard_D4s_v3 --nsg-rule NONE --generate-ssh-keys --admin-username azureuser
sf managed-node-type vm-extension add -g {rg} -c {cluster_name} -n pnt  --extension-name {extName} --publisher {publisher} --extension-type {extType} --type-handler-version {extVer} --auto-upgrade-minor-version
sf managed-node-type show -g {rg} -c {cluster_name} -n pnt
keyvault show -n {kv_name} -g {rg}
keyvault certificate create --vault-name {kv_name} -n {cert_name} -p @"{policy_path}"
keyvault certificate show --vault-name {kv_name} -n {cert_name}
sf managed-node-type vm-secret add -g {rg} -c {cluster_name} -n pnt  --source-vault-id {kv_id} --certificate-url {cert_secret_id} --certificate-store my
sf managed-node-type show -g {rg} -c {cluster_name} -n pnt
sf managed-cluster client-certificate add -g {rg} -c {cluster_name} --thumbprint {cert_tp2}
sf managed-cluster show -g {rg} -c {cluster_name}
sf managed-cluster client-certificate delete -g {rg} -c {cluster_name} --thumbprint {cert_tp2}
sf managed-cluster show -g {rg} -c {cluster_name}
sf managed-cluster delete -g {rg} -c {cluster_name}
sf managed-cluster show -g {rg} -c {cluster_name}
bot delete -g {rg} -n {botname}
bot create -k webapp -g {rg} -n {botname} --appid {app_id} -p {password} --lang Csharp --echo
bot download -g {rg} -n {botname}
bot publish -g {rg} -n {botname} --code-dir {botname}
bot delete -g {rg} -n {botname}
bot create -k webapp -g {rg} -n {botname} --appid {app_id} -p {password} --lang Javascript --echo
bot download -g {rg} -n {botname}
bot publish -g {rg} -n {botname} --code-dir {botname}
bot delete -g {rg} -n {botname}
bot delete -g {rg} -n {botname}
bot create -k webapp -g {rg} -n {botname} --appid {app_id} -p {password} --lang Javascript --echo
bot download -g {rg} -n {botname}
bot publish -g {rg} -n {botname} --code-dir {botname} --keep-node-modules
bot create -k webapp -g {rg} -n {botname} --appid {app_id} -p {password} --lang Javascript --echo
bot download -g {rg} -n {botname}
bot publish -g {rg} -n {botname} --code-dir {botname}
cloud show
cloud set -n AzureChinaCloud
cloud show -n AzureChinaCloud
cloud set -n AzureCloud
cloud show
cloud set -n AzureCloud
cloud show -n AzureCloud
cloud set -n AzureCloud
cloud show
cloud set -n AzureGermanCloud
cloud show -n AzureGermanCloud
cloud set -n AzureCloud
cloud show
cloud set -n AzureUSGovernment
cloud show -n AzureUSGovernment
cloud set -n AzureCloud
cloud show
cloud set -n azurechinacloud
cloud show -n AzureChinaCloud
cloud set -n AzureCloud
cloud show
cloud set -n azurecloud
cloud show -n AzureCloud
cloud set -n AzureCloud
cloud show
cloud set -n azuregermancloud
cloud show -n AzureGermanCloud
cloud set -n AzureCloud
cloud show
cloud set -n azureusgovernment
cloud show -n AzureUSGovernment
cloud set -n AzureCloud
cloud show
cloud set -n azCloud
cloud set -n AzureCloud
cognitiveservices account create -n {sname} -g {rg} --kind {kind} --sku {sku} -l {location} --assign-identity --encryption {encryption}  --yes
cognitiveservices account show -n {sname} -g {rg}
cognitiveservices account delete -n {sname} -g {rg}
cognitiveservices account create -n {sname} -g {rg} --kind {kind} --sku {sku} -l {location} --assign-identity --yes
cognitiveservices account update -n {sname} -g {rg} --encryption {encryption}
cognitiveservices account show -n {sname} -g {rg}
cognitiveservices account delete -n {sname} -g {rg}
cognitiveservices account create -n {sname} -g {rg} --kind {kind} --sku {sku} -l {location} --yes
cognitiveservices account show -n {sname} -g {rg}
cognitiveservices commitment-tier list -l centraluseuap
cognitiveservices account create -n {sname} -g {rg} --kind {kind} --sku {sku} -l {location} --yes
cognitiveservices account create -n {sname} -g {rg} --kind {kind} --sku {sku} -l {location} --yes
cognitiveservices account show -n {sname} -g {rg}
cognitiveservices account identity show -n {sname} -g {rg}
cognitiveservices account identity assign -n {sname} -g {rg}
cognitiveservices account identity show -n {sname} -g {rg}
cognitiveservices account identity remove -n {sname} -g {rg}
cognitiveservices account identity show -n {sname} -g {rg}
cognitiveservices account delete -n {sname} -g {rg}
cognitiveservices account create -n {sname} -g {rg} --kind {kind} --sku {sku} -l {location} --assign-identity --yes
cognitiveservices account show -n {sname} -g {rg}
cognitiveservices account delete -n {sname} -g {rg}
network vnet create -n cli-vnet-lefr-02 -g {rg} -l southcentralus --address-prefix 10.5.0.0/16
network vnet subnet create -n cli-subnet-lefr-02 --vnet-name cli-vnet-lefr-02 --address-prefixes '10.5.0.0/24' --delegations 'Microsoft.Netapp/volumes' -g {rg}
netappfiles account create -g {rg} -a 'cli-acc-m77u7end4kpxj2xs' -l southcentralusstage
network vnet create -n cli-vnet-lefr-02 -g {rg} -l southcentralus --address-prefix 10.5.0.0/16
network vnet subnet create -n cli-subnet-lefr-02 --vnet-name cli-vnet-lefr-02 --address-prefixes '10.5.0.0/24' --delegations 'Microsoft.Netapp/volumes' -g {rg}
netappfiles account create -g {rg} -a 'cli-acc-v7qboshbz73hecof' -l southcentralusstage
network vnet create -n cli-vnet-lefr-02 -g {rg} -l southcentralus --address-prefix 10.5.0.0/16
network vnet subnet create -n cli-subnet-lefr-02 --vnet-name cli-vnet-lefr-02 --address-prefixes '10.5.0.0/24' --delegations 'Microsoft.Netapp/volumes' -g {rg}
netappfiles account create -g {rg} -a 'cli-acc-ptvuw7okxi4yyqvj' -l southcentralusstage
network vnet create -n cli-vnet-lefr-02 -g {rg} -l southcentralus --address-prefix 10.5.0.0/16
network vnet subnet create -n cli-subnet-lefr-02 --vnet-name cli-vnet-lefr-02 --address-prefixes '10.5.0.0/24' --delegations 'Microsoft.Netapp/volumes' -g {rg}
netappfiles account create -g {rg} -a 'cli-acc-fw2qnak6dlch65z4' -l southcentralusstage
network vnet create -n cli-vnet-lefr-02 -g {rg} -l southcentralus --address-prefix 10.5.0.0/16
network vnet subnet create -n cli-subnet-lefr-02 --vnet-name cli-vnet-lefr-02 --address-prefixes '10.5.0.0/24' --delegations 'Microsoft.Netapp/volumes' -g {rg}
netappfiles account create -g {rg} -a 'cli-acc-c2hpuybqvibagonu' -l southcentralusstage
network vnet create -n cli-vnet-jnvc6rehxrx72fm --resource-group {rg} -l southcentralus --address-prefix 10.0.0.0/16
network vnet subnet create -n cli-subnet-urbuw -g {rg} --vnet-name cli-vnet-jnvc6rehxrx72fm --address-prefixes '10.0.0.0/24' --delegations 'Microsoft.Netapp/volumes'
netappfiles account create -g {rg} -a 'cli-acc-2fptc6aupx5orddi' -l southcentralusstage
network vnet create -n cli-vnet-iovi6duvwqt5ypn --resource-group {rg} -l southcentralus --address-prefix 10.0.0.0/16
network vnet subnet create -n cli-subnet-gumjo -g {rg} --vnet-name cli-vnet-iovi6duvwqt5ypn --address-prefixes '10.0.0.0/24' --delegations 'Microsoft.Netapp/volumes'
netappfiles account create -g {rg} -a 'cli-acc-zvpfdnllq65mxzez' -l southcentralusstage
storage account create -n clidceyny22juchbtovkme4i -g clitest.rgoiekd5egvv3p5kng2g2gw7uofcph7do7xqwmrtld5e3p4ed46mddujviz3stweimc --sku Standard_LRS --assign-identity
storage account create -n cliv3yhuletlf4x7uqbpk7n5 -g clitest.rgtpzm3yabhirxpvdxw3wuuggkp744s5z52wyevll5obkj3yrojvqq5pmcihfayed6r --sku Standard_LRS
storage account update -n cliv3yhuletlf4x7uqbpk7n5 -g clitest.rgtpzm3yabhirxpvdxw3wuuggkp744s5z52wyevll5obkj3yrojvqq5pmcihfayed6r --assign-identity
