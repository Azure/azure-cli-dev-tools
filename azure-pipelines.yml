resources:
- repo: self
trigger:
  batch: true
  branches:
    include:
    - '*'
jobs:
- job: Tox27
  displayName: 'Tox: Python 2.7'
  condition: succeeded()
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - task: UsePythonVersion@0
    displayName: 'Use Python 2.7'
    inputs:
      versionSpec: 2.7
  - task: Bash@3
    displayName: 'Run Tox'
    env:
      TOXENV: py27
    inputs:
      targetType: 'filePath'
      filePath: scripts/ci/run_tox.sh

- job: Tox35
  displayName: 'Tox: Python 3.5'
  condition: succeeded()
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - task: UsePythonVersion@0
    displayName: 'Use Python 3.5'
    inputs:
      versionSpec: 3.5
  - task: Bash@3
    displayName: 'Run Tox'
    env:
      TOXENV: py35
    inputs:
      targetType: 'filePath'
      filePath: scripts/ci/run_tox.sh

- job: Tox36
  displayName: 'Tox: Python 3.6'
  condition: succeeded()
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - task: UsePythonVersion@0
    displayName: 'Use Python 3.6'
    inputs:
      versionSpec: 3.6
  - task: Bash@3
    displayName: 'Run Tox'
    env:
      TOXENV: py36
    inputs:
      targetType: 'filePath'
      filePath: scripts/ci/run_tox.sh

- job: Tox37
  displayName: 'Tox: Python 3.7'
  condition: succeeded()
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - task: UsePythonVersion@0
    displayName: 'Use Python 3.7'
    inputs:
      versionSpec: 3.7
  - task: Bash@3
    displayName: 'Run Tox'
    env:
      TOXENV: py37
    inputs:
      targetType: 'filePath'
      filePath: scripts/ci/run_tox.sh

- job: ExtractMetadata
  displayName: 'Extract Metadata'
  condition: succeeded()
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - task: Bash@3
    displayName: 'Extract Version'
    inputs:
      targetType: 'filePath'
      filePath: scripts/ci/extract_version.sh

  - task: PublishPipelineArtifact@0
    displayName: 'Publish Artifact: metadata'
    inputs:
      TargetPath: $(Build.ArtifactStagingDirectory)
      ArtifactName: metadata

- job: BuildPythonWheel
  displayName: 'Build Python Wheel'

  dependsOn: ExtractMetadata
  condition: succeeded()
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - task: UsePythonVersion@0
    displayName: 'Use Python 3.7'
    inputs:
      versionSpec: 3.7

  - task: Bash@3
    displayName: 'Run Wheel Build Script'
    inputs:
      targetType: 'filePath'
      filePath: scripts/ci/build.sh

  - task: PublishPipelineArtifact@0
    displayName: 'Publish Artifact: pypi'
    inputs:
      TargetPath: $(Build.ArtifactStagingDirectory)
      ArtifactName: pypi
